{"version":3,"sources":["../node_modules/global/window.js","../node_modules/global/document.js","../node_modules/react/index.js","../node_modules/mux.js/lib/utils/stream.js","../node_modules/mux.js/lib/mp4/probe.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/mux.js/lib/m2ts/stream-types.js","../node_modules/webpack/buildin/global.js","../node_modules/tsml/tsml.js","../node_modules/function-bind/index.js","../node_modules/is-callable/index.js","../node_modules/mux.js/lib/mp4/transmuxer.js","../node_modules/mux.js/lib/aac/utils.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/xhr/index.js","../node_modules/url-toolkit/src/url-toolkit.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/pkcs7/dist/pkcs7.es.js","../node_modules/aes-decrypter/dist/aes-decrypter.es.js","../node_modules/video.js/dist/video.es.js","../node_modules/object-assign/index.js","../node_modules/define-properties/index.js","../node_modules/object-keys/isArguments.js","../node_modules/string.prototype.trim/implementation.js","../node_modules/es-abstract/GetIntrinsic.js","../node_modules/has/src/index.js","../node_modules/string.prototype.trim/polyfill.js","../node_modules/mux.js/lib/mp4/mp4-generator.js","../node_modules/mux.js/lib/m2ts/caption-stream.js","../node_modules/mux.js/lib/tools/caption-packet-parser.js","../node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","../node_modules/react-dom/index.js","../node_modules/safe-json-parse/tuple.js","../node_modules/mux.js/lib/mp4/index.js","../node_modules/mux.js/lib/tools/ts-inspector.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/is-function/index.js","../node_modules/parse-headers/parse-headers.js","../node_modules/string.prototype.trim/index.js","../node_modules/function-bind/implementation.js","../node_modules/object-keys/index.js","../node_modules/object-keys/implementation.js","../node_modules/es-abstract/es5.js","../node_modules/es-abstract/helpers/assertRecord.js","../node_modules/es-abstract/helpers/isNaN.js","../node_modules/es-abstract/helpers/isFinite.js","../node_modules/es-abstract/helpers/sign.js","../node_modules/es-abstract/helpers/mod.js","../node_modules/es-to-primitive/es5.js","../node_modules/es-to-primitive/helpers/isPrimitive.js","../node_modules/string.prototype.trim/shim.js","../node_modules/for-each/index.js","../node_modules/xtend/immutable.js","../node_modules/mux.js/lib/utils/bin.js","../node_modules/mux.js/lib/mp4/frame-utils.js","../node_modules/mux.js/lib/mp4/audio-frame-utils.js","../node_modules/mux.js/lib/data/silence.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/mux.js/lib/mp4/track-decode-info.js","../node_modules/mux.js/lib/m2ts/m2ts.js","../node_modules/mux.js/lib/m2ts/metadata-stream.js","../node_modules/mux.js/lib/codecs/adts.js","../node_modules/mux.js/lib/codecs/h264.js","../node_modules/mux.js/lib/utils/exp-golomb.js","../node_modules/mux.js/lib/aac/index.js","../node_modules/mux.js/lib/mp4/caption-parser.js","../node_modules/mux.js/lib/tools/mp4-inspector.js","../node_modules/mux.js/lib/m2ts/probe.js"],"names":["global","win","window","self","module","exports","doccy","topLevel","minDoc","__webpack_require__","document","Stream","this","init","listeners","on","type","listener","concat","off","index","indexOf","slice","splice","trigger","callbacks","i","length","args","arguments","call","push","apply","dispose","prototype","pipe","destination","data","flushSource","flush","_findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","path","size","end","subresults","results","byteLength","subarray","buffer","result","String","fromCharCode","reduce","trak","tkhd","version","id","mdhd","fragment","trafs","baseTimes","map","traf","tfhd","scale","tfdt","Math","pow","Infinity","min","isFinite","traks","videoTrackIds","forEach","hdlrs","tkhds","hdlr","view","trackId","handlerType","DataView","byteOffset","getUint8","getUint32","findBox","_classCallCheck","instance","Constructor","TypeError","d","__webpack_exports__","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof2","obj","Symbol","iterator","constructor","_typeof","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","g","Function","e","clean","s","replace","sa","implementation","bind","fnToStr","toString","constructorRegex","isES6ClassFn","fnStr","test","toStr","hasToStringTag","toStringTag","tryFunctionObject","strClass","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","mp4","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","AdtsStream","H264Stream","AacStream","isLikelyAacData","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","a","b","track","options","adtsFrames","sequenceNumber","earliestAllowedDts","audioAppendStartTs","videoBaseMediaDecodeTime","collectDtsInfo","prop","setEarliestDts","earliestDts","timelineStartInfo","baseMediaDecodeTime","setVideoBaseMediaDecodeTime","setAudioAppendStart","timestamp","frames","moof","mdat","boxes","trimAdtsFramesByEarliestDts","calculateTrackBaseMediaDecodeTime","keepOriginalTimestamps","prefixWithSilence","samples","generateSampleTable","concatenateFrameData","Uint8Array","set","clearDtsInfo","config","pps","nalUnits","gopsToAlignWith","minPTS","gopCache_","nalUnit","nalUnitType","sps","gopForFusion","gops","shift","resetStream_","groupNalsIntoFrames","groupFramesIntoGops","keyFrame","getGopForFusion_","unshift","nalCount","pts","dts","duration","extendFirstKeyFrame","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","pop","concatenateNalData","undefined","dtsDistance","nearestGopObj","currentGop","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","metadata","total","alignGopsWith","newGopsToAlignWith","metadataStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","text","audioTrack","caption","id3","initSegment","offset","event","captions","captionStreams","info","timelineStartPts","startPts","endTime","endPts","stream","cueTime","dispatchType","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","MetadataStream","aacStream","audioTimestampRolloverStream","TimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","frame","setTimestamp","timeStamp","audioSegmentStream","codec","setupTsPipeline","packetStream","TransportPacketStream","parseStream","TransportParseStream","elementaryStream","ElementaryStream","videoTimestampRolloverStream","h264Stream","captionStream","CaptionStream","tracks","videoSegmentStream","setBaseMediaDecodeTime","discontinuity","reset","isAac","resetCaptions","Transmuxer","VideoSegmentStream","AudioSegmentStream","ADTS_SAMPLING_FREQUENCIES","parseSyncSafeInteger","charCodeAt","parseId3TagSize","header","byteIndex","returnSize","parseAdtsSize","lowThree","middle","parseSampleRate","packet","parseAacTimestamp","frameStart","frameSize","unescape","bytes","start","percentEncode","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","isFunction","parseHeaders","xtend","initParams","uri","callback","params","createXHR","_createXHR","Error","called","err","response","body","getBody","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","method","headers","url","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","hasOwnProperty","isEmpty","beforeSend","send","array","forEachArray","toUpperCase","root","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","trim","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","exec","builtParts","query","baseURLPath","newPath","substring","lastIndexOf","parts","split","reverse","join","parseUTCTiming","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","n","isObject","merge","_len","objects","Array","_key","source","keys","isArray","flatten","lists","x","y","from","list","mergeDiscontiguousPlaylists","playlists","acc","playlist","_acc$name$segments","name","attributes","lang","segments","contentProtection","k","l","discontinuityStarts","formatAudioPlaylist","_ref","_attributes","NAME","BANDWIDTH","bandwidth","CODECS","codecs","endList","timeline","periodIndex","resolvedUri","targetDuration","mediaSequence","number","formatVttPlaylist","_ref2","_attributes2","baseUrl","sourceDuration","formatVideoPlaylist","_ref3","_attributes3","AUDIO","SUBTITLES","RESOLUTION","width","height","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","minimumUpdatePeriod","videoPlaylists","filter","_ref4","mimeType","contentType","audioPlaylists","_ref5","vttPlaylists","_ref6","master","allowCache","mediaGroups","VIDEO","audio","role","language","label","autoselect","default","subs","organizeVttPlaylists","urlToolkit","fn","resolveUrl","relativeUrl","location","href","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","range","ranges","startRange","parseInt","endRange","byterange","getLiveRValue","time","NOW","clientOffset","availabilityStartTime","_attributes$timescale","_attributes$start","_attributes$minimumUp","periodDuration","ceil","parseByTimeline","segmentTimeline","_attributes$type","_attributes$minimumUp2","_attributes$media","media","_attributes$timescale2","_attributes$startNumb","startNumber","sIndex","S","repeat","r","segmentTime","t","count","nextS","segmentRange","static","dynamic","_attributes$timeShift","timeShiftBufferDepth","now","periodStartWC","segmentCount","availableStart","floor","availableEnd","max","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","toSegments","identifierPattern","constructTemplateUrl","values","match","identifier","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ","initialization","sourceURL","mapSegment","parseTemplateInfo","segment","Number","Time","errors","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentTimeInfo","segmentUrlMap","segmentUrlObject","segmentUrl","mediaRange","SegmentURLToSegmentObject","segmentsFromBase","_attributes$indexRang","indexRange","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","base","_segmentAttributes","_segmentAttributes$ti","findChildren","element","childNodes","tagName","getContent","textContent","parseDuration","str","_match$slice","year","month","day","hour","minute","second","parseFloat","parsers","mediaPresentationDuration","Date","parsedValue","isNaN","DEFAULT","parseAttributes","el","parseFn","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","reference","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","tag","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","generateKeySystemInformation","contentProtectionNodes","node","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","b64Text","decodedString","atob","decodeB64ToUint8Array","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","attrs","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","inheritAttributes","mpd","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","toAdaptationSets","stringToMpdXml","manifestString","xml","DOMParser","parseFromString","getElementsByTagName","UTCTimingNode","parseUTCTimingScheme","classCallCheck","_extends","assign","inherits","possibleConstructorReturn","LineStream","_Stream","_this","nextNewline","RegExp","attr","ParseStream","customParsers","line","tagType","title","playlistType","allowed","URI","BYTERANGE","_attributes$BYTERANGE","resolution","dateTimeString","dateTimeObject","IV","toLowerCase","Uint32Array","PRECISE","addParser","_this2","expression","customType","dataParser","Parser","lineStream","uris","currentUri","currentMap","defaultMediaGroups","CLOSED-CAPTIONS","currentTimeline","manifest","entry","mediaGroup","rendition","allow-cache","message","endlist","inf","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","mediaGroupType","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","program-date-time","targetduration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","comment","custom","chunk","aes_decrypter_es_classCallCheck","createClass","defineProperties","aes_decrypter_es_possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","tEnc","tDec","aesTables","AES","_tables","j","tmp","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","out","c","a2","b2","c2","nInnerRounds","kIndex","table","table0","table1","table2","table3","aes_decrypter_es_Stream","_length","_i","AsyncStream","jobs","delay","timeout_","aes_decrypter_es_inherits","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","Int32Array","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","done","step","STEP","asyncStream_","decryptChunk_","padded","get","video_es_version","_inheritsLoose","_construct","Parent","Class","Reflect","construct","sham","Proxy","isNativeReflectConstruct","_taggedTemplateLiteralLoose","strings","raw","video_es_history","video_es_LogByTypeFactory","log","level","lvl","levels","lvlRegExp","window_default","console","video_es_log","createLogger","logByType","subname","all","debug","warn","error","history","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","createLogger$1","video_es_toString","object","each","video_es_assign","sources","isPlain","video_es_computedStyle","getComputedStyle","cs","_templateObject","isNonBlankString","throwIfWhitespace","isReal","document_default","isEl","nodeType","isInFrame","parent","createQuerier","selector","context","querySelector","ctx","createEl","properties","content","createElement","getOwnPropertyNames","propName","val","tsml_default","setAttribute","attrName","appendContent","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","findPosition","box","left","top","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","round","getPointerPosition","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","_guid","newGUID","elData","elIdAttr","getTime","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","addEventListener","passiveEvents","guid","hash","handlersCopy","m","passive","attachEvent","removeType","elemData","ownerDocument","bubbles","targetData","one","func","videojs","Events","_windowLoaded","video_es_autoSetup","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","EVENT_MAP","video_es_createStyleElement","style","setTextContent","styleSheet","cssText","uid","bound","throttle","last","video_es_debounce","immediate","debounced","_later","cancel","EventTarget","allowedEvents_","ael","dispatchEvent","queueTrigger","Map","oldTimeout","delete","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","StatefulMixin","state","setState","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","toTitleCase","string","charAt","mergeOptions","video_es_Component","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","_proto","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","Boolean","USER_AGENT","navigator","userAgent","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","browser","getRange","fnName","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","apiMap","specApi","video_es_i","dist_video_es_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","cues","cue","textTrackConverter","tech","trackEls","trackObjs","trackEl","src","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","addTrack","removeTrack","rtrack","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","div","addToBody","host","protocol","innerHTML","details","video_es_getAbsoluteURL","getFileExtension","video_es_isCrossOrigin","winLoc","urlInfo","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","parser","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","video_es_loadTrack","crossOrigin","xhr_default","responseBody","loaded_","tech_","loadHandler","video_es_TextTrack","_Track","TextTrack","settings","srclang","mode","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","_middleware","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","arg","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","h","gm","gh","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","liveCurrentTime","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","video_es_Menu","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","btn","buttonPressed_","stepChild","item","video_es_MenuButton","MenuButton","buttonClass","menu","handleSubmenuKeyPress","createMenu","items","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","LiveTracker","reset_","handleDurationchange","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","abs","pastSeekEnd","behindLiveEdge","behindLiveEdge_","startTracking","stopTracking","isTracking","trackingInterval_","handleTimeupdate","seekableEnds","sort","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","video_es_getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","video_es_getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","video_es_Player","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","fluid_","updateStyleEl_","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","breakpoints","responsive","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","promise","previouslyMuted","catch","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","video_es_get","PromiseClass","Promise","resolve","play_","_this8","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","_this10","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this11","sourceTech","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","inactivityTimeout","handleActivity","screenX","screenY","isAudio_","toJSON","createModal","_this12","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","normalizeId","videojs$1","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","style$1","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","subClassMethods","methods","super_","_inherits$1","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","video_es_resolveUrl","url_toolkit_default","video_es_classCallCheck","video_es_createClass","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","arr","_arr","_n","_d","_e","_s","sliceIterator","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","updateMaster","mergedPlaylist","updateSegments","baseUri","resolveSegmentUris","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","hls_","req","playlistRequestError","haveMetadata","xhr$$1","startingState","media_","mediaUpdateTimeout","stopRequest","oldRequest","mediaChange","started","isFinalRendition","intervalDuration","endSequence","expired","backward","forward","backwardDuration","forwardDuration","video_es_duration","sumDurations","startIndex","endIndex","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","getMediaInfoForTime","numSegments","mediaIndex","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","ArrayBuffer","isView","initSegmentId","hexDump","utils","tagDump","textRanges","timeWithinSegment","requestedTime","segmentStart","requestedTimeString","toISOString","segmentTimeString","endTimeString","findSegmentForTime","manifestTime","estimatedEnd","estimatedStart","timeWithinSegmentEnd","timeWithinSegmentDuration","getStreamTime","_ref$time","matchedSegment","findSegmentForPlayerTime","seekTime","streamTime","mediaSeconds","programDateTime","seekToStreamTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","findSegmentForStreamTime","mediaOffset","comparisonTimeStamp","segmentDateTime","streamDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","removeCuesFromTrack","durationOfVideo","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","inbandTextTracks_","timestampOffset","videoDuration","mediaSource_","privateData","deprecateOldCue","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","idx","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","URL","webkitURL","msURL","Worker","shimWorker","filename","forceFallback","objURL","createSourceObject","worker","term","terminate","revokeObjectURL","wrapTerminate","selfShim","postMessage","onmessage","isThisThread","testWorker","testArray","createObjectURL","Blob","blob","getBlob","TransmuxWorker","document$$1","dinf","esds","ftyp","mfhd","minf","moov","mvex","mvhd","mdia","sdtp","stbl","stsd","trex","trun","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","trackFragments","flags","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","mp4Generator","fileType","movie","toUnsigned$1","probe","metaTable","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","sampleForFrame","dataOffset","currentNal","currentFrame","baseDataOffset","nalsByteLength","numberOfNals","highPrefix","lowPrefix","zeroFill","coneOfSilence","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","silence","sampleRate","clock","baseMediaDecodeTimeTs","frameDuration","silentFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ONE_SECOND_IN_TS$1","minSegmentDts","minSegmentPts","sum","sumFrameByteLengths","maxSegmentDts","maxSegmentPts","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","captionPackets_","ccStreams_","Cea608Stream","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","presortIndex","dispatchCea608Packet","activeCea608Channel_","ccStream","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","popOn","baseRow","rollUp","paintOn","streamTypes","handleRollover","direction","lastDTS","referenceDTS","type_","_MetadataStream","timestampRolloverStream","parseUtf8","decodeURIComponent","tagParsers","TXXX","WXXX","PRIV","owner","tagSize","bufferSize","dataAlignmentIndicator","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","timed-metadata","streamType","pid","processPes_","STREAM_TYPES","h264","adts","timedMetadata","flushStream","stream$$1","forceFlush","packetFlushable","packetData","pes","ptsDtsFlags","packetLength","parsePes","PAT_PID","MP2T_PACKET_LENGTH","_AdtsStream","m2ts_1","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","_AacStream","NalByteStream","bytesLeft","tempLength","isLikelyAacData$1","inspectMp4","_textifyMp","transmuxer","parseType$2","parseMp4Date","parseSampleFlags","nalParse","avcStream","avcView","parse$$1","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","depth","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","maxBitrate","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","escape","nals","modificationTime","streamDescriptor","matrix","nextTrackId","pdin","initialDelay","sidx","references","referenceId","earliestPresentationTime","firstOffset","referenceCount","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","entries","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","Uint16Array","mp4Inspector","inspect","ab","z","textify","inspectedMp4","indent","prefix","byte","parseTfdt","parseHdlr","parseTfhd","parseTrun","discardEmulationPreventionBytes$1","CaptionStream$1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","truns","seiNal","lastMatchedSample","matchingSample","findSeiNals","allSamples","parseSamples","generator","CaptionParser","captionStream$$1","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","parseEmbeddedCaptions","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","MessageHandlers","initArray","typedArray","action","gopInfo","appendStart","messageHandlers","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","orig","profile","avcLevel","parseCodecs","parsed","codecCount","makeMimeTypeString","container","mimeTypesForPlaylist","containerType","getContainerType","codecInfo","mediaAttributes","getCodecs","isMuxed","isMaat","audioGroup","groupId","audioGroupId","audioType","audioProfileFromDefault","codecStrings","justAudio","justVideo","bothVideoAudio","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","VirtualSourceBuffer","_videojs$EventTarget","mediaSource","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoBuffer_","audioBuffer_","appendWindowStart","updating","sourceBuffer","inBandMetadataTrackDispatchType","createTextTracksIfNecessary","processPendingSegments_","addSourceBuffer","realBuffer_","makeWrappedSourceBuffer","nativeMediaSource_","updateGopBuffer","updatedBuffer","removeGopBuffer","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","property","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","parameters","parameter","parseContentType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","isTypeSupported","supportsNativeMediaSources","URL$1","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","playlistUpdate","group","_playlistUpdate","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","masterPlaylistLoader_","mpd_parser_es","masterXml_","clientOffset_","phonyUri","_phonyUri","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","updatedMaster","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","runCallback_","queueCallback_","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","segmentXhrHeaders","Range","byterangeEnd","byterangeStr","abortAll","activeXhrs","handleErrors","waitForCompletion","decrypter","doneFn","didError","endOfAllRequests","encryptedBytes","decryptionHandler","requestId","decryptSegment","handleProgress","progressFn","stats","progressEvent","loaded","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","captionParser","finishProcessingFn","keyXhr","errorObj","handleKeyResponse","initSegmentXhr","probe_default","video_es_handleInitSegmentResponse","segmentXhr","getRequestStats","fmp4Captions","handleSegmentResponse","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","detectEndOfStream","segmentIndex","appendedLastSegment","finite","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","loaderType","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","inbandTextTracks","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","captionParser_","decrypter_","syncController_","syncController","syncPoint_","ended_","fetchAtBuffer_","newState","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","getSyncPoint","checkBuffer_","buffered_","endOfStream","startOfSegment","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","random","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","timeUntilRebuffer","switchCandidate","duration$$1","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","removeToTime","seekable$$1","safeBackBufferTrimTime","processSegmentResponse_","createCaptionsTrackIfNotExists","addCaptionData","handleSegment_","timingInfo","probeSegmentInfo","containsAudio","containsVideo","startingMedia","newSegmentMedia","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","segmentInfoString","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","_track","skipEmptySegments_","timestampOffsetForTimeline","requested","parseVTTCues_","updateTimeMapping_","timelines","decoder","decodeBytesToString","TextDecoder","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","dtsTime","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","Decrypter$$1","decrypt$$1","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onError","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","byGroupId","byResolvedUri","initialize","_settings$master","_settings$mediaTypes$","groups","groupPlaylists","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","setupMediaGroups","variants","onGroupChanged","_settings$segmentLoad","mainSegmentLoader","previousActiveLoader","_settings$segmentLoad2","onAudioTrackChanged","createMediaTypes","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","ended","isEndOfStream","getExpiredTime","absolutePlaylistEnd","TIME_FUDGE_FACTOR","mainSeekable","audioSeekable","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","codecString","variantCodecs","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","video_es_updateAdCues","Representation","hlsHandler","loader","playlistUri","changePlaylistFn","mpc","masterPlaylistController_","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","afterSeekableWindow_","beforeSeekableWindow_","currentRange","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","reloadSourceOnError","initPlugin","lastCalled","localOptions","loadedMetadataHandler","errorHandler","cleanupEvents","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","video_es_simpleSelector","systemBandwidth","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleTypeFromSourceType","handleHlsMediaChange","qualityLevels","selectedIndex_","setupEmeOptions","eme","sourceOptions","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","emeKeySystems","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","option","playbackWatcher_","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","renditionSelectionMixin","setupQualityLevels_","qualityLevels_","addQualityLevel","receiver","getter","get$1","HlsSourceHandler","supportedType","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","test2","test3","letter","shouldUseNative","symbols","toObject","hasSymbols","origDefineProperty","supportsDescriptors","_","arePropertyDescriptorsSupported","predicates","isArgs","callee","ES","leftWhitespace","rightWhitespace","ToString","CheckObjectCoercible","ThrowTypeError","getProto","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","$ %encodeURI%","encodeURI","$ %encodeURIComponent%","encodeURIComponent","$ %Error%","$ %ErrorPrototype%","$ %eval%","eval","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","Float32Array","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","$ %Promise_reject%","reject","$ %Promise_resolve%","$ %Proxy%","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","$ %ReferenceErrorPrototype%","$ %Reflect%","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","SyntaxError","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","$ %Uint16ArrayPrototype%","$ %Uint32Array%","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","cea708Parser","parseSei","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","parseCaptionPackets","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","reviver","StreamTypes","ts","parseAudioPes_","pesType","pusi","endLoop","parsePesType","parsePayloadUnitStartIndicator","parsePesTime","parseVideoPes_","firstKeyFrame","videoPacketContainsKeyFrame","inspectTs_","parsePsi_","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","ptsTime","videoBaseTimestamp","adjustTimestamp_","for","q","u","w","aa","ba","A","B","f","framesToPop","ca","C","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","D","E","refs","updater","F","G","isReactComponent","forceUpdate","H","isPureReactComponent","I","current","J","K","L","ref","__self","__source","M","defaultProps","$$typeof","_owner","N","O","P","Q","keyPrefix","R","U","T","=",":","ea","fa","V","da","W","X","Children","toArray","only","createRef","PureComponent","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","render","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","cloneElement","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","Y","Z","ha","ia","ja","la","ma","na","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","dependencies","ta","ua","va","wa","ka","xa","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","return","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","animation","transition","Xa","Ya","Za","$a","bb","db","eb","fb","gb","nativeEvent","Interface","isDefaultPrevented","ib","eventPool","jb","destructor","hb","getPooled","persist","eventPhase","cancelable","isTrusted","kb","lb","mb","nb","ob","documentMode","pb","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","vb","detail","wb","zb","locale","xb","ctrlKey","altKey","metaKey","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","datetime","datetime-local","email","search","tel","week","Mb","Nb","correspondingUseElement","Ob","Pb","Rb","_valueTracker","getValue","setValue","Qb","Sb","checked","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","ac","bc","dc","ec","fc","gc","hc","ic","displayName","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","rc","sc","tc","pc","qc","oc","setAttributeNS","uc","vc","defaultChecked","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","movementX","movementY","Zc","pointerId","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","defaultView","parentWindow","alternate","bd","cd","dd","ed","effectTag","fd","hd","sibling","gd","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","ld","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Apps","Scroll","MozPrintableKey","nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","119","120","121","144","145","224","od","pd","dataTransfer","qd","targetTouches","rd","sd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","td","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","Kd","Ld","Nd","contentDocument","Od","contentEditable","Qd","focusedElem","selectionRange","Md","compareDocumentPosition","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","Rd","Sd","select","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","ae","defaultSelected","be","dangerouslySetInnerHTML","ce","de","ee","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","fe","html","mathml","svg","ge","he","ie","je","namespaceURI","MSApp","execUnsafeLocalFunction","ke","lastChild","nodeValue","le","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","me","ne","oe","setProperty","pe","menuitem","area","br","col","embed","hr","img","input","keygen","link","meta","param","wbr","qe","re","is","se","te","ue","ve","we","autoFocus","xe","__html","ye","ze","Ae","unstable_scheduleCallback","Be","unstable_cancelCallback","De","Ee","Fe","Ge","He","Ie","Je","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","Ke","Le","Me","Ne","getChildContext","Oe","__reactInternalMemoizedMergedChildContext","Pe","Qe","Re","Se","Ue","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ve","Xe","Ye","Ze","$e","af","bf","pendingChildren","cf","earliestPendingTime","latestPendingTime","df","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","contextType","wf","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","xf","yf","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","zf","Af","_stringRef","Bf","Cf","Df","Ef","Ff","Gf","Hf","If","Jf","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","mg","queue","baseUpdate","ng","og","pg","dispatch","qg","eagerReducer","eagerState","rg","destroy","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","Qg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","fallback","Tg","Ug","hf","We","hydrate","first","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","hh","ih","jh","stack","kh","lh","mh","nh","oh","onClick","onclick","ph","qh","rh","vh","componentWillUnmount","wh","xh","yh","_reactRootContainer","zh","wasMultiple","multiple","Ce","display","uh","hi","Xh","Bh","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","createElementNS","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","ni","oi","pi","qi","ri","si","ti","unstable_now","ui","vi","wi","xi","yi","zi","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","Ri","Ti","Mi","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","findFiberByHostInstance","supportsFiber","inject","onCommitFiberRoot","onCommitFiberUnmount","Te","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","_r","previous","priorityLevel","_schedMock","MessageChannel","port2","port1","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","_objCreate","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","substr","region","alt","vals","vals0","integer","lineAlign","snapToLines","positionAlign","consumeCueSettings","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","ruby","rt","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","unescape1","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","styles","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","offsetTop","rects","getClientRects","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","decode","convertCueToDOMTree","cuetext","overlay","paddedOverlay","margin","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","pos","parseHeader","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","autoKeyword","directionSetting","","lr","rl","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","setting","findDirectionSetting","getCueAsHTML","scrollSetting","up","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","alert","confirm","prompt","define","getPolyfill","boundTrim","that","boundLength","boundArgs","Empty","origKeys","keysShim","originalKeys","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","GetIntrinsic","$Object","$TypeError","$String","assertRecord","$isNaN","$isFinite","mod","IsCallable","toPrimitive","ES5","ToPrimitive","ToBoolean","ToNumber","ToInteger","ToInt32","ToUint32","ToUint16","posInt","ToObject","optMessage","SameValue","Type","IsPropertyDescriptor","Desc","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","isData","IsAccessor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","ToPropertyDescriptor","Obj","setter","$SyntaxError","Property Descriptor","recordType","argumentName","modulo","remain","isPrimitive","isCallable","ES5internalSlots","actualHint","polyfill","thisArg","len","forEachString","forEachObject","ONE_SECOND_IN_TS","m2tsStreamTypes","ExpGolomb","aacUtils","parsePid","parseAdaptionField","parseNalUnitType","payloadOffset","frameBuffer","frameI","frameSyncPoint","foundKeyFrame"],"mappings":"0EAAA,SAAAA,GAAA,IAAAC,EAGAA,EADA,qBAAAC,OACAA,OACC,qBAAAF,EACDA,EACC,qBAAAG,KACDA,KAEA,GAGAC,EAAAC,QAAAJ,uCCZA,SAAAD,GAAA,IAIAM,EAJAC,EAAA,qBAAAP,IAAA,qBAAAE,cAAA,GAEAM,EAAaC,EAAQ,IAIrB,qBAAAC,SACAJ,EAAAI,UAEAJ,EAAAC,EAAA,gCAGAD,EAAAC,EAAA,6BAAAC,GAIAJ,EAAAC,QAAAC,mDCbAF,EAAAC,QAAmBI,EAAQ,kCCQ3B,IAAAE,EAAA,WACAC,KAAAC,KAAA,WACA,IAAAC,EAAA,GAQAF,KAAAG,GAAA,SAAAC,EAAAC,GACAH,EAAAE,KACAF,EAAAE,GAAA,IAGAF,EAAAE,GAAAF,EAAAE,GAAAE,OAAAD,IAUAL,KAAAO,IAAA,SAAAH,EAAAC,GACA,IAAAG,EAEA,QAAAN,EAAAE,KAIAI,EAAAN,EAAAE,GAAAK,QAAAJ,GACAH,EAAAE,GAAAF,EAAAE,GAAAM,QACAR,EAAAE,GAAAO,OAAAH,EAAA,GACAA,GAAA,IASAR,KAAAY,QAAA,SAAAR,GACA,IAAAS,EAAAC,EAAAC,EAAAC,EAGA,GAFAH,EAAAX,EAAAE,GAUA,OAAAa,UAAAF,OAGA,IAFAA,EAAAF,EAAAE,OAEAD,EAAA,EAAmBA,EAAAC,IAAYD,EAC/BD,EAAAC,GAAAI,KAAAlB,KAAAiB,UAAA,QAEO,CAIP,IAHAD,EAAA,GACAF,EAAAG,UAAAF,OAEAD,EAAA,EAAmBA,EAAAG,UAAAF,SAAsBD,EACzCE,EAAAG,KAAAF,UAAAH,IAKA,IAFAC,EAAAF,EAAAE,OAEAD,EAAA,EAAmBA,EAAAC,IAAYD,EAC/BD,EAAAC,GAAAM,MAAApB,KAAAgB,KASAhB,KAAAqB,QAAA,WACAnB,EAAA,MAeAH,EAAAuB,UAAAC,KAAA,SAAAC,GAOA,OANAxB,KAAAG,GAAA,gBAAAsB,GACAD,EAAAL,KAAAM,KAEAzB,KAAAG,GAAA,gBAAAuB,GACAF,EAAAG,MAAAD,KAEAF,GAOAzB,EAAAuB,UAAAH,KAAA,SAAAM,GACAzB,KAAAY,QAAA,OAAAa,IAGA1B,EAAAuB,UAAAK,MAAA,SAAAD,GACA1B,KAAAY,QAAA,OAAAc,IAGAlC,EAAAC,QAAAM,gCCzHA,IAEA6B,EAAAC,EAAAC,EAAAC,EAAAC,EAFAC,EAAiBpC,EAAQ,IAAcoC,WAKvCL,EAAA,SAAAH,EAAAS,GACA,IACApB,EACAqB,EACA/B,EACAgC,EACAC,EALAC,EAAA,GAOA,IAAAJ,EAAAnB,OAEA,YAGA,IAAAD,EAAA,EAAaA,EAAAW,EAAAc,YACbJ,EAAAF,EAAAR,EAAAX,IAAA,GAAAW,EAAAX,EAAA,OAAAW,EAAAX,EAAA,MAAAW,EAAAX,EAAA,IACAV,EAAAyB,EAAAJ,EAAAe,SAAA1B,EAAA,EAAAA,EAAA,IACAsB,EAAAD,EAAA,EAAArB,EAAAqB,EAAAV,EAAAc,WAEAnC,IAAA8B,EAAA,KACA,IAAAA,EAAAnB,OAGAuB,EAAAnB,KAAAM,EAAAe,SAAA1B,EAAA,EAAAsB,KAGAC,EAAAT,EAAAH,EAAAe,SAAA1B,EAAA,EAAAsB,GAAAF,EAAAxB,MAAA,KAEAK,SACAuB,IAAAhC,OAAA+B,KAKAvB,EAAAsB,EAIA,OAAAE,GASAT,EAAA,SAAAY,GACA,IAAAC,EAAA,GAKA,OAJAA,GAAAC,OAAAC,aAAAH,EAAA,IACAC,GAAAC,OAAAC,aAAAH,EAAA,IACAC,GAAAC,OAAAC,aAAAH,EAAA,IACAC,GAAAC,OAAAC,aAAAH,EAAA,KAuBAX,EAAA,SAAA7B,GAKA,OAHA2B,EAAA3B,EAAA,iBAGA4C,OAAA,SAAAH,EAAAI,GACA,IAAAC,EAAAC,EAAAxC,EAAAyC,EAAAC,EAGA,OAFAH,EAAAnB,EAAAkB,EAAA,eAMAE,EAAAD,EAAA,GAEAE,EAAAhB,EAAAc,EADAvC,EAAA,IAAAwC,EAAA,QACA,GAAAD,EAAAvC,EAAA,OAAAuC,EAAAvC,EAAA,MAAAuC,EAAAvC,EAAA,KACA0C,EAAAtB,EAAAkB,EAAA,sBAOAtC,EAAA,KADAwC,EAAAE,EAAA,IACA,MACAR,EAAAO,GAAAhB,EAAAiB,EAAA1C,IAAA,GAAA0C,EAAA1C,EAAA,OAAA0C,EAAA1C,EAAA,MAAA0C,EAAA1C,EAAA,IACAkC,GANA,MATA,MATA,KA6CAX,EAAA,SAAAD,EAAAqB,GACA,IAAAC,EAAAC,EAAAX,EA+BA,OA7BAU,EAAAxB,EAAAuB,EAAA,iBAEAE,EAAA,GAAA/C,OAAAc,MAAA,GAAAgC,EAAAE,IAAA,SAAAC,GACA,OAAA3B,EAAA2B,EAAA,UAAAD,IAAA,SAAAE,GACA,IAAAP,EAAAQ,EAoBA,OAlBAR,EAAAhB,EAAAuB,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEAC,EAAA3B,EAAAmB,IAAA,KAEArB,EAAA2B,EAAA,UAAAD,IAAA,SAAAI,GACA,IAAAV,EAAAN,EASA,OARAM,EAAAU,EAAA,GACAhB,EAAAT,EAAAyB,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA,IAAAV,IACAN,GAAAiB,KAAAC,IAAA,MACAlB,GAAAT,EAAAyB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAGAhB,IACO,IACPmB,KAEAJ,OAIAf,EAAAiB,KAAAG,IAAA1C,MAAA,KAAAiC,GACAU,SAAArB,KAAA,GAeAV,EAAA,SAAA/B,GACA,IAAA+D,EAAApC,EAAA3B,EAAA,iBAEAgE,EAAA,GAqBA,OApBAD,EAAAE,QAAA,SAAApB,GACA,IAAAqB,EAAAvC,EAAAkB,EAAA,iBAEAsB,EAAAxC,EAAAkB,EAAA,UAEAqB,EAAAD,QAAA,SAAAG,EAAA7D,GACA,IAEA8D,EAEAC,EAJAC,EAAA3C,EAAAwC,EAAA7B,SAAA,OACAO,EAAAqB,EAAA5D,GAKA,SAAAgE,IAGAD,EAAA,KAFAD,EAAA,IAAAG,SAAA1B,EAAAN,OAAAM,EAAA2B,WAAA3B,EAAAR,aACAoC,SAAA,GACAL,EAAAM,UAAA,IAAAN,EAAAM,UAAA,IACAX,EAAA9C,KAAAoD,QAIAN,GAGAzE,EAAAC,QAAA,CACAoF,QAAAjD,EACAC,YACAC,YACAC,YACAkC,cAAAjC,iCCtNe,SAAA8C,EAAAC,EAAAC,GACf,KAAAD,aAAAC,GACA,UAAAC,UAAA,qCAFApF,EAAAqF,EAAAC,EAAA,sBAAAL,kCCAA,SAAAM,EAAAC,EAAAC,GACA,QAAAxE,EAAA,EAAiBA,EAAAwE,EAAAvE,OAAkBD,IAAA,CACnC,IAAAyE,EAAAD,EAAAxE,GACAyE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAP,EAAAE,EAAAM,IAAAN,IAIe,SAAAO,EAAAd,EAAAe,EAAAC,GAGf,OAFAD,GAAAX,EAAAJ,EAAA1D,UAAAyE,GACAC,GAAAZ,EAAAJ,EAAAgB,GACAhB,EAbAnF,EAAAqF,EAAAC,EAAA,sBAAAW,kCCAe,SAAAG,EAAAC,GAIf,OAHAD,EAAAN,OAAAQ,eAAAR,OAAAS,eAAA,SAAAF,GACA,OAAAA,EAAAG,WAAAV,OAAAS,eAAAF,KAEAA,GAJArG,EAAAqF,EAAAC,EAAA,sBAAAc,kCCAA,SAAAK,EAAAC,GAA6U,OAA1OD,EAA3E,oBAAAE,QAAA,kBAAAA,OAAAC,SAA2E,SAAAF,GAAoC,cAAAA,GAA+B,SAAAA,GAAoC,OAAAA,GAAA,oBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAAlF,UAAA,gBAAAiF,IAAmIA,GAE9T,SAAAI,EAAAJ,GAWf,OATAI,EADA,oBAAAH,QAAA,WAAAF,EAAAE,OAAAC,UACA,SAAAF,GACA,OAAAD,EAAAC,IAGA,SAAAA,GACA,OAAAA,GAAA,oBAAAC,QAAAD,EAAAG,cAAAF,QAAAD,IAAAC,OAAAlF,UAAA,SAAAgF,EAAAC,KAIAA,GCXe,SAAAK,EAAArH,EAAA2B,GACf,OAAAA,GAAsB,WAAPyF,EAAOzF,IAAA,oBAAAA,ECHP,SAAA3B,GACf,YAAAA,EACA,UAAAsH,eAAA,6DAGA,OAAAtH,EDESuH,CAAqBvH,GAH9B2B,EAJArB,EAAAqF,EAAAC,EAAA,sBAAAyB,kCEAe,SAAAG,EAAAb,EAAAc,GAMf,OALAD,EAAApB,OAAAQ,gBAAA,SAAAD,EAAAc,GAEA,OADAd,EAAAG,UAAAW,EACAd,IAGAA,EAAAc,GCLe,SAAAC,EAAAC,EAAAC,GACf,uBAAAA,GAAA,OAAAA,EACA,UAAAlC,UAAA,sDAGAiC,EAAA5F,UAAAqE,OAAAyB,OAAAD,KAAA7F,UAAA,CACAoF,YAAA,CACAW,MAAAH,EACAxB,UAAA,EACAD,cAAA,KAGA0B,GAAkBJ,EAAcG,EAAAC,GAbhCtH,EAAAqF,EAAAC,EAAA,sBAAA8B,kCCEAzH,EAAAC,QAAA,CACA6H,iBAAA,GACAC,iBAAA,GACAC,qBAAA,mBCLA,IAAAC,EAEAA,EAAA,WACA,OAAAzH,KADA,GAIA,IAEAyH,KAAA,IAAAC,SAAA,iBACC,MAAAC,GAED,kBAAArI,SAAAmI,EAAAnI,QAMAE,EAAAC,QAAAgI,iBCjBA,SAAAG,EAAAC,GACA,OAAAA,EAAAC,QAAA,gBAGAtI,EAAAC,QAAA,SAAAsI,GAIA,IAHA,IAAAF,EAAA,GACA/G,EAAA,EAEQA,EAAAG,UAAAF,OAAsBD,IAC9B+G,GAAAD,EAAAG,EAAAjH,KAAAG,UAAAH,EAAA,QAGA,OAAA+G,iCCVA,IAAAG,EAAqBnI,EAAQ,IAE7BL,EAAAC,QAAAiI,SAAApG,UAAA2G,MAAAD,gCCFA,IAAAE,EAAAR,SAAApG,UAAA6G,SACAC,EAAA,cAEAC,EAAA,SAAAhB,GACA,IACA,IAAAiB,EAAAJ,EAAAhH,KAAAmG,GACA,OAAAe,EAAAG,KAAAD,GACG,MAAAX,GACH,WAiBAa,EAAA7C,OAAArE,UAAA6G,SAGAM,EAAA,oBAAAjC,QAAA,kBAAAA,OAAAkC,YAEAlJ,EAAAC,QAAA,SAAA4H,GACA,IAAAA,EACA,SAGA,uBAAAA,GAAA,kBAAAA,EACA,SAGA,uBAAAA,MAAA/F,UACA,SAGA,GAAAmH,EACA,OAhCA,SAAApB,GACA,IACA,OAAAgB,EAAAhB,KAIAa,EAAAhH,KAAAmG,IACA,GACG,MAAAM,GACH,UAuBAgB,CAAAtB,GAGA,GAAAgB,EAAAhB,GACA,SAGA,IAAAuB,EAAAJ,EAAAtH,KAAAmG,GACA,MA1BA,sBA0BAuB,GAzBA,+BAyBAA,iCC1CA,IAwBAC,EAAAC,EAAAC,EAAAC,EAxBAjJ,EAAaF,EAAQ,GAErBoJ,EAAUpJ,EAAQ,IAElBqJ,EAAiBrJ,EAAQ,IAEzBsJ,EAAsBtJ,EAAQ,IAE9BuJ,EAAsBvJ,EAAQ,IAE9BwJ,EAAWxJ,EAAQ,IAEnByJ,EAAiBzJ,EAAQ,IAEzB0J,EAAiB1J,EAAQ,IAAgB0J,WAEzCC,EAAgB3J,EAAQ,IAExB4J,EAAsB5J,EAAQ,IAAc4J,gBAG5CC,EAAA,sFACAC,EAAA,kEAQAC,EAAA,SAAAC,EAAAC,GACA,IAAAhJ,EAEA,GAAA+I,EAAA9I,SAAA+I,EAAA/I,OACA,SAIA,IAAAD,EAAA,EAAaA,EAAA+I,EAAA9I,OAAcD,IAC3B,GAAA+I,EAAA/I,KAAAgJ,EAAAhJ,GACA,SAIA,WAaAgI,EAAA,SAAAiB,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAAxG,IACAmG,KAAA,GAEAlB,EAAAxH,UAAArB,KAAAiB,KAAAlB,MAEAA,KAAAmB,KAAA,SAAAM,GACA2H,EAAAkB,eAAAP,EAAAtI,GAEAsI,GACAL,EAAAxF,QAAA,SAAAqG,GACAR,EAAAQ,GAAA9I,EAAA8I,KAKAN,EAAA9I,KAAAM,IAGAzB,KAAAwK,eAAA,SAAAC,GACAN,EAAAM,EAAAV,EAAAW,kBAAAC,qBAGA3K,KAAA4K,4BAAA,SAAAD,GACAN,EAAAM,GAGA3K,KAAA6K,oBAAA,SAAAC,GACAV,EAAAU,GAGA9K,KAAA2B,MAAA,WACA,IAAAoJ,EAAAC,EAAAC,EAAAC,EAEA,IAAAjB,EAAAlJ,QAKAgK,EAAA5B,EAAAgC,4BAAAlB,EAAAF,EAAAI,GACAJ,EAAAY,oBAAAvB,EAAAgC,kCAAArB,EAAAC,EAAAqB,wBACAlC,EAAAmC,kBAAAvB,EAAAgB,EAAAX,EAAAC,GAGAN,EAAAwB,QAAApC,EAAAqC,oBAAAT,GAEAE,EAAAhC,EAAAgC,KAAA9B,EAAAsC,qBAAAV,IACAd,EAAA,GACAe,EAAA/B,EAAA+B,KAAAd,EAAA,CAAAH,IACAmB,EAAA,IAAAQ,WAAAV,EAAAzI,WAAA0I,EAAA1I,YAEA2H,IACAgB,EAAAS,IAAAX,GACAE,EAAAS,IAAAV,EAAAD,EAAAzI,YACA6G,EAAAwC,aAAA7B,GACA/J,KAAAY,QAAA,QACAmJ,QACAmB,UAEAlL,KAAAY,QAAA,8BAxBAZ,KAAAY,QAAA,gCA4BAU,UAAA,IAAAvB,GAaA8I,EAAA,SAAAkB,EAAAC,GACA,IAGA6B,EACAC,EAJA5B,EAAA,EACA6B,EAAA,GACAC,EAAA,GAGAhC,KAAA,GAEAnB,EAAAvH,UAAArB,KAAAiB,KAAAlB,aAEA+J,EAAAkC,OACAjM,KAAAkM,UAAA,GAUAlM,KAAAmB,KAAA,SAAAgL,GACA/C,EAAAkB,eAAAP,EAAAoC,GAEA,2BAAAA,EAAAC,aAAAP,IACAA,EAAAM,EAAAN,OACA9B,EAAAsC,IAAA,CAAAF,EAAA1K,MACAkI,EAAAzF,QAAA,SAAAqG,GACAR,EAAAQ,GAAAsB,EAAAtB,IACOvK,OAGP,2BAAAmM,EAAAC,aAAAN,IACAA,EAAAK,EAAA1K,KACAsI,EAAA+B,IAAA,CAAAK,EAAA1K,OAIAsK,EAAA5K,KAAAgL,IAQAnM,KAAA2B,MAAA,WAIA,IAHA,IAAAoJ,EAAAuB,EAAAC,EAAAvB,EAAAC,EAAAC,EAGAa,EAAAhL,QACA,+BAAAgL,EAAA,GAAAK,aAIAL,EAAAS,QAIA,OAAAT,EAAAhL,OAGA,OAFAf,KAAAyM,oBACAzM,KAAAY,QAAA,6BA+CA,GAxCAmK,EAAA7B,EAAAwD,oBAAAX,IACAQ,EAAArD,EAAAyD,oBAAA5B,IAmBA,MAAA6B,YAEAN,EAAAtM,KAAA6M,iBAAAd,EAAA,GAAAhC,KAGAwC,EAAAO,QAAAR,GAGAC,EAAAhK,YAAA+J,EAAA/J,WACAgK,EAAAQ,UAAAT,EAAAS,SACAR,EAAAS,IAAAV,EAAAU,IACAT,EAAAU,IAAAX,EAAAW,IACAV,EAAAW,UAAAZ,EAAAY,UAGAX,EAAArD,EAAAiE,oBAAAZ,IAKAP,EAAAjL,OAAA,CACA,IAAAqM,EAQA,KALAA,EADApD,EAAAqD,eACArN,KAAAsN,gBAAAf,GAEAvM,KAAAuN,kBAAAhB,IAiBA,OAZAvM,KAAAkM,UAAAY,QAAA,CACAU,IAAAjB,EAAAkB,MACA3B,IAAA/B,EAAA+B,IACAO,IAAAtC,EAAAsC,MAGArM,KAAAkM,UAAAnL,OAAA4C,KAAAG,IAAA,EAAA9D,KAAAkM,UAAAnL,QAEAgL,EAAA,GAEA/L,KAAAyM,oBACAzM,KAAAY,QAAA,6BAMAwI,EAAAwC,aAAA7B,GACAwC,EAAAa,EAGAhE,EAAAkB,eAAAP,EAAAwC,GAGAxC,EAAAwB,QAAArC,EAAAsC,oBAAAe,GAEAtB,EAAAhC,EAAAgC,KAAA/B,EAAAwE,mBAAAnB,IACAxC,EAAAY,oBAAAvB,EAAAgC,kCAAArB,EAAAC,EAAAqB,wBACArL,KAAAY,QAAA,oBAAA2L,EAAAjJ,IAAA,SAAAkK,GACA,OACAR,IAAAQ,EAAAR,IACAC,IAAAO,EAAAP,IACA1K,WAAAiL,EAAAjL,eAIAvC,KAAAkM,UAAAY,QAAA,CACAU,IAAAjB,EAAAkB,MACA3B,IAAA/B,EAAA+B,IACAO,IAAAtC,EAAAsC,MAGArM,KAAAkM,UAAAnL,OAAA4C,KAAAG,IAAA,EAAA9D,KAAAkM,UAAAnL,QAEAgL,EAAA,GACA/L,KAAAY,QAAA,sBAAAmJ,EAAAY,qBACA3K,KAAAY,QAAA,oBAAAmJ,EAAAW,mBACAM,EAAA/B,EAAA+B,KAAAd,EAAA,CAAAH,IAGAmB,EAAA,IAAAQ,WAAAV,EAAAzI,WAAA0I,EAAA1I,YAEA2H,IACAgB,EAAAS,IAAAX,GACAE,EAAAS,IAAAV,EAAAD,EAAAzI,YACAvC,KAAAY,QAAA,QACAmJ,QACAmB,UAEAlL,KAAAyM,eAEAzM,KAAAY,QAAA,8BAGAZ,KAAAyM,aAAA,WACArD,EAAAwC,aAAA7B,GAGA8B,OAAA8B,EACA7B,OAAA6B,GAKA3N,KAAA6M,iBAAA,SAAAV,GACA,IAKAyB,EACAC,EACAC,EACAC,EACAjN,EALAkN,EAAAnK,IAOA,IAAA/C,EAAA,EAAeA,EAAAd,KAAAkM,UAAAnL,OAA2BD,IAE1CgN,GADAC,EAAA/N,KAAAkM,UAAApL,IACA0M,IAEAzD,EAAA+B,KAAAlC,EAAAG,EAAA+B,IAAA,GAAAiC,EAAAjC,IAAA,KAAA/B,EAAAsC,KAAAzC,EAAAG,EAAAsC,IAAA,GAAA0B,EAAA1B,IAAA,MAKAyB,EAAAb,IAAAlD,EAAAW,kBAAAuC,MAKAW,EAAAzB,EAAAc,IAAAa,EAAAb,IAAAa,EAAAZ,YAvBA,KA0BAU,GA5BA,QA+BAC,GAAAG,EAAAJ,KACAC,EAAAE,EACAC,EAAAJ,IAKA,OAAAC,EACAA,EAAAL,IAGA,MAKAxN,KAAAuN,kBAAA,SAAAhB,GACA,IAAA0B,EAAAC,EAAAC,EAAAX,EAAAjL,EAAAwK,EAAAG,EAAAE,EAMA,IALA7K,EAAAgK,EAAAhK,WACAwK,EAAAR,EAAAQ,SACAG,EAAAX,EAAAW,SACAe,EAAAC,EAAA,EAEAD,EAAAjC,EAAAjL,QAAAmN,EAAA3B,EAAAxL,SACAoN,EAAAnC,EAAAiC,GACAT,EAAAjB,EAAA2B,GAEAC,EAAAnB,MAAAQ,EAAAR,MAIAQ,EAAAR,IAAAmB,EAAAnB,IAGAiB,KAMAC,IACA3L,GAAAiL,EAAAjL,WACAwK,GAAAS,EAAAT,SACAG,GAAAM,EAAAN,UAGA,WAAAgB,EAEA3B,EAGA2B,IAAA3B,EAAAxL,OAEA,OAGAqM,EAAAb,EAAA7L,MAAAwN,IACA3L,aACA6K,EAAAF,WACAE,EAAAL,WACAK,EAAAJ,IAAAI,EAAA,GAAAJ,IACAI,EAAAH,IAAAG,EAAA,GAAAH,IACAG,IAKApN,KAAAsN,gBAAA,SAAAf,GACA,IAAA0B,EAAAC,EAAAC,EAAAX,EAAAY,EAAAC,EAkCAC,EA5BA,IALAL,EAAAjC,EAAAjL,OAAA,EACAmN,EAAA3B,EAAAxL,OAAA,EACAqN,EAAA,KACAC,GAAA,EAEAJ,GAAA,GAAAC,GAAA,IAIA,GAHAC,EAAAnC,EAAAiC,GACAT,EAAAjB,EAAA2B,GAEAC,EAAAnB,MAAAQ,EAAAR,IAAA,CACAqB,GAAA,EACA,MAGAF,EAAAnB,IAAAQ,EAAAR,IACAiB,KAIAA,IAAAjC,EAAAjL,OAAA,IAIAqN,EAAAF,GAGAA,KAGA,IAAAG,GAAA,OAAAD,EACA,YAWA,QALAE,EADAD,EACAH,EAEAE,GAIA,OAAA7B,EAGA,IAAAa,EAAAb,EAAA7L,MAAA4N,GACAC,EAAAnB,EAAAvK,OAAA,SAAA2L,EAAAhB,GAIA,OAHAgB,EAAAjM,YAAAiL,EAAAjL,WACAiM,EAAAtB,UAAAM,EAAAN,SACAsB,EAAAzB,UAAAS,EAAAT,SACAyB,GACK,CACLjM,WAAA,EACA2K,SAAA,EACAH,SAAA,IAOA,OALAK,EAAA7K,WAAAgM,EAAAhM,WACA6K,EAAAF,SAAAqB,EAAArB,SACAE,EAAAL,SAAAwB,EAAAxB,SACAK,EAAAJ,IAAAI,EAAA,GAAAJ,IACAI,EAAAH,IAAAG,EAAA,GAAAH,IACAG,GAGApN,KAAAyO,cAAA,SAAAC,GACA1C,EAAA0C,KAIApN,UAAA,IAAAvB,GAUAiJ,EAAA,SAAAgB,EAAA2E,GAIA3O,KAAA4O,eAAA,EACA5O,KAAA2O,iBAGA,qBAFA3E,KAAA,IAEA6E,MACA7O,KAAA8O,cAAA9E,EAAA6E,MAEA7O,KAAA8O,aAAA,EAGA,mBAAA9E,EAAAqB,yBACArL,KAAAqL,uBAAArB,EAAAqB,wBAGArL,KAAA+O,cAAA,GACA/O,KAAAgP,WAAA,KACAhP,KAAAiP,aAAA,GACAjP,KAAAkP,gBAAA,GACAlP,KAAAmP,gBAAA,GACAnP,KAAAoP,aAAA,EACApP,KAAAqP,cAAA,EAEArG,EAAA1H,UAAArB,KAAAiB,KAAAlB,MAGAA,KAAAmB,KAAA,SAAAmO,GAGA,OAAAA,EAAAC,KACAvP,KAAAkP,gBAAA/N,KAAAmO,GAIAA,EAAAvE,OACA/K,KAAAmP,gBAAAhO,KAAAmO,IAMAtP,KAAA+O,cAAA5N,KAAAmO,EAAAvF,OACA/J,KAAAiP,aAAA9N,KAAAmO,EAAApE,OACAlL,KAAAoP,cAAAE,EAAApE,MAAA3I,WAEA,UAAA+M,EAAAvF,MAAA3J,OACAJ,KAAAgP,WAAAM,EAAAvF,YAGA,UAAAuF,EAAAvF,MAAA3J,OACAJ,KAAAwP,WAAAF,EAAAvF,YAKAzI,UAAA,IAAAvB,EAEAiJ,EAAA1H,UAAAK,MAAA,SAAAD,GACA,IAOA+N,EACAC,EACAC,EAEA7O,EAXA8O,EAAA,EACAC,EAAA,CACAC,SAAA,GACAC,eAAA,GACAxB,SAAA,GACAyB,KAAA,IAKAC,EAAA,EAGA,GAAAjQ,KAAA+O,cAAAhO,OAAAf,KAAA4O,eAAA,CACA,0BAAAlN,GAAA,uBAAAA,EAIA,OACK,GAAA1B,KAAA8O,YAGL,OACK,OAAA9O,KAAA+O,cAAAhO,OAcL,OAPAf,KAAAqP,qBAEArP,KAAAqP,eAAArP,KAAA4O,iBACA5O,KAAAY,QAAA,QACAZ,KAAAqP,cAAA,IAmCA,IA5BArP,KAAAgP,YACAiB,EAAAjQ,KAAAgP,WAAAtE,kBAAAsC,IACArD,EAAAzF,QAAA,SAAAqG,GACAsF,EAAAG,KAAAzF,GAAAvK,KAAAgP,WAAAzE,IACKvK,OACFA,KAAAwP,aACHS,EAAAjQ,KAAAwP,WAAA9E,kBAAAsC,IACAtD,EAAAxF,QAAA,SAAAqG,GACAsF,EAAAG,KAAAzF,GAAAvK,KAAAwP,WAAAjF,IACKvK,OAGL,IAAAA,KAAA+O,cAAAhO,OACA8O,EAAAzP,KAAAJ,KAAA+O,cAAA,GAAA3O,KAEAyP,EAAAzP,KAAA,WAGAJ,KAAAqP,eAAArP,KAAA+O,cAAAhO,OACA4O,EAAA1G,EAAA0G,YAAA3P,KAAA+O,eAEAc,EAAAF,YAAA,IAAAjE,WAAAiE,EAAApN,YAGAsN,EAAAF,YAAAhE,IAAAgE,GAEAE,EAAApO,KAAA,IAAAiK,WAAA1L,KAAAoP,cAEAtO,EAAA,EAAaA,EAAAd,KAAAiP,aAAAlO,OAA8BD,IAC3C+O,EAAApO,KAAAkK,IAAA3L,KAAAiP,aAAAnO,GAAA8O,GACAA,GAAA5P,KAAAiP,aAAAnO,GAAAyB,WAKA,IAAAzB,EAAA,EAAaA,EAAAd,KAAAkP,gBAAAnO,OAAiCD,KAC9C2O,EAAAzP,KAAAkP,gBAAApO,IACAiB,UAAA0N,EAAAS,SAEAlQ,KAAAqL,yBACAoE,EAAA1N,WAAAkO,GAGAR,EAAA1N,WAAA,IACA0N,EAAAU,QAAAV,EAAAW,OAEApQ,KAAAqL,yBACAoE,EAAAU,SAAAF,GAGAR,EAAAU,SAAA,IACAN,EAAAE,eAAAN,EAAAY,SAAA,EACAR,EAAAC,SAAA3O,KAAAsO,GAKA,IAAA3O,EAAA,EAAaA,EAAAd,KAAAmP,gBAAApO,OAAiCD,KAC9C4O,EAAA1P,KAAAmP,gBAAArO,IACAwP,QAAAZ,EAAA1C,IAEAhN,KAAAqL,yBACAqE,EAAAY,SAAAL,GAGAP,EAAAY,SAAA,IACAT,EAAAtB,SAAApN,KAAAuO,GAKAG,EAAAtB,SAAAgC,aAAAvQ,KAAA2O,eAAA4B,aAEAvQ,KAAA+O,cAAAhO,OAAA,EACAf,KAAAgP,WAAA,KACAhP,KAAAiP,aAAAlO,OAAA,EACAf,KAAAkP,gBAAAnO,OAAA,EACAf,KAAAoP,aAAA,EACApP,KAAAmP,gBAAApO,OAAA,EAEAf,KAAAY,QAAA,OAAAiP,GAEA7P,KAAAqP,eAAArP,KAAA4O,iBACA5O,KAAAY,QAAA,QACAZ,KAAAqP,cAAA,KAWAtG,EAAA,SAAAiB,GACA,IAEAgF,EACAQ,EAHAjQ,EAAAS,KACAwQ,GAAA,EAIAzH,EAAAzH,UAAArB,KAAAiB,KAAAlB,MAEAgK,KAAA,GACAhK,KAAA2K,oBAAAX,EAAAW,qBAAA,EACA3K,KAAAyQ,kBAAA,GAEAzQ,KAAA0Q,iBAAA,WACA,IAAAC,EAAA,GACA3Q,KAAAyQ,kBAAAE,EACAA,EAAAvQ,KAAA,MACAuQ,EAAAhC,eAAA,IAAAtF,EAAAuH,eAEAD,EAAAE,UAAA,IAAArH,EACAmH,EAAAG,6BAAA,IAAAzH,EAAA0H,wBAAA,SACAJ,EAAAK,qCAAA,IAAA3H,EAAA0H,wBAAA,kBACAJ,EAAAM,WAAA,IAAA3H,EACAqH,EAAAO,eAAA,IAAAlI,EAAAgB,EAAA2G,EAAAhC,gBACAgC,EAAAQ,eAAAR,EAAAE,UACAF,EAAAE,UAAAtP,KAAAoP,EAAAG,8BAAAvP,KAAAoP,EAAAM,YACAN,EAAAE,UAAAtP,KAAAoP,EAAAK,sCAAAzP,KAAAoP,EAAAhC,gBAAApN,KAAAoP,EAAAO,gBACAP,EAAAhC,eAAAxO,GAAA,qBAAAiR,GACAT,EAAAE,UAAAQ,aAAAD,EAAAE,aAEAX,EAAAE,UAAA1Q,GAAA,gBAAAsB,GACA,mBAAAA,EAAArB,MAAAuQ,EAAAY,qBACA/B,KAAA,CACA9E,kBAAA,CACAC,oBAAApL,EAAAoL,qBAEA6G,MAAA,OACApR,KAAA,SAGAuQ,EAAAO,eAAAtC,iBACA+B,EAAAY,mBAAA,IAAAzI,EAAA0G,EAAAxF,GAEA2G,EAAAM,WAAA1P,KAAAoP,EAAAY,oBAAAhQ,KAAAoP,EAAAO,mBAIAP,EAAAO,eAAA/Q,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,SAEA2Q,EAAAO,eAAA/Q,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,UAGAA,KAAAyR,gBAAA,WACA,IAAAd,EAAA,GACA3Q,KAAAyQ,kBAAAE,EACAA,EAAAvQ,KAAA,KACAuQ,EAAAhC,eAAA,IAAAtF,EAAAuH,eAEAD,EAAAe,aAAA,IAAArI,EAAAsI,sBACAhB,EAAAiB,YAAA,IAAAvI,EAAAwI,qBACAlB,EAAAmB,iBAAA,IAAAzI,EAAA0I,iBACApB,EAAAqB,6BAAA,IAAA3I,EAAA0H,wBAAA,SACAJ,EAAAG,6BAAA,IAAAzH,EAAA0H,wBAAA,SACAJ,EAAAK,qCAAA,IAAA3H,EAAA0H,wBAAA,kBACAJ,EAAAM,WAAA,IAAA3H,EACAqH,EAAAsB,WAAA,IAAA1I,EACAoH,EAAAuB,cAAA,IAAA7I,EAAA8I,cACAxB,EAAAO,eAAA,IAAAlI,EAAAgB,EAAA2G,EAAAhC,gBACAgC,EAAAQ,eAAAR,EAAAe,aAEAf,EAAAe,aAAAnQ,KAAAoP,EAAAiB,aAAArQ,KAAAoP,EAAAmB,kBAGAnB,EAAAmB,iBAAAvQ,KAAAoP,EAAAqB,8BAAAzQ,KAAAoP,EAAAsB,YACAtB,EAAAmB,iBAAAvQ,KAAAoP,EAAAG,8BAAAvP,KAAAoP,EAAAM,YACAN,EAAAmB,iBAAAvQ,KAAAoP,EAAAK,sCAAAzP,KAAAoP,EAAAhC,gBAAApN,KAAAoP,EAAAO,gBAEAP,EAAAsB,WAAA1Q,KAAAoP,EAAAuB,eAAA3Q,KAAAoP,EAAAO,gBACAP,EAAAmB,iBAAA3R,GAAA,gBAAAsB,GACA,IAAAX,EAEA,gBAAAW,EAAArB,KAAA,CAGA,IAFAU,EAAAW,EAAA2Q,OAAArR,OAEAD,KACAkO,GAAA,UAAAvN,EAAA2Q,OAAAtR,GAAAV,KAGWoP,GAAA,UAAA/N,EAAA2Q,OAAAtR,GAAAV,QACXoP,EAAA/N,EAAA2Q,OAAAtR,IACA4J,kBAAAC,oBAAApL,EAAAoL,sBAJAqE,EAAAvN,EAAA2Q,OAAAtR,IACA4J,kBAAAC,oBAAApL,EAAAoL,oBAQAqE,IAAA2B,EAAA0B,qBACA1B,EAAAO,eAAAtC,iBACA+B,EAAA0B,mBAAA,IAAAxJ,EAAAmG,EAAAhF,GACA2G,EAAA0B,mBAAAlS,GAAA,6BAAAuK,GAIA8E,IACAA,EAAA9E,oBAKAiG,EAAAY,mBAAA/G,eAAAE,EAAAuC,QAGA0D,EAAA0B,mBAAAlS,GAAA,oBAAAZ,EAAAqB,QAAAqH,KAAA1I,EAAA,YACAoR,EAAA0B,mBAAAlS,GAAA,+BAAAwK,GACA6E,GACAmB,EAAAY,mBAAA3G,4BAAAD,KAIAgG,EAAAsB,WAAA1Q,KAAAoP,EAAA0B,oBAAA9Q,KAAAoP,EAAAO,iBAGA1B,IAAAmB,EAAAY,qBAEAZ,EAAAO,eAAAtC,iBACA+B,EAAAY,mBAAA,IAAAzI,EAAA0G,EAAAxF,GAEA2G,EAAAM,WAAA1P,KAAAoP,EAAAY,oBAAAhQ,KAAAoP,EAAAO,oBAKAP,EAAAO,eAAA/Q,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,SAEA2Q,EAAAO,eAAA/Q,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,UAIAA,KAAAsS,uBAAA,SAAA3H,GACA,IAAAgG,EAAA3Q,KAAAyQ,kBAEAzG,EAAAqB,yBACArL,KAAA2K,uBAGA6E,IACAA,EAAA9E,kBAAAuC,SAAAU,EACA6B,EAAA9E,kBAAAsC,SAAAW,EACAvE,EAAAwC,aAAA4D,GAEAxF,EAAAqB,yBACAmE,EAAA9E,kBAAAC,uBAGAgG,EAAAG,8BACAH,EAAAG,6BAAAyB,iBAIAvD,IACA2B,EAAA0B,qBACA1B,EAAA0B,mBAAAnG,UAAA,GACAyE,EAAAqB,6BAAAO,iBAGAvD,EAAAtE,kBAAAuC,SAAAU,EACAqB,EAAAtE,kBAAAsC,SAAAW,EACAvE,EAAAwC,aAAAoD,GACA2B,EAAAuB,cAAAM,QAEAxI,EAAAqB,yBACA2D,EAAAtE,kBAAAC,wBAIAgG,EAAAK,sCACAL,EAAAK,qCAAAuB,iBAIAvS,KAAA6K,oBAAA,SAAAC,GACA0E,GACAxP,KAAAyQ,kBAAAc,mBAAA1G,oBAAAC,IAIA9K,KAAAyO,cAAA,SAAAzC,GACAgD,GAAAhP,KAAAyQ,kBAAA4B,oBACArS,KAAAyQ,kBAAA4B,mBAAA5D,cAAAzC,IAKAhM,KAAAmB,KAAA,SAAAM,GACA,GAAA+O,EAAA,CACA,IAAAiC,EAAAhJ,EAAAhI,GAEAgR,GAAA,QAAAzS,KAAAyQ,kBAAArQ,KACAJ,KAAA0Q,mBACO+B,GAAA,OAAAzS,KAAAyQ,kBAAArQ,MACPJ,KAAAyR,kBAGAjB,GAAA,EAGAxQ,KAAAyQ,kBAAAU,eAAAhQ,KAAAM,IAIAzB,KAAA2B,MAAA,WACA6O,GAAA,EAEAxQ,KAAAyQ,kBAAAU,eAAAxP,SAIA3B,KAAA0S,cAAA,WACA1S,KAAAyQ,kBAAAyB,eACAlS,KAAAyQ,kBAAAyB,cAAAM,WAKAlR,UAAA,IAAAvB,EACAP,EAAAC,QAAA,CACAkT,WAAA5J,EACA6J,mBAAA/J,EACAgK,mBAAA/J,EACAY,mBACAC,kDCz6BA,IAAAmJ,EAAA,sEAUAC,EAAA,SAAAtR,GACA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAwHAjC,EAAAC,QAAA,CACAgK,gBAlIA,SAAAhI,GACA,OAAAA,EAAA,SAAAuR,WAAA,IAAAvR,EAAA,SAAAuR,WAAA,IAAAvR,EAAA,SAAAuR,WAAA,IAkIAC,gBApGA,SAAAC,EAAAC,GACA,IAAAC,EAAAF,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,MAAAD,EAAAC,EAAA,GAIA,OAFA,GADAD,EAAAC,EAAA,KACA,EAGAC,EAAA,GAGAA,EAAA,IA4FAC,cAzFA,SAAAH,EAAAC,GACA,IAAAG,GAAA,IAAAJ,EAAAC,EAAA,OACAI,EAAAL,EAAAC,EAAA,MAEA,OADA,KAAAD,EAAAC,EAAA,GACAI,EAAAD,GAsFAzR,UAnFA,SAAAqR,EAAAC,GACA,OAAAD,EAAAC,KAAA,IAAAH,WAAA,IAAAE,EAAAC,EAAA,SAAAH,WAAA,IAAAE,EAAAC,EAAA,SAAAH,WAAA,GACA,kBACG,EAAAE,EAAAC,IAAA,WAAAD,EAAAC,EAAA,IACH,QAGA,MA6EAK,gBA1EA,SAAAC,GAGA,IAFA,IAAA3S,EAAA,EAEAA,EAAA,EAAA2S,EAAA1S,QAAA,CACA,SAAA0S,EAAA3S,IAAA,WAAA2S,EAAA3S,EAAA,IAOA,OAAAgS,GAAA,GAAAW,EAAA3S,EAAA,SAJAA,IAOA,aA6DA4S,kBA1DA,SAAAD,GACA,IAAAE,EAAAC,EAAAxC,EAEAuC,EAAA,GAEA,GAAAF,EAAA,KAEAE,GAAA,EAEAA,GAAAZ,EAAAU,EAAAjR,SAAA,SAKA,GAIA,IAFAoR,EAAAb,EAAAU,EAAAjR,SAAAmR,EAAA,EAAAA,EAAA,KAEA,EACA,YAKA,YAFAhR,OAAAC,aAAA6Q,EAAAE,GAAAF,EAAAE,EAAA,GAAAF,EAAAE,EAAA,GAAAF,EAAAE,EAAA,IAEA,CACAvC,EAAAqC,EAAAjR,SAAAmR,EAAA,GAAAA,EAAAC,EAAA,IAEA,QAAA9S,EAAA,EAAqBA,EAAAsQ,EAAA7O,WAAsBzB,IAC3C,OAAAsQ,EAAAtQ,GAAA,CAGA,oDAhFA+S,SAdA,SAAAC,EAAAC,EAAA3R,GACA,IAAAtB,EACA4B,EAAA,GAEA,IAAA5B,EAAAiT,EAAiBjT,EAAAsB,EAAStB,IAC1B4B,GAAA,UAAAoR,EAAAhT,GAAAqH,SAAA,KAAAzH,OAAA,GAGA,OAAAgC,EAMAsR,CA8EA5C,EAAA,EAAAtQ,IAEA,CACA,IAAAoE,EAAAkM,EAAA5O,SAAA1B,EAAA,GACAqB,GAAA,EAAA+C,EAAA,QAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OAGA,OAFA/C,GAAA,EACAA,GAAA,EAAA+C,EAAA,GAIA,OAKAyO,GAAA,GAEAA,GAAAC,QACGD,EAAAF,EAAAlR,YAEH,+BCvHA,IAAAjD,EAAaO,EAAQ,GAErBoU,EAAAzU,EAAAC,QAAA,CACAyU,OAAUrU,EAAQ,IAClBsU,OAAUtU,EAAQ,IAClBuU,UAAavU,EAAQ,KAErBP,EAAA2U,QACA3U,EAAA4U,OAAAD,EAAAC,OACA,IAAAG,EAAAJ,EAAAE,OACAG,EAAAL,EAAAG,UACAG,EAAAjV,EAAA6U,OACAK,EAAAlV,EAAA8U,UAEAH,EAAAQ,KAAA,WACAnV,EAAA6U,OAAAE,EACA/U,EAAA8U,UAAAE,GAGAL,EAAAS,QAAA,WACApV,EAAA6U,OAAAI,EACAjV,EAAA8U,UAAAI,GAGAlV,EAAA6U,QACAF,EAAAQ,qCC1CA,IAAAnV,EAAaO,EAAQ,GAErB8U,EAAiB9U,EAAQ,IAEzB+U,EAAmB/U,EAAQ,IAE3BgV,EAAYhV,EAAQ,IA2BpB,SAAAiV,EAAAC,EAAA/K,EAAAgL,GACA,IAAAC,EAAAF,EAiBA,OAfAJ,EAAA3K,IACAgL,EAAAhL,EAEA,kBAAA+K,IACAE,EAAA,CACAF,SAIAE,EAAAJ,EAAA7K,EAAA,CACA+K,QAIAE,EAAAD,WACAC,EAGA,SAAAC,EAAAH,EAAA/K,EAAAgL,GAEA,OAAAG,EADAnL,EAAA8K,EAAAC,EAAA/K,EAAAgL,IAIA,SAAAG,EAAAnL,GACA,wBAAAA,EAAAgL,SACA,UAAAI,MAAA,6BAGA,IAAAC,GAAA,EAEAL,EAAA,SAAAM,EAAAC,EAAAC,GACAH,IACAA,GAAA,EACArL,EAAAgL,SAAAM,EAAAC,EAAAC,KAUA,SAAAC,IAEA,IAAAD,OAAA7H,EAQA,GALA6H,EADAE,EAAAH,SACAG,EAAAH,SAEAG,EAAAC,cA6JA,SAAAD,GACA,gBAAAA,EAAAE,aACA,OAAAF,EAAAG,YAGA,IAAAC,EAAAJ,EAAAG,aAAA,gBAAAH,EAAAG,YAAAE,gBAAAC,SAEA,QAAAN,EAAAE,eAAAE,EACA,OAAAJ,EAAAG,YAGA,YAxKAI,CAAAP,GAGAQ,EACA,IACAV,EAAAW,KAAAC,MAAAZ,GACO,MAAA7N,IAGP,OAAA6N,EAGA,SAAAa,EAAAC,GAQA,OAPAC,aAAAC,GAEAF,aAAAlB,QACAkB,EAAA,IAAAlB,MAAA,IAAAkB,GAAA,kCAGAA,EAAAG,WAAA,EACAzB,EAAAsB,EAAAI,GAIA,SAAAC,IACA,IAAAC,EAAA,CACA,IAAAC,EACAN,aAAAC,GAIAK,EAFA7M,EAAA8M,aAAAnJ,IAAA+H,EAAAmB,OAEA,IAEA,OAAAnB,EAAAmB,OAAA,IAAAnB,EAAAmB,OAGA,IAAAtB,EAAAmB,EACApB,EAAA,KAoBA,OAlBA,IAAAuB,GACAtB,EAAA,CACAC,KAAAC,IACAgB,WAAAI,EACAE,SACAC,QAAA,GACAC,IAAAlC,EACAmC,WAAAxB,GAGAA,EAAAyB,wBAEA5B,EAAAyB,QAAApC,EAAAc,EAAAyB,2BAGA7B,EAAA,IAAAF,MAAA,iCAGAJ,EAAAM,EAAAC,IAAAC,OAGA,IAUA3P,EACA+Q,EAXAlB,EAAA1L,EAAA0L,KAAA,KAEAA,IAEAA,EADA1L,EAAAoN,MAAApN,EAAA8M,OACA,IAAA5B,EAAAmC,eAEA,IAAAnC,EAAAoC,gBAMA,IAMAd,EANAzB,EAAAW,EAAAuB,IAAAjN,EAAA+K,KAAA/K,EAAAiN,IACAF,EAAArB,EAAAqB,OAAA/M,EAAA+M,QAAA,MACAvB,EAAAxL,EAAAwL,MAAAxL,EAAAvI,KACAuV,EAAAtB,EAAAsB,QAAAhN,EAAAgN,SAAA,GACAO,IAAAvN,EAAAuN,KACArB,GAAA,EAEAQ,EAAA,CACAlB,UAAA7H,EACAqJ,QAAA,GACAP,WAAA,EACAM,SACAE,IAAAlC,EACAmC,WAAAxB,GA+CA,GA5CA,SAAA1L,IAAA,IAAAA,EAAAwN,OACAtB,GAAA,EACAc,EAAA,QAAAA,EAAA,SAAAA,EAAA,2BAEA,QAAAD,GAAA,SAAAA,IACAC,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,oCAEAxB,EAAAW,KAAAsB,WAAA,IAAAzN,EAAAwN,KAAAhC,EAAAxL,EAAAwN,QAIA9B,EAAAgC,mBAhHA,WACA,IAAAhC,EAAAiC,YACAC,WAAAjB,EAAA,IA+GAjB,EAAAmC,OAAAlB,EACAjB,EAAAoC,QAAAzB,EAEAX,EAAAqC,WAAA,aAGArC,EAAAsC,QAAA,WACApB,GAAA,GAGAlB,EAAAuC,UAAA5B,EACAX,EAAAwC,KAAAnB,EAAAhC,GAAAwC,EAAAvN,EAAAmO,SAAAnO,EAAAoO,UAEAb,IACA7B,EAAA2C,kBAAArO,EAAAqO,kBAMAd,GAAAvN,EAAAsO,QAAA,IACA9B,EAAAoB,WAAA,WACA,IAAAhB,EAAA,CACAA,GAAA,EAEAlB,EAAA6C,MAAA,WACA,IAAA5Q,EAAA,IAAAyN,MAAA,0BACAzN,EAAA6Q,KAAA,YACAnC,EAAA1O,KACKqC,EAAAsO,UAGL5C,EAAA+C,iBACA,IAAA5S,KAAAmR,EACAA,EAAA0B,eAAA7S,IACA6P,EAAA+C,iBAAA5S,EAAAmR,EAAAnR,SAGG,GAAAmE,EAAAgN,UAvMH,SAAAzQ,GACA,QAAAzF,KAAAyF,EACA,GAAAA,EAAAmS,eAAA5X,GAAA,SAGA,SAkMG6X,CAAA3O,EAAAgN,SACH,UAAA5B,MAAA,qDAeA,MAZA,iBAAApL,IACA0L,EAAAE,aAAA5L,EAAA4L,cAGA,eAAA5L,GAAA,oBAAAA,EAAA4O,YACA5O,EAAA4O,WAAAlD,GAMAA,EAAAmD,KAAArD,GAAA,MACAE,EAxOAlW,EAAAC,QAAAyV,EACAA,EAAAoC,eAAAhY,EAAAgY,gBAwPA,aAvPApC,EAAAmC,eAAA,wBAAAnC,EAAAoC,eAAApC,EAAAoC,eAAAhY,EAAA+X,eASA,SAAAyB,EAAArS,GACA,QAAA3F,EAAA,EAAiBA,EAAAgY,EAAA/X,OAAkBD,IACnC2F,EAAAqS,EAAAhY,IAVAiY,CAAA,sDAAAhC,GACA7B,EAAA,WAAA6B,EAAA,MAAAA,GAAA,SAAAhC,EAAA/K,EAAAgL,GAGA,OAFAhL,EAAA8K,EAAAC,EAAA/K,EAAAgL,IACA+B,SAAAiC,cACA7D,EAAAnL,wBCdA,SAAAiP,GAEA,IAAAC,EAAA,yFACAC,EAAA,mBACAC,EAAA,oBACAC,EAAA,qCACAC,EAAA,CAQAC,iBAAA,SAAAC,EAAAC,EAAAC,GAMA,GALAA,KAAA,GAEAF,IAAAG,SACAF,IAAAE,QAEA,CAIA,IAAAD,EAAAE,gBACA,OAAAJ,EAGA,IAAAK,EAAAP,EAAAQ,SAAAN,GAEA,IAAAK,EACA,UAAAzE,MAAA,mCAIA,OADAyE,EAAA3X,KAAAoX,EAAAS,cAAAF,EAAA3X,MACAoX,EAAAU,kBAAAH,GAGA,IAAAI,EAAAX,EAAAQ,SAAAL,GAEA,IAAAQ,EACA,UAAA7E,MAAA,uCAGA,GAAA6E,EAAAC,OAGA,OAAAR,EAAAE,iBAIAK,EAAA/X,KAAAoX,EAAAS,cAAAE,EAAA/X,MACAoX,EAAAU,kBAAAC,IAJAR,EAOA,IAAAU,EAAAb,EAAAQ,SAAAN,GAEA,IAAAW,EACA,UAAA/E,MAAA,mCAGA,IAAA+E,EAAAC,QAAAD,EAAAjY,MAAA,MAAAiY,EAAAjY,KAAA,IAGA,IAAAmY,EAAAlB,EAAAmB,KAAAH,EAAAjY,MACAiY,EAAAC,OAAAC,EAAA,GACAF,EAAAjY,KAAAmY,EAAA,GAGAF,EAAAC,SAAAD,EAAAjY,OACAiY,EAAAjY,KAAA,KAGA,IAAAqY,EAAA,CAGAL,OAAAC,EAAAD,OACAE,OAAAH,EAAAG,OACAlY,KAAA,KACA+S,OAAAgF,EAAAhF,OACAuF,MAAAP,EAAAO,MACArX,SAAA8W,EAAA9W,UAGA,IAAA8W,EAAAG,SAIAG,EAAAH,OAAAD,EAAAC,OAGA,MAAAH,EAAA/X,KAAA,IACA,GAAA+X,EAAA/X,KAgBW,CAKX,IAAAuY,EAAAN,EAAAjY,KACAwY,EAAAD,EAAAE,UAAA,EAAAF,EAAAG,YAAA,QAAAX,EAAA/X,KACAqY,EAAArY,KAAAoX,EAAAS,cAAAW,QApBAH,EAAArY,KAAAiY,EAAAjY,KAIA+X,EAAAhF,SACAsF,EAAAtF,OAAAkF,EAAAlF,OAIAgF,EAAAO,QACAD,EAAAC,MAAAL,EAAAK,QAmBA,OAJA,OAAAD,EAAArY,OACAqY,EAAArY,KAAAwX,EAAAE,gBAAAN,EAAAS,cAAAE,EAAA/X,MAAA+X,EAAA/X,MAGAoX,EAAAU,kBAAAO,IAEAT,SAAA,SAAA7C,GACA,IAAA4D,EAAA3B,EAAAoB,KAAArD,GAEA,OAAA4D,EAIA,CACAX,OAAAW,EAAA,OACAT,OAAAS,EAAA,OACA3Y,KAAA2Y,EAAA,OACA5F,OAAA4F,EAAA,OACAL,MAAAK,EAAA,OACA1X,SAAA0X,EAAA,QATA,MAYAd,cAAA,SAAA7X,GAgBA,IATAA,IAAA4Y,MAAA,IAAAC,UAAAC,KAAA,IAAAlT,QAAAsR,EAAA,IASAlX,EAAAnB,UAAAmB,IAAA4F,QAAAuR,EAAA,KAAAtY,SAGA,OAAAmB,EAAA4Y,MAAA,IAAAC,UAAAC,KAAA,KAEAhB,kBAAA,SAAAa,GACA,OAAAA,EAAAX,OAAAW,EAAAT,OAAAS,EAAA3Y,KAAA2Y,EAAA5F,OAAA4F,EAAAL,MAAAK,EAAA1X,WAK+D3D,EAAAC,QAAA6Z,EAzK/D,kCCHA,SAAAla,GAAAS,EAAAqF,EAAAC,EAAA,sBAAAiR,IAAAvW,EAAAqF,EAAAC,EAAA,sBAAA8V,IAAA,IAAAC,EAAArb,EAAA,GAAAsb,EAAAtb,EAAAub,EAAAF,GAIAG,EAAA,SAAA9U,GACA,QAAAA,GAAA,kBAAAA,GAGA+U,EAAA,SAAAA,IACA,QAAAC,EAAAta,UAAAF,OAAAya,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAwEA,EAAAH,EAAaG,IACrFF,EAAAE,GAAAza,UAAAya,GAGA,OAAAF,EAAA3Y,OAAA,SAAAH,EAAAiZ,GAUA,OATAhW,OAAAiW,KAAAD,GAAAzX,QAAA,SAAA2B,GACA4V,MAAAI,QAAAnZ,EAAAmD,KAAA4V,MAAAI,QAAAF,EAAA9V,IACAnD,EAAAmD,GAAAnD,EAAAmD,GAAAvF,OAAAqb,EAAA9V,IACOwV,EAAA3Y,EAAAmD,KAAAwV,EAAAM,EAAA9V,IACPnD,EAAAmD,GAAAyV,EAAA5Y,EAAAmD,GAAA8V,EAAA9V,IAEAnD,EAAAmD,GAAA8V,EAAA9V,KAGAnD,GACG,KAmBHoZ,EAAA,SAAAC,GACA,OAAAA,EAAAlZ,OAAA,SAAAmZ,EAAAC,GACA,OAAAD,EAAA1b,OAAA2b,IACG,KAGHC,EAAA,SAAAC,GACA,IAAAA,EAAApb,OACA,SAKA,IAFA,IAAA2B,EAAA,GAEA5B,EAAA,EAAiBA,EAAAqb,EAAApb,OAAiBD,IAClC4B,EAAAvB,KAAAgb,EAAArb,IAGA,OAAA4B,GAaA0Z,EAAA,SAAAC,GACA,IA/CAnW,EAyEA,OAzEAA,EA+CAmW,EAAAxZ,OAAA,SAAAyZ,EAAAC,GAIA,IAGAC,EAHAC,EAAAF,EAAAG,WAAAzZ,IAAAsZ,EAAAG,WAAAC,MAAA,IAEAL,EAAAG,IAIAF,EAAAK,SAAA,GAAArK,eAAA,GAEAiK,EAAAF,EAAAG,GAAAG,UAAAzb,KAAAC,MAAAob,EAAAD,EAAAK,UAIAL,EAAAG,WAAAG,oBACAP,EAAAG,GAAAC,WAAAG,kBAAAN,EAAAG,WAAAG,oBAIAP,EAAAG,GAAAF,EAGA,OAAAD,GACG,IAvEH3W,OAAAiW,KAAA1V,GAAA5C,IAAA,SAAAwZ,GACA,OAAA5W,EAAA4W,MAuEAxZ,IAAA,SAAAiZ,GArCA,IAAAQ,EAAAlX,EAuCA,OADA0W,EAAAS,qBAtCAD,EAsCAR,EAAAK,SAtCA/W,EAsCA,gBArCAkX,EAAAla,OAAA,SAAAgH,EAAAlC,EAAA7G,GAKA,OAJA6G,EAAA9B,IACAgE,EAAA1I,KAAAL,GAGA+I,GACG,KAgCH0S,KAIAU,EAAA,SAAAC,GACA,IAAAC,EAEAT,EAAAQ,EAAAR,WACAE,EAAAM,EAAAN,SACAL,EAAA,CACAG,YAAAS,EAAA,CACAC,KAAAV,EAAAzZ,GACAoa,UAAAX,EAAAY,UACAC,OAAAb,EAAAc,QACKL,EAAA,gBAAAA,GACLpI,IAAA,GACA0I,QAAA,YAAAf,EAAAtc,MAAA,UACAsd,SAAAhB,EAAAiB,YACAC,YAAA,GACAC,eAAAnB,EAAAxP,SACA0P,WACAkB,cAAAlB,EAAA7b,OAAA6b,EAAA,GAAAmB,OAAA,GAOA,OAJArB,EAAAG,oBACAN,EAAAM,kBAAAH,EAAAG,mBAGAN,GAGAyB,EAAA,SAAAC,GACA,IAAAC,EAEAxB,EAAAuB,EAAAvB,WACAE,EAAAqB,EAAArB,SAeA,MAbA,qBAAAA,IAEAA,EAAA,EACA7H,IAAA2H,EAAAyB,QACAT,SAAAhB,EAAAiB,YACAC,YAAAlB,EAAAyB,SAAA,GACAjR,SAAAwP,EAAA0B,eACAL,OAAA,IAGArB,EAAAxP,SAAAwP,EAAA0B,gBAGA,CACA1B,YAAAwB,EAAA,CACAd,KAAAV,EAAAzZ,GACAoa,UAAAX,EAAAY,WACKY,EAAA,gBAAAA,GACLnJ,IAAA,GACA0I,QAAA,YAAAf,EAAAtc,MAAA,UACAsd,SAAAhB,EAAAiB,YACAC,YAAAlB,EAAAyB,SAAA,GACAN,eAAAnB,EAAAxP,SACA0P,WACAkB,cAAAlB,EAAA7b,OAAA6b,EAAA,GAAAmB,OAAA,IAiDAM,EAAA,SAAAC,GACA,IAAAC,EAEA7B,EAAA4B,EAAA5B,WACAE,EAAA0B,EAAA1B,SACAL,EAAA,CACAG,YAAA6B,EAAA,CACAnB,KAAAV,EAAAzZ,GACAub,MAAA,QACAC,UAAA,OACAC,WAAA,CACAC,MAAAjC,EAAAiC,MACAC,OAAAlC,EAAAkC,QAEArB,OAAAb,EAAAc,OACAH,UAAAX,EAAAY,WACKiB,EAAA,gBAAAA,GACLxJ,IAAA,GACA0I,QAAA,YAAAf,EAAAtc,MAAA,UACAsd,SAAAhB,EAAAiB,YACAC,YAAA,GACAC,eAAAnB,EAAAxP,SACA0P,WACAkB,cAAAlB,EAAA7b,OAAA6b,EAAA,GAAAmB,OAAA,GAOA,OAJArB,EAAAG,oBACAN,EAAAM,kBAAAH,EAAAG,mBAGAN,GAGAsC,EAAA,SAAAC,GACA,IAAAC,EAEA,IAAAD,EAAA/d,OACA,SAIA,IAAAie,EAAAF,EAAA,GAAApC,WACAxP,EAAA8R,EAAAZ,eACAa,EAAAD,EAAAE,oBACAA,OAAA,IAAAD,EAAA,EAAAA,EAiBAE,EAAA/C,EAAA0C,EAAAM,OAfA,SAAAC,GACA,IAAA3C,EAAA2C,EAAA3C,WACA,oBAAAA,EAAA4C,UAAA,UAAA5C,EAAA6C,eAaAjc,IAAA+a,GACAmB,EAAApD,EAAA0C,EAAAM,OAXA,SAAAK,GACA,IAAA/C,EAAA+C,EAAA/C,WACA,oBAAAA,EAAA4C,UAAA,UAAA5C,EAAA6C,eAUAG,EAAAZ,EAAAM,OAPA,SAAAO,GACA,IAAAjD,EAAAiD,EAAAjD,WACA,mBAAAA,EAAA4C,UAAA,SAAA5C,EAAA6C,cAMAK,EAAA,CACAC,YAAA,EACA7C,oBAAA,GACAJ,SAAA,GACAa,SAAA,EACAqC,aAAAf,EAAA,CACAP,MAAA,GACAuB,MAAA,IACKhB,EAAA,sBAAsCA,EAAAN,UAAA,GAA6BM,GACxEhK,IAAA,GACA7H,WACAmP,UAAA8C,EACAD,oBAAA,IAAAA,GAWA,OARAM,EAAAze,SACA6e,EAAAE,YAAAtB,MAAAwB,MAAAR,EA5HA3c,OAAA,SAAAgH,EAAA0S,GACA,IAAA0D,EAAA1D,EAAAG,WAAAuD,MAAA1D,EAAAG,WAAAuD,KAAA5Y,OAAA,OACA6Y,EAAA3D,EAAAG,WAAAC,MAAA,GACAwD,EAAA,OAOA,OALAD,IACAC,EAAA5D,EAAAG,WAAAC,KAAA,KAAAsD,EAAA,KAIApW,EAAAsW,IAAAtW,EAAAsW,GAAA9D,UAAA,GAAAK,WAAAW,UAAAd,EAAAG,WAAAY,UACAzT,GAGAA,EAAAsW,GAAA,CACAD,WACAE,YAAA,EACAC,QAAA,SAAAJ,EACA5D,UAAA,CAAAY,EAAAV,IACAxH,IAAA,IAEAlL,IACG,KAyGH6V,EAAA3e,SACA6e,EAAAE,YAAArB,UAAA6B,KAvGA,SAAAjE,GACA,OAAAA,EAAAxZ,OAAA,SAAAgH,EAAA0S,GACA,IAAA4D,EAAA5D,EAAAG,WAAAC,MAAA,OAEA,OAAA9S,EAAAsW,GACAtW,GAGAA,EAAAsW,GAAA,CACAD,SAAAC,EACAE,SAAA,EACAD,YAAA,EACA/D,UAAA,CAAA2B,EAAAzB,IACAxH,IAAA,IAEAlL,IACG,IAuFH0W,CAAAb,IAGAE,GAGA,qBAAAtgB,cAAA,qBAAAF,GAAA,qBAAAG,WAQA,IANAC,EAMAghB,GAAA,SAAAhhB,EAAAC,IAIA,SAAAwZ,GAEA,IAAAC,EAAA,yFACAC,EAAA,mBACAC,EAAA,oBACAC,EAAA,qCACAC,EAAA,CAQAC,iBAAA,SAAAC,EAAAC,EAAAC,GAMA,GALAA,KAAA,GAEAF,IAAAG,SACAF,IAAAE,QAEA,CAIA,IAAAD,EAAAE,gBACA,OAAAJ,EAGA,IAAAK,EAAAP,EAAAQ,SAAAN,GAEA,IAAAK,EACA,UAAAzE,MAAA,mCAIA,OADAyE,EAAA3X,KAAAoX,EAAAS,cAAAF,EAAA3X,MACAoX,EAAAU,kBAAAH,GAGA,IAAAI,EAAAX,EAAAQ,SAAAL,GAEA,IAAAQ,EACA,UAAA7E,MAAA,uCAGA,GAAA6E,EAAAC,OAGA,OAAAR,EAAAE,iBAIAK,EAAA/X,KAAAoX,EAAAS,cAAAE,EAAA/X,MACAoX,EAAAU,kBAAAC,IAJAR,EAOA,IAAAU,EAAAb,EAAAQ,SAAAN,GAEA,IAAAW,EACA,UAAA/E,MAAA,mCAGA,IAAA+E,EAAAC,QAAAD,EAAAjY,MAAA,MAAAiY,EAAAjY,KAAA,IAGA,IAAAmY,EAAAlB,EAAAmB,KAAAH,EAAAjY,MACAiY,EAAAC,OAAAC,EAAA,GACAF,EAAAjY,KAAAmY,EAAA,GAGAF,EAAAC,SAAAD,EAAAjY,OACAiY,EAAAjY,KAAA,KAGA,IAAAqY,EAAA,CAGAL,OAAAC,EAAAD,OACAE,OAAAH,EAAAG,OACAlY,KAAA,KACA+S,OAAAgF,EAAAhF,OACAuF,MAAAP,EAAAO,MACArX,SAAA8W,EAAA9W,UAGA,IAAA8W,EAAAG,SAIAG,EAAAH,OAAAD,EAAAC,OAGA,MAAAH,EAAA/X,KAAA,IACA,GAAA+X,EAAA/X,KAgBa,CAKb,IAAAuY,EAAAN,EAAAjY,KACAwY,EAAAD,EAAAE,UAAA,EAAAF,EAAAG,YAAA,QAAAX,EAAA/X,KACAqY,EAAArY,KAAAoX,EAAAS,cAAAW,QApBAH,EAAArY,KAAAiY,EAAAjY,KAIA+X,EAAAhF,SACAsF,EAAAtF,OAAAkF,EAAAlF,OAIAgF,EAAAO,QACAD,EAAAC,MAAAL,EAAAK,QAmBA,OAJA,OAAAD,EAAArY,OACAqY,EAAArY,KAAAwX,EAAAE,gBAAAN,EAAAS,cAAAE,EAAA/X,MAAA+X,EAAA/X,MAGAoX,EAAAU,kBAAAO,IAEAT,SAAA,SAAA7C,GACA,IAAA4D,EAAA3B,EAAAoB,KAAArD,GAEA,OAAA4D,EAIA,CACAX,OAAAW,EAAA,OACAT,OAAAS,EAAA,OACA3Y,KAAA2Y,EAAA,OACA5F,OAAA4F,EAAA,OACAL,MAAAK,EAAA,OACA1X,SAAA0X,EAAA,QATA,MAYAd,cAAA,SAAA7X,GAgBA,IATAA,IAAA4Y,MAAA,IAAAC,UAAAC,KAAA,IAAAlT,QAAAsR,EAAA,IASAlX,EAAAnB,UAAAmB,IAAA4F,QAAAuR,EAAA,KAAAtY,SAGA,OAAAmB,EAAA4Y,MAAA,IAAAC,UAAAC,KAAA,KAEAhB,kBAAA,SAAAa,GACA,OAAAA,EAAAX,OAAAW,EAAAT,OAAAS,EAAA3Y,KAAA2Y,EAAA5F,OAAA4F,EAAAL,MAAAK,EAAA1X,WAKA3D,EAAAC,QAAA6Z,EAzKA,GAPGmH,CAFHjhB,EAAA,CACAC,QAAA,IACGD,EAAAC,SAAAD,EAAAC,SAsLHihB,EAAA,SAAAvC,EAAAwC,GAEA,kBAAApY,KAAAoY,GACAA,GAIA,QAAApY,KAAA4V,KACAA,EAAAqC,EAAAjH,iBAA0C4B,EAAAtR,EAAQ+W,SAAAC,KAAA1C,IAGlDqC,EAAAjH,iBAAA4E,EAAAwC,KA4BAG,EAAA,SAAA5D,GACA,IAAA6D,EAAA7D,EAAAiB,QACAA,OAAA,IAAA4C,EAAA,GAAAA,EACAC,EAAA9D,EAAAvB,OACAA,OAAA,IAAAqF,EAAA,GAAAA,EACAC,EAAA/D,EAAAgE,MACAA,OAAA,IAAAD,EAAA,GAAAA,EACAhhB,EAAA,CACA8U,IAAA4G,EACAiC,YAAA8C,EAAAvC,GAAA,GAAAxC,IAGA,GAAAuF,EAAA,CACA,IAAAC,EAAAD,EAAApG,MAAA,KACAsG,EAAAC,SAAAF,EAAA,OACAG,EAAAD,SAAAF,EAAA,OACAlhB,EAAAshB,UAAA,CACAxgB,OAAAugB,EAAAF,EACAxR,OAAAwR,GAIA,OAAAnhB,GAmBAuhB,EAAA,SAAA9E,EAAA+E,EAAAvU,GACA,IAAAwU,EAAAhF,EAAAgF,IACAC,EAAAjF,EAAAiF,aACAC,EAAAlF,EAAAkF,sBACAC,EAAAnF,EAAA5a,UACAA,OAAA,IAAA+f,EAAA,EAAAA,EACAC,EAAApF,EAAA3I,MACAA,OAAA,IAAA+N,EAAA,EAAAA,EACAC,EAAArF,EAAAwC,oBAKA8C,GAHAN,EAAAC,GAAA,UADA,IAAAI,EAAA,EAAAA,IAEAH,EAAA7N,GAGA,OAAApQ,KAAAse,MAAAD,EAAAlgB,EAAA2f,GAAAvU,IAiBAgV,EAAA,SAAAxF,EAAAyF,GAgBA,IAfA,IAAAC,EAAA1F,EAAAtc,KACAA,OAAA,IAAAgiB,EAAA,SAAAA,EACAC,EAAA3F,EAAAwC,oBACAA,OAAA,IAAAmD,EAAA,EAAAA,EACAC,EAAA5F,EAAA6F,MACAA,OAAA,IAAAD,EAAA,GAAAA,EACAlE,EAAA1B,EAAA0B,eACAoE,EAAA9F,EAAA5a,UACAA,OAAA,IAAA0gB,EAAA,EAAAA,EACAC,EAAA/F,EAAAgG,YACAA,OAAA,IAAAD,EAAA,EAAAA,EACA/E,EAAAhB,EAAAiB,YACAf,EAAA,GACA6E,GAAA,EAEAkB,EAAA,EAAsBA,EAAAR,EAAAphB,OAAiC4hB,IAAA,CACvD,IAAAC,EAAAT,EAAAQ,GACAzV,EAAA0V,EAAA1d,EACA2d,EAAAD,EAAAE,GAAA,EACAC,EAAAH,EAAAI,GAAA,EAEAvB,EAAA,IAEAA,EAAAsB,GAGAA,KAAAtB,IAqBAA,EAAAsB,GAGA,IAAAE,OAAA,EAEA,GAAAJ,EAAA,GACA,IAAAK,EAAAP,EAAA,EAKAM,EAHAC,IAAAf,EAAAphB,OAEA,YAAAX,GAAA8e,EAAA,GAAAqD,EAAA9hB,QAAA,cACA+gB,EAAA9E,EAAA+E,EAAAvU,IAGAkR,EAAAtc,EAAA2f,GAAAvU,GAGAiV,EAAAe,GAAAF,EAAAvB,GAAAvU,OAGA+V,EAAAJ,EAAA,EAMA,IAHA,IAAAzgB,EAAAsgB,EAAA9F,EAAA7b,OAAAkiB,EACAlF,EAAA2E,EAAA9F,EAAA7b,OAEAgd,EAAA3b,GACAwa,EAAAzb,KAAA,CACA4c,SACA7Q,WAAApL,EACA2f,OACA/D,aAEA+D,GAAAvU,EACA6Q,IAIA,OAAAnB,GAQAuG,EAAA,CASAC,OAAA,SAAA1G,GACA,IAAAxP,EAAAwP,EAAAxP,SACA2U,EAAAnF,EAAA5a,UACAA,OAAA,IAAA+f,EAAA,EAAAA,EACAzD,EAAA1B,EAAA0B,eACA,OACArK,MAAA,EACA3R,IAAAuB,KAAAse,KAAA7D,GAAAlR,EAAApL,MAYAuhB,QAAA,SAAA3G,GACA,IAAAgF,EAAAhF,EAAAgF,IACAC,EAAAjF,EAAAiF,aACAC,EAAAlF,EAAAkF,sBACAY,EAAA9F,EAAA5a,UACAA,OAAA,IAAA0gB,EAAA,EAAAA,EACAtV,EAAAwP,EAAAxP,SACA4U,EAAApF,EAAA3I,MACAA,OAAA,IAAA+N,EAAA,EAAAA,EACAC,EAAArF,EAAAwC,oBACAA,OAAA,IAAA6C,EAAA,EAAAA,EACAuB,EAAA5G,EAAA6G,qBACAA,OAAA,IAAAD,EAAAzf,IAAAyf,EACAE,GAAA9B,EAAAC,GAAA,IACA8B,EAAA7B,EAAA7N,EAEAiO,EADAwB,EAAAtE,EACAuE,EACAC,EAAA/f,KAAAse,KAAAD,EAAAlgB,EAAAoL,GACAyW,EAAAhgB,KAAAigB,OAAAJ,EAAAC,EAAAF,GAAAzhB,EAAAoL,GACA2W,EAAAlgB,KAAAigB,OAAAJ,EAAAC,GAAA3hB,EAAAoL,GACA,OACA6G,MAAApQ,KAAAmgB,IAAA,EAAAH,GACAvhB,IAAAuB,KAAAG,IAAA4f,EAAAG,MAwDAE,EAAA,SAAArH,GACA,IAAA0F,EAAA1F,EAAAtc,KACAA,OAAA,IAAAgiB,EAAA,SAAAA,EACAlV,EAAAwP,EAAAxP,SACA8W,EAAAtH,EAAA5a,UACAA,OAAA,IAAAkiB,EAAA,EAAAA,EACA5F,EAAA1B,EAAA0B,eAEA6F,EAAAd,EAAA/iB,GAAAsc,GAIAE,EA3wBA,SAAA7I,EAAA3R,GAGA,IAFA,IAAAM,EAAA,GAEA5B,EAAAiT,EAAqBjT,EAAAsB,EAAStB,IAC9B4B,EAAAvB,KAAAL,GAGA,OAAA4B,EAowBAwe,CAHA+C,EAAAlQ,MACAkQ,EAAA7hB,KAEAkB,IAxCA,SAAAoZ,GACA,gBAAAqB,EAAAvd,GACA,IAAA0M,EAAAwP,EAAAxP,SACAgX,EAAAxH,EAAA5a,UACAA,OAAA,IAAAoiB,EAAA,EAAAA,EACAvG,EAAAjB,EAAAiB,YACA8E,EAAA/F,EAAAgG,YAEA,OACA3E,aAFA,IAAA0E,EAAA,EAAAA,GAEA1E,EACA7Q,WAAApL,EACA4b,SAAAC,EACA8D,KAAAjhB,EAAA0M,IA4BAiX,CAAAzH,IAEA,cAAAtc,EAAA,CACA,IAAAI,EAAAoc,EAAA7b,OAAA,EAEA6b,EAAApc,GAAA0M,SAAAkR,EAAAlR,EAAApL,EAAAtB,EAGA,OAAAoc,GAGAwH,EAAA,kCAyFAC,EAAA,SAAApN,EAAAqN,GACA,OAAArN,EAAAnP,QAAAsc,EApDA,SAAAE,GACA,gBAAAC,EAAAC,EAAAC,EAAA9F,GACA,UAAA4F,EAEA,UAGA,wBAAAD,EAAAE,GACA,OAAAD,EAGA,IAAAld,EAAA,GAAAid,EAAAE,GAEA,2BAAAA,EAEAnd,GAMAsX,EAHA8F,EAGApD,SAAA1C,EAAA,IAFA,EAKAtX,EAAAtG,QAAA4d,EACAtX,EAGA,OAAAoU,MAAAkD,EAAAtX,EAAAtG,OAAA,GAAAia,KAAA,KAAA3T,IAwBAqd,CAAAJ,KAiDAK,EAAA,SAAAjI,EAAAyF,GACA,IAAAyC,EAAA,CACAC,iBAAAnI,EAAAzZ,GACA6hB,UAAApI,EAAAY,WAAA,GAEAyH,EAAArI,EAAAsI,eACAA,OAAA,IAAAD,EAAA,CACAE,UAAA,GACA/D,MAAA,IACG6D,EACHG,EAAApE,EAAA,CACA3C,QAAAzB,EAAAyB,QACAxC,OAAA0I,EAAAW,EAAAC,UAAAL,GACA1D,MAAA8D,EAAA9D,QAGA,OAhDA,SAAAxE,EAAAyF,GACA,OAAAzF,EAAAxP,UAAAiV,EAWAzF,EAAAxP,SACA6W,EAAArH,GAGAwF,EAAAxF,EAAAyF,GAZA,EACApE,OAAArB,EAAAgG,aAAA,EACAxV,SAAAwP,EAAA0B,eACAqD,KAAA,EACA/D,SAAAhB,EAAAiB,cAuCAwH,CAAAzI,EAAAyF,GACA7e,IAAA,SAAA8hB,GACAR,EAAAS,OAAAD,EAAArH,OACA6G,EAAAU,KAAAF,EAAA3D,KACA,IAAA1M,EAAAsP,EAAA3H,EAAA6F,OAAA,GAAAqC,GACA,OACA7P,MACA2I,SAAA0H,EAAA1H,SACAxQ,SAAAkY,EAAAlY,SACA0Q,YAAA8C,EAAAhE,EAAAyB,SAAA,GAAApJ,GACAzR,IAAA4hB,EACAnH,OAAAqH,EAAArH,WAKAwH,EACA,2BADAA,EAEA,sBAFAA,EAGA,mBAHAA,EAIA,cAJAA,EAMA,2BANAA,EAOA,gCA8CAC,EAAA,SAAA9I,EAAAyF,GACA,IAAAjV,EAAAwP,EAAAxP,SACAuY,EAAA/I,EAAAgJ,YACAA,OAAA,IAAAD,EAAA,GAAAA,EAGA,IAAAvY,IAAAiV,GAAAjV,GAAAiV,EACA,UAAA/M,MAAAmQ,GAGA,IAGAI,EAHAC,EAAAF,EAAApiB,IAAA,SAAAuiB,GACA,OA3CA,SAAAnJ,EAAAoJ,GACA,IAAA3H,EAAAzB,EAAAyB,QACA4G,EAAArI,EAAAsI,eACAA,OAAA,IAAAD,EAAA,GAA4DA,EAC5DpV,EAAAmR,EAAA,CACA3C,UACAxC,OAAAqJ,EAAAC,UACA/D,MAAA8D,EAAA9D,QAEAkE,EAAAtE,EAAA,CACA3C,UACAxC,OAAAmK,EAAAvD,MACArB,MAAA4E,EAAAC,aAGA,OADAX,EAAA9hB,IAAAqM,EACAyV,EA4BAY,CAAAtJ,EAAAmJ,KA0BA,OAtBA3Y,IACAyY,EAAA5B,EAAArH,IAGAyF,IACAwD,EAAAzD,EAAAxF,EAAAyF,IAGAwD,EAAAriB,IAAA,SAAAyf,EAAAviB,GACA,GAAAolB,EAAAplB,GAAA,CACA,IAAA4kB,EAAAQ,EAAAplB,GAIA,OAHA4kB,EAAA1H,SAAAqF,EAAArF,SACA0H,EAAAlY,SAAA6V,EAAA7V,SACAkY,EAAArH,OAAAgF,EAAAhF,OACAqH,KAKGhG,OAAA,SAAAgG,GACH,OAAAA,KAgBAa,EAAA,SAAAvJ,GACA,IAAAyB,EAAAzB,EAAAyB,QACA4G,EAAArI,EAAAsI,eACAA,OAAA,IAAAD,EAAA,GAA4DA,EAC5D3G,EAAA1B,EAAA0B,eACAyD,EAAAnF,EAAA5a,UACAA,OAAA,IAAA+f,EAAA,EAAAA,EACAqE,EAAAxJ,EAAAyJ,WACAA,OAAA,IAAAD,EAAA,GAAAA,EACAhZ,EAAAwP,EAAAxP,SAEA,IAAAiR,EACA,UAAA/I,MAAAmQ,GAGA,IAAA5V,EAAAmR,EAAA,CACA3C,UACAxC,OAAAqJ,EAAAC,UACA/D,MAAA8D,EAAA9D,QAEAkE,EAAAtE,EAAA,CACA3C,UACAxC,OAAAwC,EACA+C,MAAAiF,IAKA,GAHAf,EAAA9hB,IAAAqM,EAGAzC,EAAA,CACA,IAAAyY,EAAA5B,EAAArH,GAEAiJ,EAAA5kB,SACAqkB,EAAAlY,SAAAyY,EAAA,GAAAzY,SACAkY,EAAA1H,SAAAiI,EAAA,GAAAjI,eAEGU,IACHgH,EAAAlY,SAAAkR,EAAAtc,EACAsjB,EAAA1H,SAAA,GAKA,OADA0H,EAAArH,OAAA,EACA,CAAAqH,IAGAgB,EAAA,SAAAlJ,GACA,IAEAmJ,EACAC,EAHA5J,EAAAQ,EAAAR,WACA6J,EAAArJ,EAAAqJ,YAeA,GAXAA,EAAAC,UACAF,EAAA3B,EACA0B,EAAA/K,EAAAoB,EAAA6J,EAAAC,WACGD,EAAAE,MACHH,EAAAL,EACAI,EAAA/K,EAAAoB,EAAA6J,EAAAE,OACGF,EAAApK,OACHmK,EAAAd,EACAa,EAAA/K,EAAAoB,EAAA6J,EAAApK,QAGAmK,EACA,OACA5J,cAIA,IAAAE,EAAA0J,EAAAD,EAAAE,EAAA7I,UAIA,GAAA2I,EAAAnZ,SAAA,CACA,IAAAwZ,EAAAL,EACAnZ,EAAAwZ,EAAAxZ,SACAyZ,EAAAD,EAAA5kB,UACAA,OAAA,IAAA6kB,EAAA,EAAAA,EACAN,EAAAnZ,WAAApL,OACG8a,EAAA7b,OAGHslB,EAAAnZ,SAAA0P,EAAA/Z,OAAA,SAAAihB,EAAAsB,GACA,OAAAzhB,KAAAmgB,MAAAngB,KAAAse,KAAAmD,EAAAlY,YACK,GAELmZ,EAAAnZ,SAAA,EAGA,OACAwP,WAAA2J,EACAzJ,aAQAgK,EAAA,SAAAC,EAAApK,GACA,OAAAP,EAAA2K,EAAAC,YAAA1H,OAAA,SAAAlC,GAEA,OADAA,EAAA6J,UACAtK,KAIAuK,EAAA,SAAAH,GACA,OAAAA,EAAAI,YAAAtN,QAGAuN,EAAA,SAAAC,GACA,IAOA5C,EADA,+EACAjK,KAAA6M,GAEA,IAAA5C,EACA,SAGA,IAAA6C,EAAA7C,EAAA7jB,MAAA,GACA2mB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GAEA,OArBA,QAqBAO,WAAAN,GAAA,GApBA,OAoBAM,WAAAL,GAAA,GAnBA,MAmBAK,WAAAJ,GAAA,GAlBA,KAkBAI,WAAAH,GAAA,GAjBA,GAiBAG,WAAAF,GAAA,GAAAE,WAAAD,GAAA,IAgBAE,EAAA,CAUAC,0BAAA,SAAAxgB,GACA,OAAA6f,EAAA7f,IAaAua,sBAAA,SAAAva,GACA,MAnCA,oCAGAkB,KANA4e,EAsCA9f,KA/BA8f,GAAA,KAGAW,KAAA1R,MAAA+Q,GA4BA,IAtCA,IAAAA,GAkDAjI,oBAAA,SAAA7X,GACA,OAAA6f,EAAA7f,IAYAkc,qBAAA,SAAAlc,GACA,OAAA6f,EAAA7f,IAYA0M,MAAA,SAAA1M,GACA,OAAA6f,EAAA7f,IAWAsX,MAAA,SAAAtX,GACA,OAAAga,SAAAha,EAAA,KAWAuX,OAAA,SAAAvX,GACA,OAAAga,SAAAha,EAAA,KAWAiW,UAAA,SAAAjW,GACA,OAAAga,SAAAha,EAAA,KAWAqb,YAAA,SAAArb,GACA,OAAAga,SAAAha,EAAA,KAWAvF,UAAA,SAAAuF,GACA,OAAAga,SAAAha,EAAA,KAeA6F,SAAA,SAAA7F,GACA,IAAA0gB,EAAA1G,SAAAha,EAAA,IAEA,OAAA2gB,MAAAD,GACAb,EAAA7f,GAGA0gB,GAWA7iB,EAAA,SAAAmC,GACA,OAAAga,SAAAha,EAAA,KAYA2b,EAAA,SAAA3b,GACA,OAAAga,SAAAha,EAAA,KAYAyb,EAAA,SAAAzb,GACA,OAAAga,SAAAha,EAAA,KAYA4gB,QAAA,SAAA5gB,GACA,OAAAA,IAaA6gB,EAAA,SAAAC,GACA,OAAAA,KAAAzL,WAIAR,EAAAiM,EAAAzL,YAAA7Z,OAAA,SAAAgH,EAAAlC,GACA,IAAAygB,EAAAR,EAAAjgB,EAAA8U,OAAAmL,EAAAK,QAEA,OADApe,EAAAlC,EAAA8U,MAAA2L,EAAAzgB,EAAAN,OACAwC,GACG,IAPH,IAqBA,IAAAwe,EAAA,CACAC,gDAAA,kBACAC,gDAAA,qBACAC,gDAAA,0BACAC,gDAAA,uBAaAC,EAAA,SAAAC,EAAAC,GACA,OAAAA,EAAA7nB,OAIA+a,EAAA6M,EAAArlB,IAAA,SAAAulB,GACA,OAAAD,EAAAtlB,IAAA,SAAAwlB,GACA,OAAApI,EAAAmI,EAAA7B,EAAA8B,SALAH,GAiCAI,EAAA,SAAAC,GACA,IAAAC,EAAArC,EAAAoC,EAAA,sBACAE,EAAAtC,EAAAoC,EAAA,kBACAtD,EAAAwD,GAAAtC,EAAAsC,EAAA,cAAA5lB,IAAA,SAAAuE,GACA,OAAAyT,EAAA,CACA6N,IAAA,cACKjB,EAAArgB,MAELuhB,EAAAxC,EAAAoC,EAAA,kBACAK,EAAAH,GAAAD,EACA9G,EAAAkH,GAAAzC,EAAAyC,EAAA,sBACAC,EAAAJ,GAAAE,GAAAH,EACAM,EAAAD,GAAA1C,EAAA0C,EAAA,qBAMA9C,EAAAyC,GAAAf,EAAAe,GAEAzC,GAAA+C,EACA/C,EAAAxB,eAAAuE,GAAArB,EAAAqB,GACG/C,KAAAxB,iBAIHwB,EAAAxB,eAAA,CACAC,UAAAuB,EAAAxB,iBAIA,IAAAuB,EAAA,CACAC,WACA9I,SAAAyE,GAAAyE,EAAAzE,EAAA,KAAA7e,IAAA,SAAAuE,GACA,OAAAqgB,EAAArgB,KAEAsU,KAAA+M,GAAA5N,EAAA4M,EAAAgB,GAAA,CACAxD,cACAV,eAAAkD,EAAAqB,KAEA9C,KAAA2C,GAAA9N,EAAA4M,EAAAkB,GAAA,CACApE,eAAAkD,EAAAqB,MAQA,OALA5jB,OAAAiW,KAAA2K,GAAAriB,QAAA,SAAA2B,GACA0gB,EAAA1gB,WACA0gB,EAAA1gB,KAGA0gB,GAkEAiD,EAAA,SAAAC,GACA,OAAAA,EAAA5mB,OAAA,SAAAyZ,EAAAoN,GACA,IAAAhN,EAAAwL,EAAAwB,GACAC,EAAAtB,EAAA3L,EAAAkN,aAEA,GAAAD,EAAA,CACArN,EAAAqN,GAAA,CACAjN,cAEA,IAAAmN,EAAAjD,EAAA8C,EAAA,gBAEA,GAAAG,EAAA,CACA,IAAAC,EAAA9C,EAAA6C,GACAE,EAAAD,GA/LA,SAAAE,GAIA,IAHA,IAAAC,EAAsB9O,EAAAtR,EAAQqgB,KAAAF,GAC9BlR,EAAA,IAAApN,WAAAue,EAAAlpB,QAEAD,EAAA,EAAiBA,EAAAmpB,EAAAlpB,OAA0BD,IAC3CgY,EAAAhY,GAAAmpB,EAAAjX,WAAAlS,GAGA,OAAAgY,EAuLAqR,CAAAL,GACAxN,EAAAqN,GAAAG,KAAAC,GAIA,OAAAzN,GACG,KA4BH8N,EAAA,SAAAC,EAAAC,EAAAC,GACA,gBAAAvB,GACA,IAAAwB,EAAAtC,EAAAc,GACAyB,EAAA/B,EAAA4B,EAAA1D,EAAAoC,EAAA,YACA/I,EAAA2G,EAAAoC,EAAA,WACA0B,EAAA,CACAzK,KAAAiI,EAAAjI,IAEA0K,EAAArP,EAAA+O,EAAAG,EAAAE,GACA7N,EAAA2M,EAAA5C,EAAAoC,EAAA,sBAEArjB,OAAAiW,KAAAiB,GAAA9b,SACA4pB,EAAArP,EAAAqP,EAAA,CACA9N,uBAIA,IAAA0J,EAAAwC,EAAAC,GACA4B,EAAAhE,EAAAoC,EAAA,kBACA6B,EAAAvP,EAAAiP,EAAAhE,GACA,OAAAzK,EAAA8O,EAAAtnB,IA9FA,SAAAknB,EAAAC,EAAAI,GACA,gBAAAC,GACA,IAAAC,EAAAnE,EAAAkE,EAAA,WACAE,EAAAtC,EAAA+B,EAAAM,GACArO,EAAApB,EAAAkP,EAAAtC,EAAA4C,IACAG,EAAAlC,EAAA+B,GACA,OAAAE,EAAA1nB,IAAA,SAAA6a,GACA,OACAoI,YAAAjL,EAAAuP,EAAAI,GACAvO,WAAApB,EAAAoB,EAAA,CACAyB,gBAoFA+M,CAAAP,EAAAF,EAAAI,OAgEAM,EAAA,SAAAC,EAAAphB,QACA,IAAAA,IACAA,EAAA,IAGA,IAAAqhB,EAAArhB,EACAshB,EAAAD,EAAAE,YACAA,OAAA,IAAAD,EAAA,GAAAA,EACAE,EAAAH,EAAA3J,IACAA,OAAA,IAAA8J,EAAA1D,KAAAtE,MAAAgI,EACAC,EAAAJ,EAAA1J,aACAA,OAAA,IAAA8J,EAAA,EAAAA,EACAC,EAAA9E,EAAAwE,EAAA,UAEA,IAAAM,EAAA3qB,OACA,UAAAqU,MAAAmQ,GAGA,IAAAoG,EAAAzD,EAAAkD,GACAQ,EAAAlD,EAAA,CAAA6C,GAAA3E,EAAAwE,EAAA,YAIA,OAHAO,EAAAvN,eAAAuN,EAAA9D,2BAAA,EACA8D,EAAAjK,MACAiK,EAAAhK,eACA7F,EAAA4P,EAAApoB,IAzDA,SAAAqoB,EAAAC,GACA,gBAAAC,EAAArrB,GACA,IAAA8pB,EAAA5B,EAAAkD,EAAAhF,EAAAiF,EAAA,YACAC,EAAA5D,EAAA2D,GACAE,EAAA1K,SAAAyK,EAAA7oB,GAAA,IAEA0a,EAAsBxC,EAAAtR,EAAQme,MAAA+D,GAAAvrB,EAAAurB,EAC9B1B,EAAA/O,EAAAqQ,EAAA,CACAhO,gBAEAqO,EAAApF,EAAAiF,EAAA,iBACAtB,EAAAxB,EAAA8C,GACA,OAAA/P,EAAAkQ,EAAA1oB,IAAA8mB,EAAAC,EAAAC,EAAAC,MA6CA0B,CAAAN,EAAAC,MAGAM,EAAA,SAAAC,GACA,QAAAA,EACA,UAAA/W,MAAAmQ,GAGA,IACA6G,GADA,IAAmBjR,EAAAtR,EAAQwiB,WAC3BC,gBAAAH,EAAA,mBACAf,EAAAgB,GAAA,QAAAA,EAAArW,gBAAAgR,QAAAqF,EAAArW,gBAAA,KAEA,IAAAqV,QAAAmB,qBAAA,eAAAxrB,OAAA,EACA,UAAAqU,MAAAmQ,GAGA,OAAA6F,GAoDAhV,EAAA,SAAA+V,EAAAniB,GACA,OAAA6U,EAAAsM,EAAAe,EAAAC,GAAAniB,GAnqBA1G,IAAA8iB,KA+qBAnL,EAAA,SAAAkR,GACA,OAtDA,SAAAf,GACA,IAAAoB,EAAA5F,EAAAwE,EAAA,gBAEA,IAAAoB,EACA,YAGA,IAAA9P,EAAAwL,EAAAsE,GAEA,OAAA9P,EAAAkN,aACA,uCACA,uCACAlN,EAAA3F,OAAA,OACA,MAEA,yCACA,sCACA,yCACA,sCACA2F,EAAA3F,OAAA,MACA,MAEA,oCACA,oCACA2F,EAAA3F,OAAA,SACA2F,EAAArV,MAAAygB,KAAA1R,MAAAsG,EAAArV,OACA,MAEA,sCACA,iCACA,kCACA,QACA,UAAA+N,MAAAmQ,GAGA,OAAA7I,EAmBA+P,CAAAP,EAAAC,+JCx1DAO,EAAA,SAAA3nB,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIA0nB,EAAAhnB,OAAAinB,QAAA,SAAAvnB,GACA,QAAAvE,EAAA,EAAiBA,EAAAG,UAAAF,OAAsBD,IAAA,CACvC,IAAA6a,EAAA1a,UAAAH,GAEA,QAAA+E,KAAA8V,EACAhW,OAAArE,UAAAoX,eAAAxX,KAAAya,EAAA9V,KACAR,EAAAQ,GAAA8V,EAAA9V,IAKA,OAAAR,GAGAwnB,EAAA,SAAA3lB,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAlC,UAAA,kEAAAkC,GAGAD,EAAA5F,UAAAqE,OAAAyB,OAAAD,KAAA7F,UAAA,CACAoF,YAAA,CACAW,MAAAH,EACA1B,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA0B,IAAAxB,OAAAQ,eAAAR,OAAAQ,eAAAe,EAAAC,GAAAD,EAAAb,UAAAc,IAGA2lB,EAAA,SAAAvtB,EAAA2B,GACA,IAAA3B,EACA,UAAAsH,eAAA,6DAGA,OAAA3F,GAAA,kBAAAA,GAAA,oBAAAA,EAAA3B,EAAA2B,GAaAnB,EAAA,WACA,SAAAA,IACA2sB,EAAA1sB,KAAAD,GACAC,KAAAE,UAAA,GAkGA,OAvFAH,EAAAuB,UAAAnB,GAAA,SAAAC,EAAAC,GACAL,KAAAE,UAAAE,KACAJ,KAAAE,UAAAE,GAAA,IAGAJ,KAAAE,UAAAE,GAAAe,KAAAd,IAYAN,EAAAuB,UAAAf,IAAA,SAAAH,EAAAC,GACA,IAAAL,KAAAE,UAAAE,GACA,SAGA,IAAAI,EAAAR,KAAAE,UAAAE,GAAAK,QAAAJ,GAEA,OADAL,KAAAE,UAAAE,GAAAO,OAAAH,EAAA,GACAA,GAAA,GAUAT,EAAAuB,UAAAV,QAAA,SAAAR,GACA,IAAAS,EAAAb,KAAAE,UAAAE,GACAU,OAAA,EACAC,OAAA,EACAC,OAAA,EAEA,GAAAH,EAQA,OAAAI,UAAAF,OAGA,IAFAA,EAAAF,EAAAE,OAEAD,EAAA,EAAiBA,EAAAC,IAAYD,EAC7BD,EAAAC,GAAAI,KAAAlB,KAAAiB,UAAA,SAMA,IAHAD,EAAAya,MAAAna,UAAAZ,MAAAQ,KAAAD,UAAA,GACAF,EAAAF,EAAAE,OAEAD,EAAA,EAAiBA,EAAAC,IAAYD,EAC7BD,EAAAC,GAAAM,MAAApB,KAAAgB,IASAjB,EAAAuB,UAAAD,QAAA,WACArB,KAAAE,UAAA,IAYAH,EAAAuB,UAAAC,KAAA,SAAAC,GACAxB,KAAAG,GAAA,gBAAAsB,GACAD,EAAAL,KAAAM,MAIA1B,EArGA,GAoHAgtB,EAAA,SAAAC,GAGA,SAAAD,IACAL,EAAA1sB,KAAA+sB,GAEA,IAAAE,EAAAH,EAAA9sB,KAAAgtB,EAAA9rB,KAAAlB,OAGA,OADAitB,EAAAxqB,OAAA,GACAwqB,EAoBA,OA5BAJ,EAAAE,EAAAC,GAiBAD,EAAAzrB,UAAAH,KAAA,SAAAM,GACA,IAAAyrB,OAAA,EAIA,IAHAltB,KAAAyC,QAAAhB,EACAyrB,EAAAltB,KAAAyC,OAAAhC,QAAA,MAEUysB,GAAA,EAAkBA,EAAAltB,KAAAyC,OAAAhC,QAAA,MAC5BT,KAAAY,QAAA,OAAAZ,KAAAyC,OAAAkY,UAAA,EAAAuS,IACAltB,KAAAyC,OAAAzC,KAAAyC,OAAAkY,UAAAuS,EAAA,IAIAH,EA7BA,CA8BChtB,GA2BDmoB,EAAA,SAAAxL,GAOA,IALA,IAAAiO,EAAAjO,EAAA5B,MAXA,IAAAqS,OAAA,yCAYAzqB,EAAA,GACA5B,EAAA6pB,EAAA5pB,OACAqsB,OAAA,EAEAtsB,KAEA,KAAA6pB,EAAA7pB,MAKAssB,EAAA,eAAA9S,KAAAqQ,EAAA7pB,IAAAJ,MAAA,IAEA,GAAA0sB,EAAA,GAAAtlB,QAAA,iBACAslB,EAAA,GAAAA,EAAA,GAAAtlB,QAAA,iBACAslB,EAAA,GAAAA,EAAA,GAAAtlB,QAAA,wBACApF,EAAA0qB,EAAA,IAAAA,EAAA,IAGA,OAAA1qB,GA4BA2qB,EAAA,SAAAL,GAGA,SAAAK,IACAX,EAAA1sB,KAAAqtB,GAEA,IAAAJ,EAAAH,EAAA9sB,KAAAgtB,EAAA9rB,KAAAlB,OAGA,OADAitB,EAAAK,cAAA,GACAL,EAseA,OA9eAJ,EAAAQ,EAAAL,GAiBAK,EAAA/rB,UAAAH,KAAA,SAAAosB,GACA,IAAAhJ,OAAA,EACA1U,OAAA,EAIA,QAFA0d,IAAAzlB,QAAA,kCAEA/G,OAMA,SAAAwsB,EAAA,IAQA,QAAAzsB,EAAA,EAAmBA,EAAAd,KAAAstB,cAAAvsB,OAA+BD,IAClD,GAAAd,KAAAstB,cAAAxsB,GAAAI,KAAAlB,KAAAutB,GACA,OAKA,OAAAA,EAAA9sB,QAAA,QAcA,GAJA8sB,IAAAzlB,QAAA,SAEAyc,EAAA,WAAAjK,KAAAiT,GAGAvtB,KAAAY,QAAA,QACAR,KAAA,MACAotB,QAAA,YAHA,CAUA,GAFAjJ,EAAA,gCAAAjK,KAAAiT,GAiBA,OAdA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,OAGAjJ,EAAA,KACA1U,EAAA3C,SAAAya,WAAApD,EAAA,KAGAA,EAAA,KACA1U,EAAA4d,MAAAlJ,EAAA,SAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,qCAAAjK,KAAAiT,GAaA,OAVA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,kBAGAjJ,EAAA,KACA1U,EAAA3C,SAAAmU,SAAAkD,EAAA,aAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,mCAAAjK,KAAAiT,GAaA,OAVA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,iBAGAjJ,EAAA,KACA1U,EAAA3C,SAAAmU,SAAAkD,EAAA,aAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,8BAAAjK,KAAAiT,GAaA,OAVA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,WAGAjJ,EAAA,KACA1U,EAAA7M,QAAAqe,SAAAkD,EAAA,aAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,wCAAAjK,KAAAiT,GAaA,OAVA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,kBAGAjJ,EAAA,KACA1U,EAAAkO,OAAAsD,SAAAkD,EAAA,aAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,gDAAAjK,KAAAiT,GAaA,OAVA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,0BAGAjJ,EAAA,KACA1U,EAAAkO,OAAAsD,SAAAkD,EAAA,aAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,gCAAAjK,KAAAiT,GAaA,OAVA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,iBAGAjJ,EAAA,KACA1U,EAAA6d,aAAAnJ,EAAA,SAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,4CAAAjK,KAAAiT,GAiBA,OAdA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,aAGAjJ,EAAA,KACA1U,EAAA9O,OAAAsgB,SAAAkD,EAAA,QAGAA,EAAA,KACA1U,EAAAD,OAAAyR,SAAAkD,EAAA,aAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,iCAAAjK,KAAAiT,GAaA,OAVA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,eAGAjJ,EAAA,KACA1U,EAAA8d,SAAA,KAAAplB,KAAAgc,EAAA,UAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,qBAAAjK,KAAAiT,GAEA,CAMA,GALA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,OAGAjJ,EAAA,IACA,IAAA7H,EAAAwL,EAAA3D,EAAA,IAMA,GAJA7H,EAAAkR,MACA/d,EAAAkF,IAAA2H,EAAAkR,KAGAlR,EAAAmR,UAAA,CACA,IAAAC,EAAApR,EAAAmR,UAAA/S,MAAA,KACA/Z,EAAA+sB,EAAA,GACAle,EAAAke,EAAA,GAEAje,EAAA0R,UAAA,GAEAxgB,IACA8O,EAAA0R,UAAAxgB,OAAAsgB,SAAAtgB,EAAA,KAGA6O,IACAC,EAAA0R,UAAA3R,OAAAyR,SAAAzR,EAAA,MAKA5P,KAAAY,QAAA,OAAAiP,QAMA,GAFA0U,EAAA,4BAAAjK,KAAAiT,GAEA,CAMA,GALA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,cAGAjJ,EAAA,IAGA,GAFA1U,EAAA6M,WAAAwL,EAAA3D,EAAA,IAEA1U,EAAA6M,WAAAgC,WAAA,CACA,IAAA5D,EAAAjL,EAAA6M,WAAAgC,WAAA5D,MAAA,KACAiT,EAAA,GAEAjT,EAAA,KACAiT,EAAApP,MAAA0C,SAAAvG,EAAA,QAGAA,EAAA,KACAiT,EAAAnP,OAAAyC,SAAAvG,EAAA,QAGAjL,EAAA6M,WAAAgC,WAAAqP,EAGAle,EAAA6M,WAAAW,YACAxN,EAAA6M,WAAAW,UAAAgE,SAAAxR,EAAA6M,WAAAW,UAAA,KAGAxN,EAAA6M,WAAA,gBACA7M,EAAA6M,WAAA,cAAA2E,SAAAxR,EAAA6M,WAAA,mBAIA1c,KAAAY,QAAA,OAAAiP,OAjCA,CAuCA,GAFA0U,EAAA,uBAAAjK,KAAAiT,GAaA,OAVA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,SAGAjJ,EAAA,KACA1U,EAAA6M,WAAAwL,EAAA3D,EAAA,UAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,kBAAAjK,KAAAiT,GAGAvtB,KAAAY,QAAA,QACAR,KAAA,MACAotB,QAAA,iBAOA,GAFAjJ,EAAA,wBAAAjK,KAAAiT,GAGAvtB,KAAAY,QAAA,QACAR,KAAA,MACAotB,QAAA,sBAHA,CAUA,GAFAjJ,EAAA,mCAAAjK,KAAAiT,GAcA,OAXA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,qBAGAjJ,EAAA,KACA1U,EAAAme,eAAAzJ,EAAA,GACA1U,EAAAoe,eAAA,IAAAnG,KAAAvD,EAAA,UAGAvkB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,qBAAAjK,KAAAiT,GA0BA,OAvBA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,OAGAjJ,EAAA,KACA1U,EAAA6M,WAAAwL,EAAA3D,EAAA,IAEA1U,EAAA6M,WAAAwR,KACA,OAAAre,EAAA6M,WAAAwR,GAAAvT,UAAA,KAAAwT,gBACAte,EAAA6M,WAAAwR,GAAAre,EAAA6M,WAAAwR,GAAAvT,UAAA,IAGA9K,EAAA6M,WAAAwR,GAAAre,EAAA6M,WAAAwR,GAAA3J,MAAA,SACA1U,EAAA6M,WAAAwR,GAAA,GAAA7M,SAAAxR,EAAA6M,WAAAwR,GAAA,OACAre,EAAA6M,WAAAwR,GAAA,GAAA7M,SAAAxR,EAAA6M,WAAAwR,GAAA,OACAre,EAAA6M,WAAAwR,GAAA,GAAA7M,SAAAxR,EAAA6M,WAAAwR,GAAA,OACAre,EAAA6M,WAAAwR,GAAA,GAAA7M,SAAAxR,EAAA6M,WAAAwR,GAAA,OACAre,EAAA6M,WAAAwR,GAAA,IAAAE,YAAAve,EAAA6M,WAAAwR,WAIAluB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,uBAAAjK,KAAAiT,GAeA,OAZA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,SAGAjJ,EAAA,KACA1U,EAAA6M,WAAAwL,EAAA3D,EAAA,IACA1U,EAAA6M,WAAA,eAAAiL,WAAA9X,EAAA6M,WAAA,gBACA7M,EAAA6M,WAAA2R,QAAA,MAAA9lB,KAAAsH,EAAA6M,WAAA2R,eAGAruB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,+BAAAjK,KAAAiT,GAeA,OAZA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,gBAGAjJ,EAAA,GACA1U,EAAApO,KAAA8iB,EAAA,GAEA1U,EAAApO,KAAA,QAGAzB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,0BAAAjK,KAAAiT,GAeA,OAZA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,WAGAjJ,EAAA,GACA1U,EAAApO,KAAA8iB,EAAA,GAEA1U,EAAApO,KAAA,QAGAzB,KAAAY,QAAA,OAAAiP,GAMA,GAFA0U,EAAA,yBAAAjK,KAAAiT,GAeA,OAZA1d,EAAA,CACAzP,KAAA,MACAotB,QAAA,UAGAjJ,EAAA,GACA1U,EAAApO,KAAA8iB,EAAA,GAEA1U,EAAApO,KAAA,QAGAzB,KAAAY,QAAA,OAAAiP,GAKA7P,KAAAY,QAAA,QACAR,KAAA,MACAqB,KAAA8rB,EAAA7sB,MAAA,YArZAV,KAAAY,QAAA,QACAR,KAAA,UACAmP,KAAAge,EAAA7sB,MAAA,UAjBAV,KAAAY,QAAA,QACAR,KAAA,MACA2U,IAAAwY,KAgbAF,EAAA/rB,UAAAgtB,UAAA,SAAApR,GACA,IAAAqR,EAAAvuB,KAEAwuB,EAAAtR,EAAAsR,WACAC,EAAAvR,EAAAuR,WACAC,EAAAxR,EAAAwR,WACAtJ,EAAAlI,EAAAkI,QAEA,oBAAAsJ,IACAA,EAAA,SAAAnB,GACA,OAAAA,IAIAvtB,KAAAstB,cAAAnsB,KAAA,SAAAosB,GAGA,GAFAiB,EAAAlU,KAAAiT,GAUA,OAPAgB,EAAA3tB,QAAA,QACAR,KAAA,SACAqB,KAAAitB,EAAAnB,GACAkB,aACArJ,aAGA,KAKAiI,EA/eA,CAgfCttB,GA4BD4uB,EAAA,SAAA3B,GAGA,SAAA2B,IACAjC,EAAA1sB,KAAA2uB,GAEA,IAAA1B,EAAAH,EAAA9sB,KAAAgtB,EAAA9rB,KAAAlB,OAEAitB,EAAA2B,WAAA,IAAA7B,EACAE,EAAArb,YAAA,IAAAyb,EAEAJ,EAAA2B,WAAArtB,KAAA0rB,EAAArb,aAIA,IAAArS,EAAA0tB,EAGA4B,EAAA,GACAC,EAAA,GAEAC,OAAA,EAEArT,OAAA,EAIAsT,EAAA,CACAxQ,MAAA,GACAuB,MAAA,GACAkP,kBAAA,GACAxQ,UAAA,IAGAyQ,EAAA,EAkUA,OAhUAjC,EAAAkC,SAAA,CACAtP,YAAA,EACA7C,oBAAA,GACAJ,SAAA,IAGAqQ,EAAArb,YAAAzR,GAAA,gBAAAivB,GACA,IAAAC,OAAA,EACAC,OAAA,GACA,CACAnG,IAAA,YAEA,CACAoG,cAAA,WACAvvB,KAAAmvB,SAAAtP,WAAAuP,EAAAzB,QAEA,YAAAyB,IACApvB,KAAAY,QAAA,QACA4uB,QAAA,iCAEAxvB,KAAAmvB,SAAAtP,YAAA,IAGA0B,UAAA,WACA,IAAAA,EAAA,GAEA,WAAA6N,IACAN,EAAAvN,YACAA,EAAAxgB,OAAAquB,EAAAruB,OAEA,WAAAquB,IACApvB,KAAAY,QAAA,QACA4uB,QAAA,8BAEAJ,EAAAxf,OAAA,IAIA,WAAAwf,IACAN,EAAAvN,YACAA,EAAA3R,OAAAwf,EAAAxf,SAGA6f,QAAA,WACAzvB,KAAAmvB,SAAA1R,SAAA,GAEAiS,IAAA,WACA,kBAAA1vB,KAAAmvB,WACAnvB,KAAAmvB,SAAArR,cAAA,EACA9d,KAAAY,QAAA,QACA4uB,QAAA,uCAIA,0BAAAxvB,KAAAmvB,WACAnvB,KAAAmvB,SAAAQ,sBAAA,EACA3vB,KAAAY,QAAA,QACA4uB,QAAA,+CAIAJ,EAAAliB,SAAA,IACA4hB,EAAA5hB,SAAAkiB,EAAAliB,UAGA,IAAAkiB,EAAAliB,WACA4hB,EAAA5hB,SAAA,IACAlN,KAAAY,QAAA,QACA4uB,QAAA,qDAIAxvB,KAAAmvB,SAAAvS,SAAAiS,GAEAhpB,IAAA,WACAupB,EAAA1S,WAQA,SAAA0S,EAAA1S,WAAAkT,OAKAR,EAAA1S,WAAAkR,KAOAwB,EAAA1S,WAAAkT,QACA5vB,KAAAY,QAAA,QACA4uB,QAAA,qCAKA9T,EAAA,CACA3E,OAAAqY,EAAA1S,WAAAkT,QAAA,UACA7a,IAAAqa,EAAA1S,WAAAkR,KAGA,qBAAAwB,EAAA1S,WAAAwR,KACAxS,EAAAmU,GAAAT,EAAA1S,WAAAwR,KAnBAluB,KAAAY,QAAA,QACA4uB,QAAA,yCANA9T,EAAA,KARA1b,KAAAY,QAAA,QACA4uB,QAAA,qDAkCAM,iBAAA,WACA/rB,SAAAqrB,EAAArR,QAOA/d,KAAAmvB,SAAArR,cAAAsR,EAAArR,OANA/d,KAAAY,QAAA,QACA4uB,QAAA,oCAAAJ,EAAArR,UAOAgS,yBAAA,WACAhsB,SAAAqrB,EAAArR,SAOA/d,KAAAmvB,SAAAQ,sBAAAP,EAAArR,OACAmR,EAAAE,EAAArR,QAPA/d,KAAAY,QAAA,QACA4uB,QAAA,4CAAAJ,EAAArR,UAQAiS,gBAAA,WACA,YAAAznB,KAAA6mB,EAAA1B,cAOA1tB,KAAAmvB,SAAAzB,aAAA0B,EAAA1B,aANA1tB,KAAAY,QAAA,QACA4uB,QAAA,mCAAAJ,EAAA7S,YAOAjZ,IAAA,WACAyrB,EAAA,GAEAK,EAAAra,MACAga,EAAAha,IAAAqa,EAAAra,KAGAqa,EAAA7N,YACAwN,EAAAxN,UAAA6N,EAAA7N,YAGA0O,aAAA,WACAjwB,KAAAmvB,SAAA9S,UAAAwS,EACA7uB,KAAAmvB,SAAArP,YAAA9f,KAAAmvB,SAAArP,aAAAkP,EAEAI,EAAA1S,YAOAoS,EAAApS,aACAoS,EAAApS,WAAA,IAGAiQ,EAAAmC,EAAApS,WAAA0S,EAAA1S,aAVA1c,KAAAY,QAAA,QACA4uB,QAAA,0CAWAjN,MAAA,WAGA,GAFAviB,KAAAmvB,SAAArP,YAAA9f,KAAAmvB,SAAArP,aAAAkP,EAEAI,EAAA1S,YAAA0S,EAAA1S,WAAAwT,MAAAd,EAAA1S,WAAA,aAAA0S,EAAA1S,WAAAU,KAAA,CAQA,IAAA+S,EAAAnwB,KAAAmvB,SAAArP,YAAAsP,EAAA1S,WAAAwT,MACAC,EAAAf,EAAA1S,WAAA,aAAAyT,EAAAf,EAAA1S,WAAA,iBACA2S,EAAAc,EAAAf,EAAA1S,WAAA,cAEA4S,EAAA,CACAjP,QAAA,OAAA9X,KAAA6mB,EAAA1S,WAAAuL,WAGA,QACAqH,EAAAlP,YAAA,EAEAkP,EAAAlP,WAAA,OAAA7X,KAAA6mB,EAAA1S,WAAA0T,YAGAhB,EAAA1S,WAAA2T,WACAf,EAAApP,SAAAkP,EAAA1S,WAAA2T,UAGAjB,EAAA1S,WAAAkR,MACA0B,EAAAva,IAAAqa,EAAA1S,WAAAkR,KAGAwB,EAAA1S,WAAA,iBACA4S,EAAAgB,WAAAlB,EAAA1S,WAAA,gBAGA0S,EAAA1S,WAAA6T,kBACAjB,EAAAkB,gBAAApB,EAAA1S,WAAA6T,iBAGAnB,EAAA1S,WAAA+T,SACAnB,EAAAoB,OAAA,OAAAnoB,KAAA6mB,EAAA1S,WAAA+T,SAIApB,EAAAD,EAAA1S,WAAAU,MAAAkS,OA1CAtvB,KAAAY,QAAA,QACA4uB,QAAA,gDA2CAjd,cAAA,WACA2c,GAAA,EACAJ,EAAAvc,eAAA,EACAvS,KAAAmvB,SAAAnS,oBAAA7b,KAAA0tB,EAAA9tB,SAEA4vB,oBAAA,WACA,qBAAA3wB,KAAAmvB,SAAAnB,iBAKAhuB,KAAAmvB,SAAAnB,eAAAoB,EAAApB,eACAhuB,KAAAmvB,SAAAlB,eAAAmB,EAAAnB,gBAGAa,EAAAd,eAAAoB,EAAApB,eACAc,EAAAb,eAAAmB,EAAAnB,gBAEA2C,eAAA,YACA7sB,SAAAqrB,EAAAliB,WAAAkiB,EAAAliB,SAAA,EACAlN,KAAAY,QAAA,QACA4uB,QAAA,qCAAAJ,EAAAliB,WAKAlN,KAAAmvB,SAAAtR,eAAAuR,EAAAliB,UAEA2jB,cAAA,YACA9sB,SAAAqrB,EAAAliB,WAAAkiB,EAAAliB,SAAA,EACAlN,KAAAY,QAAA,QACA4uB,QAAA,oCAAAJ,EAAAliB,WAKAlN,KAAAmvB,SAAA2B,cAAA1B,EAAAliB,UAEA6G,MAAA,WACAqb,EAAA1S,aAAAsL,MAAAoH,EAAA1S,WAAA,gBAOA1c,KAAAmvB,SAAApb,MAAA,CACAgd,WAAA3B,EAAA1S,WAAA,eACAsU,QAAA5B,EAAA1S,WAAA2R,SARAruB,KAAAY,QAAA,QACA4uB,QAAA,mEAUAyB,UAAA,WACAnC,EAAAoC,OAAA9B,EAAA3tB,MAEA0vB,eAAA,WACArC,EAAAsC,WAAAhC,EAAA3tB,MAEA4vB,SAAA,WACAvC,EAAAwC,MAAAlC,EAAA3tB,OAEW2tB,EAAA5B,UAjSX,cAiSWtsB,KAAA3B,IAEXwV,IAAA,WACA+Z,EAAA/Z,IAAAqa,EAAAra,IACA8Z,EAAA1tB,KAAA2tB,IAEA9uB,KAAAmvB,SAAAtR,gBAAA,aAAAiR,IACA9uB,KAAAY,QAAA,QACA4uB,QAAA,uDAEAV,EAAA5hB,SAAAlN,KAAAmvB,SAAAtR,gBAIAnC,IACAoT,EAAAjpB,IAAA6V,GAGAoT,EAAApR,SAAAwR,EAEAH,IACAD,EAAAxrB,IAAAyrB,GAIAD,EAAA,IAEAyC,QAAA,aAEAC,OAAA,WAEApC,EAAAhK,SACA0J,EAAA0C,OAAA1C,EAAA0C,QAAA,GACA1C,EAAA0C,OAAApC,EAAAX,YAAAW,EAAA3tB,OAEAzB,KAAAmvB,SAAAqC,OAAAxxB,KAAAmvB,SAAAqC,QAAA,GACAxxB,KAAAmvB,SAAAqC,OAAApC,EAAAX,YAAAW,EAAA3tB,SAGO2tB,EAAAhvB,MAAAc,KAAA3B,KAGP0tB,EAsCA,OAzYAJ,EAAA8B,EAAA3B,GA4WA2B,EAAArtB,UAAAH,KAAA,SAAAswB,GACAzxB,KAAA4uB,WAAAztB,KAAAswB,IASA9C,EAAArtB,UAAAc,IAAA,WAEApC,KAAA4uB,WAAAztB,KAAA,OAaAwtB,EAAArtB,UAAAgtB,UAAA,SAAAtkB,GACAhK,KAAA4R,YAAA0c,UAAAtkB,IAGA2kB,EA1YA,CA2YC5uB,oECxoCD,IClCI2xB,EAAc,SAAA3sB,EAAAC,GAClB,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIA0sB,EAAA,WACA,SAAAC,EAAAvsB,EAAAC,GACA,QAAAxE,EAAA,EAAmBA,EAAAwE,EAAAvE,OAAkBD,IAAA,CACrC,IAAAyE,EAAAD,EAAAxE,GACAyE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAP,EAAAE,EAAAM,IAAAN,IAIA,gBAAAP,EAAAe,EAAAC,GAGA,OAFAD,GAAA6rB,EAAA5sB,EAAA1D,UAAAyE,GACAC,GAAA4rB,EAAA5sB,EAAAgB,GACAhB,GAdA,GAkCI6sB,EAAyB,SAAAtyB,EAAA2B,GAC7B,IAAA3B,EACA,UAAAsH,eAAA,6DAGA,OAAA3F,GAAA,kBAAAA,GAAA,oBAAAA,EAAA3B,EAAA2B,GAgDA4wB,EAAA,WACA,IAAAC,EAAA,oCACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAnxB,OAAA,EACAkb,OAAA,EACAoW,OAAA,EACAltB,EAAA,GACAmtB,EAAA,GACAC,OAAA,EACAC,OAAA,EAEA1qB,OAAA,EACA2qB,OAAA,EACAC,OAAA,EAEA,IAAA3xB,EAAA,EAAaA,EAAA,IAASA,IACtBuxB,GAAAntB,EAAApE,MAAA,OAAAA,GAAA,IAAAA,KAGA,IAAAkb,EAAAoW,EAAA,GAAoBF,EAAAlW,GAAUA,GAAAsW,GAAA,EAAAF,EAAAC,EAAAD,IAAA,EAW9B,IARAvqB,GADAA,EAAAuqB,KAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,IACA,MAAAvqB,EAAA,GACAqqB,EAAAlW,GAAAnU,EACAsqB,EAAAtqB,GAAAmU,EAGAyW,EAAA,SADAvtB,EAAAqtB,EAAArtB,EAAAotB,EAAAptB,EAAA8W,KACA,MAAAuW,EAAA,IAAAD,EAAA,SAAAtW,EACAwW,EAAA,IAAAttB,EAAA2C,GAAA,SAAAA,EAEA/G,EAAA,EAAeA,EAAA,EAAOA,IACtBkxB,EAAAlxB,GAAAkb,GAAAwW,KAAA,GAAAA,IAAA,EACAP,EAAAnxB,GAAA+G,GAAA4qB,KAAA,GAAAA,IAAA,EAKA,IAAA3xB,EAAA,EAAaA,EAAA,EAAOA,IACpBkxB,EAAAlxB,GAAAkxB,EAAAlxB,GAAAJ,MAAA,GACAuxB,EAAAnxB,GAAAmxB,EAAAnxB,GAAAJ,MAAA,GAGA,OAAAqxB,GAGAW,EAAA,KASAC,EAAA,WACA,SAAAA,EAAA9sB,GACI6rB,EAAc1xB,KAAA2yB,GAgBlBD,IACAA,EAAAZ,KAIA9xB,KAAA4yB,QAAA,EAAAF,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,SAAA,CAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,UACA,IAAAI,OAAA,EACA+xB,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAd,EAAAlyB,KAAA4yB,QAAA,MACAX,EAAAjyB,KAAA4yB,QAAA,GACAK,EAAAptB,EAAA9E,OACAmyB,EAAA,EAEA,OAAAD,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAA7d,MAAA,wBAOA,IAJA2d,EAAAltB,EAAAnF,MAAA,GACAsyB,EAAA,GACAhzB,KAAA0b,KAAA,CAAAqX,EAAAC,GAEAlyB,EAAAmyB,EAAoBnyB,EAAA,EAAAmyB,EAAA,GAAqBnyB,IACzCgyB,EAAAC,EAAAjyB,EAAA,IAEAA,EAAAmyB,IAAA,OAAAA,GAAAnyB,EAAAmyB,IAAA,KACAH,EAAAZ,EAAAY,IAAA,QAAAZ,EAAAY,GAAA,YAAAZ,EAAAY,GAAA,UAAAZ,EAAA,IAAAY,GAEAhyB,EAAAmyB,IAAA,IACAH,KAAA,EAAAA,IAAA,GAAAI,GAAA,GACAA,KAAA,OAAAA,GAAA,KAIAH,EAAAjyB,GAAAiyB,EAAAjyB,EAAAmyB,GAAAH,EAIA,IAAAD,EAAA,EAAe/xB,EAAG+xB,IAAA/xB,IAClBgyB,EAAAC,EAAA,EAAAF,EAAA/xB,IAAA,GAGAkyB,EAAAH,GADA/xB,GAAA,GAAA+xB,EAAA,EACAC,EAEAb,EAAA,GAAAC,EAAAY,IAAA,KAAAb,EAAA,GAAAC,EAAAY,GAAA,SAAAb,EAAA,GAAAC,EAAAY,GAAA,QAAAb,EAAA,GAAAC,EAAA,IAAAY,IA+DA,OA5CAH,EAAArxB,UAAA6xB,QAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5jB,GACA,IAAA/J,EAAA7F,KAAA0b,KAAA,GAEA7R,EAAAupB,EAAAvtB,EAAA,GACAiE,EAAAypB,EAAA1tB,EAAA,GACA4tB,EAAAH,EAAAztB,EAAA,GACAX,EAAAmuB,EAAAxtB,EAAA,GACA6tB,OAAA,EACAC,OAAA,EACAC,OAAA,EAEAC,EAAAhuB,EAAA9E,OAAA,IACAD,OAAA,EACAgzB,EAAA,EACAC,EAAA/zB,KAAA4yB,QAAA,GAEAoB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACA7B,EAAA6B,EAAA,GAEA,IAAAjzB,EAAA,EAAeA,EAAA+yB,EAAkB/yB,IACjC4yB,EAAAM,EAAAnqB,IAAA,IAAAoqB,EAAAnqB,GAAA,QAAAoqB,EAAAT,GAAA,OAAAU,EAAA,IAAAjvB,GAAAW,EAAAiuB,GACAH,EAAAK,EAAAlqB,IAAA,IAAAmqB,EAAAR,GAAA,QAAAS,EAAAhvB,GAAA,OAAAivB,EAAA,IAAAtqB,GAAAhE,EAAAiuB,EAAA,GACAF,EAAAI,EAAAP,IAAA,IAAAQ,EAAA/uB,GAAA,QAAAgvB,EAAArqB,GAAA,OAAAsqB,EAAA,IAAArqB,GAAAjE,EAAAiuB,EAAA,GACA5uB,EAAA8uB,EAAA9uB,IAAA,IAAA+uB,EAAApqB,GAAA,QAAAqqB,EAAApqB,GAAA,OAAAqqB,EAAA,IAAAV,GAAA5tB,EAAAiuB,EAAA,GACAA,GAAA,EACAjqB,EAAA6pB,EACA5pB,EAAA6pB,EACAF,EAAAG,EAIA,IAAA9yB,EAAA,EAAeA,EAAA,EAAOA,IACtB0yB,GAAA,GAAA1yB,GAAA8O,GAAAsiB,EAAAroB,IAAA,QAAAqoB,EAAApoB,GAAA,YAAAooB,EAAAuB,GAAA,UAAAvB,EAAA,IAAAhtB,GAAAW,EAAAiuB,KACAJ,EAAA7pB,EACAA,EAAAC,EACAA,EAAA2pB,EACAA,EAAAvuB,EACAA,EAAAwuB,GAIAf,EA/HA,GA4IIyB,EAAM,WACV,SAAAr0B,IACI2xB,EAAc1xB,KAAAD,GAClBC,KAAAE,UAAA,GA+FA,OApFAH,EAAAuB,UAAAnB,GAAA,SAAAC,EAAAC,GACAL,KAAAE,UAAAE,KACAJ,KAAAE,UAAAE,GAAA,IAGAJ,KAAAE,UAAAE,GAAAe,KAAAd,IAYAN,EAAAuB,UAAAf,IAAA,SAAAH,EAAAC,GACA,IAAAL,KAAAE,UAAAE,GACA,SAGA,IAAAI,EAAAR,KAAAE,UAAAE,GAAAK,QAAAJ,GAEA,OADAL,KAAAE,UAAAE,GAAAO,OAAAH,EAAA,GACAA,GAAA,GAUAT,EAAAuB,UAAAV,QAAA,SAAAR,GACA,IAAAS,EAAAb,KAAAE,UAAAE,GAEA,GAAAS,EAQA,OAAAI,UAAAF,OAGA,IAFA,IAAAA,EAAAF,EAAAE,OAEAD,EAAA,EAAqBA,EAAAC,IAAYD,EACjCD,EAAAC,GAAAI,KAAAlB,KAAAiB,UAAA,SAMA,IAHA,IAAAD,EAAAya,MAAAna,UAAAZ,MAAAQ,KAAAD,UAAA,GACAozB,EAAAxzB,EAAAE,OAEAuzB,EAAA,EAAsBA,EAAAD,IAAcC,EACpCzzB,EAAAyzB,GAAAlzB,MAAApB,KAAAgB,IASAjB,EAAAuB,UAAAD,QAAA,WACArB,KAAAE,UAAA,IAYAH,EAAAuB,UAAAC,KAAA,SAAAC,GACAxB,KAAAG,GAAA,gBAAAsB,GACAD,EAAAL,KAAAM,MAIA1B,EAlGU,GAiHVw0B,EAAA,SAAAvH,GAGA,SAAAuH,IACI7C,EAAc1xB,KAAAu0B,GAElB,IAAAtH,EAAgB4E,EAAyB7xB,KAAAgtB,EAAA9rB,KAAAlB,KAA0Bo0B,IAKnE,OAHAnH,EAAAuH,KAAA,GACAvH,EAAAwH,MAAA,EACAxH,EAAAyH,SAAA,KACAzH,EAiCA,OAvaY,SAAA/lB,EAAAC,GACZ,uBAAAA,GAAA,OAAAA,EACA,UAAAlC,UAAA,kEAAAkC,GAGAD,EAAA5F,UAAAqE,OAAAyB,OAAAD,KAAA7F,UAAA,CACAoF,YAAA,CACAW,MAAAH,EACA1B,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA0B,IAAAxB,OAAAQ,eAAAR,OAAAQ,eAAAe,EAAAC,GAAAD,EAAAb,UAAAc,GA+WEwtB,CAAQJ,EAAAvH,GAmBVuH,EAAAjzB,UAAAszB,YAAA,WACA50B,KAAAw0B,KAAAhoB,OAAAxM,GAEAA,KAAAw0B,KAAAzzB,OACAf,KAAA00B,SAAA9c,WAAA5X,KAAA40B,YAAA3sB,KAAAjI,WAAAy0B,OAEAz0B,KAAA00B,SAAA,MAUAH,EAAAjzB,UAAAH,KAAA,SAAA0zB,GACA70B,KAAAw0B,KAAArzB,KAAA0zB,GAEA70B,KAAA00B,WACA10B,KAAA00B,SAAA9c,WAAA5X,KAAA40B,YAAA3sB,KAAAjI,WAAAy0B,SAIAF,EA5CA,CA6CEH,GAcFU,EAAA,SAAAC,GACA,OAAAA,GAAA,UAAAA,IAAA,YAAAA,IAAA,EAAAA,IAAA,IAiBA5B,EAAA,SAAA6B,EAAAnvB,EAAAovB,GAEA,IAAAC,EAAA,IAAAC,WAAAH,EAAAvyB,OAAAuyB,EAAAtwB,WAAAswB,EAAAzyB,YAAA,GACA6yB,EAAA,IAAAzC,EAAAlX,MAAAna,UAAAZ,MAAAQ,KAAA2E,IAEAwvB,EAAA,IAAA3pB,WAAAspB,EAAAzyB,YACA+yB,EAAA,IAAAH,WAAAE,EAAA5yB,QAGA8yB,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAtC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAEAoC,OAAA,EASA,IANAJ,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,GAGAU,EAAA,EAAkBA,EAAAT,EAAAn0B,OAA6B40B,GAAA,EAG/CvC,EAAA0B,EAAAI,EAAAS,IACAtC,EAAAyB,EAAAI,EAAAS,EAAA,IACArC,EAAAwB,EAAAI,EAAAS,EAAA,IACApC,EAAAuB,EAAAI,EAAAS,EAAA,IAEAP,EAAAjC,QAAAC,EAAAC,EAAAC,EAAAC,EAAA+B,EAAAK,GAGAL,EAAAK,GAAAb,EAAAQ,EAAAK,GAAAJ,GACAD,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAH,GACAF,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAF,GACAH,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAD,GAEAH,EAAAnC,EACAoC,EAAAnC,EACAoC,EAAAnC,EACAoC,EAAAnC,EAGA,OAAA8B,GAeIO,EAAS,WACb,SAAAC,EAAAb,EAAAnvB,EAAAovB,EAAAa,GACIpE,EAAc1xB,KAAA61B,GAClB,IAAAE,EAAAF,EAAAG,KACAd,EAAA,IAAAC,WAAAH,EAAAvyB,QACA4yB,EAAA,IAAA3pB,WAAAspB,EAAAzyB,YACAzB,EAAA,EAKA,IAJAd,KAAAi2B,aAAA,IAAA1B,EAEAv0B,KAAAi2B,aAAA90B,KAAAnB,KAAAk2B,cAAAhB,EAAA1yB,SAAA1B,IAAAi1B,GAAAlwB,EAAAovB,EAAAI,IAEAv0B,EAAAi1B,EAAkBj1B,EAAAo0B,EAAAn0B,OAAwBD,GAAAi1B,EAC1Cd,EAAA,IAAA7G,YAAA,CAAA0G,EAAAI,EAAAp0B,EAAA,IAAAg0B,EAAAI,EAAAp0B,EAAA,IAAAg0B,EAAAI,EAAAp0B,EAAA,IAAAg0B,EAAAI,EAAAp0B,EAAA,MACAd,KAAAi2B,aAAA90B,KAAAnB,KAAAk2B,cAAAhB,EAAA1yB,SAAA1B,IAAAi1B,GAAAlwB,EAAAovB,EAAAI,IAIAr1B,KAAAi2B,aAAA90B,KAAA,WDnhBA,IAAAg1B,ECqhBAL,EAAA,MDrhBAK,ECqhBsBd,GDphBtB7yB,SAAA,EAAA2zB,EAAA5zB,WAAA4zB,IAAA5zB,WAAA,OCgjBA,OAdAszB,EAAAv0B,UAAA40B,cAAA,SAAAlB,EAAAnvB,EAAAovB,EAAAI,GACA,kBACA,IAAAvhB,EAAAqf,EAAA6B,EAAAnvB,EAAAovB,GACAI,EAAA1pB,IAAAmI,EAAAkhB,EAAAtwB,cAIAitB,EAAAkE,EAAA,OACAhwB,IAAA,OACAuwB,IAAA,WAEA,gBAGAP,EA/Ca,GC1gBTQ,EAAO,QAEX,SAAAC,EAAApvB,EAAAC,GACAD,EAAA5F,UAAAqE,OAAAyB,OAAAD,EAAA7F,WACA4F,EAAA5F,UAAAoF,YAAAQ,EACAA,EAAAb,UAAAc,EAGA,SAAAJ,EAAAb,EAAAc,GAMA,OALAD,EAAApB,OAAAQ,gBAAA,SAAAD,EAAAc,GAEA,OADAd,EAAAG,UAAAW,EACAd,IAGAA,EAAAc,GAgBA,SAAAuvB,EAAAC,EAAAx1B,EAAAy1B,GAcA,OAVAF,EAjBA,WACA,wBAAAG,kBAAAC,UAAA,SACA,GAAAD,QAAAC,UAAAC,KAAA,SACA,uBAAAC,MAAA,SAEA,IAEA,OADA/O,KAAAxmB,UAAA6G,SAAAjH,KAAAw1B,QAAAC,UAAA7O,KAAA,mBACA,EACG,MAAAngB,GACH,UAKAmvB,GACAJ,QAAAC,UAEA,SAAAH,EAAAx1B,EAAAy1B,GACA,IAAA5sB,EAAA,OACAA,EAAA1I,KAAAC,MAAAyI,EAAA7I,GACA,IACA+D,EAAA,IADA2C,SAAAO,KAAA7G,MAAAo1B,EAAA3sB,IAGA,OADA4sB,GAAA1vB,EAAAhC,EAAA0xB,EAAAn1B,WACAyD,IAIA3D,MAAA,KAAAH,WAGA,SAAA6F,EAAAvH,GACA,YAAAA,EACA,UAAAsH,eAAA,6DAGA,OAAAtH,EAGA,SAAAw3B,EAAAC,EAAAC,GAMA,OALAA,IACAA,EAAAD,EAAAt2B,MAAA,IAGAs2B,EAAAC,MACAD,EAQA,IAAIE,EAAO,GAYPC,EAAgB,SAAA1a,EAAA2a,GACpB,gBAAAh3B,EAAAi3B,EAAAr2B,GACA,IAAAs2B,EAAAF,EAAAG,OAAAF,GACAG,EAAA,IAAArK,OAAA,KAAAmK,EAAA,MAgBA,GAdA,QAAAl3B,GAEAY,EAAA8L,QAAA1M,EAAA4Y,cAAA,KAIAhY,EAAA8L,QAAA2P,EAAA,KAEQya,GACFA,EAAO/1B,KAAA,GAAAb,OAAAU,IAKJy2B,EAAA5tB,EAAQ6tB,QAAjB,CAOA,IAAAjX,EAAagX,EAAA5tB,EAAQ6tB,QAAAt3B,GAErBqgB,GAAA,UAAArgB,IAGAqgB,EAAWgX,EAAA5tB,EAAQ6tB,QAAA1nB,MAAiBynB,EAAA5tB,EAAQ6tB,QAAAN,KAK5C3W,GAAA6W,GAAAE,EAAAjvB,KAAAnI,IAIAqgB,EAAAhF,MAAAI,QAAA7a,GAAA,gBAA+Cy2B,EAAA5tB,EAAQ6tB,QAAA12B,MAsOvD,IAAI22B,EAlOJ,SAAAC,EAAAnb,GAEA,IAEAob,EAFAR,EAAA,OAyBAD,EAAA,WACA,QAAA7b,EAAAta,UAAAF,OAAAC,EAAA,IAAAya,MAAAF,GAAAG,EAAA,EAAuEA,EAAAH,EAAaG,IACpF1a,EAAA0a,GAAAza,UAAAya,GAGAmc,EAAA,MAAAR,EAAAr2B,IA0LA,OAtLA62B,EAAcV,EAAgB1a,EAAA2a,GAe9BA,EAAAQ,aAAA,SAAAE,GACA,OAAAF,EAAAnb,EAAA,KAAAqb,IAuBAV,EAAAG,OAAA,CACAQ,IAAA,uBACAx3B,IAAA,GACAy3B,MAAA,uBACAhoB,KAAA,iBACAioB,KAAA,aACAC,MAAA,QACAjQ,QAAAoP,GAeAD,EAAAC,MAAA,SAAAC,GACA,qBAAAA,EAAA,CACA,IAAAF,EAAAG,OAAA7e,eAAA4e,GACA,UAAAliB,MAAA,IAAAkiB,EAAA,8BAGAD,EAAAC,EAGA,OAAAD,IAaAD,EAAAe,QAAA,WACA,OAAWjB,EAAO,GAAA52B,OAAa42B,GAAO,KAatC9X,OAAA,SAAAgZ,GACA,OAAYlB,GAAO,IAAA9X,OAAA,SAAAiZ,GAEnB,WAAAlL,OAAA,KAAAiL,EAAA,MAAA7vB,KAAA8vB,EAAA,OASAjB,EAAAe,QAAAG,MAAA,WACQpB,IACFA,EAAOn2B,OAAA,IAQbq2B,EAAAe,QAAAI,QAAA,WACe,OAAPrB,IACFA,EAAOn2B,OAAA,EACPm2B,EAAO,OAQbE,EAAAe,QAAAK,OAAA,WACe,OAAPtB,IACFA,EAAO,KAWbE,EAAAc,MAAA,WACA,QAAAO,EAAAx3B,UAAAF,OAAAC,EAAA,IAAAya,MAAAgd,GAAAC,EAAA,EAA0EA,EAAAD,EAAeC,IACzF13B,EAAA03B,GAAAz3B,UAAAy3B,GAGA,OAAAb,EAAA,QAAAR,EAAAr2B,IAUAo2B,EAAAa,KAAA,WACA,QAAAU,EAAA13B,UAAAF,OAAAC,EAAA,IAAAya,MAAAkd,GAAAC,EAAA,EAA0EA,EAAAD,EAAeC,IACzF53B,EAAA43B,GAAA33B,UAAA23B,GAGA,OAAAf,EAAA,OAAAR,EAAAr2B,IAWAo2B,EAAAY,MAAA,WACA,QAAAa,EAAA53B,UAAAF,OAAAC,EAAA,IAAAya,MAAAod,GAAAC,EAAA,EAA0EA,EAAAD,EAAeC,IACzF93B,EAAA83B,GAAA73B,UAAA63B,GAGA,OAAAjB,EAAA,QAAAR,EAAAr2B,IAGAo2B,EAQOQ,CAAA,WACPmB,EAAqBpB,EAAGC,aAgCpBoB,EAAQrzB,OAAArE,UAAA6G,SAcZyT,GAAA,SAAAqd,GACA,OAAA5d,GAAA4d,GAAAtzB,OAAAiW,KAAAqd,GAAA,IAaA,SAAAC,GAAAD,EAAAxY,GACA7E,GAAAqd,GAAA/0B,QAAA,SAAA2B,GACA,OAAA4a,EAAAwY,EAAApzB,QAwCA,SAASszB,GAAM9zB,GACf,QAAAkW,EAAAta,UAAAF,OAAAq4B,EAAA,IAAA3d,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAA2FA,EAAAH,EAAaG,IACxG0d,EAAA1d,EAAA,GAAAza,UAAAya,GAGA,OAAA/V,OAAAinB,OACAjnB,OAAAinB,OAAAxrB,MAAAuE,OAAA,CAAAN,GAAA/E,OAAA84B,KAGAA,EAAAl1B,QAAA,SAAAyX,GACAA,GAIAud,GAAAvd,EAAA,SAAAtU,EAAAxB,GACAR,EAAAQ,GAAAwB,MAGAhC,GAcA,SAAAgW,GAAAhU,GACA,QAAAA,GAAA,kBAAAA,EAWA,SAAAgyB,GAAAhyB,GACA,OAAAgU,GAAAhU,IAAoC,oBAAR2xB,EAAQ93B,KAAAmG,MAAAX,cAAAf,OAyBpC,SAAS2zB,GAAanR,EAAA5d,GACtB,IAAA4d,IAAA5d,EACA,SAGA,GAAqB,oBAARktB,EAAA5tB,EAAQ0vB,iBAAA,CACrB,IAAAC,EAAa/B,EAAA5tB,EAAQ0vB,iBAAApR,GACrB,OAAAqR,IAAAjvB,GAAA,GAGA,SAGA,SAAAkvB,KACA,IAAAh4B,EAAAs1B,EAAA,0NAMA,OAJA0C,GAAA,WACA,OAAAh4B,GAGAA,EAeA,SAAAi4B,GAAAvS,GACA,wBAAAA,GAAA,KAAA5e,KAAA4e,GAeA,SAAAwS,GAAAxS,GACA,QAAA5e,KAAA4e,GACA,UAAA/R,MAAA,2CA2BA,SAAAwkB,KAEA,OAASC,EAAAhwB,IAAa4tB,EAAA5tB,EAAQ/J,SAa9B,SAAAg6B,GAAAzyB,GACA,OAAAgU,GAAAhU,IAAA,IAAAA,EAAA0yB,SAWA,SAAAC,KAGA,IACA,OAAWvC,EAAA5tB,EAAQowB,SAAYxC,EAAA5tB,EAAQtK,KACpC,MAAAyc,GACH,UAeA,SAAAke,GAAAnjB,GACA,gBAAAojB,EAAAC,GACA,IAAAV,GAAAS,GACA,OAAaN,EAAAhwB,EAAQkN,GAAA,MAGrB2iB,GAAAU,KACAA,EAAgBP,EAAAhwB,EAAQwwB,cAAAD,IAGxB,IAAAE,EAAAR,GAAAM,KAAwCP,EAAAhwB,EACxC,OAAAywB,EAAAvjB,IAAAujB,EAAAvjB,GAAAojB,IAuBA,SAAAI,GAAAxT,EAAAyT,EAAA9d,EAAA+d,QACA,IAAA1T,IACAA,EAAA,YAGA,IAAAyT,IACAA,EAAA,SAGA,IAAA9d,IACAA,EAAA,IAGA,IAAAyL,EAAW0R,EAAAhwB,EAAQ6wB,cAAA3T,GAwBnB,OAvBAphB,OAAAg1B,oBAAAH,GAAAt2B,QAAA,SAAA02B,GACA,IAAAC,EAAAL,EAAAI,IAIA,IAAAA,EAAAn6B,QAAA,mBAAAm6B,GAAA,SAAAA,GACMjD,EAAGM,KAAM6C,IAAIrB,KAAAmB,EAAAC,IACnB1S,EAAA4S,aAAAH,EAAAC,IAEK,gBAAAD,EACL3T,GAAAkB,EAAA0S,GAEA1S,EAAAyS,GAAAC,IAGAl1B,OAAAg1B,oBAAAje,GAAAxY,QAAA,SAAA82B,GACA7S,EAAA4S,aAAAC,EAAAte,EAAAse,MAGAP,GACAQ,GAAA9S,EAAAsS,GAGAtS,EAgBA,SAAAlB,GAAAkB,EAAA5Y,GAOA,MANA,qBAAA4Y,EAAAlB,YACAkB,EAAA+S,UAAA3rB,EAEA4Y,EAAAlB,YAAA1X,EAGA4Y,EAaA,SAAAgT,GAAAC,EAAAnB,GACAA,EAAAoB,WACApB,EAAAqB,aAAAF,EAAAnB,EAAAoB,YAEApB,EAAAsB,YAAAH,GAoBA,SAAAI,GAAA3U,EAAA4U,GAGA,OAFA9B,GAAA8B,GAEA5U,EAAA6U,UACA7U,EAAA6U,UAAAC,SAAAF,IAlMAG,EAqMAH,EApMA,IAAAtO,OAAA,UAAAyO,EAAA,YAoMArzB,KAAAse,EAAA+U,WArMA,IAAAA,EAqNA,SAAAC,GAAAhV,EAAAiV,GAQA,OAPAjV,EAAA6U,UACA7U,EAAA6U,UAAAK,IAAAD,GAEGN,GAAA3U,EAAAiV,KACHjV,EAAA+U,WAAA/U,EAAA+U,UAAA,IAAAE,GAAAniB,QAGAkN,EAgBA,SAAAmV,GAAAnV,EAAAoV,GAUA,OATApV,EAAA6U,UACA7U,EAAA6U,UAAAQ,OAAAD,IAEAtC,GAAAsC,GACApV,EAAA+U,UAAA/U,EAAA+U,UAAA9gB,MAAA,OAAAsE,OAAA,SAAAqU,GACA,OAAAA,IAAAwI,IACKjhB,KAAA,MAGL6L,EAoCA,SAAAsV,GAAAtV,EAAAuV,EAAAC,GAIA,IAAAC,EAAAd,GAAA3U,EAAAuV,GAYA,GAVA,oBAAAC,IACAA,IAAAxV,EAAAuV,IAGA,mBAAAC,IACAA,GAAAC,GAKAD,IAAAC,EAUA,OANAD,EACAR,GAAAhV,EAAAuV,GAEAJ,GAAAnV,EAAAuV,GAGAvV,EAaA,SAAA0V,GAAApU,EAAAzL,GACA/W,OAAAg1B,oBAAAje,GAAAxY,QAAA,SAAA82B,GACA,IAAAwB,EAAA9f,EAAAse,GAEA,OAAAwB,GAAA,qBAAAA,IAAA,IAAAA,EACArU,EAAAsU,gBAAAzB,GAEA7S,EAAA4S,aAAAC,GAAA,IAAAwB,EAAA,GAAAA,KAmBA,SAAAE,GAAAvT,GACA,IAAA5iB,EAAA,GAIAo2B,EAAA,kEAEA,GAAAxT,KAAAzM,YAAAyM,EAAAzM,WAAA3b,OAAA,EAGA,IAFA,IAAA4pB,EAAAxB,EAAAzM,WAEA5b,EAAA6pB,EAAA5pB,OAAA,EAAkCD,GAAA,EAAQA,IAAA,CAC1C,IAAAk6B,EAAArQ,EAAA7pB,GAAA2b,KACAmgB,EAAAjS,EAAA7pB,GAAAuG,MAGA,mBAAA8hB,EAAA6R,KAAA,IAAA2B,EAAAl8B,QAAA,IAAAu6B,EAAA,OAIA4B,EAAA,OAAAA,GAGAr2B,EAAAy0B,GAAA4B,EAIA,OAAAr2B,EAgBA,SAAAs2B,GAAA1U,EAAA2U,GACA,OAAA3U,EAAA0U,aAAAC,GAgBA,SAAA/B,GAAA5S,EAAA2U,EAAAz1B,GACA8gB,EAAA4S,aAAA+B,EAAAz1B,GAaA,SAAAo1B,GAAAtU,EAAA2U,GACA3U,EAAAsU,gBAAAK,GAOA,SAAAC,KACElD,EAAAhwB,EAAQ2L,KAAAwnB,QAERnD,EAAAhwB,EAAQozB,cAAA,WACV,UAQA,SAAAC,KACErD,EAAAhwB,EAAQozB,cAAA,WACV,UAwBA,SAAAE,GAAAhV,GACA,GAAAA,KAAAgV,uBAAAhV,EAAAiV,WAAA,CACA,IAAAC,EAAAlV,EAAAgV,wBACAz6B,EAAA,GAeA,MAdA,iDAAAwB,QAAA,SAAA4Y,QACAnP,IAAA0vB,EAAAvgB,KACApa,EAAAoa,GAAAugB,EAAAvgB,MAIApa,EAAAkc,SACAlc,EAAAkc,OAAA+I,WAAiC2R,GAAanR,EAAA,YAG9CzlB,EAAAic,QACAjc,EAAAic,MAAAgJ,WAAgC2R,GAAanR,EAAA,WAG7CzlB,GA8BA,SAAA46B,GAAAnV,GACA,IAAAoV,EAMA,GAJApV,EAAAgV,uBAAAhV,EAAAiV,aACAG,EAAApV,EAAAgV,0BAGAI,EACA,OACAC,KAAA,EACAC,IAAA,GAIA,IAAAC,EAAc7D,EAAAhwB,EAAQkM,gBACtBP,EAAaqkB,EAAAhwB,EAAQ2L,KACrBmoB,EAAAD,EAAAC,YAAAnoB,EAAAmoB,YAAA,EACAC,EAAmBnG,EAAA5tB,EAAQg0B,aAAAroB,EAAAooB,WAC3BJ,EAAAD,EAAAC,KAAAI,EAAAD,EACAG,EAAAJ,EAAAI,WAAAtoB,EAAAsoB,WAAA,EACAC,EAAkBtG,EAAA5tB,EAAQm0B,aAAAxoB,EAAAuoB,UAC1BN,EAAAF,EAAAE,IAAAM,EAAAD,EAEA,OACAN,KAAA75B,KAAAs6B,MAAAT,GACAC,IAAA95B,KAAAs6B,MAAAR,IAgCA,SAAAS,GAAA/V,EAAAtY,GACA,IAAAsuB,EAAA,GACAZ,EAAAD,GAAAnV,GACAiW,EAAAjW,EAAAkW,YACAC,EAAAnW,EAAAoW,aACAC,EAAAjB,EAAAE,IACAgB,EAAAlB,EAAAC,KACAkB,EAAA7uB,EAAA6uB,MACAC,EAAA9uB,EAAA8uB,MASA,OAPA9uB,EAAA+uB,iBACAD,EAAA9uB,EAAA+uB,eAAA,GAAAD,MACAD,EAAA7uB,EAAA+uB,eAAA,GAAAF,OAGAP,EAAAliB,EAAAtY,KAAAmgB,IAAA,EAAAngB,KAAAG,IAAA,GAAA06B,EAAAE,EAAAJ,OACAH,EAAAniB,EAAArY,KAAAmgB,IAAA,EAAAngB,KAAAG,IAAA,GAAA66B,EAAAF,GAAAL,IACAD,EAaA,SAAAU,GAAAx3B,GACA,OAAAgU,GAAAhU,IAAA,IAAAA,EAAA0yB,SAaA,SAAA+E,GAAA3W,GACA,KAAAA,EAAAkT,YACAlT,EAAA4W,YAAA5W,EAAAkT,YAGA,OAAAlT,EAoCA,SAAA6W,GAAAvE,GASA,MANA,oBAAAA,IACAA,QAKAhf,MAAAI,QAAA4e,KAAA,CAAAA,IAAAn3B,IAAA,SAAA+D,GAOA,MAJA,oBAAAA,IACAA,OAGAyyB,GAAAzyB,IAAAw3B,GAAAx3B,GACAA,EAGA,kBAAAA,GAAA,KAAAkB,KAAAlB,GACawyB,EAAAhwB,EAAQo1B,eAAA53B,QADrB,IAGG+X,OAAA,SAAA/X,GACH,OAAAA,IAiBA,SAAA4zB,GAAA9S,EAAAsS,GAIA,OAHAuE,GAAAvE,GAAAv2B,QAAA,SAAAwlB,GACA,OAAAvB,EAAAoT,YAAA7R,KAEAvB,EAiBA,SAAA+W,GAAA/W,EAAAsS,GACA,OAAAQ,GAAA6D,GAAA3W,GAAAsS,GAaA,SAAA0E,GAAAtvB,GAIA,YAAAlC,IAAAkC,EAAAuvB,aAAAzxB,IAAAkC,EAAAwvB,UAcA,IAAAxvB,EAAAuvB,aAAAzxB,IAAAkC,EAAAwvB,SAMA,IAAAxvB,EAAAuvB,QAAA,IAAAvvB,EAAAwvB,SA4BA,IAAAC,GAAApF,GAAA,iBAoBAqF,GAAArF,GAAA,oBACAsF,GAEA75B,OAAA85B,OAAA,CACA7F,UACAE,QACAE,aACAO,YACAtT,eACAkU,aACAK,YACAK,YACAG,eACAG,eACAI,iBACAG,iBACAG,gBACA9B,gBACA0B,mBACAM,sBACAG,wBACAC,yBACAG,gBACAY,sBACAW,cACAC,WACAE,oBACA/D,iBACAiE,iBACAC,qBACAG,KACAC,QAYAG,GAAA,EAQA,SAAAC,KACA,OAAAD,KAmBA,IAAAE,GAAA,GASAC,GAAA,aAAA/X,MAAAgY,UAWA,SAAAC,GAAA5X,GACA,IAAAllB,EAAAklB,EAAA0X,IAUA,OARA58B,IACAA,EAAAklB,EAAA0X,IAAAF,MAGAC,GAAA38B,KACA28B,GAAA38B,GAAA,IAGA28B,GAAA38B,GAcA,SAAA+8B,GAAA7X,GACA,IAAAllB,EAAAklB,EAAA0X,IAEA,QAAA58B,KAIA0C,OAAAg1B,oBAAAiF,GAAA38B,IAAAlC,OAUA,SAAAk/B,GAAA9X,GACA,IAAAllB,EAAAklB,EAAA0X,IAEA,GAAA58B,EAAA,QAKA28B,GAAA38B,GAEA,WACAklB,EAAA0X,IACG,MAAAl4B,GACHwgB,EAAAsU,gBACAtU,EAAAsU,gBAAAoD,IAGA1X,EAAA0X,IAAA,OAyBA,SAAAK,GAAAC,EAAA//B,GACA,IAAAqB,EAAAs+B,GAAAI,GAEA,IAAA1+B,EAAA2+B,SAAAhgC,GAAAW,gBACAU,EAAA2+B,SAAAhgC,GAIA+/B,EAAAE,oBACAF,EAAAE,oBAAAjgC,EAAAqB,EAAA6+B,YAAA,GACKH,EAAAI,aACLJ,EAAAI,YAAA,KAAAngC,EAAAqB,EAAA6+B,aAKA36B,OAAAg1B,oBAAAl5B,EAAA2+B,UAAAr/B,QAAA,WACAU,EAAA2+B,gBACA3+B,EAAA6+B,kBACA7+B,EAAA++B,UAIA,IAAA76B,OAAAg1B,oBAAAl5B,GAAAV,QACAk/B,GAAAE,GAoBA,SAAAM,GAAAhgB,EAAA0f,EAAAO,EAAA1rB,GACA0rB,EAAAx8B,QAAA,SAAA9D,GAEAqgB,EAAA0f,EAAA//B,EAAA4U,KAcA,SAAA2rB,GAAA9wB,GACA,SAAA+wB,IACA,SAGA,SAAAC,IACA,SAQA,IAAAhxB,MAAAixB,qBAAA,CACA,IAAAC,EAAAlxB,GAAuB4nB,EAAA5tB,EAAQgG,MAO/B,QAAAhK,KANAgK,EAAA,GAMAkxB,EAIA,WAAAl7B,GAAA,WAAAA,GAAA,gBAAAA,GAAA,oBAAAA,GAAA,oBAAAA,IAGA,gBAAAA,GAAAk7B,EAAAC,iBACAnxB,EAAAhK,GAAAk7B,EAAAl7B,KAmDA,GA7CAgK,EAAAxK,SACAwK,EAAAxK,OAAAwK,EAAAoxB,YAAyCpH,EAAAhwB,GAIzCgG,EAAAqxB,gBACArxB,EAAAqxB,cAAArxB,EAAAsxB,cAAAtxB,EAAAxK,OAAAwK,EAAAuxB,UAAAvxB,EAAAsxB,aAIAtxB,EAAAmxB,eAAA,WACAD,EAAAC,gBACAD,EAAAC,iBAGAnxB,EAAAwxB,aAAA,EACAN,EAAAM,aAAA,EACAxxB,EAAAyxB,kBAAA,GAGAzxB,EAAAyxB,kBAAA,EAEAzxB,EAAA0xB,gBAAA,WACAR,EAAAQ,iBACAR,EAAAQ,kBAGA1xB,EAAA2xB,cAAA,EACAT,EAAAS,cAAA,EACA3xB,EAAAixB,qBAAAF,GAGA/wB,EAAAixB,qBAAAD,EAEAhxB,EAAA4xB,yBAAA,WACAV,EAAAU,0BACAV,EAAAU,2BAGA5xB,EAAA6xB,8BAAAd,EACA/wB,EAAA0xB,mBAGA1xB,EAAA6xB,8BAAAb,EAEA,OAAAhxB,EAAA8xB,cAAAh0B,IAAAkC,EAAA8xB,QAAA,CACA,IAAAC,EAAgB/H,EAAAhwB,EAAQkM,gBACxBP,EAAiBqkB,EAAAhwB,EAAQ2L,KACzB3F,EAAA8uB,MAAA9uB,EAAA8xB,SAAAC,KAAAhE,YAAApoB,KAAAooB,YAAA,IAAAgE,KAAAjE,YAAAnoB,KAAAmoB,YAAA,GACA9tB,EAAA6uB,MAAA7uB,EAAAgyB,SAAAD,KAAA7D,WAAAvoB,KAAAuoB,WAAA,IAAA6D,KAAA9D,WAAAtoB,KAAAsoB,WAAA,GAIAjuB,EAAAiyB,MAAAjyB,EAAAkyB,UAAAlyB,EAAAmyB,QAGA,OAAAnyB,EAAAuvB,aAAAzxB,IAAAkC,EAAAuvB,SAKAvvB,EAAAuvB,OAAA,EAAAvvB,EAAAuvB,OAAA,IAAAvvB,EAAAuvB,OAAA,IAAAvvB,EAAAuvB,OAAA,KAMA,OAAAvvB,EAOA,IAAAoyB,IAAA,GAEA,WACA,IACA,IAAAvoB,EAAA/T,OAAAC,eAAA,GAAuC,WACvCwwB,IAAA,WACA6L,IAAA,KAGIxK,EAAA5tB,EAAQq4B,iBAAA,YAAAxoB,GACR+d,EAAA5tB,EAAQw2B,oBAAA,YAAA3mB,GACT,MAAA/R,KATH,GAiBA,IAAAw6B,GAAA,2BAiBA,SAAAhiC,GAAAggC,EAAA//B,EAAAqgB,GACA,GAAAhF,MAAAI,QAAAzb,GACA,OAAAqgC,GAAAtgC,GAAAggC,EAAA//B,EAAAqgB,GAGA,IAAAhf,EAAAs+B,GAAAI,GA8CA,GA5CA1+B,EAAA2+B,WACA3+B,EAAA2+B,SAAA,IAGA3+B,EAAA2+B,SAAAhgC,KACAqB,EAAA2+B,SAAAhgC,GAAA,IAGAqgB,EAAA2hB,OACA3hB,EAAA2hB,KAAAzC,MAGAl+B,EAAA2+B,SAAAhgC,GAAAe,KAAAsf,GAEAhf,EAAA6+B,aACA7+B,EAAA++B,UAAA,EAEA/+B,EAAA6+B,WAAA,SAAAzwB,EAAAwyB,GACA,IAAA5gC,EAAA++B,SAAA,CAIA3wB,EAAA8wB,GAAA9wB,GACA,IAAAuwB,EAAA3+B,EAAA2+B,SAAAvwB,EAAAzP,MAEA,GAAAggC,EAIA,IAFA,IAAAkC,EAAAlC,EAAA1/B,MAAA,GAEA6hC,EAAA,EAAAnnB,EAAAknB,EAAAvhC,OAAgDwhC,EAAAnnB,IAChDvL,EAAA6xB,gCADuDa,IAIvD,IACAD,EAAAC,GAAArhC,KAAAi/B,EAAAtwB,EAAAwyB,GACa,MAAA16B,GACCgwB,EAAGO,MAAAvwB,OAQjB,IAAAlG,EAAA2+B,SAAAhgC,GAAAW,OACA,GAAAo/B,EAAA+B,iBAAA,CACA,IAAAl4B,GAAA,EAEAi4B,IAAAE,GAAA1hC,QAAAL,IAAA,IACA4J,EAAA,CACAw4B,SAAA,IAIArC,EAAA+B,iBAAA9hC,EAAAqB,EAAA6+B,WAAAt2B,QACKm2B,EAAAsC,aACLtC,EAAAsC,YAAA,KAAAriC,EAAAqB,EAAA6+B,YAmBA,SAAA//B,GAAA4/B,EAAA//B,EAAAqgB,GAEA,GAAAuf,GAAAG,GAAA,CAIA,IAAA1+B,EAAAs+B,GAAAI,GAEA,GAAA1+B,EAAA2+B,SAAA,CAIA,GAAA3kB,MAAAI,QAAAzb,GACA,OAAAqgC,GAAAlgC,GAAA4/B,EAAA//B,EAAAqgB,GAIA,IAAAiiB,EAAA,SAAAva,EAAAnF,GACAvhB,EAAA2+B,SAAApd,GAAA,GAEAkd,GAAA/X,EAAAnF,IAIA,QAAArV,IAAAvN,EAAA,CAUA,IAAAggC,EAAA3+B,EAAA2+B,SAAAhgC,GAEA,GAAAggC,EAKA,GAAA3f,EAAA,CAMA,GAAAA,EAAA2hB,KACA,QAAAhnB,EAAA,EAAmBA,EAAAglB,EAAAr/B,OAAqBqa,IACxCglB,EAAAhlB,GAAAgnB,OAAA3hB,EAAA2hB,MACAhC,EAAAz/B,OAAAya,IAAA,GAKA8kB,GAAAC,EAAA//B,QAbAsiC,EAAAvC,EAAA//B,QAjBA,QAAA4iB,KAAAvhB,EAAA2+B,SACAz6B,OAAArE,UAAAoX,eAAAxX,KAAAO,EAAA2+B,UAAA,GAAkEpd,IAClE0f,EAAAvC,EAAAnd,KAgDA,SAAApiB,GAAAu/B,EAAAtwB,EAAAwyB,GAIA,IAAAM,EAAA3C,GAAAG,GAAAJ,GAAAI,GAAA,GACAlG,EAAAkG,EAAA/C,YAAA+C,EAAAyC,cAsBA,GAlBA,kBAAA/yB,EACAA,EAAA,CACAzP,KAAAyP,EACAxK,OAAA86B,GAEGtwB,EAAAxK,SACHwK,EAAAxK,OAAA86B,GAIAtwB,EAAA8wB,GAAA9wB,GAEA8yB,EAAArC,YACAqC,EAAArC,WAAAp/B,KAAAi/B,EAAAtwB,EAAAwyB,GAKApI,IAAApqB,EAAAixB,yBAAA,IAAAjxB,EAAAgzB,QACAjiC,GAAAM,KAAA,KAAA+4B,EAAApqB,EAAAwyB,QACG,IAAApI,IAAApqB,EAAAyxB,iBAAA,CACH,IAAAwB,EAAA/C,GAAAlwB,EAAAxK,QAEAwK,EAAAxK,OAAAwK,EAAAzP,QAEA0iC,EAAAtC,UAAA,EAEA,oBAAA3wB,EAAAxK,OAAAwK,EAAAzP,OACAyP,EAAAxK,OAAAwK,EAAAzP,QAIA0iC,EAAAtC,UAAA,GAKA,OAAA3wB,EAAAyxB,iBAgBA,SAAAyB,GAAA5C,EAAA//B,EAAAqgB,GACA,GAAAhF,MAAAI,QAAAzb,GACA,OAAAqgC,GAAAsC,GAAA5C,EAAA//B,EAAAqgB,GAGA,IAAAuiB,EAAA,SAAAA,IACAziC,GAAA4/B,EAAA//B,EAAA4iC,GACAviB,EAAArf,MAAApB,KAAAiB,YAIA+hC,EAAAZ,KAAA3hB,EAAA2hB,KAAA3hB,EAAA2hB,MAAAzC,KACAx/B,GAAAggC,EAAA//B,EAAA4iC,GAGA,IAiBAC,GAjBAC,GAEAv9B,OAAA85B,OAAA,CACAkB,YACAxgC,MACAI,OACAK,WACAmiC,SASAI,IAAA,EAMIC,GAAS,WAEb,GAAAxJ,OAAA,IAAAqJ,GAAAj5B,QAAAq5B,UAAA,CAIA,IAAAC,EAAA7nB,MAAAna,UAAAZ,MAAAQ,KAAwC24B,EAAAhwB,EAAQ0iB,qBAAA,UAChDgX,EAAA9nB,MAAAna,UAAAZ,MAAAQ,KAA0C24B,EAAAhwB,EAAQ0iB,qBAAA,UAClDiX,EAAA/nB,MAAAna,UAAAZ,MAAAQ,KAAwC24B,EAAAhwB,EAAQ0iB,qBAAA,aAChDkX,EAAAH,EAAAhjC,OAAAijC,EAAAC,GAEA,GAAAC,KAAA1iC,OAAA,EACA,QAAAD,EAAA,EAAA6G,EAAA87B,EAAA1iC,OAAwCD,EAAA6G,EAAO7G,IAAA,CAC/C,IAAA4iC,EAAAD,EAAA3iC,GAEA,IAAA4iC,MAAA7G,aAYO,CACP8G,GAAA,GACA,WAZAh2B,IAAA+1B,EAAAE,QAIA,OAHAF,EAAA7G,aAAA,eAKAoG,GAAAS,QAUGP,IACHQ,GAAA,KAeA,SAAAA,GAAAE,EAAAC,GACAA,IACAb,GAAAa,GAGErM,EAAA5tB,EAAQ+N,WAAYwrB,GAASS,GAG/BjK,MAAwB,aAARC,EAAAhwB,EAAQ8N,WACxBwrB,IAAA,EAOAJ,GAAMtL,EAAA5tB,EAAQ,kBACds5B,IAAA,IAmBA,IAiVAY,GAjVIC,GAAkB,SAAApI,GACtB,IAAAqI,EAAcpK,EAAAhwB,EAAQ6wB,cAAA,SAEtB,OADAuJ,EAAArI,YACAqI,GAaAC,GAAA,SAAA/b,EAAAsS,GACAtS,EAAAgc,WACAhc,EAAAgc,WAAAC,QAAA3J,EAEAtS,EAAAlB,YAAAwT,GA8BAxyB,GAAA,SAAAmyB,EAAA3Z,EAAA4jB,GAEA5jB,EAAA2hB,OACA3hB,EAAA2hB,KAAAzC,MAIA,IAAA2E,EAAA,WACA,OAAA7jB,EAAArf,MAAAg5B,EAAAn5B,YAUA,OADAqjC,EAAAlC,KAAAiC,IAAA,IAAA5jB,EAAA2hB,KAAA3hB,EAAA2hB,KACAkC,GAiBAC,GAAA,SAAA9jB,EAAAojB,GACA,IAAAW,EAAA1c,KAAAtE,MAWA,OATA,WACA,IAAAA,EAAAsE,KAAAtE,MAEAA,EAAAghB,GAAAX,IACApjB,EAAArf,WAAA,EAAAH,WACAujC,EAAAhhB,KAkCIihB,GAAQ,SAAAzB,EAAAa,EAAAa,EAAAtK,GAKZ,IAAA9hB,OAJA,IAAA8hB,IACAA,EAAc3C,EAAA5tB,GAKd,IAOA86B,EAAA,WACA,IAAAplC,EAAAS,KACAgB,EAAAC,UAEA2jC,EAAA,WACAtsB,EAAA,KACAssB,EAAA,KAEAF,GACA1B,EAAA5hC,MAAA7B,EAAAyB,KAIAsX,GAAAosB,GACA1B,EAAA5hC,MAAA7B,EAAAyB,GAGAo5B,EAAA7jB,aAAA+B,GACAA,EAAA8hB,EAAAxiB,WAAAgtB,EAAAf,IAMA,OADAc,EAAAE,OA9BA,WACAzK,EAAA7jB,aAAA+B,GACAA,EAAA,MA6BAqsB,GAgBAG,GAAA,aAgCAA,GAAAxjC,UAAAyjC,eAAA,GAYAD,GAAAxjC,UAAAnB,GAAA,SAAAC,EAAAqgB,GAGA,IAAAukB,EAAAhlC,KAAAkiC,iBAEAliC,KAAAkiC,iBAAA,aAEA/hC,GAAAH,KAAAI,EAAAqgB,GACAzgB,KAAAkiC,iBAAA8C,GAWAF,GAAAxjC,UAAA4gC,iBAAA4C,GAAAxjC,UAAAnB,GAaA2kC,GAAAxjC,UAAAf,IAAA,SAAAH,EAAAqgB,GACAlgB,GAAAP,KAAAI,EAAAqgB,IAWAqkB,GAAAxjC,UAAA++B,oBAAAyE,GAAAxjC,UAAAf,IAaAukC,GAAAxjC,UAAAyhC,IAAA,SAAA3iC,EAAAqgB,GAGA,IAAAukB,EAAAhlC,KAAAkiC,iBAEAliC,KAAAkiC,iBAAA,aAEAa,GAAA/iC,KAAAI,EAAAqgB,GACAzgB,KAAAkiC,iBAAA8C,GAoBAF,GAAAxjC,UAAAV,QAAA,SAAAiP,GACA,IAAAzP,EAAAyP,EAAAzP,MAAAyP,EAEA,kBAAAA,IACAA,EAAA,CACAzP,SAIAyP,EAAA8wB,GAAA9wB,GAEA7P,KAAA+kC,eAAA3kC,IAAAJ,KAAA,KAAAI,IACAJ,KAAA,KAAAI,GAAAyP,GAGAjP,GAAAZ,KAAA6P,IAWAi1B,GAAAxjC,UAAA2jC,cAAAH,GAAAxjC,UAAAV,QAGAkkC,GAAAxjC,UAAA4jC,aAAA,SAAAr1B,GACA,IAAAod,EAAAjtB,KAGA+jC,KACAA,GAAA,IAAAoB,KAGA,IAAA/kC,EAAAyP,EAAAzP,MAAAyP,EACAvM,EAAAygC,GAAA3N,IAAAp2B,MAEAsD,IACAA,EAAA,IAAA6hC,IACApB,GAAAp4B,IAAA3L,KAAAsD,IAGA,IAAA8hC,EAAA9hC,EAAA8yB,IAAAh2B,GACAkD,EAAA+hC,OAAAjlC,GACEq3B,EAAA5tB,EAAQ0M,aAAA6uB,GACV,IAAA9sB,EAAgBmf,EAAA5tB,EAAQ+N,WAAA,WAExB,IAAAtU,EAAAnB,OACAmB,EAAA,KACAygC,GAAAsB,OAAApY,IAGAA,EAAArsB,QAAAiP,IACG,GACHvM,EAAAqI,IAAAvL,EAAAkY,IAkBA,IAAAgtB,GAAA,SAAArM,GACA,OAAAA,aAAA6L,MAAA7L,EAAAsM,aAAA,6BAAAC,MAAA,SAAA1oB,GACA,0BAAAmc,EAAAnc,MAoCA2oB,GAAA,SAAArlC,GACA,MAEA,kBAAAA,GAAA,KAAAmI,KAAAnI,IAAAqb,MAAAI,QAAAzb,QAAAW,QAeA2kC,GAAA,SAAArgC,GACA,IAAAA,EAAA2Q,WAAAsvB,GAAAjgC,GACA,UAAA+P,MAAA,0DAeAuwB,GAAA,SAAAvlC,GACA,IAAAqlC,GAAArlC,GACA,UAAAgV,MAAA,6DAeAwwB,GAAA,SAAAvlC,GACA,uBAAAA,EACA,UAAA+U,MAAA,0CAoBAywB,GAAA,SAAAtmC,EAAAyB,GAGA,IACAqE,EACAjF,EACAC,EAHAylC,EAAA9kC,EAAAD,OAAA,GAAAC,EAAA,KAAAzB,GAAAyB,EAAA,KAAAzB,EAAAgmC,YAyBA,OApBAO,GACAzgC,EAAA9F,EAAAgmC,YAGAvkC,EAAAD,QAAA,GACAC,EAAAwL,QAGApM,EAAAY,EAAA,GACAX,EAAAW,EAAA,KAEAqE,EAAArE,EAAA,GACAZ,EAAAY,EAAA,GACAX,EAAAW,EAAA,IAGA0kC,GAAArgC,GACAsgC,GAAAvlC,GACAwlC,GAAAvlC,GAEA,CACAylC,kBACAzgC,SACAjF,OACAC,SALAA,EAAA4H,GAAA1I,EAAAc,KA2BA0lC,GAAA,SAAA1gC,EAAA0R,EAAA3W,EAAAC,GACAqlC,GAAArgC,GAEAA,EAAA2Q,SACAktB,GAAAnsB,GAAA1R,EAAAjF,EAAAC,GAEAgF,EAAA0R,GAAA3W,EAAAC,IAWA2lC,GAAA,CAwBA7lC,GAAA,WAGA,IAFA,IAAA8sB,EAAAjtB,KAEAub,EAAAta,UAAAF,OAAAC,EAAA,IAAAya,MAAAF,GAAAG,EAAA,EAAuEA,EAAAH,EAAaG,IACpF1a,EAAA0a,GAAAza,UAAAya,GAGA,IAAAuqB,EAAAJ,GAAA7lC,KAAAgB,GACA8kC,EAAAG,EAAAH,gBACAzgC,EAAA4gC,EAAA5gC,OACAjF,EAAA6lC,EAAA7lC,KACAC,EAAA4lC,EAAA5lC,SAIA,GAFA0lC,GAAA1gC,EAAA,KAAAjF,EAAAC,IAEAylC,EAAA,CAEA,IAAAI,EAAA,WACA,OAAAjZ,EAAA1sB,IAAA8E,EAAAjF,EAAAC,IAKA6lC,EAAA9D,KAAA/hC,EAAA+hC,KAIA,IAAA+D,EAAA,WACA,OAAAlZ,EAAA1sB,IAAA,UAAA2lC,IAKAC,EAAA/D,KAAA/hC,EAAA+hC,KACA2D,GAAA/lC,KAAA,eAAAkmC,GACAH,GAAA1gC,EAAA,eAAA8gC,KA2BApD,IAAA,WAGA,IAFA,IAAAxU,EAAAvuB,KAEAy4B,EAAAx3B,UAAAF,OAAAC,EAAA,IAAAya,MAAAgd,GAAAC,EAAA,EAA0EA,EAAAD,EAAeC,IACzF13B,EAAA03B,GAAAz3B,UAAAy3B,GAGA,IAAA0N,EAAAP,GAAA7lC,KAAAgB,GACA8kC,EAAAM,EAAAN,gBACAzgC,EAAA+gC,EAAA/gC,OACAjF,EAAAgmC,EAAAhmC,KACAC,EAAA+lC,EAAA/lC,SAGA,GAAAylC,EACAC,GAAA1gC,EAAA,MAAAjF,EAAAC,OACK,CACL,IAAAgmC,EAAA,SAAAA,IACA9X,EAAAhuB,IAAA8E,EAAAjF,EAAAimC,GAEA,QAAA1N,EAAA13B,UAAAF,OAAAulC,EAAA,IAAA7qB,MAAAkd,GAAAC,EAAA,EAA+EA,EAAAD,EAAeC,IAC9F0N,EAAA1N,GAAA33B,UAAA23B,GAGAv4B,EAAAe,MAAA,KAAAklC,IAKAD,EAAAjE,KAAA/hC,EAAA+hC,KACA2D,GAAA1gC,EAAA,MAAAjF,EAAAimC,KAuBA9lC,IAAA,SAAAgmC,EAAAC,EAAAnmC,GAEA,IAAAkmC,GAAAd,GAAAc,GACAhmC,GAAAP,KAAAulC,YAAAgB,EAAAC,OACK,CACL,IAAAnhC,EAAAkhC,EACAnmC,EAAAomC,EAEAd,GAAArgC,GACAsgC,GAAAvlC,GACAwlC,GAAAvlC,GAEAA,EAAA4H,GAAAjI,KAAAK,GAGAL,KAAAO,IAAA,UAAAF,GAEAgF,EAAA2Q,UACAzV,GAAA8E,EAAAjF,EAAAC,GACAE,GAAA8E,EAAA,UAAAhF,IACOilC,GAAAjgC,KACPA,EAAA9E,IAAAH,EAAAC,GACAgF,EAAA9E,IAAA,UAAAF,MAiBAO,QAAA,SAAAiP,EAAAwyB,GACA,OAAAzhC,GAAAZ,KAAAulC,YAAA11B,EAAAwyB,KAqBA,SAAAoE,GAAAphC,EAAA2E,QACA,IAAAA,IACAA,EAAA,IAGA,IACA08B,EADA18B,EACA08B,YAEA,GAAAA,EAAA,CACA,IAAArhC,EAAAqhC,GAAA1wB,SACA,UAAAZ,MAAA,oBAAAsxB,EAAA,mCAGArhC,EAAAkgC,YAAAlgC,EAAAqhC,QAEArhC,EAAAkgC,YAAAhL,GAAA,QACAqB,UAAA,kBAmBA,OAfEzC,GAAM9zB,EAAA2gC,IAER3gC,EAAAshC,kBACAthC,EAAAshC,iBAAAziC,QAAA,SAAA8Q,GACAA,MAKA3P,EAAAlF,GAAA,qBACAkF,EAAA9E,MACIk3B,EAAA5tB,EAAQ+N,WAAA,WACZvS,EAAAkgC,YAAA,MACK,KAELlgC,EAeA,IAAAuhC,GAAA,CAOAC,MAAA,GAeAC,SAAA,SAAAC,GACA,IAOAC,EAPA/Z,EAAAjtB,KA0CA,MAvCA,oBAAA+mC,IACAA,OAIA7N,GAAA6N,EAAA,SAAA1/B,EAAAxB,GAGAonB,EAAA4Z,MAAAhhC,KAAAwB,KACA2/B,KAAA,IACAnhC,GAAA,CACAqW,KAAA+Q,EAAA4Z,MAAAhhC,GACAohC,GAAA5/B,IAIA4lB,EAAA4Z,MAAAhhC,GAAAwB,IAKA2/B,GAAA1B,GAAAtlC,OAYAA,KAAAY,QAAA,CACAomC,UACA5mC,KAAA,iBAIA4mC,IAsBA,SAAAE,GAAA7hC,EAAA8hC,GAUA,OATEhO,GAAM9zB,EAAAuhC,IAGRvhC,EAAAwhC,MAAiB1N,GAAM,GAAG9zB,EAAAwhC,MAAAM,GAE1B,oBAAA9hC,EAAA+hC,oBAAA9B,GAAAjgC,IACAA,EAAAlF,GAAA,eAAAkF,EAAA+hC,oBAGA/hC,EAkBA,SAAAgiC,GAAAC,GACA,wBAAAA,EACAA,EAGAA,EAAAC,OAAA,GAAAvuB,cAAAsuB,EAAA5mC,MAAA,GA2CA,SAAA8mC,KAGA,IAFA,IAAA9kC,EAAA,GAEA6Y,EAAAta,UAAAF,OAAAq4B,EAAA,IAAA3d,MAAAF,GAAAG,EAAA,EAAwEA,EAAAH,EAAaG,IACrF0d,EAAA1d,GAAAza,UAAAya,GAqBA,OAlBA0d,EAAAl1B,QAAA,SAAAyX,GACAA,GAIAud,GAAAvd,EAAA,SAAAtU,EAAAxB,GACAwzB,GAAAhyB,IAKAgyB,GAAA32B,EAAAmD,MACAnD,EAAAmD,GAAA,IAGAnD,EAAAmD,GAAA2hC,GAAA9kC,EAAAmD,GAAAwB,IARA3E,EAAAmD,GAAAwB,MAWA3E,EAkBA,IAAI+kC,GAEJ,WA0BA,SAAAC,EAAA9D,EAAA55B,EAAA29B,GAeA,IAbA/D,GAAA5jC,KAAA4nC,KACA5nC,KAAA6nC,QAAAjE,EAAA5jC,KAEAA,KAAA6nC,QAAAjE,EAIA5jC,KAAA8nC,SAAAN,GAAA,GAAmCxnC,KAAA8nC,UAEnC99B,EAAAhK,KAAA8nC,SAAAN,GAAAxnC,KAAA8nC,SAAA99B,GAEAhK,KAAA+nC,IAAA/9B,EAAA/G,IAAA+G,EAAAme,IAAAne,EAAAme,GAAAllB,IAEAjD,KAAA+nC,IAAA,CAEA,IAAA9kC,EAAA2gC,KAAA3gC,IAAA2gC,EAAA3gC,MAAA,YACAjD,KAAA+nC,IAAA9kC,EAAA,cAAA08B,KAGA3/B,KAAAgoC,MAAAh+B,EAAAyS,MAAA,KAEAzS,EAAAme,GACAnoB,KAAAioC,IAAAj+B,EAAAme,IACK,IAAAne,EAAAuwB,WACLv6B,KAAAioC,IAAAjoC,KAAAu6B,aAIA,IAAAvwB,EAAAy8B,SAEAA,GAAAzmC,KAAA,CACA0mC,YAAA1mC,KAAAioC,IAAA,aAIAf,GAAAlnC,UAAA0G,YAAAygC,cACAnnC,KAAAkoC,UAAA,GACAloC,KAAAmoC,YAAA,GACAnoC,KAAAooC,gBAAA,IAEA,IAAAp+B,EAAAq+B,cACAroC,KAAAqoC,eAGAroC,KAAA2nC,UAGA,IAAA39B,EAAAs+B,qBACAtoC,KAAAuoC,sBAUA,IAAAC,EAAAd,EAAApmC,UAu7CA,OAr7CAknC,EAAAnnC,QAAA,WAgBA,GALArB,KAAAY,QAAA,CACAR,KAAA,UACAyiC,SAAA,IAGA7iC,KAAAkoC,UACA,QAAApnC,EAAAd,KAAAkoC,UAAAnnC,OAAA,EAA6CD,GAAA,EAAQA,IACrDd,KAAAkoC,UAAApnC,GAAAO,SACArB,KAAAkoC,UAAApnC,GAAAO,UAMArB,KAAAkoC,UAAA,KACAloC,KAAAmoC,YAAA,KACAnoC,KAAAooC,gBAAA,KAEApoC,KAAAioC,MAEAjoC,KAAAioC,IAAA7K,YACAp9B,KAAAioC,IAAA7K,WAAA2B,YAAA/+B,KAAAioC,KAGAhI,GAAAjgC,KAAAioC,KACAjoC,KAAAioC,IAAA,MAIAjoC,KAAA6nC,QAAA,MAUAW,EAAA5E,OAAA,WACA,OAAA5jC,KAAA6nC,SAiBAW,EAAAx+B,QAAA,SAAAzD,GAGA,OAFIoxB,EAAGM,KAAA,kFAEP1xB,GAIAvG,KAAA8nC,SAAAN,GAAAxnC,KAAA8nC,SAAAvhC,GACAvG,KAAA8nC,UAJA9nC,KAAA8nC,UAcAU,EAAArgB,GAAA,WACA,OAAAnoB,KAAAioC,KAmBAO,EAAAjO,SAAA,SAAAxT,EAAAyT,EAAA9d,GACA,OAAA6d,GAAAxT,EAAAyT,EAAA9d,IA0CA8rB,EAAAC,SAAA,SAAAnB,EAAAoB,EAAAC,QACA,IAAAA,IACAA,EAAArB,GAGA,IAAA9uB,EAAAxY,KAAA6nC,QAAA3nB,UAAAlgB,KAAA6nC,QAAA3nB,WACA0oB,EAAA5oC,KAAA6nC,QAAAe,WAAA5oC,KAAA6nC,QAAAe,YACA1oB,EAAA0oB,KAAApwB,GACAqwB,EAAArwB,KAAAsC,MAAA,QACAguB,EAAAF,KAAAC,GACAE,EAAAJ,EAqBA,OAnBAzoB,KAAAonB,GACAyB,EAAA7oB,EAAAonB,GACKwB,KAAAxB,KACLyB,EAAAD,EAAAxB,IAGAoB,IACAK,IAAAjhC,QAAA,aAA0D,SAAAyc,EAAA/jB,GAC1D,IAAA6G,EAAAqhC,EAAAloC,EAAA,GACAwoC,EAAA3hC,EAMA,MAJA,qBAAAA,IACA2hC,EAAAzkB,GAGAykB,KAIAD,GAWAP,EAAAS,UAAA,WACA,OAAAjpC,KAAAkpC,YAAAlpC,KAAAioC,KAUAO,EAAAvlC,GAAA,WACA,OAAAjD,KAAA+nC,KAWAS,EAAA/rB,KAAA,WACA,OAAAzc,KAAAgoC,OAUAQ,EAAAW,SAAA,WACA,OAAAnpC,KAAAkoC,WAaAM,EAAAY,aAAA,SAAAnmC,GACA,OAAAjD,KAAAmoC,YAAAllC,IAaAulC,EAAAa,SAAA,SAAA5sB,GACA,GAAAA,EAKA,OADAA,EAAA4qB,GAAA5qB,GACAzc,KAAAooC,gBAAA3rB,IAsBA+rB,EAAAc,SAAA,SAAAlO,EAAApxB,EAAAxJ,GASA,IAAA+oC,EACAC,EAEA,QAXA,IAAAx/B,IACAA,EAAA,SAGA,IAAAxJ,IACAA,EAAAR,KAAAkoC,UAAAnnC,QAMA,kBAAAq6B,EAAA,CACAoO,EAAAnC,GAAAjM,GACA,IAAAqO,EAAAz/B,EAAA0/B,gBAAAF,EAEAx/B,EAAAyS,KAAA+sB,EAGA,IAAAG,EAAAjC,EAAAkC,aAAAH,GAEA,IAAAE,EACA,UAAAv0B,MAAA,aAAAq0B,EAAA,mBAOA,uBAAAE,EACA,YAGAJ,EAAA,IAAAI,EAAA3pC,KAAA6nC,SAAA7nC,KAAAgK,QAEAu/B,EAAAnO,EAmBA,GAhBAp7B,KAAAkoC,UAAAvnC,OAAAH,EAAA,EAAA+oC,GAEA,oBAAAA,EAAAtmC,KACAjD,KAAAmoC,YAAAoB,EAAAtmC,MAAAsmC,IAKAC,KAAAD,EAAA9sB,MAAA4qB,GAAAkC,EAAA9sB,WAGAzc,KAAAooC,gBAAAoB,GAAAD,GAKA,oBAAAA,EAAAphB,IAAAohB,EAAAphB,KAAA,CACA,IACA0hB,EADA7pC,KAAAipC,YAAAE,SACA3oC,IAAA,KACAR,KAAAipC,YAAA3N,aAAAiO,EAAAphB,KAAA0hB,GAIA,OAAAN,GAWAf,EAAAzJ,YAAA,SAAAwK,GAKA,GAJA,kBAAAA,IACAA,EAAAvpC,KAAAqpC,SAAAE,IAGAA,GAAAvpC,KAAAkoC,UAAA,CAMA,IAFA,IAAA4B,GAAA,EAEAhpC,EAAAd,KAAAkoC,UAAAnnC,OAAA,EAA2CD,GAAA,EAAQA,IACnD,GAAAd,KAAAkoC,UAAApnC,KAAAyoC,EAAA,CACAO,GAAA,EACA9pC,KAAAkoC,UAAAvnC,OAAAG,EAAA,GACA,MAIA,GAAAgpC,EAAA,CAIA9pC,KAAAmoC,YAAAoB,EAAAtmC,MAAA,KACAjD,KAAAooC,gBAAAmB,EAAA9sB,QAAA,KACA,IAAAstB,EAAAR,EAAAphB,KAEA4hB,KAAA3M,aAAAp9B,KAAAipC,aACAjpC,KAAAipC,YAAAlK,YAAAwK,EAAAphB,SAQAqgB,EAAAH,aAAA,WACA,IAAApb,EAAAjtB,KAEAmpC,EAAAnpC,KAAA8nC,SAAAqB,SAEA,GAAAA,EAAA,CAEA,IAwCAa,EAxCAC,EAAAjqC,KAAA8nC,SAyCAoC,EAAAxC,EAAAkC,aAAA,SAGAI,EADAvuB,MAAAI,QAAAstB,GACAA,EAEAxjC,OAAAiW,KAAAutB,IAKA7oC,OAAAqF,OAAAiW,KAAA5b,KAAA8nC,UAAA1oB,OAAA,SAAAgc,GACA,OAAA4O,EAAAG,KAAA,SAAAC,GACA,wBAAAA,EACAhP,IAAAgP,EAGAhP,IAAAgP,EAAA3tB,UAEOnZ,IAAA,SAAA83B,GACP,IAAA3e,EACA/C,EAUA,MARA,kBAAA0hB,EAEA1hB,EAAAyvB,EADA1sB,EAAA2e,IACAnO,EAAA6a,SAAArrB,IAAA,IAEAA,EAAA2e,EAAA3e,KACA/C,EAAA0hB,GAGA,CACA3e,OACA/C,UAEO0F,OAAA,SAAAgc,GAIP,IAAA3H,EAAAiU,EAAAkC,aAAAxO,EAAA1hB,KAAAgwB,gBAAArC,GAAAjM,EAAA3e,OACA,OAAAgX,IAAAyW,EAAAG,OAAA5W,KACOvvB,QA/EP,SAAAk3B,GACA,IAAA3e,EAAA2e,EAAA3e,KACA/C,EAAA0hB,EAAA1hB,KAUA,QANA/L,IAAAs8B,EAAAxtB,KACA/C,EAAAuwB,EAAAxtB,KAKA,IAAA/C,EAAA,EAMA,IAAAA,IACAA,EAAA,IAMAA,EAAA4wB,cAAArd,EAAA6a,SAAAwC,cAKA,IAAAC,EAAAtd,EAAAqc,SAAA7sB,EAAA/C,GAEA6wB,IACAtd,EAAAxQ,GAAA8tB,QA2DA/B,EAAAgC,cAAA,WAGA,UAYAhC,EAAAb,MAAA,SAAAlnB,EAAAlJ,GAKA,QAJA,IAAAA,IACAA,GAAA,GAGAkJ,EAIA,OAAAzgB,KAAAyqC,cAMAlzB,EACAkJ,EAAAvf,KAAAlB,MAGAA,KAAA4X,WAAA6I,EAAA,KATAzgB,KAAA0qC,YAAA1qC,KAAA0qC,aAAA,QACA1qC,KAAA0qC,YAAAvpC,KAAAsf,KAkBA+nB,EAAAmC,aAAA,WACA3qC,KAAAyqC,UAAA,EAEAzqC,KAAA4X,WAAA,WACA,IAAAgzB,EAAA5qC,KAAA0qC,YAEA1qC,KAAA0qC,YAAA,GAEAE,KAAA7pC,OAAA,GACA6pC,EAAA1mC,QAAA,SAAAuc,GACAA,EAAAvf,KAAAlB,OACSA,MAWTA,KAAAY,QAAA,UACK,IAsBL4nC,EAAAlJ,EAAA,SAAAnF,EAAAC,GACA,OAAAkF,GAAAnF,EAAAC,GAAAp6B,KAAAipC,cAsBAT,EAAAjJ,GAAA,SAAApF,EAAAC,GACA,OAAAmF,GAAApF,EAAAC,GAAAp6B,KAAAipC,cAcAT,EAAAhN,SAAA,SAAAC,GACA,OAAAD,GAAAx7B,KAAAioC,IAAAxM,IAUA+M,EAAA3M,SAAA,SAAAC,GACAD,GAAA77B,KAAAioC,IAAAnM,IAUA0M,EAAAxM,YAAA,SAAAC,GACAD,GAAAh8B,KAAAioC,IAAAhM,IAeAuM,EAAArM,YAAA,SAAAC,EAAAC,GACAF,GAAAn8B,KAAAioC,IAAA7L,EAAAC,IAQAmM,EAAAqC,KAAA,WACA7qC,KAAAg8B,YAAA,eAQAwM,EAAAsC,KAAA,WACA9qC,KAAA67B,SAAA,eAUA2M,EAAAuC,YAAA,WACA/qC,KAAA67B,SAAA,qBAUA2M,EAAAwC,cAAA,WACAhrC,KAAAg8B,YAAA,qBAmBAwM,EAAA3L,aAAA,SAAAC,GACA,OAAAD,GAAA78B,KAAAioC,IAAAnL,IAeA0L,EAAAzN,aAAA,SAAA+B,EAAAz1B,GACA0zB,GAAA/6B,KAAAioC,IAAAnL,EAAAz1B,IAYAmhC,EAAA/L,gBAAA,SAAAK,GACAL,GAAAz8B,KAAAioC,IAAAnL,IAkBA0L,EAAA7pB,MAAA,SAAAssB,EAAAC,GACA,OAAAlrC,KAAAmrC,UAAA,QAAAF,EAAAC,IAkBA1C,EAAA5pB,OAAA,SAAAqsB,EAAAC,GACA,OAAAlrC,KAAAmrC,UAAA,SAAAF,EAAAC,IAaA1C,EAAA4C,WAAA,SAAAzsB,EAAAC,GAEA5e,KAAA2e,SAAA,GACA3e,KAAA4e,WAgCA4pB,EAAA2C,UAAA,SAAAE,EAAAJ,EAAAC,GACA,QAAAv9B,IAAAs9B,EA0BA,OAxBA,OAAAA,WACAA,EAAA,IAIA,QAAAA,GAAAxqC,QAAA,eAAAwqC,GAAAxqC,QAAA,MACAT,KAAAioC,IAAAhE,MAAAoH,GAAAJ,EAEAjrC,KAAAioC,IAAAhE,MAAAoH,GADO,SAAAJ,EACP,GAEAA,EAAA,UAIAC,GAOAlrC,KAAAY,QAAA,oBAQA,IAAAZ,KAAAioC,IACA,SAIA,IAAApN,EAAA76B,KAAAioC,IAAAhE,MAAAoH,GACAC,EAAAzQ,EAAAp6B,QAAA,MAEA,WAAA6qC,EAEAjqB,SAAAwZ,EAAAn6B,MAAA,EAAA4qC,GAAA,IAMAjqB,SAAArhB,KAAAioC,IAAA,SAAAZ,GAAAgE,IAAA,KAgBA7C,EAAA+C,iBAAA,SAAAF,GACA,IAAAG,EAAA,EAEA,aAAAH,GAAA,WAAAA,EACA,UAAAj2B,MAAA,uDAGA,GAAuB,oBAARqiB,EAAA5tB,EAAQ0vB,iBAAA,CACvB,IAAAkS,EAA0BhU,EAAA5tB,EAAQ0vB,iBAAAv5B,KAAAioC,KAClCuD,EAAAC,EAAAC,iBAAAL,IAAAI,EAAAJ,GAQA,QAJAG,EAAA7jB,WAAA6jB,IAIA,CACA,IAAAG,EAAA,SAAAtE,GAAAgE,GACAG,EAAAxrC,KAAAioC,IAAA0D,GAGA,OAAAH,GA0BAhD,EAAAoD,kBAAA,WACA,OACAjtB,MAAA3e,KAAAurC,iBAAA,SACA3sB,OAAA5e,KAAAurC,iBAAA,YAaA/C,EAAAqD,aAAA,WACA,OAAA7rC,KAAAurC,iBAAA,UAYA/C,EAAAsD,cAAA,WACA,OAAA9rC,KAAAurC,iBAAA,WAOA/C,EAAAxL,MAAA,WACAh9B,KAAAioC,IAAAjL,SAOAwL,EAAAuD,KAAA,WACA/rC,KAAAioC,IAAA8D,QAiBAvD,EAAAwD,cAAA,WAEA,IAQAC,EARAC,EAAA,EACAC,EAAA,KAQAnsC,KAAAG,GAAA,sBAAA0P,GAEA,IAAAA,EAAAu8B,QAAArrC,SAEAorC,EAAA,CACAxN,MAAA9uB,EAAAu8B,QAAA,GAAAzN,MACAD,MAAA7uB,EAAAu8B,QAAA,GAAA1N,OAGAwN,GAAA,IAAApkB,MAAAgY,UAEAmM,GAAA,KAGAjsC,KAAAG,GAAA,qBAAA0P,GAEA,GAAAA,EAAAu8B,QAAArrC,OAAA,EACAkrC,GAAA,OACO,GAAAE,EAAA,CAGP,IAAAE,EAAAx8B,EAAAu8B,QAAA,GAAAzN,MAAAwN,EAAAxN,MACA2N,EAAAz8B,EAAAu8B,QAAA,GAAA1N,MAAAyN,EAAAzN,MACA/6B,KAAA4oC,KAAAF,IAAAC,KA3BA,KA8BAL,GAAA,MAKA,IAAAO,EAAA,WACAP,GAAA,GAIAjsC,KAAAG,GAAA,aAAAqsC,GACAxsC,KAAAG,GAAA,cAAAqsC,GAGAxsC,KAAAG,GAAA,oBAAA0P,IACAs8B,EAAA,MAEA,IAAAF,MAEA,IAAAnkB,MAAAgY,UAAAoM,EA/CA,MAmDAr8B,EAAAmxB,iBAQAhhC,KAAAY,QAAA,YAgCA4nC,EAAAD,oBAAA,WAEA,GAAAvoC,KAAA4jC,UAAA5jC,KAAA4jC,SAAA6I,mBAAA,CAKA,IACAC,EADAC,EAAA1kC,GAAAjI,KAAA4jC,SAAA5jC,KAAA4jC,SAAA6I,oBAEAzsC,KAAAG,GAAA,wBACAwsC,IAIA3sC,KAAA4sC,cAAAF,GAEAA,EAAA1sC,KAAA6sC,YAAAF,EAAA,OAGA,IAAAG,EAAA,SAAAj9B,GACA88B,IAEA3sC,KAAA4sC,cAAAF,IAGA1sC,KAAAG,GAAA,YAAAwsC,GACA3sC,KAAAG,GAAA,WAAA2sC,GACA9sC,KAAAG,GAAA,cAAA2sC,KAqCAtE,EAAA5wB,WAAA,SAAA6I,EAAAnI,GACA,IAIAy0B,EAAAC,EAJAze,EAAAvuB,KAkBA,OAbAygB,EAAAxY,GAAAjI,KAAAygB,GACAssB,EAAgBtV,EAAA5tB,EAAQ+N,WAAA,WACxB2W,EAAAhuB,IAAA,UAAAysC,GAEAvsB,KACKnI,IAEL00B,EAAA,WACA,OAAAze,EAAAhY,aAAAw2B,KAGA3K,KAAA,eAAA2K,EACA/sC,KAAAG,GAAA,UAAA6sC,GACAD,GAmBAvE,EAAAjyB,aAAA,SAAAw2B,GACItV,EAAA5tB,EAAQ0M,aAAAw2B,GAEZ,IAAAC,EAAA,aAIA,OAFAA,EAAA5K,KAAA,eAAA2K,EACA/sC,KAAAO,IAAA,UAAAysC,GACAD,GAwBAvE,EAAAqE,YAAA,SAAApsB,EAAAwsB,GACA,IAAAC,EAAAltC,KAEAygB,EAAAxY,GAAAjI,KAAAygB,GACA,IAAA0sB,EAAqB1V,EAAA5tB,EAAQgjC,YAAApsB,EAAAwsB,GAE7BD,EAAA,WACA,OAAAE,EAAAN,cAAAO,IAKA,OAFAH,EAAA5K,KAAA,gBAAA+K,EACAntC,KAAAG,GAAA,UAAA6sC,GACAG,GAmBA3E,EAAAoE,cAAA,SAAAO,GACI1V,EAAA5tB,EAAQ+iC,cAAAO,GAEZ,IAAAH,EAAA,aAIA,OAFAA,EAAA5K,KAAA,gBAAA+K,EACAntC,KAAAO,IAAA,UAAAysC,GACAG,GA6BA3E,EAAA4E,sBAAA,SAAA3sB,GACA,IAIAxd,EAAA+pC,EAJAK,EAAArtC,KAMA,OAAAA,KAAAstC,cACA7sB,EAAAxY,GAAAjI,KAAAygB,GACAxd,EAAWw0B,EAAA5tB,EAAQujC,sBAAA,WACnBC,EAAA9sC,IAAA,UAAAysC,GAEAvsB,OAGAusB,EAAA,WACA,OAAAK,EAAAE,qBAAAtqC,KAGAm/B,KAAA,WAAAn/B,EACAjD,KAAAG,GAAA,UAAA6sC,GACA/pC,GAIAjD,KAAA4X,WAAA6I,EAAA,SAoBA+nB,EAAA+E,qBAAA,SAAAtqC,GACA,GAAAjD,KAAAstC,aAAA,CACM7V,EAAA5tB,EAAQ0jC,qBAAAtqC,GAEd,IAAA+pC,EAAA,aAIA,OAFAA,EAAA5K,KAAA,WAAAn/B,EACAjD,KAAAO,IAAA,UAAAysC,GACA/pC,EAIA,OAAAjD,KAAAuW,aAAAtT,IAuBAykC,EAAA8F,kBAAA,SAAA/wB,EAAAgxB,GACA,qBAAAhxB,MACA,UAAArH,MAAA,4BAAAqH,EAAA,kCAGA,IAMAixB,EANAxD,EAAAxC,EAAAkC,aAAA,QAEAS,EAAAH,KAAAG,OAAAoD,GACAE,EAAAjG,IAAA+F,GAAA/F,EAAApmC,UAAAssC,cAAAH,EAAAnsC,WAEA,GAAA+oC,IAAAsD,EASA,MALAD,EADArD,EACA,qDAEA,+BAGA,IAAAj1B,MAAA,uBAAAqH,EAAA,MAA2DixB,EAAA,KAG3DjxB,EAAA4qB,GAAA5qB,GAEAirB,EAAAmG,cACAnG,EAAAmG,YAAA,IAGA,IAAAC,EAAApG,EAAAkC,aAAA,UAEA,cAAAntB,GAAAqxB,KAAAC,QAAA,CACA,IAAAA,EAAAD,EAAAC,QACAC,EAAAroC,OAAAiW,KAAAmyB,GAKA,GAAAA,GAAAC,EAAAjtC,OAAA,GAAAitC,EAAA1qC,IAAA,SAAA2qC,GACA,OAAAF,EAAAE,KACOzI,MAAA0I,SACP,UAAA94B,MAAA,oEAKA,OADAsyB,EAAAmG,YAAApxB,GAAAgxB,EACAA,GAkBA/F,EAAAkC,aAAA,SAAAntB,GACA,GAAAA,EAMA,OAFAA,EAAA4qB,GAAA5qB,GAEAirB,EAAAmG,aAAAnG,EAAAmG,YAAApxB,GACAirB,EAAAmG,YAAApxB,QADA,GAKAirB,EA7gDA,GAyhDAD,GAASnmC,UAAAgsC,aAAyC,oBAAR7V,EAAA5tB,EAAQujC,uBAAwD,oBAAR3V,EAAA5tB,EAAQ0jC,qBAC1G9F,GAAS+F,kBAAA,YAAgC/F,IAMzC,IAAA0G,GAAiB1W,EAAA5tB,EAAQukC,WAAc3W,EAAA5tB,EAAQukC,UAAAC,WAAA,GAC/CC,GAAA,yBAAAh0B,KAAA6zB,IACAI,GAAAD,GAAA3mB,WAAA2mB,GAAA7gC,OAAA,KASA+gC,GAAA,QAAAjmC,KAAA4lC,IAYAM,GAAA,UAAAlmC,KAAA4lC,MAAAK,GASAE,GAAA,QAAAnmC,KAAA4lC,IASAQ,GAAAF,IAAAD,IAAAE,GASAE,GAAA,WACA,IAAArqB,EAAA4pB,GAAA5pB,MAAA,cAEA,OAAAA,KAAA,GACAA,EAAA,GAGA,KAPA,GAkBAsqB,GAAA,WAAAtmC,KAAA4lC,IASAW,GAAA,WAGA,IAAAvqB,EAAA4pB,GAAA5pB,MAAA,0CAEA,IAAAA,EACA,YAGA,IAAAwqB,EAAAxqB,EAAA,IAAAoD,WAAApD,EAAA,IACAyqB,EAAAzqB,EAAA,IAAAoD,WAAApD,EAAA,IAEA,OAAAwqB,GAAAC,EACArnB,WAAApD,EAAA,OAAAA,EAAA,IACGwqB,GAIH,KAlBA,GA6BAE,GAAAJ,IAAAC,GAAA,GAAAP,GAAA,IASAW,GAAA,WAAA3mC,KAAA4lC,IASAgB,GAAA,QAAA5mC,KAAA4lC,IAYAiB,IAAAD,KAAA,UAAA5mC,KAAA4lC,KAAA,SAAA5lC,KAAA4lC,KASAkB,GAAA,WACA,IAAA9qB,EAAA4pB,GAAA5pB,MAAA,yBAEA,OAAAA,KAAA,GACAoD,WAAApD,EAAA,IAGA,KAPA,GAkBA+qB,GAAA,WACA,IAAA5sC,EAAA,kBAAA4X,KAAA6zB,IACAnrC,EAAAN,GAAAilB,WAAAjlB,EAAA,IAOA,OALAM,GAAA,gBAAAuF,KAAA4lC,KAAA,UAAA5lC,KAAA4lC,MAEAnrC,EAAA,IAGAA,EATA,GAoBAusC,GAAA,UAAAhnC,KAAA4lC,MAAAiB,KAAAP,KAAAM,GASAK,IAAAD,IAAAZ,MAAAS,GASAK,GAAA7V,OAAA,iBAAmDnC,EAAA5tB,GAAY4tB,EAAA5tB,EAAQukC,UAAAsB,gBAA6BjY,EAAA5tB,EAAQ8lC,eAAkBlY,EAAA5tB,EAAQ/J,oBAAqB23B,EAAA5tB,EAAQ8lC,eACnKC,GAEAjqC,OAAA85B,OAAA,CACA+O,WACAC,aACAC,WACAC,UACAC,eACAC,cACAC,mBACAG,qBACAC,cACAC,WACAC,aACAC,kBACAC,cACAC,aACAC,iBACAC,mBAuFA,SAAAI,GAAAC,EAAAC,EAAA5uB,EAAA6uB,GAEA,OAjCA,SAAAF,EAAAtvC,EAAAyvC,GACA,qBAAAzvC,KAAA,GAAAA,EAAAyvC,EACA,UAAA76B,MAAA,sBAAA06B,EAAA,0CAAAtvC,EAAA,wCAAAyvC,EAAA,MA8BAC,CAAAJ,EAAAE,EAAA7uB,EAAApgB,OAAA,GACAogB,EAAA6uB,GAAAD,GAWA,SAAAI,GAAAhvB,GACA,YAAAxT,IAAAwT,GAAA,IAAAA,EAAApgB,OACA,CACAA,OAAA,EACAgT,MAAA,WACA,UAAAqB,MAAA,oCAEAhT,IAAA,WACA,UAAAgT,MAAA,qCAKA,CACArU,OAAAogB,EAAApgB,OACAgT,MAAA87B,GAAA5nC,KAAA,eAAAkZ,GACA/e,IAAAytC,GAAA5nC,KAAA,aAAAkZ,IAiBA,SAAAivB,GAAAr8B,EAAA3R,GACA,OAAAqZ,MAAAI,QAAA9H,GACAo8B,GAAAp8B,QACGpG,IAAAoG,QAAApG,IAAAvL,EACH+tC,KAGAA,GAAA,EAAAp8B,EAAA3R,KAqBA,SAAAiuC,GAAAC,EAAApjC,GACA,IACA6G,EACA3R,EAFAmuC,EAAA,EAIA,IAAArjC,EACA,SAGAojC,KAAAvvC,SACAuvC,EAAAF,GAAA,MAGA,QAAAtvC,EAAA,EAAiBA,EAAAwvC,EAAAvvC,OAAqBD,IACtCiT,EAAAu8B,EAAAv8B,MAAAjT,IACAsB,EAAAkuC,EAAAluC,IAAAtB,IAEAoM,IACA9K,EAAA8K,GAGAqjC,GAAAnuC,EAAA2R,EAGA,OAAAw8B,EAAArjC,EA2BA,IAVA,IAQAsjC,GARAC,GAAA,GAEAC,GAAA,qHACA,wJACA,gKACA,wIACA,iIACAC,GAAAD,GAAA,GAGSE,GAAC,EAAMA,GAACF,GAAA3vC,OAAkB6vC,KAEnC,GAAAF,GAAaE,IAAC,KAAQ/W,EAAAhwB,EAAQ,CAC9B2mC,GAAAE,GAAwBE,IACxB,MAKA,GAAAJ,GACA,QAAWK,GAAE,EAAMA,GAAEL,GAAAzvC,OAAsB8vC,KAC3CJ,GAAAE,GAA0BE,KAAEL,GAAgBK,IA0B5C,SAAAC,GAAAzpC,GAGA,GAAAA,aAAAypC,GACA,OAAAzpC,EAGA,kBAAAA,EACArH,KAAAwY,KAAAnR,EACG,kBAAAA,EAEHrH,KAAAwvB,QAAAnoB,EACGgU,GAAAhU,KAGH,kBAAAA,EAAAmR,OACAxY,KAAAwY,KAAAnR,EAAAmR,MAGI2gB,GAAMn5B,KAAAqH,IAGVrH,KAAAwvB,UACAxvB,KAAAwvB,QAAAshB,GAAAC,gBAAA/wC,KAAAwY,OAAA,IAUAs4B,GAAAxvC,UAAAkX,KAAA,EAQAs4B,GAAAxvC,UAAAkuB,QAAA,GAWAshB,GAAAxvC,UAAAuV,OAAA,KAeAi6B,GAAAE,WAAA,oIAQAF,GAAAC,gBAAA,CACAE,EAAA,iCACAC,EAAA,8DACAC,EAAA,8HACAC,EAAA,qHACAC,EAAA,qEAIA,QAAAC,GAAA,EAAoBA,GAAAR,GAAAE,WAAAjwC,OAAuCuwC,KAC3DR,MAAAE,WAAAM,QAEAR,GAAAxvC,UAAAwvC,GAAAE,WAAAM,QAcA,SAAAC,GAAAlqC,GACA,YAAAsG,IAAAtG,GAAA,OAAAA,GAAA,oBAAAA,EAAAmqC,KAaA,SAAAC,GAAApqC,GACAkqC,GAAAlqC,IACAA,EAAAmqC,KAAA,cAAA7pC,MAuBA,IAAA+pC,GAAA,SAAA3nC,GAiBA,MAhBA,gFAAAlH,OAAA,SAAAyZ,EAAA/R,EAAAzJ,GAKA,OAJAiJ,EAAAQ,KACA+R,EAAA/R,GAAAR,EAAAQ,IAGA+R,GACG,CACHq1B,KAAA5nC,EAAA4nC,MAAAl2B,MAAAna,UAAAgC,IAAApC,KAAA6I,EAAA4nC,KAAA,SAAAC,GACA,OACA7vC,UAAA6vC,EAAA7vC,UACAoO,QAAAyhC,EAAAzhC,QACAZ,KAAAqiC,EAAAriC,KACAtM,GAAA2uC,EAAA3uC,SAgEA4uC,GA5CA,SAAAC,GACA,IAAAC,EAAAD,EAAAvS,GAAA,SACAyS,EAAAv2B,MAAAna,UAAAgC,IAAApC,KAAA6wC,EAAA,SAAA/uB,GACA,OAAAA,EAAAjZ,QAWA,OATA0R,MAAAna,UAAAgC,IAAApC,KAAA6wC,EAAA,SAAAE,GACA,IAAAz6B,EAAAk6B,GAAAO,EAAAloC,OAMA,OAJAkoC,EAAAC,MACA16B,EAAA06B,IAAAD,EAAAC,KAGA16B,IAEAlX,OAAAmb,MAAAna,UAAA8d,OAAAle,KAAA4wC,EAAAK,aAAA,SAAApoC,GACA,WAAAioC,EAAAvxC,QAAAsJ,KACGzG,IAAAouC,MA4BHG,GAbA,SAAAr6B,EAAAs6B,GAUA,OATAt6B,EAAAtT,QAAA,SAAA6F,GACA,IAAAqoC,EAAAN,EAAAO,mBAAAtoC,UAEAA,EAAAmoC,KAAAnoC,EAAA4nC,MACA5nC,EAAA4nC,KAAAztC,QAAA,SAAA0tC,GACA,OAAAQ,EAAAE,OAAAV,OAIAE,EAAAK,cAQAI,GAAA,mBAYIC,GAEJ,SAAAC,GAoCA,SAAAC,EAAA9O,EAAA55B,GACA,IAAAijB,EA2BA,OAzBAA,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACA2yC,QAAA1lB,EAAA2lB,eAAA3lB,EAAA4lB,gBAAA,EAEA5lB,EAAA6lB,WAAA7lB,EAAA6a,SAAAiL,aAEA9lB,EAAAwN,QAAAxN,EAAA6a,SAAArN,SAKAxN,EAAAic,WAAA3O,GAAA,OACAqB,UAAA2W,GAAA,YACK,CACLtyB,KAAA,aAEAgN,EAAA+lB,QAAAzY,GAAA,KACAqB,UAAA2W,GAAA,gCACAtvC,GAAAgqB,EAAA9E,KAAA0U,aAAA,sBAEA5V,GAAAgG,EAAA+lB,QAAA/lB,EAAAgmB,eAEAhmB,EAAAgb,IAAA1M,YAAAtO,EAAA+lB,SAEA/lB,EAAAgb,IAAA1M,YAAAtO,EAAAic,YAEAjc,EA/DAqJ,EAAAoc,EAAAD,GAyEA,IAAAjK,EAAAkK,EAAApxC,UAmbA,OAjbAknC,EAAAjO,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA57B,KAAAwqC,gBACA0I,UAAA,GACK,CACLC,mBAAAnzC,KAAAiD,KAAA,eACAmwC,cAAA,OACAC,aAAArzC,KAAAmgB,QACAF,KAAA,YAIAuoB,EAAAnnC,QAAA,WACArB,KAAAkpC,WAAA,KACAlpC,KAAAgzC,QAAA,KACAhzC,KAAAszC,oBAAA,KAEAb,EAAAnxC,UAAAD,QAAAH,KAAAlB,OAUAwoC,EAAAgC,cAAA,WACA,OAAA+H,GAAA,eAAAE,EAAAnxC,UAAAkpC,cAAAtpC,KAAAlB,OAaAwoC,EAAA+K,eAAA,SAAA5rC,GAlIA,KAmIAA,EAAAm6B,OAAA9hC,KAAA8yC,aACA9yC,KAAAwzC,SAWAhL,EAAAroB,MAAA,WACA,OAAAngB,KAAAyoC,SAAAzoC,KAAA8nC,SAAA3nB,OAAA,iBAWAqoB,EAAAyK,YAAA,WACA,IAAAQ,EAAAzzC,KAAA8nC,SAAAmL,aAAAjzC,KAAAyoC,SAAA,2BAMA,OAJAzoC,KAAA8yC,cACAW,GAAA,IAAAzzC,KAAAyoC,SAAA,wFAGAgL,GAUAjL,EAAAtwB,KAAA,WACA,IAAAlY,KAAA2yC,QAAA,CACA,IAAA/O,EAAA5jC,KAAA4jC,SAQA5jC,KAAAY,QAAA,mBACAZ,KAAA2yC,SAAA,GAGA3yC,KAAA8nC,SAAA4L,aAAA1zC,KAAA4yC,iBAAA5yC,KAAA6yC,iBACA7yC,KAAA2zC,OAKA3zC,KAAA4zC,aAAAhQ,EAAAiQ,SAEA7zC,KAAA8nC,SAAAgM,aAAA9zC,KAAA4zC,aACAhQ,EAAAmQ,QAGA/zC,KAAA8yC,aACA9yC,KAAAG,GAAAH,KAAAioC,IAAArF,cAAA,UAAA36B,GAAAjI,UAAAuzC,iBAIAvzC,KAAAg0C,aAAApQ,EAAAqQ,WACArQ,EAAAqQ,UAAA,GACAj0C,KAAA6qC,OACA7qC,KAAAk0C,oBACAl0C,KAAAmoB,KAAA4S,aAAA,uBAQA/6B,KAAAY,QAAA,aACAZ,KAAA4yC,gBAAA,IAcApK,EAAA2L,OAAA,SAAA9sC,GAKA,MAJA,mBAAAA,GACArH,KAAAqH,EAAA,kBAGArH,KAAA2yC,SAWAnK,EAAAgL,MAAA,WACA,GAAAxzC,KAAA2yC,QAAA,CAIA,IAAA/O,EAAA5jC,KAAA4jC,SAQA5jC,KAAAY,QAAA,oBACAZ,KAAA2yC,SAAA,EAEA3yC,KAAA4zC,aAAA5zC,KAAA8nC,SAAAgM,aACAlQ,EAAAgE,OAGA5nC,KAAA8yC,aACA9yC,KAAAO,IAAAP,KAAAioC,IAAArF,cAAA,UAAA36B,GAAAjI,UAAAuzC,iBAGAvzC,KAAAg0C,cACApQ,EAAAqQ,UAAA,GAGAj0C,KAAA8qC,OACA9qC,KAAAmoB,KAAA4S,aAAA,sBAQA/6B,KAAAY,QAAA,cACAZ,KAAAo0C,mBAEAp0C,KAAA8nC,SAAAuM,WACAr0C,KAAAqB,YAcAmnC,EAAAsK,UAAA,SAAAzrC,GACA,sBAAAA,EAAA,CACA,IAAAyrC,EAAA9yC,KAAAs0C,aAAAjtC,EACAmsC,EAAAxzC,KAAAqpC,SAAA,eAEA,GAAAyJ,IAAAU,EAAA,CAGA,IAAAe,EAAAv0C,KAAAkpC,WACAlpC,KAAAkpC,WAAAlpC,KAAAioC,IACAuL,EAAAxzC,KAAAspC,SAAA,eACAkL,YAAA,uBAEAx0C,KAAAkpC,WAAAqL,EACAv0C,KAAAG,GAAAqzC,EAAA,QAAAxzC,KAAAwzC,QAIAV,GAAAU,IACAxzC,KAAAO,IAAAizC,EAAA,QAAAxzC,KAAAwzC,OACAxzC,KAAA++B,YAAAyU,GACAA,EAAAnyC,WAIA,OAAArB,KAAAs0C,YAQA9L,EAAAmL,KAAA,WACA3zC,KAAAy0C,SAAAz0C,KAAAy6B,YAcA+N,EAAAiM,SAAA,SAAAha,GACA,IAAAwO,EAAAjpC,KAAAipC,YACAyL,EAAAzL,EAAA7L,WACAuX,EAAA1L,EAAA2L,YAQA50C,KAAAY,QAAA,mBACAZ,KAAA6yC,gBAAA,EAGA6B,EAAA3V,YAAAkK,GACAjpC,KAAA60C,QACA3V,GAAA+J,EAAAxO,GAQAz6B,KAAAY,QAAA,aAEA+zC,EACAD,EAAApZ,aAAA2N,EAAA0L,GAEAD,EAAAnZ,YAAA0N,GAIA,IAAA6L,EAAA90C,KAAAqpC,SAAA,eAEAyL,GACAJ,EAAAnZ,YAAAuZ,EAAA7M,MAWAO,EAAAqM,MAAA,WAOA70C,KAAAY,QAAA,oBACAk+B,GAAA9+B,KAAAipC,aAQAjpC,KAAAY,QAAA,eAmBA4nC,EAAA/N,QAAA,SAAApzB,GAKA,MAJA,qBAAAA,IACArH,KAAA+0C,SAAA1tC,GAGArH,KAAA+0C,UASAvM,EAAA0L,kBAAA,WACA,IAAAc,EAAmBnb,EAAAhwB,EAAQorC,cAC3BC,EAAAl1C,KAAA6nC,QAAAI,IACAjoC,KAAAszC,oBAAA,MAEA4B,EAAAvZ,SAAAqZ,IAAAE,IAAAF,KACAh1C,KAAAszC,oBAAA0B,EACAh1C,KAAAg9B,QACAh9B,KAAAG,GAAc05B,EAAAhwB,EAAQ,UAAA7J,KAAAm1C,iBAUtB3M,EAAA4L,iBAAA,WACAp0C,KAAAszC,sBACAtzC,KAAAszC,oBAAAtW,QACAh9B,KAAAszC,oBAAA,MAGAtzC,KAAAO,IAAas5B,EAAAhwB,EAAQ,UAAA7J,KAAAm1C,gBASrB3M,EAAA2M,cAAA,SAAAtlC,GAEA,OAAAA,EAAAiyB,MAAA,CAQA,IAJA,IAEAsT,EAFAC,EAAAr1C,KAAAs1C,gBACAN,EAAAh1C,KAAAioC,IAAA5N,cAAA,UAGAv5B,EAAA,EAAmBA,EAAAu0C,EAAAt0C,OAAyBD,IAC5C,GAAAk0C,IAAAK,EAAAv0C,GAAA,CACAs0C,EAAAt0C,EACA,MAIQ+4B,EAAAhwB,EAAQorC,gBAAAj1C,KAAAioC,MAChBmN,EAAA,GAGAvlC,EAAA0lC,UAAA,IAAAH,GACAC,IAAAt0C,OAAA,GAAAi8B,QACAntB,EAAAmxB,kBACKnxB,EAAA0lC,UAAAH,IAAAC,EAAAt0C,OAAA,IACLs0C,EAAA,GAAArY,QACAntB,EAAAmxB,oBAUAwH,EAAA8M,cAAA,WACA,IAAAE,EAAAx1C,KAAAioC,IAAAwN,iBAAA,KACA,OAAAh6B,MAAAna,UAAA8d,OAAAle,KAAAs0C,EAAA,SAAApa,GACA,OAAAA,aAA+B3D,EAAA5tB,EAAQ6rC,mBAAAta,aAAuC3D,EAAA5tB,EAAQ8rC,kBAAAva,EAAAwa,aAAA,UAAAxa,aAAqE3D,EAAA5tB,EAAQgsC,kBAAAza,aAAsC3D,EAAA5tB,EAAQisC,mBAAA1a,aAAuC3D,EAAA5tB,EAAQksC,qBAAA3a,aAAyC3D,EAAA5tB,EAAQmsC,qBAAA5a,EAAAwa,aAAA,aAAAxa,aAA2E3D,EAAA5tB,EAAQosC,mBAAA7a,aAAuC3D,EAAA5tB,EAAQqsC,mBAAA9a,aAAuC3D,EAAA5tB,EAAQssC,kBAAA/a,EAAAwa,aAAA,kBAAAxa,EAAAyB,aAAA,aAAAzB,EAAAwa,aAAA,sBAIlelD,EA7fA,CA8fEjL,IASF+K,GAAWlxC,UAAAwmC,SAAA,CACXgM,aAAA,EACAO,WAAA,GAEA5M,GAAS+F,kBAAA,cAAkCgF,IAQ3C,IAAA4D,GAEA,SAAAC,GAYA,SAAAD,EAAAhkC,GACA,IAAA6a,OAEA,IAAA7a,IACAA,EAAA,KAGA6a,EAAAopB,EAAAn1C,KAAAlB,aACAs2C,QAAA,GAQA3wC,OAAAC,eAAAkB,IAAAmmB,IAAA,UACAmJ,IAAA,WACA,OAAAp2B,KAAAs2C,QAAAv1C,UAIA,QAAAD,EAAA,EAAmBA,EAAAsR,EAAArR,OAAmBD,IACtCmsB,EAAAspB,SAAAnkC,EAAAtR,IAGA,OAAAmsB,EArCAqJ,EAAA8f,EAAAC,GAiDA,IAAA7N,EAAA4N,EAAA90C,UAoGA,OAlGAknC,EAAA+N,SAAA,SAAAxsC,GACA,IAAAvJ,EAAAR,KAAAs2C,QAAAv1C,OAEA,GAAAP,KAAAR,MACA2F,OAAAC,eAAA5F,KAAAQ,EAAA,CACA41B,IAAA,WACA,OAAAp2B,KAAAs2C,QAAA91C,OAMA,IAAAR,KAAAs2C,QAAA71C,QAAAsJ,KACA/J,KAAAs2C,QAAAn1C,KAAA4I,GAUA/J,KAAAY,QAAA,CACAmJ,QACA3J,KAAA,eAcAooC,EAAAgO,YAAA,SAAAC,GAGA,IAFA,IAAA1sC,EAEAjJ,EAAA,EAAAic,EAAA/c,KAAAe,OAAoCD,EAAAic,EAAOjc,IAC3C,GAAAd,KAAAc,KAAA21C,EAAA,EACA1sC,EAAA/J,KAAAc,IAEAP,KACAwJ,EAAAxJ,MAGAP,KAAAs2C,QAAA31C,OAAAG,EAAA,GACA,MAIAiJ,GAaA/J,KAAAY,QAAA,CACAmJ,QACA3J,KAAA,iBAaAooC,EAAAkO,aAAA,SAAAzzC,GAGA,IAFA,IAAAP,EAAA,KAEA5B,EAAA,EAAAic,EAAA/c,KAAAe,OAAoCD,EAAAic,EAAOjc,IAAA,CAC3C,IAAAiJ,EAAA/J,KAAAc,GAEA,GAAAiJ,EAAA9G,OAAA,CACAP,EAAAqH,EACA,OAIA,OAAArH,GAGA0zC,EAtJA,CAuJCtR,IAsBD,QAAS6R,MANTP,GAAA90C,UAAAyjC,eAAA,CACA6R,OAAA,SACAC,SAAA,WACAC,YAAA,eAGcV,GAAA90C,UAAAyjC,eACdqR,GAAA90C,UAAA,KAA6Bq1C,IAAK,KAgBlC,IAAAI,GAAA,SAAA56B,EAAApS,GACA,QAAAjJ,EAAA,EAAiBA,EAAAqb,EAAApb,OAAiBD,IAClC6E,OAAAiW,KAAAO,EAAArb,IAAAC,QAAAgJ,EAAA9G,KAAAkZ,EAAArb,GAAAmC,KAKAkZ,EAAArb,GAAAk2C,SAAA,IAWAC,GAEA,SAAAC,GAUA,SAAAD,EAAA7kC,GACA,IAAA6a,OAEA,IAAA7a,IACAA,EAAA,IAKA,QAAAtR,EAAAsR,EAAArR,OAAA,EAAmCD,GAAA,EAAQA,IAC3C,GAAAsR,EAAAtR,GAAAk2C,QAAA,CACAD,GAAA3kC,IAAAtR,IACA,MAMA,OAFAmsB,EAAAiqB,EAAAh2C,KAAAlB,KAAAoS,IAAApS,MACAm3C,WAAA,EACAlqB,EAiDA,OA5EAqJ,EAAA2gB,EAAAC,GAuCAD,EAAA31C,UAEAi1C,SAAA,SAAAxsC,GACA,IAAAwkB,EAAAvuB,KAEA+J,EAAAitC,SACAD,GAAA/2C,KAAA+J,GAGAmtC,EAAA51C,UAAAi1C,SAAAr1C,KAAAlB,KAAA+J,GAGAA,EAAAm4B,kBASAn4B,EAAAm4B,iBAAA,2BAIA3T,EAAA4oB,YAIA5oB,EAAA4oB,WAAA,EACAJ,GAAAxoB,EAAAxkB,GACAwkB,EAAA4oB,WAAA,EAEA5oB,EAAA3tB,QAAA,cAIAq2C,EA7EA,CA8ECb,IAcDgB,GAAA,SAAAj7B,EAAApS,GACA,QAAAjJ,EAAA,EAAiBA,EAAAqb,EAAApb,OAAiBD,IAClC6E,OAAAiW,KAAAO,EAAArb,IAAAC,QAAAgJ,EAAA9G,KAAAkZ,EAAArb,GAAAmC,KAKAkZ,EAAArb,GAAAu2C,UAAA,IAWAC,GAEA,SAAAJ,GAUA,SAAAI,EAAAllC,GACA,IAAA6a,OAEA,IAAA7a,IACAA,EAAA,IAKA,QAAAtR,EAAAsR,EAAArR,OAAA,EAAmCD,GAAA,EAAQA,IAC3C,GAAAsR,EAAAtR,GAAAu2C,SAAA,CACAD,GAAAhlC,IAAAtR,IACA,MAuBA,OAnBAmsB,EAAAiqB,EAAAh2C,KAAAlB,KAAAoS,IAAApS,MACAm3C,WAAA,EAMAxxC,OAAAC,eAAAkB,IAAAmmB,IAAA,iBACAmJ,IAAA,WACA,QAAA9B,EAAA,EAAwBA,EAAAt0B,KAAAe,OAAkBuzB,IAC1C,GAAAt0B,KAAAs0B,GAAA+iB,SACA,OAAA/iB,EAIA,UAEA3oB,IAAA,eAEAshB,EA8CA,OA1FAqJ,EAAAghB,EAAAJ,GAwDAI,EAAAh2C,UAEAi1C,SAAA,SAAAxsC,GACA,IAAAwkB,EAAAvuB,KAEA+J,EAAAstC,UACAD,GAAAp3C,KAAA+J,GAGAmtC,EAAA51C,UAAAi1C,SAAAr1C,KAAAlB,KAAA+J,GAGAA,EAAAm4B,kBASAn4B,EAAAm4B,iBAAA,4BACA3T,EAAA4oB,YAIA5oB,EAAA4oB,WAAA,EACAC,GAAA7oB,EAAAxkB,GACAwkB,EAAA4oB,WAAA,EAEA5oB,EAAA3tB,QAAA,cAIA02C,EA3FA,CA4FClB,IASDmB,GAEA,SAAAL,GAGA,SAAAK,IACA,OAAAL,EAAA91C,MAAApB,KAAAiB,YAAAjB,KAiCA,OApCAs2B,EAAAihB,EAAAL,GAMAK,EAAAj2C,UAUAi1C,SAAA,SAAAxsC,GACAmtC,EAAA51C,UAAAi1C,SAAAr1C,KAAAlB,KAAA+J,GAOAA,EAAAm4B,iBAAA,aAAAj6B,GAAAjI,KAAA,WACAA,KAAAklC,aAAA,cAIA,IAFA,wBAEAzkC,QAAAsJ,EAAAytC,OACAztC,EAAAm4B,iBAAA,aAAAj6B,GAAAjI,KAAA,WACAA,KAAAY,QAAA,8BAKA22C,EArCA,CAsCCnB,IAUDqB,GAEA,WAOA,SAAAA,EAAAC,QACA,IAAAA,IACAA,EAAA,IAGA13C,KAAA23C,eAAA,GAQAhyC,OAAAC,eAAA5F,KAAA,UACAo2B,IAAA,WACA,OAAAp2B,KAAA23C,eAAA52C,UAIA,QAAAD,EAAA,EAAAC,EAAA22C,EAAA32C,OAAkDD,EAAAC,EAAYD,IAC9Dd,KAAA43C,iBAAAF,EAAA52C,IAaA,IAAA0nC,EAAAiP,EAAAn2C,UA+DA,OA7DAknC,EAAAoP,iBAAA,SAAAC,GACA,IAAAr3C,EAAAR,KAAA23C,eAAA52C,OAEA,GAAAP,KAAAR,MACA2F,OAAAC,eAAA5F,KAAAQ,EAAA,CACA41B,IAAA,WACA,OAAAp2B,KAAA23C,eAAAn3C,OAMA,IAAAR,KAAA23C,eAAAl3C,QAAAo3C,IACA73C,KAAA23C,eAAAx2C,KAAA02C,IAiBArP,EAAAsP,wBAAA,SAAA/tC,GAGA,IAFA,IAAAguC,EAEAj3C,EAAA,EAAAC,EAAAf,KAAA23C,eAAA52C,OAAwDD,EAAAC,EAAYD,IACpE,GAAAiJ,IAAA/J,KAAA23C,eAAA72C,GAAAiJ,MAAA,CACAguC,EAAA/3C,KAAA23C,eAAA72C,GACA,MAIA,OAAAi3C,GAYAvP,EAAAwP,oBAAA,SAAAH,GACA,QAAA/2C,EAAA,EAAAC,EAAAf,KAAA23C,eAAA52C,OAAwDD,EAAAC,EAAYD,IACpE,GAAA+2C,IAAA73C,KAAA23C,eAAA72C,GAAA,CACAd,KAAA23C,eAAAh3C,OAAAG,EAAA,GACA,QAKA22C,EAvGA,GAsIAQ,GAEA,WAOA,SAAAA,EAAAtG,GACAsG,EAAA32C,UAAA42C,SAAAh3C,KAAAlB,KAAA2xC,GAQAhsC,OAAAC,eAAA5F,KAAA,UACAo2B,IAAA,WACA,OAAAp2B,KAAAm4C,WAeA,IAAA3P,EAAAyP,EAAA32C,UAqDA,OAnDAknC,EAAA0P,SAAA,SAAAvG,GACA,IAAAyG,EAAAp4C,KAAAe,QAAA,EACAD,EAAA,EACAic,EAAA40B,EAAA5wC,OACAf,KAAAq4C,MAAA1G,EACA3xC,KAAAm4C,QAAAxG,EAAA5wC,OAEA,IAAAu3C,EAAA,SAAA93C,GACA,GAAAA,KAAAR,MACA2F,OAAAC,eAAA5F,KAAA,GAAAQ,EAAA,CACA41B,IAAA,WACA,OAAAp2B,KAAAq4C,MAAA73C,OAMA,GAAA43C,EAAAr7B,EAGA,IAFAjc,EAAAs3C,EAEYt3C,EAAAic,EAAOjc,IACnBw3C,EAAAp3C,KAAAlB,KAAAc,IAeA0nC,EAAA+P,WAAA,SAAAt1C,GAGA,IAFA,IAAAP,EAAA,KAEA5B,EAAA,EAAAic,EAAA/c,KAAAe,OAAoCD,EAAAic,EAAOjc,IAAA,CAC3C,IAAA8wC,EAAA5xC,KAAAc,GAEA,GAAA8wC,EAAA3uC,OAAA,CACAP,EAAAkvC,EACA,OAIA,OAAAlvC,GAGAu1C,EAtFA,GAqGAO,GAAA,CACAC,YAAA,cACA3oC,SAAA,WACA4oC,KAAA,OACAC,KAAA,OACAC,UAAA,YACAC,WAAA,cAUAC,GAAA,CACAL,YAAA,cACAM,aAAA,eACAL,KAAA,OACAM,YAAA,YACAC,YAAA,cACAJ,WAAA,cAUAK,GAAA,CACAN,UAAA,YACA9oC,SAAA,WACAipC,aAAA,eACAI,SAAA,WACA5qC,SAAA,YAUA6qC,GAAA,CACA5Y,SAAA,WACA6Y,OAAA,SACAC,QAAA,WAaAC,GAEA,SAAAlD,GAwBA,SAAAkD,EAAAvvC,GACA,IAAAijB,OAEA,IAAAjjB,IACAA,EAAA,IAGAijB,EAAAopB,EAAAn1C,KAAAlB,YACA,IAAAw5C,EAAA,CACAv2C,GAAA+G,EAAA/G,IAAA,aAAA08B,KACA6X,KAAAxtC,EAAAwtC,MAAA,GACAr3B,MAAAnW,EAAAmW,OAAA,GACAD,SAAAlW,EAAAkW,UAAA,IAuCAu5B,EAAA,SAAA5zC,GACAF,OAAAC,eAAAkB,IAAAmmB,IAAApnB,EAAA,CACAuwB,IAAA,WACA,OAAAojB,EAAA3zC,IAEA8F,IAAA,gBAIA,QAAA9F,KAAA2zC,EACAC,EAAA5zC,GAGA,OAAAonB,EAGA,OA1FAqJ,EAAAijB,EAAAlD,GA0FAkD,EA3FA,CA4FCzU,IA2CG4U,GAAQ,SAAAziC,GACZ,IAAA3R,EAAA,iEAEAuE,EAAUgwB,EAAAhwB,EAAQ6wB,cAAA,KAClB7wB,EAAAgX,KAAA5J,EAIA,IACA0iC,EADAC,EAAA,KAAA/vC,EAAAgwC,MAAA,UAAAhwC,EAAAiwC,SAGAF,KACAD,EAAU9f,EAAAhwB,EAAQ6wB,cAAA,QAClBqf,UAAA,YAAA9iC,EAAA,SACApN,EAAA8vC,EAAAte,WAEAse,EAAA5e,aAAA,4CACIlB,EAAAhwB,EAAQ2L,KAAA+lB,YAAAoe,IAQZ,IAFA,IAAAK,EAAA,GAEAl5C,EAAA,EAAiBA,EAAAwE,EAAAvE,OAAkBD,IACnCk5C,EAAA10C,EAAAxE,IAAA+I,EAAAvE,EAAAxE,IAqBA,MAhBA,UAAAk5C,EAAAF,WACAE,EAAAH,KAAAG,EAAAH,KAAA/xC,QAAA,YAGA,WAAAkyC,EAAAF,WACAE,EAAAH,KAAAG,EAAAH,KAAA/xC,QAAA,aAGAkyC,EAAAF,WACAE,EAAAF,SAAuBriB,EAAA5tB,EAAQ+W,SAAAk5B,UAG/BF,GACI/f,EAAAhwB,EAAQ2L,KAAAupB,YAAA4a,GAGZK,GAgBIC,GAAc,SAAAhjC,GAElB,IAAAA,EAAAsN,MAAA,iBAEA,IAAAo1B,EAAc9f,EAAAhwB,EAAQ6wB,cAAA,OACtBif,EAAAI,UAAA,YAAA9iC,EAAA,UACAA,EAAA0iC,EAAAte,WAAAxa,KAGA,OAAA5J,GAgBAijC,GAAA,SAAAh4C,GACA,qBAAAA,EAAA,CACA,IACAmY,EADA,0EACAC,KAAApY,GAEA,GAAAmY,EACA,OAAAA,EAAA5M,MAAA0gB,cAIA,UAcIgsB,GAAa,SAAAljC,GACjB,IAAAmjC,EAAe3iB,EAAA5tB,EAAQ+W,SACvBy5B,EAAgBX,GAAQziC,GAMxB,OAJA,MAAAojC,EAAAP,SAAAM,EAAAN,SAAAO,EAAAP,UAGAO,EAAAR,OAAAO,EAAAN,SAAAM,EAAAP,MAIAS,GAEA30C,OAAA85B,OAAA,CACA8a,SAAYb,GACZc,eAAkBP,GAClBC,oBACAO,cAAiBN,KAcbO,GAAS,SAAAC,EAAA5wC,GACb,IAAA6wC,EAAA,IAAmBnjB,EAAA5tB,EAAQqK,OAAAya,OAAe8I,EAAA5tB,EAAU4tB,EAAA5tB,EAAQoK,MAAQwjB,EAAA5tB,EAAQqK,OAAA2mC,iBAC5Et1B,EAAA,GAEAq1B,EAAAE,MAAA,SAAAlJ,GACA7nC,EAAAuoC,OAAAV,IAGAgJ,EAAAG,eAAA,SAAA7iB,GACA3S,EAAApkB,KAAA+2B,IAGA0iB,EAAAI,QAAA,WACAjxC,EAAAnJ,QAAA,CACAR,KAAA,aACAiF,OAAA0E,KAIA6wC,EAAAxkC,MAAAukC,GAEAp1B,EAAAxkB,OAAA,IACQ02B,EAAA5tB,EAAQ6tB,SAAYD,EAAA5tB,EAAQ6tB,QAAAujB,gBAC9BxjB,EAAA5tB,EAAQ6tB,QAAAujB,eAAA,iCAAAlxC,EAAAmoC,KAGd3sB,EAAArhB,QAAA,SAAAg0B,GACA,OAAaP,EAAGO,WAGRT,EAAA5tB,EAAQ6tB,SAAYD,EAAA5tB,EAAQ6tB,QAAAwjB,UAC9BzjB,EAAA5tB,EAAQ6tB,QAAAwjB,YAIdN,EAAAj5C,SAeIw5C,GAAS,SAAAjJ,EAAAnoC,GACb,IAAA2P,EAAA,CACA3E,IAAAm9B,GAEAkJ,EAAoBjB,GAAajI,GAEjCkJ,IACA1hC,EAAAtC,KAAAgkC,GAGEC,IAAG3hC,EAAAzR,GAAAjI,KAAA,SAAAsV,EAAAC,EAAA+lC,GACL,GAAAhmC,EACA,OAAaqiB,EAAGO,MAAA5iB,EAAAC,GAMhB,GAHAxL,EAAAwxC,SAAA,EAGuB,oBAAR9jB,EAAA5tB,EAAQqK,QACvB,GAAAnK,EAAAyxC,MAAA,CACA,IAAAC,EAAA,WACA,OAAiBf,GAASY,EAAAvxC,IAG1BA,EAAAyxC,MAAAr7C,GAAA,cAAAs7C,GACA1xC,EAAAyxC,MAAAr7C,GAAA,wBACUw3B,EAAGO,MAAA,oDAAAnuB,EAAAmoC,KACbnoC,EAAAyxC,MAAAj7C,IAAA,cAAAk7C,WAIMf,GAASY,EAAAvxC,OAYX2xC,GAEJ,SAAAC,GAsCA,SAAAC,EAAA5xC,GACA,IAAAijB,EAMA,QAJA,IAAAjjB,IACAA,EAAA,KAGAA,EAAA8nC,KACA,UAAA18B,MAAA,4BAGA,IAAAymC,EAAArU,GAAAx9B,EAAA,CACAwtC,KAAA0B,GAAAlvC,EAAAwtC,OAAA,YACAt3B,SAAAlW,EAAAkW,UAAAlW,EAAA8xC,SAAA,KAEAC,EAAA3C,GAAAyC,EAAAE,OAAA,WACAC,EAAAH,EAAAx7B,QAEA,aAAAw7B,EAAArE,MAAA,aAAAqE,EAAArE,OACAuE,EAAA,WAGA9uB,EAAA0uB,EAAAz6C,KAAAlB,KAAA67C,IAAA77C,MACAw7C,MAAAK,EAAA/J,KACA7kB,EAAAorB,MAAA,GACAprB,EAAAgvB,YAAA,GACA,IAAAtK,EAAA,IAAAsG,GAAAhrB,EAAAorB,OACA6D,EAAA,IAAAjE,GAAAhrB,EAAAgvB,aACAE,GAAA,EACAC,EAAAn0C,GAAAnB,IAAAmmB,IAAA,WAKAjtB,KAAAk8C,WAAAl8C,KAAAk8C,WAEAC,IACAn8C,KAAAY,QAAA,aACAu7C,GAAA,KAkJA,MA9IA,aAAAJ,GACA9uB,EAAAuuB,MAAA7T,MAAA,WACA1a,EAAAuuB,MAAAr7C,GAAA,aAAAi8C,KACO,GAGPz2C,OAAAisB,iBAAA9qB,IAAAmmB,IAAA,CAUA5M,QAAA,CACA+V,IAAA,WACA,OAAA4lB,GAEArwC,IAAA,cAYAowC,KAAA,CACA3lB,IAAA,WACA,OAAA2lB,GAEApwC,IAAA,SAAA0wC,GACA,IAAA9tB,EAAAvuB,KAEAo5C,GAAAiD,KAMA,cAFAN,EAAAM,GAGAr8C,KAAAw7C,MAAA7T,MAAA,WACApZ,EAAAitB,MAAAr7C,GAAA,aAAAi8C,KACa,GAEbp8C,KAAAw7C,MAAAj7C,IAAA,aAAA67C,GAaAp8C,KAAAY,QAAA,iBAUA+wC,KAAA,CACAvb,IAAA,WACA,OAAAp2B,KAAAu7C,QAIA5J,EAHA,MAKAhmC,IAAA,cASAuwC,WAAA,CACA9lB,IAAA,WACA,IAAAp2B,KAAAu7C,QACA,YAIA,OAAAv7C,KAAA2xC,KAAA5wC,OACA,OAAAm7C,EAMA,IAHA,IAAAI,EAAAt8C,KAAAw7C,MAAAe,cACAC,EAAA,GAEA17C,EAAA,EAAAic,EAAA/c,KAAA2xC,KAAA5wC,OAA+CD,EAAAic,EAAOjc,IAAA,CACtD,IAAA8wC,EAAA5xC,KAAA2xC,KAAA7wC,GAEA8wC,EAAA7vC,WAAAu6C,GAAA1K,EAAAzhC,SAAAmsC,EACAE,EAAAr7C,KAAAywC,GACaA,EAAA7vC,YAAA6vC,EAAAzhC,SAAAyhC,EAAA7vC,WAAAu6C,GAAA1K,EAAA7vC,UAAA,IAAAu6C,GACbE,EAAAr7C,KAAAywC,GAMA,GAFAuK,GAAA,EAEAK,EAAAz7C,SAAAf,KAAAi8C,YAAAl7C,OACAo7C,GAAA,OAEA,QAAA7nB,EAAA,EAA4BA,EAAAkoB,EAAAz7C,OAAoBuzB,KAChD,IAAAt0B,KAAAi8C,YAAAx7C,QAAA+7C,EAAAloB,MACA6nB,GAAA,GAOA,OAFAn8C,KAAAi8C,YAAAO,EACAN,EAAAhE,SAAAl4C,KAAAi8C,aACAC,GAGAvwC,IAAA,gBAIAkwC,EAAA3J,KACAjlB,EAAAilB,IAAA2J,EAAA3J,IACMiJ,GAASU,EAAA3J,IAAAprC,IAAAmmB,MAEfA,EAAAsuB,SAAA,EAGAtuB,EA7NAqJ,EAAAslB,EAAAD,GAuOA,IAAAnT,EAAAoT,EAAAt6C,UAoDA,OAlDAknC,EAAA8J,OAAA,SAAAmK,GACA,IAAA7K,EAAA6K,EAEA,GAAQhlB,EAAA5tB,EAAQoK,SAAAwoC,aAAmChlB,EAAA5tB,EAAQoK,MAAAE,QAAA,CAG3D,QAAA5J,KAFAqnC,EAAA,IAAgBna,EAAA5tB,EAAQoK,MAAAE,OAAAsoC,EAAA16C,UAAA06C,EAAAtsC,QAAAssC,EAAAltC,MAExBktC,EACAlyC,KAAAqnC,IACAA,EAAArnC,GAAAkyC,EAAAlyC,IAKAqnC,EAAA3uC,GAAAw5C,EAAAx5C,GACA2uC,EAAA8K,aAAAD,EAKA,IAFA,IAAArqC,EAAApS,KAAAw7C,MAAArJ,aAEArxC,EAAA,EAAmBA,EAAAsR,EAAArR,OAAmBD,IACtCsR,EAAAtR,KAAAd,MACAoS,EAAAtR,GAAA67C,UAAA/K,GAIA5xC,KAAAq4C,MAAAl3C,KAAAywC,GACA5xC,KAAA2xC,KAAAuG,SAAAl4C,KAAAq4C,QAUA7P,EAAAmU,UAAA,SAAAC,GAGA,IAFA,IAAA97C,EAAAd,KAAAq4C,MAAAt3C,OAEAD,KAAA,CACA,IAAA8wC,EAAA5xC,KAAAq4C,MAAAv3C,GAEA,GAAA8wC,IAAAgL,GAAAhL,EAAA8K,cAAA9K,EAAA8K,eAAAE,EAAA,CACA58C,KAAAq4C,MAAA13C,OAAAG,EAAA,GACAd,KAAA2xC,KAAAuG,SAAAl4C,KAAAq4C,OACA,SAKAuD,EA5RA,CA6RCrC,IAMDmC,GAASp6C,UAAAyjC,eAAA,CACT8X,UAAA,aAUA,IAAAC,GAEA,SAAAnB,GA0BA,SAAAmB,EAAA9yC,GACA,IAAAijB,OAEA,IAAAjjB,IACAA,EAAA,IAGA,IAAA6xC,EAAArU,GAAAx9B,EAAA,CACAwtC,KAAAsB,GAAA9uC,EAAAwtC,OAAA,KAEAvqB,EAAA0uB,EAAAz6C,KAAAlB,KAAA67C,IAAA77C,KACA,IAAAg3C,GAAA,EA4CA,OAjCArxC,OAAAC,eAAAkB,IAAAmmB,IAAA,WACAmJ,IAAA,WACA,OAAA4gB,GAEArrC,IAAA,SAAAoxC,GAEA,mBAAAA,OAAA/F,IAIAA,EAAA+F,EAYA/8C,KAAAY,QAAA,qBAMAi7C,EAAA7E,UACA/pB,EAAA+pB,QAAA6E,EAAA7E,SAGA/pB,EAAAsuB,SAAA,EACAtuB,EAGA,OAnFAqJ,EAAAwmB,EAAAnB,GAmFAmB,EApFA,CAqFCvD,IASDyD,GAEA,SAAArB,GAyBA,SAAAqB,EAAAhzC,GACA,IAAAijB,OAEA,IAAAjjB,IACAA,EAAA,IAGA,IAAA6xC,EAAArU,GAAAx9B,EAAA,CACAwtC,KAAAgB,GAAAxuC,EAAAwtC,OAAA,KAEAvqB,EAAA0uB,EAAAz6C,KAAAlB,KAAA67C,IAAA77C,KACA,IAAAq3C,GAAA,EA2CA,OAhCA1xC,OAAAC,eAAAkB,IAAAmmB,IAAA,YACAmJ,IAAA,WACA,OAAAihB,GAEA1rC,IAAA,SAAAsxC,GAEA,mBAAAA,OAAA5F,IAIAA,EAAA4F,EAYAj9C,KAAAY,QAAA,sBAMAi7C,EAAAxE,WACApqB,EAAAoqB,SAAAwE,EAAAxE,UAGApqB,EAGA,OAjFAqJ,EAAA0mB,EAAArB,GAiFAqB,EAlFA,CAmFCzD,IAQD2D,GAAA,EAEAC,GAAA,EASAC,GAEA,SAAA/G,GAsCA,SAAA+G,EAAApzC,GACA,IAAAijB,EAOAtV,OALA,IAAA3N,IACAA,EAAA,IAGAijB,EAAAopB,EAAAn1C,KAAAlB,YAEA,IAAA+J,EAAA,IAAoB2xC,GAAS1xC,GA8C7B,OA7CAijB,EAAAuqB,KAAAztC,EAAAytC,KACAvqB,EAAAilB,IAAAnoC,EAAAmoC,IACAjlB,EAAA6uB,QAAA/xC,EAAAmW,SACA+M,EAAA9M,MAAApW,EAAAoW,MACA8M,EAAA5M,QAAAtW,EAAAsW,QACA1a,OAAAisB,iBAAA9qB,IAAAmmB,IAAA,CAOAtV,WAAA,CACAye,IAAA,WACA,OAAAze,IAWA5N,MAAA,CACAqsB,IAAA,WACA,OAAArsB,MAIA4N,EAAAulC,GAMAnzC,EAAAm4B,iBAAA,wBACAvqB,EAAAwlC,GAEAlwB,EAAArsB,QAAA,CACAR,KAAA,OACAiF,OAAAyB,IAAAmmB,QAGAA,EAGA,OA/FAqJ,EAAA8mB,EAAA/G,GA+FA+G,EAhGA,CAiGCtY,IAEDsY,GAAA97C,UAAAyjC,eAAA,CACAsY,KAAA,QAEAD,GAAAF,QACAE,GAAAE,QAnHA,EAoHAF,GAAAD,UACAC,GAAAG,MAnHA,EAyHA,IAAAC,GAAA,CACAx9B,MAAA,CACAy9B,UAAAxG,GACAyG,WAAAZ,GACAa,YAAA,SAEAC,MAAA,CACAH,UAAAnG,GACAoG,WAAAV,GACAW,YAAA,SAEApuC,KAAA,CACAkuC,UAAAlG,GACAmG,WAAgBhC,GAChBiC,YAAA,SAGAh4C,OAAAiW,KAAA4hC,IAAAt5C,QAAA,SAAA9D,GACAo9C,GAAAp9C,GAAAy9C,WAAAz9C,EAAA,SACAo9C,GAAAp9C,GAAA09C,YAAA19C,EAAA,YAEA,IAAA29C,GAAA,CACAC,WAAA,CACAP,UAAAlG,GACAmG,WAAgBhC,GAChBiC,YAAA,aACAE,WAAA,mBACAC,YAAA,qBAEAG,aAAA,CACAR,UAAAhG,GACAiG,WAAAN,GACAO,YAAA,qBACAE,WAAA,qBACAC,YAAA,wBAGAI,GAAA1W,GAAAgW,GAAAO,IACAA,GAAAI,MAAAx4C,OAAAiW,KAAAmiC,IACAP,GAAAW,MAAAx4C,OAAAiW,KAAA4hC,IACAU,GAAAC,MAAA,GAAA79C,OAAAy9C,GAAAI,OAAA79C,OAAAk9C,GAAAW,OAqEA,IAAIC,GAEJ,SAAA3L,GAaA,SAAAvI,EAAAlgC,EAAA29B,GACA,IAAA1a,EAwEA,YAtEA,IAAAjjB,IACAA,EAAA,SAGA,IAAA29B,IACAA,EAAA,cAKA39B,EAAAs+B,qBAAA,GACArb,EAAAwlB,EAAAvxC,KAAAlB,KAAA,KAAAgK,EAAA29B,IAAA3nC,MAGAq+C,aAAA,EAEApxB,EAAA9sB,GAAA,qBACAH,KAAAq+C,aAAA,IAGApxB,EAAA9sB,GAAA,uBACAH,KAAAq+C,aAAA,IAGAH,GAAAC,MAAAj6C,QAAA,SAAAuY,GACA,IAAAnX,EAAA44C,GAAAzhC,GAEAzS,KAAA1E,EAAAu4C,cACA5wB,EAAA3nB,EAAAw4C,aAAA9zC,EAAA1E,EAAAu4C,eAIA5wB,EAAAqxB,wBACArxB,EAAAsxB,mBAIAtxB,EAAAuxB,0BACAvxB,EAAAwxB,sBAGA,yBAAAv6C,QAAA,SAAA6F,IACA,IAAAC,EAAA,SAAAD,EAAA,YACAkjB,EAAA,iBAAAljB,EAAA,iBAIA,IAAAC,EAAA00C,iBAAA,IAAA10C,EAAA20C,iBACA1xB,EAAA2xB,0BAAA,GACK,IAAA50C,EAAA00C,iBAAA,IAAA10C,EAAA20C,mBACL1xB,EAAA2xB,0BAAA,GAGA3xB,EAAA2xB,0BACA3xB,EAAA4xB,oBAGA5xB,EAAA6xB,sBAAA,IAAAZ,GAAA3uC,KAAAkuC,UAEAxwB,EAAA8xB,qBAGA/0C,EAAAg1C,wBACA/xB,EAAA+e,gBAGA/e,EAAAvmB,cACAumB,EAAA+a,MAAA/a,EAAAvmB,YAAA+V,MAAA,gBAGAwQ,EArFAqJ,EAAA4T,EAAAuI,GAgGA,IAAAjK,EAAA0B,EAAA5oC,UAy0BA,OAv0BAknC,EAAAyW,iBAAA,SAAA/M,GACA,IAAA3jB,EAAAvuB,KAEAA,KAAAyqC,UAGAzqC,KAAA+iC,IAAA,mBACA,OAAAxU,EAAA3W,WAAA,WACA,OAAA2W,EAAA0wB,iBAAA/M,IACS,KAaTlyC,KAAAY,QAAA,CACAsxC,MACA9xC,KAAA,eAaAooC,EAAA+V,iBAAA,WACAv+C,KAAAG,GAAA,iBAAAH,KAAAk/C,kBACAl/C,KAAAm/C,gBAAA,EAEAn/C,KAAA+iC,IAAA,QAAA/iC,KAAAo/C,gBAQA5W,EAAA6W,kBAAA,WACAr/C,KAAAm/C,gBAAA,EACAn/C,KAAAs/C,uBACAt/C,KAAAO,IAAA,iBAAAP,KAAAk/C,mBAiBA1W,EAAA4W,cAAA,SAAAvvC,GACA7P,KAAAs/C,uBACAt/C,KAAAu/C,iBAAAv/C,KAAA6sC,YAAA5kC,GAAAjI,KAAA,WAEA,IAAAw/C,EAAAx/C,KAAAqwC,kBAEArwC,KAAAy/C,mBAAAD,GAOAx/C,KAAAY,QAAA,YAGAZ,KAAAy/C,iBAAAD,EAEA,IAAAA,GACAx/C,KAAAs/C,yBAEK,MAaL9W,EAAA0W,iBAAA,SAAArvC,GACA7P,KAAA0/C,UAAA1/C,KAAAkN,YAUAs7B,EAAA8H,SAAA,WACA,OAAAF,GAAA,MAYA5H,EAAA6H,gBAAA,WACA,OAAAA,GAAArwC,KAAAswC,WAAAtwC,KAAA0/C,YAUAlX,EAAA8W,qBAAA,WACAt/C,KAAA4sC,cAAA5sC,KAAAu/C,mBASA/W,EAAAiW,oBAAA,WACAz+C,KAAA2/C,mBAAA,EACA3/C,KAAAG,GAAA,OAAAH,KAAA4/C,kBACA5/C,KAAAG,GAAA,QAAAH,KAAA6/C,0BAQArX,EAAAsX,qBAAA,WACA9/C,KAAA2/C,mBAAA,EACA3/C,KAAA6/C,0BACA7/C,KAAAO,IAAA,OAAAP,KAAA4/C,kBACA5/C,KAAAO,IAAA,QAAAP,KAAA6/C,0BAWArX,EAAAoX,iBAAA,WACA5/C,KAAA+/C,qBACA//C,KAAA6/C,0BAGA7/C,KAAA+/C,oBAAA//C,KAAA6sC,YAAA,WAOA7sC,KAAAY,QAAA,CACAR,KAAA,aACAiF,OAAArF,KACAggD,mBAAA,KAEK,MAULxX,EAAAqX,wBAAA,WACA7/C,KAAA4sC,cAAA5sC,KAAA+/C,qBAGA//C,KAAAY,QAAA,CACAR,KAAA,aACAiF,OAAArF,KACAggD,mBAAA,KAWAxX,EAAAnnC,QAAA,WAEArB,KAAAigD,YAAAzC,GAAAW,OAEAn+C,KAAAm/C,gBACAn/C,KAAAq/C,oBAGAr/C,KAAA2/C,mBACA3/C,KAAA8/C,uBAGArN,EAAAnxC,UAAAD,QAAAH,KAAAlB,OAcAwoC,EAAAyX,YAAA,SAAAvf,GACA,IAAAwM,EAAAltC,MAEA0gC,EAAA,GAAApgC,OAAAogC,IAEAx8B,QAAA,SAAA9D,GAIA,IAHA,IAAA+b,EAAA+wB,EAAA9sC,EAAA,gBACAU,EAAAqb,EAAApb,OAEAD,KAAA,CACA,IAAAiJ,EAAAoS,EAAArb,GAEA,SAAAV,GACA8sC,EAAAgT,sBAAAn2C,GAGAoS,EAAAq6B,YAAAzsC,OAUAy+B,EAAA2X,sBAAA,WAIA,IAHA,IAAAhkC,EAAAnc,KAAA8+C,uBAAA,GACAh+C,EAAAqb,EAAApb,OAEAD,KAAA,CACA,IAAAiJ,EAAAoS,EAAArb,GACAd,KAAAkgD,sBAAAn2C,KAUAy+B,EAAAh2B,MAAA,aAYAg2B,EAAAtQ,MAAA,SAAA5iB,GAMA,YALA3H,IAAA2H,IACAtV,KAAAogD,OAAA,IAAAtP,GAAAx7B,GACAtV,KAAAY,QAAA,UAGAZ,KAAAogD,QAcA5X,EAAA6X,OAAA,WACA,OAAArgD,KAAAq+C,YACAjO,GAAA,KAGAA,MAUA5H,EAAA8X,eAAA,WAEAtgD,KAAA2/C,mBAOA3/C,KAAAY,QAAA,CACAR,KAAA,aACAiF,OAAArF,KACAggD,mBAAA,KAgBAxX,EAAAuW,mBAAA,WACA,IAAA1R,EAAArtC,KAuBAw9C,GAAAW,MAAAj6C,QAAA,SAAAuY,GACA,IAAAnX,EAAAk4C,GAAA/gC,GAEA8jC,EAAA,WACAlT,EAAAzsC,QAAA6b,EAAA,gBAGArK,EAAAi7B,EAAA/nC,EAAAu4C,cAEAzrC,EAAA8vB,iBAAA,cAAAqe,GACAnuC,EAAA8vB,iBAAA,WAAAqe,GAEAlT,EAAAltC,GAAA,qBACAiS,EAAAiuB,oBAAA,cAAAkgB,GACAnuC,EAAAiuB,oBAAA,WAAAkgB,QAYA/X,EAAAgY,iBAAA,WACA,IAAAC,EAAAzgD,KAEA,IAAQy3B,EAAA5tB,EAAQqK,OAOhB,GAAQ2lB,EAAAhwB,EAAQ2L,KAAAmmB,SAAA37B,KAAAmoB,MAAA,CAIhB,IAAAnoB,KAAA8nC,SAAA,WAAAzO,GAA8CqnB,EAAA72C,IAAGlE,OAAAiW,KAAiB8kC,EAAA72C,GAAG9I,OAAA,EAErE,YADAf,KAAAY,QAAA,eAMA,IAAA+/C,EAAmB9mB,EAAAhwB,EAAQ6wB,cAAA,UAC3BimB,EAAAzO,IAAAlyC,KAAA8nC,SAAA,4DAEA6Y,EAAA9oC,OAAA,WAOA4oC,EAAA7/C,QAAA,gBAGA+/C,EAAA7oC,QAAA,WAOA2oC,EAAA7/C,QAAA,eAGAZ,KAAAG,GAAA,qBACAwgD,EAAA9oC,OAAA,KACA8oC,EAAA7oC,QAAA,OAIM2f,EAAA5tB,EAAQqK,QAAA,EACdlU,KAAAmoB,KAAAiV,WAAA7B,YAAAolB,QAEA3gD,KAAA2nC,MAAA3nC,KAAAwgD,mBASAhY,EAAAqW,kBAAA,WACA,IAAA+B,EAAA5gD,KAEAoS,EAAApS,KAAAmyC,aACA0O,EAAA7gD,KAAA8gD,mBAEAC,EAAA,SAAAp5C,GACA,OAAAyK,EAAAmkC,SAAA5uC,EAAAoC,QAGAi3C,EAAA,SAAAr5C,GACA,OAAAyK,EAAAokC,YAAA7uC,EAAAoC,QAGA82C,EAAA1gD,GAAA,WAAA4gD,GACAF,EAAA1gD,GAAA,cAAA6gD,GACAhhD,KAAAwgD,mBAEA,IAAAS,EAAA,WACA,OAAAL,EAAAhgD,QAAA,oBAGAsgD,EAAA,WACAD,IAEA,QAAAngD,EAAA,EAAqBA,EAAAsR,EAAArR,OAAmBD,IAAA,CACxC,IAAAiJ,EAAAqI,EAAAtR,GACAiJ,EAAAs2B,oBAAA,YAAA4gB,GAEA,YAAAl3C,EAAAgyC,MACAhyC,EAAAm4B,iBAAA,YAAA+e,KAKAC,IACA9uC,EAAA8vB,iBAAA,SAAAgf,GACA9uC,EAAA8vB,iBAAA,WAAAgf,GACA9uC,EAAA8vB,iBAAA,cAAAgf,GACAlhD,KAAAG,GAAA,qBACA0gD,EAAAtgD,IAAA,WAAAwgD,GACAF,EAAAtgD,IAAA,cAAAygD,GACA5uC,EAAAiuB,oBAAA,SAAA6gB,GACA9uC,EAAAiuB,oBAAA,WAAA6gB,GACA9uC,EAAAiuB,oBAAA,cAAA6gB,GAEA,QAAApgD,EAAA,EAAqBA,EAAAsR,EAAArR,OAAmBD,IAAA,CACxCsR,EAAAtR,GACAu/B,oBAAA,YAAA4gB,OAqBAzY,EAAA2Y,aAAA,SAAA3J,EAAAr3B,EAAAD,GACA,IAAAs3B,EACA,UAAApiC,MAAA,mDAGA,OAtqBA,SAAA7V,EAAAi4C,EAAAr3B,EAAAD,EAAAlW,QACA,IAAAA,IACAA,EAAA,IAGA,IAAAoI,EAAA7S,EAAA4yC,aACAnoC,EAAAwtC,OAEAr3B,IACAnW,EAAAmW,SAGAD,IACAlW,EAAAkW,YAGAlW,EAAA8nC,KAAAvyC,EACA,IAAAwK,EAAA,IAAAm0C,GAAA3uC,KAAAmuC,WAAA1zC,GAEA,OADAoI,EAAAmkC,SAAAxsC,GACAA,EAmpBAq3C,CAAAphD,KAAAw3C,EAAAr3B,EAAAD,IAyBAsoB,EAAA6Y,sBAAA,SAAAr3C,GACA,IAAAD,EAAAy9B,GAAAx9B,EAAA,CACA8nC,KAAA9xC,OAEA,WAAA+9C,GAAAE,aAAAP,WAAA3zC,IAwBAy+B,EAAA6J,mBAAA,SAAAroC,EAAAs3C,GACA,IAAAC,EAAAvhD,UAEA,IAAAgK,IACAA,EAAA,IAGA,IAAAw3C,EAAAxhD,KAAAqhD,sBAAAr3C,GAmBA,OAjBA,IAAAs3C,IAAA,IAAAA,IAEM3pB,EAAGM,KAAA,oKACTqpB,GAAA,GAIAthD,KAAAyhD,qBAAA7J,iBAAA4J,GACAxhD,KAAA8gD,mBAAAvK,SAAAiL,EAAAz3C,QAEA,IAAAu3C,GAEAthD,KAAA2nC,MAAA,WACA,OAAA4Z,EAAAzC,sBAAAvI,SAAAiL,EAAAz3C,SAIAy3C,GAUAhZ,EAAA0X,sBAAA,SAAAn2C,GACA,IAAA8tC,EAAA73C,KAAAyhD,qBAAA3J,wBAAA/tC,GAEA/J,KAAAyhD,qBAAAzJ,oBAAAH,GACA73C,KAAA8gD,mBAAAtK,YAAAzsC,GACA/J,KAAA8+C,sBAAAtI,YAAAzsC,IAeAy+B,EAAAkZ,wBAAA,WACA,UASAlZ,EAAAmZ,UAAA,aAQAnZ,EAAAoZ,YAAA,aAQApZ,EAAAqZ,eAAA,aAWArZ,EAAAsZ,0BAAA,aAWAtZ,EAAAuZ,0BAAA,aAmBAvZ,EAAAwZ,YAAA,WACA,UAcA9X,EAAA8X,YAAA,WACA,UAaA9X,EAAA+X,cAAA,SAAAC,EAAAl4C,GACA,OAAAkgC,EAAA8X,YAAAE,EAAA9hD,OAgBA8pC,EAAAG,OAAA,SAAAd,GACA,OAAAA,EAAAjoC,qBAAA4oC,GAAAX,aAAAW,GAAAX,IAAAW,GAaAA,EAAAiY,aAAA,SAAA1lC,EAAAq1B,GAKA,GAJA5H,EAAAkY,SACAlY,EAAAkY,OAAA,KAGAlY,EAAAG,OAAAyH,GACA,UAAA18B,MAAA,QAAAqH,EAAA,mBAGA,IAAAytB,EAAA8X,YACA,UAAA5sC,MAAA,uDAGA,IAAA80B,EAAA+X,cACA,UAAA7sC,MAAA,yDAWA,OARAqH,EAAA4qB,GAAA5qB,GACAytB,EAAAkY,OAAA3lC,GAAAq1B,EAEA,SAAAr1B,GAEAytB,EAAAmY,kBAAAlhD,KAAAsb,GAGAq1B,GAaA5H,EAAAoY,QAAA,SAAA7lC,GACA,GAAAA,EAMA,OAFAA,EAAA4qB,GAAA5qB,GAEAytB,EAAAkY,QAAAlY,EAAAkY,OAAA3lC,GACAytB,EAAAkY,OAAA3lC,GAGQgb,EAAA5tB,GAAY4tB,EAAA5tB,EAAQo5B,SAAYxL,EAAA5tB,EAAQo5B,QAAAxmB,IAC1Ckb,EAAGM,KAAA,OAAAxb,EAAA,6GACIgb,EAAA5tB,EAAQo5B,QAAAxmB,SAFrB,GAMAytB,EA16BA,CA26BEzC,IAqCFyW,GAAAC,MAAAj6C,QAAA,SAAAuY,GACA,IAAAnX,EAAA44C,GAAAzhC,GAEE2hC,GAAI98C,UAAAgE,EAAAu4C,YAAA,WAEN,OADA79C,KAAAsF,EAAAw4C,aAAA99C,KAAAsF,EAAAw4C,cAAA,IAAAx4C,EAAAm4C,UACAz9C,KAAAsF,EAAAw4C,gBAkCAM,GAAI98C,UAAAihD,uBAAA,EAQJnE,GAAI98C,UAAAkhD,qBAAA,EASJpE,GAAI98C,UAAAmhD,0BAAA,EAWJrE,GAAI98C,UAAAohD,sBAAA,EAUJtE,GAAI98C,UAAAg9C,wBAAA,EAYJF,GAAI98C,UAAAqhD,mBAAA,EAUJvE,GAAI98C,UAAAk9C,0BAAA,EASJJ,GAAI98C,UAAAs9C,0BAAA,EAcJR,GAAIwE,mBAAA,SAAAC,GAUJA,EAAAC,sBAAA,SAAAC,EAAAviD,GACA,IAAA4/B,EAAAyiB,EAAAG,eAEA5iB,IACAA,EAAAyiB,EAAAG,eAAA,SAGAr1C,IAAAnN,IAEAA,EAAA4/B,EAAAr/B,QAGAq/B,EAAAz/B,OAAAH,EAAA,EAAAuiD,IAcAF,EAAAb,YAAA,SAAA5hD,GAIA,IAHA,IACA6iD,EADA7iB,EAAAyiB,EAAAG,gBAAA,GAGAliD,EAAA,EAAmBA,EAAAs/B,EAAAr/B,OAAqBD,IAGxC,GAFAmiD,EAAA7iB,EAAAt/B,GAAAkhD,YAAA5hD,GAGA,OAAA6iD,EAIA,UAmBAJ,EAAAK,oBAAA,SAAAvnC,EAAA3R,GAIA,IAHA,IAAAo2B,EAAAyiB,EAAAG,gBAAA,GAGAliD,EAAA,EAAmBA,EAAAs/B,EAAAr/B,OAAqBD,IAGxC,GAFAs/B,EAAAt/B,GAAAqiD,gBAAAxnC,EAAA3R,GAGA,OAAAo2B,EAAAt/B,GAIA,aAgBA+hD,EAAAZ,cAAA,SAAAC,EAAAl4C,GACA,IAAAo5C,EAAAP,EAAAK,oBAAAhB,EAAAl4C,GAEA,OAAAo5C,EACAA,EAAAD,gBAAAjB,EAAAl4C,GAGA,IAQA,kCAeA9F,QAAA,SAAA4rC,GACA,IAAAuT,EAAArjD,KAAA8vC,GAEA,oBAAAuT,IAIArjD,KAAA8vC,GAAA,WACA,OAAA9vC,KAAAsjD,gBAAAtjD,KAAAsjD,eAAAxT,GACA9vC,KAAAsjD,eAAAxT,GAAA1uC,MAAApB,KAAAsjD,eAAAriD,WAGAoiD,EAAAjiD,MAAApB,KAAAiB,cAEG4hD,EAAAvhD,WAUHuhD,EAAAvhD,UAAAiiD,UAAA,SAAA5nC,GACA,IAAAynC,EAAAP,EAAAK,oBAAAvnC,EAAA3b,KAAA8nC,UAEAsb,IAGAP,EAAAW,oBACAJ,EAAAP,EAAAW,oBAEQ7rB,EAAGO,MAAA,oDAKXl4B,KAAAyjD,uBACAzjD,KAAAO,IAAA,UAAAP,KAAAyjD,sBAEAL,IAAAP,EAAAW,sBACAxjD,KAAA0jD,eAAA/nC,GAGA3b,KAAAsjD,eAAAF,EAAAO,aAAAhoC,EAAA3b,UAAA8nC,UACA9nC,KAAAG,GAAA,UAAAH,KAAAyjD,uBASAZ,EAAAvhD,UAAAmiD,qBAAA,WAIAzjD,KAAA0jD,iBACA1jD,KAAAigD,YAAA,mBACAjgD,KAAA0jD,eAAA,MAIA1jD,KAAAmgD,wBAEAngD,KAAAsjD,iBACAtjD,KAAAsjD,eAAAjiD,SACArB,KAAAsjD,eAAAjiD,UAGArB,KAAAsjD,eAAA,QAOA7b,GAAS+F,kBAAA,OAA2B4Q,IACpCA,GAAI+D,aAAA,OAAsB/D,IAO1BA,GAAIiE,kBAAA,GAMJ,IAAAuB,GAAA,GACAC,GAAA,GACAC,GAAA,GAuDA,SAAAP,GAAA3f,EAAAsO,EAAA6R,GACAngB,EAAAhsB,WAAA,WACA,OAkNA,SAAAosC,EAAA9R,EAAA+R,EAAAF,EAAAngB,EAAAtnB,EAAA4nC,QACA,IAAAhS,IACAA,EAAA,SAGA,IAAA+R,IACAA,EAAA,SAGA,IAAA3nC,IACAA,EAAA,SAGA,IAAA4nC,IACAA,GAAA,GAGA,IAAAC,EAAAF,EACAG,EAAAD,EAAA,GACAE,EAAAF,EAAAzjD,MAAA,GAGA,qBAAA0jD,EACAJ,EAAA9R,EAAA0R,GAAAQ,GAAAL,EAAAngB,EAAAtnB,EAAA4nC,QAEG,GAAAE,EAAA,CACH,IAAAE,EAxDA,SAAA1gB,EAAAwgB,GACA,IAAAG,EAAAV,GAAAjgB,EAAA3gC,MACAqhD,EAAA,KAEA,QAAA32C,IAAA42C,GAAA,OAAAA,EAGA,OAFAD,EAAAF,EAAAxgB,GACAigB,GAAAjgB,EAAA3gC,MAAA,EAAAmhD,EAAAE,IACAA,EAGA,QAAAxjD,EAAA,EAAiBA,EAAAyjD,EAAAxjD,OAAgBD,IAAA,CACjC,IAAA0jD,EAAAD,EAAAzjD,GACA2jD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEAC,IAAAL,IAIAE,EAAAI,GAGA,OAAAJ,IACAA,EAAAF,EAAAxgB,GACA2gB,EAAApjD,KAAA,CAAAijD,EAAAE,KAGA,OAAAA,EA6BAK,CAAA/gB,EAAAwgB,GAEA,IAAAE,EAAAf,UAEA,OADAjnC,EAAAnb,KAAAmjD,GACAN,EAAA9R,EAAAmS,EAAAN,EAAAngB,EAAAtnB,EAAA4nC,GAGAI,EAAAf,UAAiBpqB,GAAM,GAAG+Y,GAAA,SAAA58B,EAAAsvC,GAG1B,GAAAtvC,EACA,OAAA0uC,EAAA9R,EAAAmS,EAAAN,EAAAngB,EAAAtnB,EAAA4nC,GAIA5nC,EAAAnb,KAAAmjD,GAGAN,EAAAY,EAAA1S,EAAA9xC,OAAAwkD,EAAAxkD,KAAAikD,EAAAT,GAAAgB,EAAAxkD,MAAA2jD,EAAAngB,EAAAtnB,EAAA4nC,UAEGG,EAAAtjD,OACHijD,EAAA9R,EAAAmS,EAAAN,EAAAngB,EAAAtnB,EAAA4nC,GACGA,EACHH,EAAA7R,EAAA51B,GAEA0nC,EAAA9R,EAAA0R,GAAA,KAAAG,EAAAngB,EAAAtnB,GAAA,GArQA0nC,CAAA9R,EAAA0R,GAAA1R,EAAA9xC,MAAA2jD,EAAAngB,IACG,GAwFH,SAAAihB,GAAAZ,EAAAnS,EAAA/6B,EAAA+tC,QACA,IAAAA,IACAA,EAAA,MAGA,IAAAC,EAAA,OAAA1d,GAAAtwB,GACAiuC,EAAAf,EAAAphD,OAAAoiD,GAAAF,GAAAD,GACAI,EAAAF,IAAAlB,GACAziB,EAAA6jB,EAAA,KAAApT,EAAA/6B,GAAAiuC,GAEA,OAoDA,SAAAT,EAAAxtC,EAAA1P,EAAA69C,GACA,QAAApkD,EAAAyjD,EAAAxjD,OAAA,EAA8BD,GAAA,EAAQA,IAAA,CACtC,IAAAwjD,EAAAC,EAAAzjD,GAEAwjD,EAAAvtC,IACAutC,EAAAvtC,GAAAmuC,EAAA79C,IA1DA89C,CAAAlB,EAAAltC,EAAAsqB,EAAA6jB,GACA7jB,EASA,IAAA+jB,GAAA,CACA9U,SAAA,EACAiM,YAAA,EACArvC,SAAA,EACAm4C,SAAA,EACAhF,OAAA,EACAxM,OAAA,GAQAyR,GAAA,CACAhF,eAAA,GAQAiF,GAAA,CACA3d,KAAA,EACAmM,MAAA,GAGA,SAAAkR,GAAAluC,GACA,gBAAA1P,EAAAi9C,GAEA,OAAAj9C,IAAAy8C,GACAA,GAGAQ,EAAAvtC,GACAutC,EAAAvtC,GAAA1P,GAGAA,GA8HA,IAAAm+C,GAAA,CACAC,KAAA,YACAC,IAAA,YACAz8C,IAAA,YACA08C,IAAA,YACAC,IAAA,YACAC,IAAA,mBACAC,IAAA,aACAC,IAAA,YACAC,IAAA,YACAC,KAAA,yBAYAC,GAAA,SAAAhU,QACA,IAAAA,IACAA,EAAA,IAGA,IAAAiU,EAAAjM,GAAAhI,GAEA,OADAsT,GAAAW,EAAAh4B,gBACA,IA4GA,SAAAi4B,GAAAlU,GACA,IAAAmU,EAAAH,GAAAhU,OAMA,OAJAA,EAAA9xC,MAAAimD,IACAnU,EAAA9xC,KAAAimD,GAGAnU,EAUA,IAAAoU,GAEA,SAAA7T,GAgBA,SAAA6T,EAAA1iB,EAAA55B,EAAA29B,GACA,IAAA1a,EAGA6a,EAAAN,GAAA,CACAjN,UAAA,GACKvwB,GAIL,GAHAijB,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAAkE,EAAAH,IAAA3nC,KAGAgK,EAAAsgC,cAAAlR,SAAA,IAAApvB,EAAAsgC,cAAAlR,QAAAr4B,OAqBA6iC,EAAAsO,IAAAloC,EAAAsgC,cAAAlR,cApBA,QAAAt4B,EAAA,EAAA+xB,EAAA7oB,EAAAsgC,cAAAic,UAA0DzlD,EAAA+xB,EAAA9xB,OAAcD,IAAA,CACxE,IAAA0lD,EAAAnf,GAAAxU,EAAA/xB,IACAgxC,EAAmBsM,GAAIkE,QAAAkE,GAQvB,GALAA,IACA1U,EAAiBrK,GAASmC,aAAA4c,IAI1B1U,KAAA2U,cAAA,CACA7iB,EAAA8iB,UAAAF,GACA,OAWA,OAAAv5B,EAGA,OApDAqJ,EAAAgwB,EAAA7T,GAoDA6T,EArDA,CAsDE7e,IAEFA,GAAS+F,kBAAA,cAAA8Y,IAQT,IAAIK,GAEJ,SAAAlU,GAaA,SAAAmU,EAAAhjB,EAAA55B,GACA,IAAAijB,EAQA,OANAA,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAgsC,gBAEA/e,EAAAuL,SAEAvL,EArBAqJ,EAAAswB,EAAAnU,GAwCA,IAAAjK,EAAAoe,EAAAtlD,UAkOA,OAhOAknC,EAAAjO,SAAA,SAAApR,EAAA7jB,EAAAoX,QACA,IAAAyM,IACAA,EAAA,YAGA,IAAA7jB,IACAA,EAAA,SAGA,IAAAoX,IACAA,EAAA,IAGApX,EAAY6zB,GAAM,CAClB4gB,UAAA,gEACAne,UAAA57B,KAAAwqC,gBACA0I,SAAA,GACK5tC,GAEL,WAAA6jB,GACMwO,EAAGO,MAAA,yDAAA/O,EAAA,4CAITzM,EAAiByc,GAAM,CACvBlZ,KAAA,UACKvD,GACL1c,KAAA6mD,UAAAvhD,EAAA4tC,SAEA,IAAA/qB,EAAAsqB,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAAmpB,EAAA7jB,EAAAoX,GAGA,OADA1c,KAAA8mD,oBAAA3+B,GACAA,GAGAqgB,EAAAnnC,QAAA,WAEArB,KAAA+mD,eAAA,KAEAtU,EAAAnxC,UAAAD,QAAAH,KAAAlB,OAaAwoC,EAAAse,oBAAA,SAAA3+B,GAaA,OAZAnoB,KAAA+mD,eAAAxsB,GAAA,QACAqB,UAAA,oBACK,CAELorB,YAAA,WAGA7+B,GACAA,EAAAoT,YAAAv7B,KAAA+mD,gBAGA/mD,KAAAw0C,YAAAx0C,KAAAinD,aAAA9+B,GACAnoB,KAAA+mD,gBAgBAve,EAAAgM,YAAA,SAAAjlC,EAAA4Y,GAKA,QAJA,IAAAA,IACAA,EAAAnoB,KAAAmoB,WAGAxa,IAAA4B,EACA,OAAAvP,KAAAinD,cAAA,YAGA,IAAAC,EAAAlnD,KAAAyoC,SAAAl5B,GACAvP,KAAAinD,aAAA13C,EACA0X,GAAAjnB,KAAA+mD,eAAAG,GAEAlnD,KAAAmnD,gBAEAh/B,EAAA4S,aAAA,QAAAmsB,IAWA1e,EAAAgC,cAAA,WACA,gCAAAiI,EAAAnxC,UAAAkpC,cAAAtpC,KAAAlB,OAOAwoC,EAAAhQ,OAAA,WACAx4B,KAAAonD,WACApnD,KAAAonD,UAAA,EACApnD,KAAAg8B,YAAA,gBACAh8B,KAAAioC,IAAAlN,aAAA,yBAEA,qBAAA/6B,KAAA6mD,WACA7mD,KAAAioC,IAAAlN,aAAA,WAAA/6B,KAAA6mD,WAGA7mD,KAAAG,GAAA,gBAAAH,KAAAqnD,aACArnD,KAAAG,GAAA,QAAAH,KAAAsnD,aACAtnD,KAAAG,GAAA,OAAAH,KAAAunD,cAQA/e,EAAAjQ,QAAA,WACAv4B,KAAAonD,UAAA,EACApnD,KAAA67B,SAAA,gBACA77B,KAAAioC,IAAAlN,aAAA,wBAEA,qBAAA/6B,KAAA6mD,WACA7mD,KAAAioC,IAAAxL,gBAAA,YAGAz8B,KAAAO,IAAA,gBAAAP,KAAAqnD,aACArnD,KAAAO,IAAA,QAAAP,KAAAsnD,aACAtnD,KAAAO,IAAA,OAAAP,KAAAunD,aA0BA/e,EAAA6e,YAAA,SAAAx3C,KAaA24B,EAAA8e,YAAA,SAAAz3C,GACA1P,GAAO05B,EAAAhwB,EAAQ,UAAA5B,GAAAjI,UAAAuzC,kBAaf/K,EAAA+K,eAAA,SAAA1jC,GAEA,KAAAA,EAAAiyB,OAAA,KAAAjyB,EAAAiyB,OACAjyB,EAAAmxB,iBACAhhC,KAAAY,QAAA,UACK6xC,EAAAnxC,UAAAiyC,gBAELd,EAAAnxC,UAAAiyC,eAAAryC,KAAAlB,KAAA6P,IAcA24B,EAAA+e,WAAA,SAAA13C,GACAtP,GAAQs5B,EAAAhwB,EAAQ,UAAA5B,GAAAjI,UAAAuzC,kBAGhBqT,EA3QA,CA4QEnf,IAEFA,GAAS+F,kBAAA,qBAAyCmZ,IAOlD,IAAAa,GAEA,SAAAC,GAaA,SAAAD,EAAA5jB,EAAA55B,GACA,IAAAijB,EAOA,OALAA,EAAAw6B,EAAAvmD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEA0nD,SAEA9jB,EAAAzjC,GAAA,eAAA8H,GAAAnB,IAAAmmB,MAAAy6B,SACAz6B,EApBAqJ,EAAAkxB,EAAAC,GA2BA,IAAAjf,EAAAgf,EAAAlmD,UAwFA,OAtFAknC,EAAAnnC,QAAA,WACArB,KAAA4jC,SAAArjC,IAAA,eAAAP,KAAA0nD,QAEAD,EAAAnmD,UAAAD,QAAAH,KAAAlB,OAUAwoC,EAAAjO,SAAA,WAMA,OALAA,GAAA,OACAqB,UAAA,aAEAsX,UAAA,KAcA1K,EAAAkf,OAAA,SAAA73C,GACA,IAAAoH,EAAAjX,KAAA4jC,SAAA+jB,SACA3nD,KAAA4nD,OAAA3wC,GAGAA,EACAjX,KAAA6qC,OAEA7qC,KAAA8qC,QAWAtC,EAAAof,OAAA,SAAA3wC,GACA,IAAA4wC,EAAA,GAGA5wC,IACA4wC,EAAA,QAAA5wC,EAAA,MAGAjX,KAAAioC,IAAAhE,MAAA4jB,mBAeArf,EAAA6e,YAAA,SAAAx3C,GAEA7P,KAAA6nC,QAAAoM,aAIAj0C,KAAA6nC,QAAAgM,SACApC,GAAAzxC,KAAA6nC,QAAAD,QAEA5nC,KAAA6nC,QAAAkM,UAIAyT,EApHA,CAqHEb,IAEFlf,GAAS+F,kBAAA,cAAAga,IACT,IAEAM,GAAA,CACAC,UAAA,YACAC,UAAA,aACAC,MAAA,QACAC,mBAAA,6CACAC,eAAA,2BACAC,sBAAA,aACAC,kBAAA,QACAC,OAAA,mCACA3H,OAAA,8BACA4H,UAAA,0DAeA,SAAAC,GAAAC,EAAAC,GACA,IAAAC,EAEA,OAAAF,EAAA1nD,OAEA4nD,EAAAF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACG,QAAAA,EAAA1nD,OAIH,UAAAqU,MAAA,gCAAAqzC,EAAA,gDAFAE,EAAAF,EAAA/nD,MAAA,GAKA,cAAA2gB,SAAAsnC,EAAAjoD,MAAA,aAAA2gB,SAAAsnC,EAAAjoD,MAAA,aAAA2gB,SAAAsnC,EAAAjoD,MAAA,aAAAgoD,EAAA,IAmBA,SAAAE,GAAAzgC,EAAA8b,EAAA0H,GACA,IACAxjB,EAAA8b,SAAA0H,EACG,MAAAhkC,GAEH,QAUA,IAAIkhD,GAEJ,SAAApW,GAgBA,SAAAqW,EAAAllB,EAAA55B,EAAA29B,GACA,IAAA1a,EAEAA,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,EAAA29B,IAAA3nC,KACA,IAAA+oD,EAAA9gD,GAAAnB,IAAAmmB,MAAAg0B,eA4BA,OA3BArd,EAAAzjC,GAAA,YAAA8H,GAAAnB,IAAAmmB,MAAA+7B,gBACAplB,EAAAzjC,GAAA,kBAAA4oD,GACAnlB,EAAAzjC,GAAA,iBAAA8H,GAAAnB,IAAAmmB,MAAAg8B,iBAKArlB,EAAA+D,MAAA1/B,GAAAnB,IAAAmmB,IAAA,WACA,GAAA2W,EAAA4X,OAAA5X,EAAA4X,MAAAoD,yBACA5+C,KAAA8qC,WADA,CAKAlH,EAAAzjC,GAAA,mBAAA4oD,GACAnlB,EAAAzjC,GAAA,eAAA4oD,GACMtxB,EAAA5tB,EAAQq4B,iBAAA,oBAAA6mB,GACdnlB,EAAAzjC,GAAA,qBACA,OAAes3B,EAAA5tB,EAAQw2B,oBAAA,oBAAA0oB,KAIvB,IAFA,IAAA32C,EAAApS,KAAA8nC,SAAAwC,cAAAl4B,QAAA,GAEAtR,EAAA,EAAqBA,EAAAsR,EAAArR,OAAmBD,IACxCd,KAAA6nC,QAAAwK,mBAAAjgC,EAAAtR,IAAA,GAGAd,KAAAipD,qBAEAh8B,EA/CAqJ,EAAAwyB,EAAArW,GA4DA,IAAAjK,EAAAsgB,EAAAxnD,UAoOA,OAlOAknC,EAAAygB,eAAA,WAWA,IAVA,IAMAC,EACAC,EACAC,EARAC,EAAA,CACAv5C,SAAA,EACA8oC,UAAA,GAEA0Q,EAAAtpD,KAAA6nC,QAAAsK,aACAoX,EAAAvpD,KAAA6nC,QAAA2hB,OAAAC,iBAKA3oD,EAAA,EAAmBA,EAAAwoD,EAAAvoD,OAAsBD,IAAA,CACzC,IAAAiJ,EAAAu/C,EAAAxoD,GAEAyoD,KAAAvS,SAAAuS,EAAArpC,UAAAqpC,EAAArpC,WAAAnW,EAAAmW,UAAAnW,EAAAytC,QAAA6R,EAEAt/C,EAAAytC,OAAA+R,EAAA/R,KACA4R,EAAAr/C,EACSq/C,IACTA,EAAAr/C,GAGOw/C,MAAAvS,SACPoS,EAAA,KACAF,EAAA,KACAC,EAAA,MACOp/C,EAAAsW,UACP,iBAAAtW,EAAAytC,MAAA0R,EAESn/C,EAAAytC,QAAA6R,IAAAF,IACTA,EAAAp/C,GAFAm/C,EAAAn/C,GAWAq/C,EACAA,EAAArN,KAAA,UACKoN,EACLA,EAAApN,KAAA,UACKmN,IACLA,EAAAnN,KAAA,YAaAvT,EAAAwgB,cAAA,WACAhpD,KAAA6nC,QAAA2T,OAAAx7C,KAAA6nC,QAAA2T,MAAAoD,yBACA5+C,KAAA8qC,OAEA9qC,KAAA6qC,QAWArC,EAAAjO,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,0BACK,CACLorB,YAAA,MACA0C,cAAA,UAQAlhB,EAAAmhB,aAAA,WACuB,oBAARlyB,EAAA5tB,EAAQqK,QACjBujB,EAAA5tB,EAAQqK,OAAA01C,YAAoBnyB,EAAA5tB,EAAQ,GAAA7J,KAAAioC,MAY1CO,EAAAyY,cAAA,WACA,IAAA7uC,EAAApS,KAAA6nC,QAAAsK,aACAnyC,KAAA2pD,eAQA,IAJA,IAAAE,EAAA,KACAC,EAAA,KACAhpD,EAAAsR,EAAArR,OAEAD,KAAA,CACA,IAAAiJ,EAAAqI,EAAAtR,GAEA,YAAAiJ,EAAAgyC,OACA,iBAAAhyC,EAAAytC,KACAqS,EAAA9/C,EAEA+/C,EAAA//C,GAKA+/C,GACA,QAAA9pD,KAAA68B,aAAA,cACA78B,KAAA+6B,aAAA,mBAGA/6B,KAAA+pD,eAAAD,IACKD,IACL,cAAA7pD,KAAA68B,aAAA,cACA78B,KAAA+6B,aAAA,yBAGA/6B,KAAA+pD,eAAAF,KAWArhB,EAAAuhB,eAAA,SAAAhgD,GACA,GAAuB,oBAAR0tB,EAAA5tB,EAAQqK,QAAAnK,EAAAmyC,WAAvB,CAMA,IAFA,IAAAvK,EAAA,GAEArd,EAAA,EAAoBA,EAAAvqB,EAAAmyC,WAAAn7C,OAA8BuzB,IAClDqd,EAAAxwC,KAAA4I,EAAAmyC,WAAA5nB,IAKA,GAFImD,EAAA5tB,EAAQqK,OAAA01C,YAAoBnyB,EAAA5tB,EAAQ8nC,EAAA3xC,KAAAioC,KAExCjoC,KAAA6nC,QAAAmiB,kBAOA,IAHA,IAAAC,EAAAjqD,KAAA6nC,QAAAmiB,kBAAAE,YACAppD,EAAA6wC,EAAA5wC,OAEAD,KAAA,CACA,IAAA8wC,EAAAD,EAAA7wC,GAEA,GAAA8wC,EAAA,CAIA,IAAAuY,EAAAvY,EAAAwY,aAsCA,GApCAH,EAAAxB,QACA0B,EAAA9uB,WAAA4I,MAAAwkB,MAAAwB,EAAAxB,OAGAwB,EAAAI,aACAzB,GAAAuB,EAAA9uB,WAAA,QAAAmtB,GAAAyB,EAAAxB,OAAA,OAAAwB,EAAAI,cAGAJ,EAAAK,kBACAH,EAAA9uB,WAAA4I,MAAAqmB,gBAAAL,EAAAK,iBAGAL,EAAAM,mBACA3B,GAAAuB,EAAA9uB,WAAA,kBAAAmtB,GAAAyB,EAAAK,iBAAA,OAAAL,EAAAM,oBAGAN,EAAAO,cACAP,EAAAQ,cACA7B,GAAAuB,EAAA,kBAAA3B,GAAAyB,EAAAO,YAAAP,EAAAQ,gBAEAN,EAAAlmB,MAAAqmB,gBAAAL,EAAAO,aAIAP,EAAAS,YACA,eAAAT,EAAAS,UACAP,EAAA9uB,WAAA4I,MAAA0mB,WAAA,uDACS,WAAAV,EAAAS,UACTP,EAAA9uB,WAAA4I,MAAA0mB,WAAA,2CACS,cAAAV,EAAAS,UACTP,EAAA9uB,WAAA4I,MAAA0mB,WAAA,wDACS,YAAAV,EAAAS,YACTP,EAAA9uB,WAAA4I,MAAA0mB,WAAA,2DAIAV,EAAAW,aAAA,IAAAX,EAAAW,YAAA,CACA,IAAAC,EAAuBpzB,EAAA5tB,EAAQ8d,WAAAwiC,EAAAlmB,MAAA4mB,UAC/BV,EAAAlmB,MAAA4mB,WAAAZ,EAAAW,YAAA,KACAT,EAAAlmB,MAAArlB,OAAA,OACAurC,EAAAlmB,MAAAxG,IAAA,OACA0sB,EAAAlmB,MAAA6mB,OAAA,MAGAb,EAAAc,YAAA,YAAAd,EAAAc,aACA,eAAAd,EAAAc,WACAZ,EAAA9uB,WAAA4I,MAAA+mB,YAAA,aAEAb,EAAA9uB,WAAA4I,MAAA8mB,WAAAjD,GAAAmC,EAAAc,iBAMAjC,EAjSA,CAkSErhB,IAEFA,GAAS+F,kBAAA,mBAAuCqb,IAOhD,IAAAoC,GAEA,SAAAxY,GAGA,SAAAwY,IACA,OAAAxY,EAAArxC,MAAApB,KAAAiB,YAAAjB,KA4BA,OA/BAs2B,EAAA20B,EAAAxY,GAMAwY,EAAA3pD,UAQAi5B,SAAA,WACA,IAAA2wB,EAAAlrD,KAAA6nC,QAAAqjB,UACAC,EAAAnrD,KAAAyoC,SAAAyiB,EAAA,+BACA1W,EAAAja,GAAA,QACAqB,UAAA,mBACAme,UAAA/5C,KAAAyoC,SAAA,kBAAmC,CAAA0iB,MAGnChjC,EAAAsqB,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,sBACAwvB,IAAA,QAIA,OADAjjC,EAAAoT,YAAAiZ,GACArsB,GAGA8iC,EAhCA,CAiCExjB,IAEFA,GAAS+F,kBAAA,iBAAAyd,IAOT,IAAAI,GAEA,SAAA5D,GAGA,SAAA4D,IACA,OAAA5D,EAAArmD,MAAApB,KAAAiB,YAAAjB,KAHAs2B,EAAA+0B,EAAA5D,GAMA,IAAAjf,EAAA6iB,EAAA/pD,UAgHA,OA9FAknC,EAAAjO,SAAA,SAAApR,EAAA7jB,EAAAoX,QACA,IAAApX,IACAA,EAAA,SAGA,IAAAoX,IACAA,EAAA,IAIApX,EAAY6zB,GAAM,CAClB4gB,UAAA,gEACAne,UAAA57B,KAAAwqC,iBACKllC,GAELoX,EAAiByc,GAAM,CAEvB/4B,KAAA,UACKsc,GACL,IAAAyL,EAAasf,GAASnmC,UAAAi5B,SAAAr5B,KAAAlB,KAVtB,SAUsBsF,EAAAoX,GAEtB,OADA1c,KAAA8mD,oBAAA3+B,GACAA,GAoBAqgB,EAAAc,SAAA,SAAAlO,EAAApxB,QACA,IAAAA,IACAA,EAAA,IAGA,IAAA4xB,EAAA57B,KAAA0G,YAAA+V,KAGA,OAFIkb,EAAGM,KAAA,+DAAA2D,EAAA,yDAEI6L,GAASnmC,UAAAgoC,SAAApoC,KAAAlB,KAAAo7B,EAAApxB,IAQpBw+B,EAAAhQ,OAAA,WACAivB,EAAAnmD,UAAAk3B,OAAAt3B,KAAAlB,MAEAA,KAAAioC,IAAAxL,gBAAA,aAQA+L,EAAAjQ,QAAA,WACAkvB,EAAAnmD,UAAAi3B,QAAAr3B,KAAAlB,MAEAA,KAAAioC,IAAAlN,aAAA,wBAaAyN,EAAA+K,eAAA,SAAA1jC,GAEA,KAAAA,EAAAiyB,OAAA,KAAAjyB,EAAAiyB,OAKA2lB,EAAAnmD,UAAAiyC,eAAAryC,KAAAlB,KAAA6P,IAGAw7C,EAvHA,CAwHE1E,IAEFlf,GAAS+F,kBAAA,SAAA6d,IAQT,IAAAC,GAEA,SAAAC,GAGA,SAAAD,EAAA1nB,EAAA55B,GACA,IAAAijB,EAOA,OALAA,EAAAs+B,EAAArqD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACAwrD,YAAA,EAEAv+B,EAAA9sB,GAAA,YAAA8sB,EAAAw+B,iBAEAx+B,EAVAqJ,EAAAg1B,EAAAC,GAoBA,IAAA/iB,EAAA8iB,EAAAhqD,UAuDA,OArDAknC,EAAAgC,cAAA,WACA,6BAeAhC,EAAA6e,YAAA,SAAAx3C,GACA,IAAA67C,EAAA1rD,KAAA6nC,QAAAD,OAEA,GAAA5nC,KAAAwrD,YAAA37C,EAAA8xB,SAAA9xB,EAAAgyB,QACA4P,GAAAia,OADA,CAKA,IAAAC,EAAA3rD,KAAA6nC,QAAAwB,SAAA,cACAuiB,EAAAD,KAAAtiB,SAAA,cAEA,GAAAuiB,EAAA,CAKA,IAAAC,EAAA,WACA,OAAAD,EAAA5uB,SAGAuU,GAAAma,GACAA,EAAAla,KAAAqa,EAAA,cAEA7rD,KAAA4X,WAAAi0C,EAAA,QAXA7rD,KAAA6nC,QAAA7K,UAeAwL,EAAA+K,eAAA,SAAA1jC,GACA7P,KAAAwrD,YAAA,EAEAD,EAAAjqD,UAAAiyC,eAAAryC,KAAAlB,KAAA6P,IAGA24B,EAAAijB,gBAAA,SAAA57C,GACA7P,KAAAwrD,YAAA,GAGAF,EA5EA,CA6ECD,IASDC,GAAAhqD,UAAA2lD,aAAA,aACAxf,GAAS+F,kBAAA,gBAAA8d,IAQT,IAAAQ,GAEA,SAAAP,GAaA,SAAAO,EAAAloB,EAAA55B,GACA,IAAAijB,EAMA,OAJAA,EAAAs+B,EAAArqD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAw0C,YAAAxqC,KAAAwqC,aAAAvnB,EAAAwb,SAAA,UAEAxb,EAnBAqJ,EAAAw1B,EAAAP,GA6BA,IAAA/iB,EAAAsjB,EAAAxqD,UAqCA,OAnCAknC,EAAAgC,cAAA,WACA,0BAAA+gB,EAAAjqD,UAAAkpC,cAAAtpC,KAAAlB,OAiBAwoC,EAAA6e,YAAA,SAAAx3C,GAWA7P,KAAAY,QAAA,CACAR,KAAA,QACAyiC,SAAA,KAIAipB,EAnEA,CAoECT,IAED5jB,GAAS+F,kBAAA,cAAAse,IAOT,IAAAC,GAEA,SAAAR,GAaA,SAAAQ,EAAAnoB,EAAA55B,GACA,IAAAijB,EAkBA,YAhBA,IAAAjjB,IACAA,EAAA,IAGAijB,EAAAs+B,EAAArqD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,KAEAgK,EAAAgiD,YAAAr+C,IAAA3D,EAAAgiD,QAAAhiD,EAAAgiD,OAEA/+B,EAAA9sB,GAAAyjC,EAAA,OAAA3W,EAAAg/B,YAEAh/B,EAAA9sB,GAAAyjC,EAAA,QAAA3W,EAAAi/B,aAEAliD,EAAAgiD,QACA/+B,EAAA9sB,GAAAyjC,EAAA,QAAA3W,EAAAk/B,aAGAl/B,EA/BAqJ,EAAAy1B,EAAAR,GAyCA,IAAA/iB,EAAAujB,EAAAzqD,UAiGA,OA/FAknC,EAAAgC,cAAA,WACA,0BAAA+gB,EAAAjqD,UAAAkpC,cAAAtpC,KAAAlB,OAeAwoC,EAAA6e,YAAA,SAAAx3C,GACA7P,KAAA6nC,QAAAgM,SACA7zC,KAAA6nC,QAAAD,OAEA5nC,KAAA6nC,QAAAkM,SAcAvL,EAAA4jB,aAAA,SAAAv8C,GACA7P,KAAAg8B,YAAA,aAEAh8B,KAAA6nC,QAAAgM,SACA7zC,KAAAksD,YAAAr8C,GAEA7P,KAAAisD,WAAAp8C,IAaA24B,EAAAyjB,WAAA,SAAAp8C,GACA7P,KAAAg8B,YAAA,aACAh8B,KAAAg8B,YAAA,cACAh8B,KAAA67B,SAAA,eAEA77B,KAAAw0C,YAAA,UAYAhM,EAAA0jB,YAAA,SAAAr8C,GACA7P,KAAAg8B,YAAA,eACAh8B,KAAA67B,SAAA,cAEA77B,KAAAw0C,YAAA,SAYAhM,EAAA2jB,YAAA,SAAAt8C,GACA7P,KAAAg8B,YAAA,eACAh8B,KAAA67B,SAAA,aAEA77B,KAAAw0C,YAAA,UAEAx0C,KAAA+iC,IAAA/iC,KAAA6nC,QAAA,SAAA7nC,KAAAosD,eAGAL,EA3IA,CA4ICV,IASDU,GAAAzqD,UAAA2lD,aAAA,OACAxf,GAAS+F,kBAAA,aAAAue,IAsBT,IAAAM,GAAA,SAAAC,EAAAC,GACAD,IAAA,IAAAA,EACA,IAAAzkD,EAAAlE,KAAAigB,MAAA0oC,EAAA,IACA/pB,EAAA5+B,KAAAigB,MAAA0oC,EAAA,OACAE,EAAA7oD,KAAAigB,MAAA0oC,EAAA,MACAG,EAAA9oD,KAAAigB,MAAA2oC,EAAA,OACAG,EAAA/oD,KAAAigB,MAAA2oC,EAAA,MAeA,OAbAvkC,MAAAskC,QAAAzoD,OAGA2oD,EAAAjqB,EAAA16B,EAAA,MAIA2kD,IAAA,GAAAE,EAAA,EAAAF,EAAA,SAGAjqB,IAAAiqB,GAAAC,GAAA,KAAAlqB,EAAA,OAAAA,KAAA,MAEA16B,IAAA,OAAAA,MAKAG,GAAAqkD,GA0CA,SAAAM,GAAAL,EAAAC,GAKA,YAJA,IAAAA,IACAA,EAAAD,GAGAtkD,GAAAskD,EAAAC,GASA,IAAIK,GAEJ,SAAAna,GAaA,SAAAoa,EAAAjpB,EAAA55B,GACA,IAAAijB,EAOA,OALAA,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACA8sD,uBAAAvoB,GAAAt8B,GAAAnB,IAAAmmB,MAAA8/B,eAAA,IAEA9/B,EAAA9sB,GAAAyjC,EAAA,aAAA3W,EAAA6/B,wBAEA7/B,EApBAqJ,EAAAu2B,EAAApa,GA8BA,IAAAjK,EAAAqkB,EAAAvrD,UAsGA,OApGAknC,EAAAjO,SAAA,SAAAyyB,GACA,IAAApxB,EAAA57B,KAAAwqC,gBAEAriB,EAAAsqB,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,YAAA,gCACAme,UAAA,sDAAA/5C,KAAAyoC,SAAAzoC,KAAAitD,YAAA,gBAgBA,OAbAjtD,KAAAkpC,WAAA3O,GAAA,QACAqB,YAAA,YACK,CAELorB,YAAA,MAKA/mC,KAAA,iBAEAjgB,KAAAktD,kBACA/kC,EAAAoT,YAAAv7B,KAAAkpC,YACA/gB,GAGAqgB,EAAAnnC,QAAA,WACArB,KAAAkpC,WAAA,KACAlpC,KAAAmtD,UAAA,KAEA1a,EAAAnxC,UAAAD,QAAAH,KAAAlB,OAUAwoC,EAAA0kB,gBAAA,WACA,GAAAltD,KAAAkpC,WAAA,CAIA,KAAAlpC,KAAAkpC,WAAA7N,YACAr7B,KAAAkpC,WAAAnK,YAAA/+B,KAAAkpC,WAAA7N,YAGAr7B,KAAAmtD,UAAqBtzB,EAAAhwB,EAAQo1B,eAAAj/B,KAAAotD,gBAAAptD,KAAAqtD,YAAA,IAC7BrtD,KAAAkpC,WAAA3N,YAAAv7B,KAAAmtD,aAeA3kB,EAAA6kB,YAAA,SAAA5rC,GACA,OAAAkrC,GAAAlrC,IAaA+mB,EAAA8kB,qBAAA,SAAA7rC,GACA,IAAA8rC,EAAAvtD,KAAAqtD,YAAA5rC,GAEA8rC,IAAAvtD,KAAAotD,iBAIAptD,KAAAotD,eAAAG,EACAvtD,KAAAotC,sBAAAptC,KAAAktD,mBAaA1kB,EAAAukB,cAAA,SAAAl9C,KAEAg9C,EArIA,CAsIEplB,IASFmlB,GAAWtrD,UAAA2rD,WAAA,OAUXL,GAAWtrD,UAAA2lD,aAAA,OACXxf,GAAS+F,kBAAA,cAAkCof,IAO3C,IAAAY,GAEA,SAAAC,GAaA,SAAAD,EAAA5pB,EAAA55B,GACA,IAAAijB,EAMA,OAJAA,EAAAwgC,EAAAvsD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAG,GAAAyjC,EAAA,QAAA3W,EAAAk/B,aAEAl/B,EAnBAqJ,EAAAk3B,EAAAC,GA6BA,IAAAjlB,EAAAglB,EAAAlsD,UAwCA,OAtCAknC,EAAAgC,cAAA,WACA,0BAYAhC,EAAAukB,cAAA,SAAAl9C,GAEA,IAAA4R,EAAAzhB,KAAA6nC,QAAA6lB,YAAA1tD,KAAA6nC,QAAA8lB,WAAApR,YAAAv8C,KAAA6nC,QAAA0U,cACAv8C,KAAAstD,qBAAA7rC,IAcA+mB,EAAA2jB,YAAA,SAAAt8C,GACA7P,KAAA6nC,QAAA36B,YAIAlN,KAAAstD,qBAAAttD,KAAA6nC,QAAA36B,aAGAsgD,EAtEA,CAuEEZ,IASFY,GAAAlsD,UAAA2rD,WAAA,eAUAO,GAAAlsD,UAAA2lD,aAAA,eACAxf,GAAS+F,kBAAA,qBAAAggB,IAOT,IAAAI,GAEA,SAAAH,GAaA,SAAAG,EAAAhqB,EAAA55B,GACA,IAAAijB,EAkBA,OAhBAA,EAAAwgC,EAAAvsD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAIAG,GAAAyjC,EAAA,iBAAA3W,EAAA8/B,eAKA9/B,EAAA9sB,GAAAyjC,EAAA,YAAA3W,EAAA8/B,eAKA9/B,EAAA9sB,GAAAyjC,EAAA,iBAAA3W,EAAA6/B,wBAEA7/B,EA/BAqJ,EAAAs3B,EAAAH,GAyCA,IAAAjlB,EAAAolB,EAAAtsD,UA2BA,OAzBAknC,EAAAgC,cAAA,WACA,sBAeAhC,EAAAukB,cAAA,SAAAl9C,GACA,IAAA3C,EAAAlN,KAAA6nC,QAAA36B,WAEAlN,KAAA0/C,YAAAxyC,IACAlN,KAAA0/C,UAAAxyC,EACAlN,KAAAstD,qBAAApgD,KAIA0gD,EArEA,CAsEEhB,IASFgB,GAAAtsD,UAAA2rD,WAAA,WAUAW,GAAAtsD,UAAA2lD,aAAA,WACAxf,GAAS+F,kBAAA,kBAAAogB,IAQT,IAAAC,GAEA,SAAApb,GAGA,SAAAob,IACA,OAAApb,EAAArxC,MAAApB,KAAAiB,YAAAjB,KAuBA,OA1BAs2B,EAAAu3B,EAAApb,GAMAob,EAAAvsD,UAQAi5B,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,oCACAme,UAAA,6BACK,CAIL3G,eAAA,KAIAya,EA3BA,CA4BEpmB,IAEFA,GAAS+F,kBAAA,cAAAqgB,IAOT,IAAAC,GAEA,SAAAL,GAaA,SAAAK,EAAAlqB,EAAA55B,GACA,IAAAijB,EAQA,OANAA,EAAAwgC,EAAAvsD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAG,GAAAyjC,EAAA,iBAAA3W,EAAA6/B,wBAEA7/B,EAAA9sB,GAAAyjC,EAAA,QAAA3W,EAAAk/B,aAEAl/B,EArBAqJ,EAAAw3B,EAAAL,GA+BA,IAAAjlB,EAAAslB,EAAAxsD,UAkEA,OAhEAknC,EAAAgC,cAAA,WACA,4BAeAhC,EAAA6kB,YAAA,SAAA5rC,GAEA,UAAAgsC,EAAAnsD,UAAA+rD,YAAAnsD,KAAAlB,KAAAyhB,IAaA+mB,EAAAukB,cAAA,SAAAl9C,GACA7P,KAAA6nC,QAAA36B,aAMAlN,KAAA6nC,QAAAkmB,qBACA/tD,KAAAstD,qBAAAttD,KAAA6nC,QAAAkmB,wBAEA/tD,KAAAstD,qBAAAttD,KAAA6nC,QAAAmmB,mBAeAxlB,EAAA2jB,YAAA,SAAAt8C,GACA7P,KAAA6nC,QAAA36B,YAIAlN,KAAAstD,qBAAA,IAGAQ,EAlGA,CAmGElB,IASFkB,GAAAxsD,UAAA2rD,WAAA,iBAUAa,GAAAxsD,UAAA2lD,aAAA,iBACAxf,GAAS+F,kBAAA,uBAAAsgB,IAOT,IAAAG,GAEA,SAAAxb,GAaA,SAAAwb,EAAArqB,EAAA55B,GACA,IAAAijB,EAQA,OANAA,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAkuD,gBAEAjhC,EAAA9sB,GAAA8sB,EAAA2W,SAAA,iBAAA3W,EAAAihC,eAEAjhC,EArBAqJ,EAAA23B,EAAAxb,GA+BA,IAAAjK,EAAAylB,EAAA3sD,UAyCA,OAvCAknC,EAAAjO,SAAA,WACA,IAAApS,EAAAsqB,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,iCAUA,OAPA57B,KAAAkpC,WAAA3O,GAAA,OACAqB,UAAA,mBACAme,UAAA,kCAAA/5C,KAAAyoC,SAAA,6BAAAzoC,KAAAyoC,SAAA,SACK,CACLue,YAAA,QAEA7+B,EAAAoT,YAAAv7B,KAAAkpC,YACA/gB,GAGAqgB,EAAAnnC,QAAA,WACArB,KAAAkpC,WAAA,KAEAuJ,EAAAnxC,UAAAD,QAAAH,KAAAlB,OAaAwoC,EAAA0lB,cAAA,SAAAr+C,GACA7P,KAAA4jC,SAAA12B,aAAArJ,IACA7D,KAAA6qC,OAEA7qC,KAAA8qC,QAIAmjB,EAzEA,CA0EExmB,IAEFA,GAAS+F,kBAAA,cAAAygB,IAOT,IAAAE,GAEA,SAAA5C,GAaA,SAAA4C,EAAAvqB,EAAA55B,GACA,IAAAijB,EAUA,OARAA,EAAAs+B,EAAArqD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAouD,uBAEAnhC,EAAA4a,QAAAwmB,aACAphC,EAAA9sB,GAAA8sB,EAAA4a,QAAAwmB,YAAA,iBAAAphC,EAAAmhC,sBAGAnhC,EAvBAqJ,EAAA63B,EAAA5C,GAiCA,IAAA/iB,EAAA2lB,EAAA7sD,UA2DA,OAzDAknC,EAAAjO,SAAA,WACA,IAAApS,EAAAojC,EAAAjqD,UAAAi5B,SAAAr5B,KAAAlB,KAAA,UACA47B,UAAA,yCAUA,OAPA57B,KAAAsuD,QAAA/zB,GAAA,QACAqB,UAAA,wBACAme,UAAA/5C,KAAAyoC,SAAA,SACK,CACL2K,cAAA,SAEAjrB,EAAAoT,YAAAv7B,KAAAsuD,SACAnmC,GAQAqgB,EAAA4lB,qBAAA,SAAAzmD,IAEA3H,KAAA6nC,QAAAwmB,aAAAruD,KAAA6nC,QAAAwmB,YAAAE,cACAvuD,KAAA+6B,aAAA,oBACA/6B,KAAA67B,SAAA,oBACA77B,KAAAw0C,YAAA,0CAEAx0C,KAAA+6B,aAAA,oBACA/6B,KAAAg8B,YAAA,oBACAh8B,KAAAw0C,YAAA,yCAUAhM,EAAA6e,YAAA,WACArnD,KAAA6nC,QAAAwmB,YAAAG,kBAOAhmB,EAAAnnC,QAAA,WACArB,KAAA6nC,QAAAwmB,aACAruD,KAAAO,IAAAP,KAAA6nC,QAAAwmB,YAAA,iBAAAruD,KAAAouD,sBAGApuD,KAAAsuD,QAAA,KAEA/C,EAAAjqD,UAAAD,QAAAH,KAAAlB,OAGAmuD,EA7FA,CA8FC9C,IAED8C,GAAA7sD,UAAA2lD,aAAA,uCACAxf,GAAS+F,kBAAA,aAAA2gB,IAQT,IAAAM,GAEA,SAAAhc,GAaA,SAAAgc,EAAA7qB,EAAA55B,GACA,IAAAijB,EAUA,OARAA,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEA0uD,IAAAzhC,EAAAoc,SAAApc,EAAA6a,SAAA6mB,SAEA1hC,EAAA2hC,WAAA3hC,EAAA6a,SAAA8mB,UAEA3hC,EAAAuL,SAEAvL,EAvBAqJ,EAAAm4B,EAAAhc,GAiCA,IAAAjK,EAAAimB,EAAAntD,UAwVA,OAtVAknC,EAAAwO,QAAA,WACA,OAAAh3C,KAAAonD,UAOA5e,EAAAhQ,OAAA,WACAx4B,KAAAg3C,YAIAh3C,KAAAG,GAAA,YAAAH,KAAAyrD,iBACAzrD,KAAAG,GAAA,aAAAH,KAAAyrD,iBACAzrD,KAAAG,GAAA,QAAAH,KAAAsnD,aACAtnD,KAAAG,GAAA,OAAAH,KAAAunD,YACAvnD,KAAAG,GAAA,QAAAH,KAAAqnD,aACArnD,KAAAG,GAAAH,KAAA6nC,QAAA,kBAAA7nC,KAAA0nD,QAEA1nD,KAAA6uD,aACA7uD,KAAAG,GAAAH,KAAA6nC,QAAA7nC,KAAA6uD,YAAA7uD,KAAA0nD,QAGA1nD,KAAAg8B,YAAA,YACAh8B,KAAA+6B,aAAA,cACA/6B,KAAAonD,UAAA,IAOA5e,EAAAjQ,QAAA,WACA,GAAAv4B,KAAAg3C,UAAA,CAIA,IAAApV,EAAA5hC,KAAA0uD,IAAAzmB,IAAArF,cACA5iC,KAAAO,IAAA,YAAAP,KAAAyrD,iBACAzrD,KAAAO,IAAA,aAAAP,KAAAyrD,iBACAzrD,KAAAO,IAAA,QAAAP,KAAAsnD,aACAtnD,KAAAO,IAAA,OAAAP,KAAAunD,YACAvnD,KAAAO,IAAA,QAAAP,KAAAqnD,aACArnD,KAAAO,IAAAP,KAAA6nC,QAAA,kBAAA7nC,KAAA0nD,QACA1nD,KAAAO,IAAAqhC,EAAA,YAAA5hC,KAAA8uD,iBACA9uD,KAAAO,IAAAqhC,EAAA,UAAA5hC,KAAA+uD,eACA/uD,KAAAO,IAAAqhC,EAAA,YAAA5hC,KAAA8uD,iBACA9uD,KAAAO,IAAAqhC,EAAA,WAAA5hC,KAAA+uD,eACA/uD,KAAAy8B,gBAAA,YACAz8B,KAAA67B,SAAA,YAEA77B,KAAA6uD,aACA7uD,KAAAO,IAAAP,KAAA6nC,QAAA7nC,KAAA6uD,YAAA7uD,KAAA0nD,QAGA1nD,KAAAonD,UAAA,IAmBA5e,EAAAjO,SAAA,SAAAn6B,EAAAkF,EAAAoX,GAqBA,YApBA,IAAApX,IACAA,EAAA,SAGA,IAAAoX,IACAA,EAAA,IAIApX,EAAAs2B,UAAAt2B,EAAAs2B,UAAA,cACAt2B,EAAY6zB,GAAM,CAClB+Z,SAAA,GACK5tC,GACLoX,EAAiByc,GAAM,CACvBlZ,KAAA,SACA+uC,gBAAA,EACAC,gBAAA,EACAC,gBAAA,IACAhc,SAAA,GACKx2B,GACL+1B,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAAI,EAAAkF,EAAAoX,IAcA8rB,EAAAijB,gBAAA,SAAA57C,GACA,IAAA+xB,EAAA5hC,KAAA0uD,IAAAzmB,IAAArF,cAEA,cAAA/yB,EAAAzP,MACAyP,EAAAmxB,iBAOA,eAAAnxB,EAAAzP,MAAAgvC,IACAv/B,EAAAmxB,iBAGAjE,KACA/8B,KAAA67B,SAAA,eAQA77B,KAAAY,QAAA,gBACAZ,KAAAG,GAAAyhC,EAAA,YAAA5hC,KAAA8uD,iBACA9uD,KAAAG,GAAAyhC,EAAA,UAAA5hC,KAAA+uD,eACA/uD,KAAAG,GAAAyhC,EAAA,YAAA5hC,KAAA8uD,iBACA9uD,KAAAG,GAAAyhC,EAAA,WAAA5hC,KAAA+uD,eACA/uD,KAAA8uD,gBAAAj/C,IAiBA24B,EAAAsmB,gBAAA,SAAAj/C,KAaA24B,EAAAumB,cAAA,WACA,IAAAntB,EAAA5hC,KAAA0uD,IAAAzmB,IAAArF,cACA1F,KACAl9B,KAAAg8B,YAAA,eAQAh8B,KAAAY,QAAA,kBACAZ,KAAAO,IAAAqhC,EAAA,YAAA5hC,KAAA8uD,iBACA9uD,KAAAO,IAAAqhC,EAAA,UAAA5hC,KAAA+uD,eACA/uD,KAAAO,IAAAqhC,EAAA,YAAA5hC,KAAA8uD,iBACA9uD,KAAAO,IAAAqhC,EAAA,WAAA5hC,KAAA+uD,eACA/uD,KAAA0nD,UAWAlf,EAAAkf,OAAA,WAIA,GAAA1nD,KAAAioC,IAAA,CAQA,IAAAknB,EAAAnvD,KAAAovD,aACAV,EAAA1uD,KAAA0uD,IAEA,GAAAA,EAAA,EAKA,kBAAAS,YAAA,GAAAA,IAAAtrD,OACAsrD,EAAA,GAIA,IAAAE,GAAA,IAAAF,GAAAG,QAAA,OACArrB,EAAAyqB,EAAAvmC,KAAA8b,MAQA,OANAjkC,KAAA4uD,WACA3qB,EAAArlB,OAAAywC,EAEAprB,EAAAtlB,MAAA0wC,EAGAF,KAeA3mB,EAAA+mB,kBAAA,SAAA1/C,GACA,IAAAsuB,EAAAD,GAAAl+B,KAAAioC,IAAAp4B,GAEA,OAAA7P,KAAA4uD,WACAzwB,EAAAliB,EAGAkiB,EAAAniB,GAYAwsB,EAAA8e,YAAA,WACAtnD,KAAAG,GAAAH,KAAA0uD,IAAAzmB,IAAArF,cAAA,UAAA5iC,KAAAuzC,iBAcA/K,EAAA+K,eAAA,SAAA1jC,GAEA,KAAAA,EAAAiyB,OAAA,KAAAjyB,EAAAiyB,OACAjyB,EAAAmxB,iBACAhhC,KAAAwvD,YACK,KAAA3/C,EAAAiyB,OAAA,KAAAjyB,EAAAiyB,QACLjyB,EAAAmxB,iBACAhhC,KAAAyvD,gBAaAjnB,EAAA+e,WAAA,WACAvnD,KAAAO,IAAAP,KAAA0uD,IAAAzmB,IAAArF,cAAA,UAAA5iC,KAAAuzC,iBAWA/K,EAAA6e,YAAA,SAAAx3C,GACAA,EAAA4xB,2BACA5xB,EAAAmxB,kBAeAwH,EAAAomB,SAAA,SAAAc,GACA,QAAA/hD,IAAA+hD,EACA,OAAA1vD,KAAA2vD,YAAA,EAGA3vD,KAAA2vD,YAAAD,EAEA1vD,KAAA2vD,UACA3vD,KAAA67B,SAAA,uBAEA77B,KAAA67B,SAAA,0BAIA4yB,EA1XA,CA2XEhnB,IAEFA,GAAS+F,kBAAA,SAAAihB,IAOT,IAAAmB,GAEA,SAAAnd,GAaA,SAAAmd,EAAAhsB,EAAA55B,GACA,IAAAijB,EAOA,OALAA,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACA6vD,SAAA,GAEA5iC,EAAA9sB,GAAAyjC,EAAA,WAAA3W,EAAAy6B,QAEAz6B,EApBAqJ,EAAAs5B,EAAAnd,GA8BA,IAAAjK,EAAAonB,EAAAtuD,UAwEA,OAtEAknC,EAAAjO,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,oBACAme,UAAA,wCAAA/5C,KAAAyoC,SAAA,0FAIAD,EAAAnnC,QAAA,WACArB,KAAA6vD,SAAA,KAEApd,EAAAnxC,UAAAD,QAAAH,KAAAlB,OAYAwoC,EAAAkf,OAAA,SAAA73C,GACA,IAAAw+C,EAAAruD,KAAA6nC,QAAAwmB,YACA/d,EAAAtwC,KAAA6nC,QAAAyI,WACApjC,EAAAmhD,KAAAyB,SAAAzB,EAAA0B,cAAA/vD,KAAA6nC,QAAA36B,WACA8iD,EAAAhwD,KAAA6nC,QAAAmoB,cACA7mB,EAAAnpC,KAAA6vD,SACAI,EAAAjwD,KAAAs/B,EAAA,uCAEA4wB,EAAA,SAAAzuC,EAAArf,EAAA+tD,GAEA,IAAAC,EAAA3uC,EAAArf,GAAA,EAOA,OANAguD,EAAA,KAAAA,GAAA,IAAAA,GAEAD,IACAC,IAAAd,QAAA,IAGAc,EAAA,KAIApwD,KAAAioC,IAAAhE,MAAAtlB,MAAAuxC,EAAAF,EAAA9iD,GAEA+Z,GAAAgpC,EAAAC,EAAAF,EAAA9iD,GAAA,IAEA,QAAApM,EAAA,EAAmBA,EAAAwvC,EAAAvvC,OAAqBD,IAAA,CACxC,IAAAiT,EAAAu8B,EAAAv8B,MAAAjT,GACAsB,EAAAkuC,EAAAluC,IAAAtB,GACAuvD,EAAAlnB,EAAAroC,GAEAuvD,IACAA,EAAArwD,KAAAioC,IAAA1M,YAAAhB,MACA4O,EAAAroC,GAAAuvD,GAIAA,EAAApsB,MAAAzG,KAAA0yB,EAAAn8C,EAAAi8C,GACAK,EAAApsB,MAAAtlB,MAAAuxC,EAAA9tD,EAAA2R,EAAAi8C,GAIA,QAAA17B,EAAA6U,EAAApoC,OAAkCuzB,EAAAgc,EAAAvvC,OAAsBuzB,IACxDt0B,KAAAioC,IAAAlJ,YAAAoK,EAAA7U,EAAA,IAGA6U,EAAApoC,OAAAuvC,EAAAvvC,QAGA6uD,EAvGA,CAwGEnoB,IAEFA,GAAS+F,kBAAA,kBAAAoiB,IAOT,IAAAU,GAEA,SAAA7d,GAGA,SAAA6d,IACA,OAAA7d,EAAArxC,MAAApB,KAAAiB,YAAAjB,KAHAs2B,EAAAg6B,EAAA7d,GAMA,IAAAjK,EAAA8nB,EAAAhvD,UAuHA,OA/GAknC,EAAAjO,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,oBACK,CACLwX,cAAA,UAeA5K,EAAAkf,OAAA,SAAA6I,EAAAC,EAAA/1B,GACA,IAAAg2B,EAAAtzB,GAAAn9B,KAAAioC,KACAyoB,EAAAvzB,GAAAn9B,KAAA6nC,QAAA1f,MACAwoC,EAAAJ,EAAA5xC,MAAA6xC,EAGA,GAAAE,GAAAD,EAAA,CAQA,IAAAG,EAAAL,EAAA/yB,KAAAkzB,EAAAlzB,KAAAmzB,EAKAE,EAAAN,EAAA5xC,MAAAgyC,GAAAD,EAAAI,MAAAP,EAAAO,OAGAC,EAAAN,EAAA9xC,MAAA,EAGAiyC,EAAAG,EACAA,KAAAH,EACKC,EAAAE,IACLA,EAAAF,GAMAE,EAAA,EACAA,EAAA,EACKA,EAAAN,EAAA9xC,QACLoyC,EAAAN,EAAA9xC,OAGA3e,KAAAioC,IAAAhE,MAAA6sB,MAAA,IAAAC,EAAA,KACA9pC,GAAAjnB,KAAAioC,IAAAxN,KAqBA+N,EAAAwoB,WAAA,SAAAT,EAAAC,EAAA/uC,EAAAkqC,GACA,IAAA1+B,EAAAjtB,KAGAA,KAAAixD,QACAjxD,KAAAutC,qBAAAvtC,KAAAixD,QAGAjxD,KAAAixD,OAAAjxD,KAAAotC,sBAAA,WACA,IAAA3S,EAEAvtB,EAAA+f,EAAA4a,QAAA36B,WAEA,GAAA+f,EAAA4a,QAAAwmB,aAAAphC,EAAA4a,QAAAwmB,YAAAyB,SAAA,CACA,IAAAoB,EAAAjkC,EAAA4a,QAAAwmB,YAAA6C,aAEAC,EAAAD,EAAAV,EAAAU,EACAz2B,GAAA02B,EAAA,UAAAxE,GAAAwE,EAAAD,QAEAz2B,EAAAkyB,GAAAlrC,EAAAvU,GAGA+f,EAAAy6B,OAAA6I,EAAAC,EAAA/1B,GAEAkxB,GACAA,OAKA2E,EA9HA,CA+HE7oB,IAEFA,GAAS+F,kBAAA,cAAA8iB,IAQT,IAAAc,GAEA,SAAA3e,GAGA,SAAA2e,IACA,OAAA3e,EAAArxC,MAAApB,KAAAiB,YAAAjB,KAHAs2B,EAAA86B,EAAA3e,GAMA,IAAAjK,EAAA4oB,EAAA9vD,UAuCA,OA/BAknC,EAAAjO,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,oCACK,CACLwX,cAAA,UAgBA5K,EAAAkf,OAAA,SAAA6I,EAAAC,GACA,IAAAa,EAAArxD,KAAAqpC,SAAA,eAEA,GAAAgoB,EAAA,CAIA,IAAA5vC,EAAAzhB,KAAA6nC,QAAA6lB,YAAA1tD,KAAA6nC,QAAA8lB,WAAApR,YAAAv8C,KAAA6nC,QAAA0U,cACA8U,EAAAL,WAAAT,EAAAC,EAAA/uC,KAGA2vC,EA9CA,CA+CE3pB,IASF2pB,GAAA9vD,UAAAwmC,SAAA,CACAqB,SAAA,IAGAwF,IAAAE,IACAuiB,GAAA9vD,UAAAwmC,SAAAqB,SAAAhoC,KAAA,eAGAsmC,GAAS+F,kBAAA,kBAAA4jB,IAUT,IAAAE,GAEA,SAAA7e,GAaA,SAAA6e,EAAA1tB,EAAA55B,GACA,IAAAijB,EAIA,OAFAA,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACA0nD,OAAAnjB,GAAAt8B,GAAAnB,IAAAmmB,MAAAy6B,QAAA,IACAz6B,EAjBAqJ,EAAAg7B,EAAA7e,GA2BA,IAAAjK,EAAA8oB,EAAAhwD,UA6BA,OA3BAknC,EAAAjO,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,uBAgBA4M,EAAAkf,OAAA,SAAA6I,EAAAC,GACA,IAAAjiC,EAAAvuB,KAEAyhB,EAAA+uC,EAAAxwD,KAAA6nC,QAAA36B,WACAlN,KAAAqpC,SAAA,eAAA2nB,WAAAT,EAAAC,EAAA/uC,EAAA,WACA8M,EAAA0Z,IAAAhE,MAAAzG,KAAA+yB,EAAA5xC,MAAA6xC,EAAA,QAIAc,EAzDA,CA0DE7pB,IASF6pB,GAAAhwD,UAAAwmC,SAAA,CACAqB,SAAA,iBAEA1B,GAAS+F,kBAAA,mBAAA8jB,IACT,IAUAC,GAEA,SAAAC,GAaA,SAAAD,EAAA3tB,EAAA55B,GACA,IAAAijB,EAMA,OAJAA,EAAAukC,EAAAtwD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAyxD,oBAEAxkC,EAnBAqJ,EAAAi7B,EAAAC,GA4BA,IAAAhpB,EAAA+oB,EAAAjwD,UA2VA,OAzVAknC,EAAAipB,kBAAA,WACA,IAAAljC,EAAAvuB,KAEAA,KAAA0nD,OAAAnjB,GAAAt8B,GAAAjI,UAAA0nD,QA5CA,IA6CA1nD,KAAAG,GAAAH,KAAA6nC,QAAA,aAAA7nC,KAAA0nD,QACA1nD,KAAAG,GAAAH,KAAA6nC,QAAA,QAAA7nC,KAAAmsD,aACAnsD,KAAAG,GAAAH,KAAA6nC,QAAA,iBAAA7nC,KAAA0nD,QAEA1nD,KAAA6nC,QAAAwmB,aACAruD,KAAAG,GAAAH,KAAA6nC,QAAAwmB,YAAA,iBAAAruD,KAAA0nD,QAKA1nD,KAAA0xD,eAAA,KACA1xD,KAAAG,GAAAH,KAAA6nC,QAAA,uBACAtZ,EAAAqe,cAAAre,EAAAmjC,gBAEAnjC,EAAAmjC,eAAAnjC,EAAAse,YAAA,WACAte,EAAA6e,sBAAA,WACA7e,EAAAm5B,YA7DA,MAiEA1nD,KAAAG,GAAAH,KAAA6nC,QAAA,qCAAAlgC,GACA4mB,EAAAsZ,QAAAwmB,aAAA9/B,EAAAsZ,QAAAwmB,YAAAyB,UAAA,UAAAnoD,EAAAvH,MAIAmuB,EAAAqe,cAAAre,EAAAmjC,kBAEA1xD,KAAAG,GAAAH,KAAA6nC,QAAA,uBAAA7nC,KAAA0nD,SAUAlf,EAAAjO,SAAA,WACA,OAAAi3B,EAAAlwD,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,uBACK,CACLyX,aAAArzC,KAAAyoC,SAAA,mBAiBAD,EAAAmpB,QAAA,SAAApV,EAAA6T,GACA,IAAA/B,EAAAruD,KAAA6nC,QAAAwmB,YACAnhD,EAAAlN,KAAA6nC,QAAA36B,WAEAmhD,KAAAyB,WACA5iD,EAAAlN,KAAA6nC,QAAAwmB,YAAAuD,mBAGAvD,KAAA0B,gBAAAlsD,IACA7D,KAAAu4B,UAEAv4B,KAAAw4B,SAIAx4B,KAAAioC,IAAAlN,aAAA,qBAAAq1B,GAAAd,QAAA,IAEAtvD,KAAAioC,IAAAlN,aAAA,iBAAA/6B,KAAAyoC,SAAA,oDAA4G,CAAAkkB,GAAApQ,EAAArvC,GAAAy/C,GAAAz/C,MAAA,eAE5GlN,KAAA0uD,IAAAhH,OAAAvqB,GAAAn9B,KAAAioC,KAAAmoB,IAeA5nB,EAAAkf,OAAA,SAAA73C,GACA,IAAAugD,EAAAoB,EAAAlwD,UAAAomD,OAAAxmD,KAAAlB,MAGA,OADAA,KAAA2xD,QAAA3xD,KAAA6xD,kBAAAzB,GACAA,GAaA5nB,EAAAqpB,gBAAA,WACA,OAAA7xD,KAAA6nC,QAAA6lB,YAAA1tD,KAAA6nC,QAAA8lB,WAAApR,YAAAv8C,KAAA6nC,QAAA0U,eAaA/T,EAAA2jB,YAAA,SAAAt8C,GACA7P,KAAA2xD,QAAA3xD,KAAA6nC,QAAA36B,WAAA,IAUAs7B,EAAA4mB,WAAA,WACA,IACAgB,EADA7T,EAAAv8C,KAAA6xD,kBAEAxD,EAAAruD,KAAA6nC,QAAAwmB,YAYA,OAVAA,KAAAyB,UACAM,GAAA7T,EAAA8R,EAAAyD,iBAAAzD,EAAA6C,aAEA7C,EAAAE,eACA6B,EAAA,IAGAA,EAAA7T,EAAAv8C,KAAA6nC,QAAA36B,WAGAkjD,GAAA,IAAAA,GAAA,GAYA5nB,EAAAijB,gBAAA,SAAA57C,GACAsvB,GAAAtvB,KAKAA,EAAA0xB,kBACAvhC,KAAA6nC,QAAA6lB,WAAA,GACA1tD,KAAA+xD,iBAAA/xD,KAAA6nC,QAAAgM,SACA7zC,KAAA6nC,QAAAkM,QAEAyd,EAAAlwD,UAAAmqD,gBAAAvqD,KAAAlB,KAAA6P,KAYA24B,EAAAsmB,gBAAA,SAAAj/C,GACA,GAAAsvB,GAAAtvB,GAAA,CAIA,IAAAmiD,EACAC,EAAAjyD,KAAAuvD,kBAAA1/C,GACAw+C,EAAAruD,KAAA6nC,QAAAwmB,YAEA,GAAAA,KAAAyB,SAMK,CACL,IAAAgC,EAAAzD,EAAAyD,gBACA/B,EAAA1B,EAAAuD,kBAgBA,IAfAI,EAAAF,EAAAG,EAAA5D,EAAA6C,eAEAnB,IACAiC,EAAAjC,GAKAiC,GAAAF,IACAE,EAAAF,EAAA,IAMAE,IAAAnuD,IACA,YAxBAmuD,EAAAC,EAAAjyD,KAAA6nC,QAAA36B,cAEAlN,KAAA6nC,QAAA36B,aACA8kD,GAAA,IA0BAhyD,KAAA6nC,QAAA0U,YAAAyV,KAGAxpB,EAAAhQ,OAAA,WACAg5B,EAAAlwD,UAAAk3B,OAAAt3B,KAAAlB,MAEA,IAAAkyD,EAAAlyD,KAAAqpC,SAAA,oBAEA6oB,GAIAA,EAAArnB,QAGArC,EAAAjQ,QAAA,WACAi5B,EAAAlwD,UAAAi3B,QAAAr3B,KAAAlB,MAEA,IAAAkyD,EAAAlyD,KAAAqpC,SAAA,oBAEA6oB,GAIAA,EAAApnB,QAYAtC,EAAAumB,cAAA,SAAAl/C,GACA2hD,EAAAlwD,UAAAytD,cAAA7tD,KAAAlB,KAAA6P,GAGAA,GACAA,EAAA0xB,kBAGAvhC,KAAA6nC,QAAA6lB,WAAA,GASA1tD,KAAA6nC,QAAAjnC,QAAA,CACAR,KAAA,aACAiF,OAAArF,KACAggD,mBAAA,IAGAhgD,KAAA+xD,iBACAtgB,GAAAzxC,KAAA6nC,QAAAD,SAQAY,EAAAinB,YAAA,WACAzvD,KAAA6nC,QAAA0U,YAAAv8C,KAAA6nC,QAAA0U,cAnVA,IA0VA/T,EAAAgnB,SAAA,WACAxvD,KAAA6nC,QAAA0U,YAAAv8C,KAAA6nC,QAAA0U,cA3VA,IAuWA/T,EAAA2pB,aAAA,SAAAtiD,GACA7P,KAAA6nC,QAAAgM,SACA7zC,KAAA6nC,QAAAD,OAEA5nC,KAAA6nC,QAAAkM,SAcAvL,EAAA+K,eAAA,SAAA1jC,GAEA,KAAAA,EAAAiyB,OAAA,KAAAjyB,EAAAiyB,OACAjyB,EAAAmxB,iBACAhhC,KAAAmyD,aAAAtiD,IACK2hD,EAAAlwD,UAAAiyC,gBAELie,EAAAlwD,UAAAiyC,eAAAryC,KAAAlB,KAAA6P,IAIA0hD,EAxXA,CAyXC9C,IASD8C,GAAAjwD,UAAAwmC,SAAA,CACAqB,SAAA,sCACAwlB,QAAA,mBAGAhgB,IAAAE,IACA0iB,GAAAjwD,UAAAwmC,SAAAqB,SAAAxoC,OAAA,wBASA4wD,GAAAjwD,UAAAutD,YAAA,aACApnB,GAAS+F,kBAAA,UAAA+jB,IAQT,IAAAa,GAEA,SAAA3f,GAaA,SAAA2f,EAAAxuB,EAAA55B,GACA,IAAAijB,EAQA,OANAA,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACA8uD,gBAAAvqB,GAAAt8B,GAAAnB,IAAAmmB,MAAA6hC,iBAAA,IACA7hC,EAAAolC,yBAAA9tB,GAAAt8B,GAAAnB,IAAAmmB,MAAAqlC,iBAAA,IAEArlC,EAAAuL,SAEAvL,EArBAqJ,EAAA87B,EAAA3f,GA+BA,IAAAjK,EAAA4pB,EAAA9wD,UAwKA,OAtKAknC,EAAAjO,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,sCAcA4M,EAAAsmB,gBAAA,SAAAj/C,GACA,IAAA0iD,EAAAvyD,KAAAqpC,SAAA,WAEA,GAAAkpB,EAAA,CACA,IAAAL,EAAAK,EAAAlpB,SAAA,oBACAmpB,EAAAD,EAAApqC,KACAooC,EAAApzB,GAAAq1B,GACAhC,EAAAtyB,GAAAs0B,EAAA3iD,GAAAmM,EAIAw0C,EAAA,EACAA,EAAA,EACOA,EAAA,IACPA,EAAA,GAGA0B,GACAA,EAAAxK,OAAA6I,EAAAC,KA0BAhoB,EAAA8pB,gBAAA,SAAAziD,GACA,IAAA0iD,EAAAvyD,KAAAqpC,SAAA,WAEAkpB,GACAA,EAAAzD,gBAAAj/C,IAWA24B,EAAAwO,QAAA,WACA,OAAAh3C,KAAAonD,UAOA5e,EAAAjQ,QAAA,WACAv4B,KAAAmpC,WAAAjlC,QAAA,SAAAk3B,GACA,OAAAA,EAAA7C,SAAA6C,EAAA7C,YAGAv4B,KAAAg3C,YAIAh3C,KAAAO,IAAA,2BAAAP,KAAAyrD,iBACAzrD,KAAAO,IAAAP,KAAAioC,IAAA,YAAAjoC,KAAA8uD,iBACA9uD,KAAA+uD,gBACA/uD,KAAA67B,SAAA,YACA77B,KAAAonD,UAAA,IAOA5e,EAAAhQ,OAAA,WACAx4B,KAAAmpC,WAAAjlC,QAAA,SAAAk3B,GACA,OAAAA,EAAA5C,QAAA4C,EAAA5C,WAGAx4B,KAAAg3C,YAIAh3C,KAAAG,GAAA,2BAAAH,KAAAyrD,iBACAzrD,KAAAG,GAAAH,KAAAioC,IAAA,YAAAjoC,KAAA8uD,iBACA9uD,KAAAg8B,YAAA,YACAh8B,KAAAonD,UAAA,IAaA5e,EAAAijB,gBAAA,SAAA57C,GACA,IAAA+xB,EAAA5hC,KAAAioC,IAAArF,cACA2vB,EAAAvyD,KAAAqpC,SAAA,WAEAkpB,GACAA,EAAA9G,gBAAA57C,GAGA7P,KAAAG,GAAAyhC,EAAA,YAAA5hC,KAAAqyD,0BACAryD,KAAAG,GAAAyhC,EAAA,YAAA5hC,KAAAqyD,0BACAryD,KAAAG,GAAAyhC,EAAA,UAAA5hC,KAAA+uD,eACA/uD,KAAAG,GAAAyhC,EAAA,WAAA5hC,KAAA+uD,gBAaAvmB,EAAAumB,cAAA,SAAAl/C,GACA,IAAA+xB,EAAA5hC,KAAAioC,IAAArF,cACA2vB,EAAAvyD,KAAAqpC,SAAA,WAEAkpB,GACAA,EAAAxD,cAAAl/C,GAGA7P,KAAAO,IAAAqhC,EAAA,YAAA5hC,KAAAqyD,0BACAryD,KAAAO,IAAAqhC,EAAA,YAAA5hC,KAAAqyD,0BACAryD,KAAAO,IAAAqhC,EAAA,UAAA5hC,KAAA+uD,eACA/uD,KAAAO,IAAAqhC,EAAA,WAAA5hC,KAAA+uD,gBAGAqD,EAxMA,CAyME3qB,IASF2qB,GAAA9wD,UAAAwmC,SAAA,CACAqB,SAAA,aAEA1B,GAAS+F,kBAAA,kBAAA4kB,IAOT,IAAIK,GAEJ,SAAAlH,GAaA,SAAAmH,EAAA9uB,EAAA55B,GACA,IAAAijB,EAUA,OARAA,EAAAs+B,EAAArqD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAG,GAAAyjC,EAAA,mBAAA3W,EAAA0lC,yBAEgB,IAAR94B,EAAAhwB,EAAQ4mC,GAAAmiB,oBAChB3lC,EAAAsL,UAGAtL,EAvBAqJ,EAAAo8B,EAAAnH,GAiCA,IAAA/iB,EAAAkqB,EAAApxD,UA4CA,OA1CAknC,EAAAgC,cAAA,WACA,gCAAA+gB,EAAAjqD,UAAAkpC,cAAAtpC,KAAAlB,OAaAwoC,EAAAmqB,uBAAA,SAAA9iD,GACA7P,KAAA6nC,QAAAgrB,eACA7yD,KAAAw0C,YAAA,kBAEAx0C,KAAAw0C,YAAA,eAgBAhM,EAAA6e,YAAA,SAAAx3C,GACA7P,KAAA6nC,QAAAgrB,eAGA7yD,KAAA6nC,QAAAirB,iBAFA9yD,KAAA6nC,QAAAkrB,qBAMAL,EA9EA,CA+ECrH,IASDoH,GAAgBnxD,UAAA2lD,aAAA,aAChBxf,GAAS+F,kBAAA,mBAAuCilB,IAchD,IAAAO,GAAA,SAAAzzD,EAAAqkC,GAEAA,EAAA4X,QAAA5X,EAAA4X,MAAA+G,uBACAhjD,EAAAs8B,SAAA,cAGAt8B,EAAAY,GAAAyjC,EAAA,uBACAA,EAAA4X,MAAA+G,sBAGAhjD,EAAAy8B,YAAA,cAFAz8B,EAAAs8B,SAAA,iBAaAo3B,GAEA,SAAAxgB,GAGA,SAAAwgB,IACA,OAAAxgB,EAAArxC,MAAApB,KAAAiB,YAAAjB,KAkBA,OArBAs2B,EAAA28B,EAAAxgB,GAMAwgB,EAAA3xD,UAQAi5B,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,mBACAme,UAAA,4CAIAkZ,EAtBA,CAuBExrB,IAEFA,GAAS+F,kBAAA,cAAAylB,IAOT,IAAAC,GAEA,SAAA1B,GAaA,SAAA0B,EAAAtvB,EAAA55B,GACA,IAAAijB,EAWA,OATAA,EAAAukC,EAAAtwD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAG,GAAA,eAAA8sB,EAAAkmC,mBAEAlmC,EAAA9sB,GAAAyjC,EAAA,eAAA3W,EAAAmmC,sBAEAxvB,EAAA+D,MAAA,WACA,OAAA1a,EAAAmmC,yBAEAnmC,EAxBAqJ,EAAA48B,EAAA1B,GAkCA,IAAAhpB,EAAA0qB,EAAA5xD,UAsIA,OApIAknC,EAAAjO,SAAA,WACA,OAAAi3B,EAAAlwD,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,iCACK,CACLyX,aAAArzC,KAAAyoC,SAAA,gBACAue,YAAA,YAaAxe,EAAAijB,gBAAA,SAAA57C,GACAsvB,GAAAtvB,IAIA2hD,EAAAlwD,UAAAmqD,gBAAAvqD,KAAAlB,KAAA6P,IAYA24B,EAAAsmB,gBAAA,SAAAj/C,GACAsvB,GAAAtvB,KAIA7P,KAAAqzD,aACArzD,KAAA6nC,QAAAyrB,OAAAtzD,KAAAuvD,kBAAA1/C,MAOA24B,EAAA6qB,WAAA,WACArzD,KAAA6nC,QAAA0rB,SACAvzD,KAAA6nC,QAAA0rB,OAAA,IAWA/qB,EAAA4mB,WAAA,WACA,OAAApvD,KAAA6nC,QAAA0rB,QACA,EAGAvzD,KAAA6nC,QAAAyrB,UAOA9qB,EAAAinB,YAAA,WACAzvD,KAAAqzD,aACArzD,KAAA6nC,QAAAyrB,OAAAtzD,KAAA6nC,QAAAyrB,SAAA,KAOA9qB,EAAAgnB,SAAA,WACAxvD,KAAAqzD,aACArzD,KAAA6nC,QAAAyrB,OAAAtzD,KAAA6nC,QAAAyrB,SAAA,KAYA9qB,EAAA4qB,qBAAA,SAAAvjD,GACA,IAAA2jD,EAAAxzD,KAAA6nC,QAAA0rB,QAAA,EAAAvzD,KAAAyzD,sBACAzzD,KAAAioC,IAAAlN,aAAA,gBAAAy4B,GACAxzD,KAAAioC,IAAAlN,aAAA,iBAAAy4B,EAAA,MASAhrB,EAAAirB,oBAAA,WACA,OAAA9vD,KAAAs6B,MAAA,IAAAj+B,KAAA6nC,QAAAyrB,WAYA9qB,EAAA2qB,kBAAA,WACA,IAAA5kC,EAAAvuB,KAEA0zD,EAAA1zD,KAAA6nC,QAAAyrB,SACAtzD,KAAA+iC,IAAA,4BACA,IAAAxU,EAAAsZ,QAAAyrB,UACA/kC,EAAAsZ,QAAA8rB,YAAAD,MAKAR,EAzKA,CA0KCzE,IASDyE,GAAA5xD,UAAAwmC,SAAA,CACAqB,SAAA,gBACAwlB,QAAA,eAQAuE,GAAA5xD,UAAAutD,YAAA,eACApnB,GAAS+F,kBAAA,YAAA0lB,IAOT,IAAAU,GAEA,SAAAnhB,GAaA,SAAAmhB,EAAAhwB,EAAA55B,GACA,IAAAijB,EAyCA,YAvCA,IAAAjjB,IACAA,EAAA,IAGAA,EAAA4kD,SAAA5kD,EAAA4kD,WAAA,GAGA,qBAAA5kD,EAAA6pD,WAAAx6B,GAAArvB,EAAA6pD,cACA7pD,EAAA6pD,UAAA7pD,EAAA6pD,WAAA,GACA7pD,EAAA6pD,UAAAjF,SAAA5kD,EAAA4kD,UAGA3hC,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,KAEAgzD,GAAAlsD,IAAAmmB,IAAA2W,GACA3W,EAAA6mC,yBAAAvvB,GAAAt8B,GAAAnB,IAAAmmB,MAAA6hC,iBAAA,IAEA7hC,EAAA9sB,GAAA,YAAA8sB,EAAAw+B,iBAEAx+B,EAAA9sB,GAAA,aAAA8sB,EAAAw+B,iBAIAx+B,EAAA9sB,GAAA8sB,EAAA4mC,UAAA,oCACA5mC,EAAA4mC,UAAAh4B,SAAA,qBAEA5O,EAAA4O,SAAA,qBAEA5O,EAAArsB,QAAA,kBAGAqsB,EAAA9sB,GAAA8sB,EAAA4mC,UAAA,qCACA5mC,EAAA4mC,UAAA73B,YAAA,qBAEA/O,EAAA+O,YAAA,qBAEA/O,EAAArsB,QAAA,oBAGAqsB,EAtDAqJ,EAAAs9B,EAAAnhB,GAgEA,IAAAjK,EAAAorB,EAAAtyD,UAgEA,OA9DAknC,EAAAjO,SAAA,WACA,IAAAw5B,EAAA,wBAMA,OAJA/zD,KAAA8nC,SAAA8mB,WACAmF,EAAA,uBAGAthB,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,kCAAAm4B,KAcAvrB,EAAAijB,gBAAA,SAAA57C,GACA,IAAA+xB,EAAA5hC,KAAAioC,IAAArF,cACA5iC,KAAAG,GAAAyhC,EAAA,YAAA5hC,KAAA8zD,0BACA9zD,KAAAG,GAAAyhC,EAAA,YAAA5hC,KAAA8zD,0BACA9zD,KAAAG,GAAAyhC,EAAA,UAAA5hC,KAAA+uD,eACA/uD,KAAAG,GAAAyhC,EAAA,WAAA5hC,KAAA+uD,gBAaAvmB,EAAAumB,cAAA,SAAAl/C,GACA,IAAA+xB,EAAA5hC,KAAAioC,IAAArF,cACA5iC,KAAAO,IAAAqhC,EAAA,YAAA5hC,KAAA8zD,0BACA9zD,KAAAO,IAAAqhC,EAAA,YAAA5hC,KAAA8zD,0BACA9zD,KAAAO,IAAAqhC,EAAA,UAAA5hC,KAAA+uD,eACA/uD,KAAAO,IAAAqhC,EAAA,WAAA5hC,KAAA+uD,gBAaAvmB,EAAAsmB,gBAAA,SAAAj/C,GACA7P,KAAA6zD,UAAA/E,gBAAAj/C,IAGA+jD,EAjIA,CAkIEnsB,IASFmsB,GAAAtyD,UAAAwmC,SAAA,CACAqB,SAAA,eAEA1B,GAAS+F,kBAAA,gBAAAomB,IAcT,IAAAI,GAAA,SAAAz0D,EAAAqkC,GAEAA,EAAA4X,QAAA5X,EAAA4X,MAAAgH,qBACAjjD,EAAAs8B,SAAA,cAGAt8B,EAAAY,GAAAyjC,EAAA,uBACAA,EAAA4X,MAAAgH,oBAGAjjD,EAAAy8B,YAAA,cAFAz8B,EAAAs8B,SAAA,iBAaAo4B,GAEA,SAAA1I,GAaA,SAAA0I,EAAArwB,EAAA55B,GACA,IAAAijB,EAQA,OANAA,EAAAs+B,EAAArqD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,KAEAg0D,GAAAltD,IAAAmmB,IAAA2W,GAEA3W,EAAA9sB,GAAAyjC,EAAA,6BAAA3W,EAAAy6B,QAEAz6B,EArBAqJ,EAAA29B,EAAA1I,GA+BA,IAAA/iB,EAAAyrB,EAAA3yD,UAuGA,OArGAknC,EAAAgC,cAAA,WACA,0BAAA+gB,EAAAjqD,UAAAkpC,cAAAtpC,KAAAlB,OAeAwoC,EAAA6e,YAAA,SAAAx3C,GACA,IAAAqkD,EAAAl0D,KAAA6nC,QAAAyrB,SACAa,EAAAn0D,KAAA6nC,QAAA8rB,cAEA,OAAAO,EAAA,CACA,IAAAE,EAAAD,EAAA,MAAAA,EACAn0D,KAAA6nC,QAAAyrB,OAAAc,GACAp0D,KAAA6nC,QAAA0rB,OAAA,QAEAvzD,KAAA6nC,QAAA0rB,OAAAvzD,KAAA6nC,QAAA0rB,UAgBA/qB,EAAAkf,OAAA,SAAA73C,GACA7P,KAAAq0D,cACAr0D,KAAAs0D,sBAeA9rB,EAAA6rB,YAAA,WACA,IAAAH,EAAAl0D,KAAA6nC,QAAAyrB,SACAj8B,EAAA,EAIAsX,IACA3uC,KAAA6nC,QAAA0rB,MAAAvzD,KAAA6nC,QAAA2T,MAAAvT,IAAAsrB,OAGA,IAAAW,GAAAl0D,KAAA6nC,QAAA0rB,QACAl8B,EAAA,EACK68B,EAAA,IACL78B,EAAA,EACK68B,EAAA,MACL78B,EAAA,GAIA,QAAAv2B,EAAA,EAAmBA,EAAA,EAAOA,IAC1Bk7B,GAAAh8B,KAAAioC,IAAA,WAAAnnC,GAGA+6B,GAAA77B,KAAAioC,IAAA,WAAA5Q,IAWAmR,EAAA8rB,mBAAA,WACA,IACA/kD,EADAvP,KAAA6nC,QAAA0rB,SAAA,IAAAvzD,KAAA6nC,QAAAyrB,SACA,gBAEAtzD,KAAAw0C,gBAAAjlC,GACAvP,KAAAw0C,YAAAjlC,IAIA0kD,EAvIA,CAwIC5I,IASD4I,GAAA3yD,UAAA2lD,aAAA,OACAxf,GAAS+F,kBAAA,aAAAymB,IAQT,IAAAM,GAEA,SAAA9hB,GAaA,SAAA8hB,EAAA3wB,EAAA55B,GACA,IAAAijB,EA6BA,YA3BA,IAAAjjB,IACAA,EAAA,IAGA,qBAAAA,EAAAwqD,OACAxqD,EAAAwqD,OAAAxqD,EAAAwqD,OAEAxqD,EAAAwqD,QAAA,GAKA,qBAAAxqD,EAAAyqD,eAAAp7B,GAAArvB,EAAAyqD,kBACAzqD,EAAAyqD,cAAAzqD,EAAAyqD,eAAA,GACAzqD,EAAAyqD,cAAA7F,UAAA5kD,EAAAwqD,SAGAvnC,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAG,GAAAyjC,EAAA,cAAA3W,EAAAynC,mBAIAznC,EAAA9sB,GAAA8sB,EAAAwnC,cAAA,iBAAAxnC,EAAA0nC,eAEA1nC,EAAA9sB,GAAA8sB,EAAAwnC,cAAA,mBAAAxnC,EAAA2nC,iBAEA3nC,EA1CAqJ,EAAAi+B,EAAA9hB,GAoDA,IAAAjK,EAAA+rB,EAAAjzD,UA0DA,OAxDAknC,EAAAmsB,cAAA,WACA30D,KAAA67B,SAAA,sBAUA2M,EAAAosB,gBAAA,WACA50D,KAAAg8B,YAAA,sBAWAwM,EAAAksB,kBAAA,WAGA10D,KAAAy0D,cAAAj5B,SAAA,eAAAx7B,KAAA60D,WAAAr5B,SAAA,eACAx7B,KAAA67B,SAAA,cAKA77B,KAAAy0D,cAAAj5B,SAAA,gBAAAx7B,KAAA60D,WAAAr5B,SAAA,eACAx7B,KAAA67B,SAAA,yBAWA2M,EAAAjO,SAAA,WACA,IAAAw5B,EAAA,8BAMA,OAJA/zD,KAAA8nC,SAAA0sB,SACAT,EAAA,6BAGAthB,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,gCAAAm4B,KAIAQ,EA/GA,CAgHE9sB,IASF8sB,GAAAjzD,UAAAwmC,SAAA,CACAqB,SAAA,gCAEA1B,GAAS+F,kBAAA,cAAA+mB,IAQT,IAAIO,GAEJ,SAAAriB,GAcA,SAAAsiB,EAAAnxB,EAAA55B,GACA,IAAAijB,EAYA,OAVAA,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,KAEAgK,IACAijB,EAAA+nC,YAAAhrD,EAAAirD,YAGAhoC,EAAAioC,eAAA,EAEAjoC,EAAA9sB,GAAA,UAAA8sB,EAAAsmB,gBAEAtmB,EA1BAqJ,EAAAy+B,EAAAtiB,GAqCA,IAAAjK,EAAAusB,EAAAzzD,UA2JA,OAzJAknC,EAAA2sB,QAAA,SAAA5rB,GACAvpC,KAAAspC,SAAAC,GACAA,EAAAppC,GAAA,OAAA8H,GAAAjI,UAAAunD,aACAhe,EAAAppC,GAAA,gBAAA8H,GAAAjI,KAAA,SAAA6P,GAEA7P,KAAAg1D,cACAh1D,KAAAg1D,YAAAI,gBAGA,4BAAA7rB,EAAA9sB,QACAzc,KAAAg1D,YAAAh4B,aAaAwL,EAAAjO,SAAA,WACA,IAAA86B,EAAAr1D,KAAA8nC,SAAAutB,eAAA,KACAr1D,KAAAkpC,WAAA3O,GAAA86B,EAAA,CACAz5B,UAAA,qBAEA57B,KAAAkpC,WAAAnO,aAAA,eAEA,IAAA5S,EAAAsqB,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACAs1D,OAAAt1D,KAAAkpC,WACAtN,UAAA,aAUA,OAPAzT,EAAAoT,YAAAv7B,KAAAkpC,YAGA/oC,GAAAgoB,EAAA,iBAAAtY,GACAA,EAAAmxB,iBACAnxB,EAAA4xB,6BAEAtZ,GAGAqgB,EAAAnnC,QAAA,WACArB,KAAAkpC,WAAA,KAEAuJ,EAAAnxC,UAAAD,QAAAH,KAAAlB,OAYAwoC,EAAA+e,WAAA,SAAA13C,GACA,IAAAqxB,EAAArxB,EAAAqxB,eAA+CrH,EAAAhwB,EAAQorC,cAEvD,IAAAj1C,KAAAmpC,WAAAgB,KAAA,SAAAtjB,GACA,OAAAA,EAAAsB,OAAA+Y,IACK,CACL,IAAAq0B,EAAAv1D,KAAAg1D,YAEAO,KAAAC,gBAAAt0B,IAAAq0B,EAAAptC,KAAAkT,YACAk6B,EAAAH,kBAcA5sB,EAAA+K,eAAA,SAAA1jC,GAEA,KAAAA,EAAAiyB,OAAA,KAAAjyB,EAAAiyB,OACAjyB,EAAAmxB,iBACAhhC,KAAAyvD,eACK,KAAA5/C,EAAAiyB,OAAA,KAAAjyB,EAAAiyB,QACLjyB,EAAAmxB,iBACAhhC,KAAAwvD,aAQAhnB,EAAAinB,YAAA,WACA,IAAAgG,EAAA,OAEA9nD,IAAA3N,KAAAk1D,gBACAO,EAAAz1D,KAAAk1D,cAAA,GAGAl1D,KAAAg9B,MAAAy4B,IAOAjtB,EAAAgnB,SAAA,WACA,IAAAiG,EAAA,OAEA9nD,IAAA3N,KAAAk1D,gBACAO,EAAAz1D,KAAAk1D,cAAA,GAGAl1D,KAAAg9B,MAAAy4B,IAUAjtB,EAAAxL,MAAA,SAAA04B,QACA,IAAAA,IACAA,EAAA,GAGA,IAAAvsB,EAAAnpC,KAAAmpC,WAAAzoC,QACAyoC,EAAApoC,QAAAooC,EAAA,GAAAvN,WAAA,iBAAArzB,KAAA4gC,EAAA,GAAAvN,YAGAuN,EAAA38B,QAGA28B,EAAApoC,OAAA,IACA20D,EAAA,EACAA,EAAA,EACOA,GAAAvsB,EAAApoC,SACP20D,EAAAvsB,EAAApoC,OAAA,GAGAf,KAAAk1D,cAAAQ,EACAvsB,EAAAusB,GAAAztB,IAAAjL,UAIA+3B,EAjMA,CAkMEttB,IAEFA,GAAS+F,kBAAA,OAA2BsnB,IAOpC,IAAIa,GAEJ,SAAAljB,GAaA,SAAAmjB,EAAAhyB,EAAA55B,GACA,IAAAijB,OAEA,IAAAjjB,IACAA,EAAA,KAGAijB,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACAg1D,YAAA,IAAA3J,GAAAznB,EAAA55B,GAEAijB,EAAA+nC,YAAAxgB,YAAAvnB,EAAAg6B,cAEAh6B,EAAA+nC,YAAA/sB,IAAAlN,aAAA,wBAGA,IAAA86B,EAAAxK,GAAA/pD,UAAAkpC,gBAyBA,OAxBAvd,EAAA+nC,YAAA/sB,IAAArM,UAAA3O,EAAAud,gBAAA,IAAAqrB,EAEA5oC,EAAA+nC,YAAAh5B,YAAA,eAEA/O,EAAAqc,SAAArc,EAAA+nC,aAEA/nC,EAAAy6B,SAEAz6B,EAAAm6B,UAAA,EAEAn6B,EAAA9sB,GAAA8sB,EAAA+nC,YAAA,MAAA/nC,EAAAo6B,aAEAp6B,EAAA9sB,GAAA8sB,EAAA+nC,YAAA,QAAA/nC,EAAAo6B,aAEAp6B,EAAA9sB,GAAA8sB,EAAA+nC,YAAA,QAAA/nC,EAAAq6B,aAEAr6B,EAAA9sB,GAAA8sB,EAAA+nC,YAAA,OAAA/nC,EAAAs6B,YAEAt6B,EAAA9sB,GAAA8sB,EAAA+nC,YAAA,wBACA/nC,EAAA6oC,KAAAjrB,SAGA5d,EAAA9sB,GAAA,UAAA8sB,EAAA8oC,uBAEA9oC,EApDAqJ,EAAAs/B,EAAAnjB,GA2DA,IAAAjK,EAAAotB,EAAAt0D,UAgVA,OA9UAknC,EAAAkf,OAAA,WACA,IAAAoO,EAAA91D,KAAAg2D,aAEAh2D,KAAA81D,OACA91D,KAAA81D,KAAAz0D,UACArB,KAAA++B,YAAA/+B,KAAA81D,OAGA91D,KAAA81D,OACA91D,KAAAspC,SAAAwsB,GAQA91D,KAAAw1D,gBAAA,EACAx1D,KAAAg1D,YAAA/sB,IAAAlN,aAAA,yBAEA/6B,KAAAi2D,OAAAj2D,KAAAi2D,MAAAl1D,QAAAf,KAAAk2D,eACAl2D,KAAA8qC,OAEA9qC,KAAA6qC,QAWArC,EAAAwtB,WAAA,WACA,IAAAF,EAAA,IAAmBhB,GAAI90D,KAAA6nC,QAAA,CACvBotB,WAAAj1D,OAaA,GAFAA,KAAAk2D,eAAA,EAEAl2D,KAAA8nC,SAAAra,MAAA,CACA,IAAAA,EAAA8M,GAAA,MACAqB,UAAA,iBACAme,UAAA1S,GAAArnC,KAAA8nC,SAAAra,OACAylB,UAAA,IAEAlzC,KAAAk2D,gBAAA,EACAJ,EAAA5tB,UAAAp7B,QAAA2gB,GACA0N,GAAA1N,EAAAqoC,EAAA7sB,aAKA,GAFAjpC,KAAAi2D,MAAAj2D,KAAAm2D,cAEAn2D,KAAAi2D,MAEA,QAAAn1D,EAAA,EAAqBA,EAAAd,KAAAi2D,MAAAl1D,OAAuBD,IAC5Cg1D,EAAAX,QAAAn1D,KAAAi2D,MAAAn1D,IAIA,OAAAg1D,GASAttB,EAAA2tB,YAAA,aASA3tB,EAAAjO,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA57B,KAAAo2D,wBACK,KAUL5tB,EAAA4tB,qBAAA,WACA,IAAAC,EAAA,kBAUA,OARA,IAAAr2D,KAAA8nC,SAAA0sB,OACA6B,GAAA,UAEAA,GAAA,SAKA,mBAAAA,EAAA,IADAhL,GAAA/pD,UAAAkpC,gBACA,IAAAiI,EAAAnxC,UAAAkpC,cAAAtpC,KAAAlB,OAUAwoC,EAAAgC,cAAA,WACA,IAAA6rB,EAAA,kBAQA,OANA,IAAAr2D,KAAA8nC,SAAA0sB,OACA6B,GAAA,UAEAA,GAAA,SAGA,mBAAAA,EAAA,IAAA5jB,EAAAnxC,UAAAkpC,cAAAtpC,KAAAlB,OAkBAwoC,EAAAgM,YAAA,SAAAjlC,EAAA4Y,GAKA,YAJA,IAAAA,IACAA,EAAAnoB,KAAAg1D,YAAA7sC,MAGAnoB,KAAAg1D,YAAAxgB,YAAAjlC,EAAA4Y,IAeAqgB,EAAA6e,YAAA,SAAAx3C,GACA7P,KAAAw1D,eACAx1D,KAAAo1D,gBAEAp1D,KAAAs2D,eAQA9tB,EAAAxL,MAAA,WACAh9B,KAAAg1D,YAAAh4B,SAOAwL,EAAAuD,KAAA,WACA/rC,KAAAg1D,YAAAjpB,QAcAvD,EAAA8e,YAAA,WACAnnD,GAAO05B,EAAAhwB,EAAQ,UAAA5B,GAAAjI,UAAAuzC,kBAaf/K,EAAA+e,WAAA,WACAhnD,GAAQs5B,EAAAhwB,EAAQ,UAAA5B,GAAAjI,UAAAuzC,kBAahB/K,EAAA+K,eAAA,SAAA1jC,GAEA,KAAAA,EAAAiyB,OAAA,IAAAjyB,EAAAiyB,OACA9hC,KAAAw1D,gBACAx1D,KAAAo1D,gBAIA,IAAAvlD,EAAAiyB,QACAjyB,EAAAmxB,iBAEAhhC,KAAAg1D,YAAA/sB,IAAAjL,UAGK,KAAAntB,EAAAiyB,OAAA,KAAAjyB,EAAAiyB,OAAA,KAAAjyB,EAAAiyB,OACL9hC,KAAAw1D,iBACAx1D,KAAAs2D,cACAzmD,EAAAmxB,mBAeAwH,EAAAutB,sBAAA,SAAAlmD,GAEA,KAAAA,EAAAiyB,OAAA,IAAAjyB,EAAAiyB,QACA9hC,KAAAw1D,gBACAx1D,KAAAo1D,gBAIA,IAAAvlD,EAAAiyB,QACAjyB,EAAAmxB,iBAEAhhC,KAAAg1D,YAAA/sB,IAAAjL,WASAwL,EAAA8tB,YAAA,WACA,GAAAt2D,KAAAonD,SAAA,CAOA,GANApnD,KAAAw1D,gBAAA,EACAx1D,KAAA81D,KAAAjrB,OACA7qC,KAAA81D,KAAA/qB,cACA/qC,KAAAg1D,YAAA/sB,IAAAlN,aAAA,wBAGA4T,IAAA3U,KAEA,OAGAh6B,KAAA81D,KAAA94B,UAQAwL,EAAA4sB,cAAA,WACAp1D,KAAAonD,WACApnD,KAAAw1D,gBAAA,EACAx1D,KAAA81D,KAAA9qB,gBACAhrC,KAAA81D,KAAAhrB,OACA9qC,KAAAg1D,YAAA/sB,IAAAlN,aAAA,2BAQAyN,EAAAjQ,QAAA,WACAv4B,KAAAo1D,gBACAp1D,KAAAonD,UAAA,EACApnD,KAAA67B,SAAA,gBACA77B,KAAAg1D,YAAAz8B,WAOAiQ,EAAAhQ,OAAA,WACAx4B,KAAAonD,UAAA,EACApnD,KAAAg8B,YAAA,gBACAh8B,KAAAg1D,YAAAx8B,UAGAo9B,EA5YA,CA6YEnuB,IAEFA,GAAS+F,kBAAA,aAAiCmoB,IAO1C,IAAAY,GAEA,SAAAC,GAaA,SAAAD,EAAA3yB,EAAA55B,GACA,IAAAijB,EAEA7a,EAAApI,EAAAoI,OAOA,IANA6a,EAAAupC,EAAAt1D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAi2D,MAAAl1D,QAAA,GACAksB,EAAA6d,QAGA14B,EACA,OAAAtL,EAAAmmB,GAGA,IAAAwpC,EAAAxuD,GAAAnB,IAAAmmB,MAAAy6B,QAWA,OAVAt1C,EAAA8vB,iBAAA,cAAAu0B,GACArkD,EAAA8vB,iBAAA,WAAAu0B,GAEAxpC,EAAA4a,QAAA1nC,GAAA,QAAAs2D,GAEAxpC,EAAA4a,QAAA1nC,GAAA,qBACAiS,EAAAiuB,oBAAA,cAAAo2B,GACArkD,EAAAiuB,oBAAA,WAAAo2B,KAGAxpC,EAGA,OAxCAqJ,EAAAigC,EAAAC,GAwCAD,EAzCA,CA0CEZ,IAEFluB,GAAS+F,kBAAA,cAAA+oB,IAOT,IAAAG,GAEA,SAAAjP,GAcA,SAAAiP,EAAA9yB,EAAA55B,GACA,IAAAijB,EAmBA,OAjBAA,EAAAw6B,EAAAvmD,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACA22D,WAAA3sD,EAAA2sD,WACA1pC,EAAA2pC,YAAA5sD,EAAAqtC,WAAA,EACApqB,EAAA4pC,gBAAA7sD,EAAA6sD,gBAEA5pC,EAAAoqB,SAAApqB,EAAA2pC,aAEA3pC,EAAA0pC,WACA1pC,EAAA4pC,gBACA5pC,EAAAgb,IAAAlN,aAAA,2BAEA9N,EAAAgb,IAAAlN,aAAA,wBAGA9N,EAAAgb,IAAAlN,aAAA,mBAGA9N,EAjCAqJ,EAAAogC,EAAAjP,GAoDA,IAAAjf,EAAAkuB,EAAAp1D,UAsDA,OApDAknC,EAAAjO,SAAA,SAAAn6B,EAAAkF,EAAAqlB,GAGA,OADA3qB,KAAAmnD,gBAAA,EACAM,EAAAnmD,UAAAi5B,SAAAr5B,KAAAlB,KAAA,KAAmEm5B,GAAM,CACzEyC,UAAA,gBACAme,UAAA,oCAAA/5C,KAAAyoC,SAAAzoC,KAAA8nC,SAAA3nB,OAAA,UACA+yB,UAAA,GACK5tC,GAAAqlB,IAeL6d,EAAA6e,YAAA,SAAAx3C,GACA7P,KAAAq3C,UAAA,IAUA7O,EAAA6O,SAAA,SAAAyf,GACA92D,KAAA22D,aACAG,GACA92D,KAAA67B,SAAA,gBACA77B,KAAAioC,IAAAlN,aAAA,uBAGA/6B,KAAAw0C,YAAA,cACAx0C,KAAA42D,aAAA,IAEA52D,KAAAg8B,YAAA,gBACAh8B,KAAAioC,IAAAlN,aAAA,wBAEA/6B,KAAAw0C,YAAA,IACAx0C,KAAA42D,aAAA,KAKAF,EA3GA,CA4GE/P,IAEFlf,GAAS+F,kBAAA,WAAAkpB,IAOT,IAAIK,GAEJ,SAAAC,GAaA,SAAAC,EAAArzB,EAAA55B,GACA,IAAAijB,EAEAljB,EAAAC,EAAAD,MACAqI,EAAAwxB,EAAAuO,aAEAnoC,EAAAmW,MAAApW,EAAAoW,OAAApW,EAAAmW,UAAA,UACAlW,EAAAqtC,SAAA,YAAAttC,EAAAgyC,MACA9uB,EAAA+pC,EAAA91D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACA+J,QAEA,IAiCA8F,EAjCAqnD,EAAA,WACA,QAAA37C,EAAAta,UAAAF,OAAAC,EAAA,IAAAya,MAAAF,GAAAG,EAAA,EAAyEA,EAAAH,EAAaG,IACtF1a,EAAA0a,GAAAza,UAAAya,GAGAuR,EAAAkqC,mBAAA/1D,MAAA0F,IAAAmmB,IAAAjsB,IAGAo2D,EAAA,WACA,QAAA3+B,EAAAx3B,UAAAF,OAAAC,EAAA,IAAAya,MAAAgd,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3F13B,EAAA03B,GAAAz3B,UAAAy3B,GAGAzL,EAAAoqC,6BAAAj2D,MAAA0F,IAAAmmB,IAAAjsB,KAGA4iC,EAAAzjC,GAAA,gCAAA+2D,GACA9kD,EAAA8vB,iBAAA,SAAAg1B,GACA9kD,EAAA8vB,iBAAA,yBAAAk1B,GAEAnqC,EAAA9sB,GAAA,qBACAyjC,EAAArjC,IAAA,gCAAA22D,GACA9kD,EAAAiuB,oBAAA,SAAA62B,GACA9kD,EAAAiuB,oBAAA,yBAAA+2B,UASAzpD,IAAAyE,EAAAklD,WAGArqC,EAAA9sB,GAAA,2BACA,GAA2B,kBAARs3B,EAAA5tB,EAAQ0tD,MAE3B,IACA1nD,EAAA,IAAwB4nB,EAAA5tB,EAAQ0tD,MAAA,UACrB,MAAAjiD,IAIXzF,IACAA,EAAkBgqB,EAAAhwB,EAAQ2tD,YAAA,UAC1BC,UAAA,gBAGArlD,EAAA6yB,cAAAp1B,KAOA,OAFAod,EAAAkqC,qBAEAlqC,EA/EAqJ,EAAA2gC,EAAAD,GA8FA,IAAAxuB,EAAAyuB,EAAA31D,UAuEA,OArEAknC,EAAA6e,YAAA,SAAAx3C,GACA,IAAA2nC,EAAAx3C,KAAA+J,MAAAytC,KACAkgB,EAAA13D,KAAA+J,MAAA2tD,MACAtlD,EAAApS,KAAA6nC,QAAAsK,aAQA,GANAulB,IACAA,EAAA,CAAAlgB,IAGAwf,EAAA11D,UAAA+lD,YAAAnmD,KAAAlB,KAAA6P,GAEAuC,EAIA,QAAAtR,EAAA,EAAmBA,EAAAsR,EAAArR,OAAmBD,IAAA,CACtC,IAAAiJ,EAAAqI,EAAAtR,GAEAiJ,IAAA/J,KAAA+J,OAAA2tD,EAAAj3D,QAAAsJ,EAAAytC,OAAA,EACA,YAAAztC,EAAAgyC,OACAhyC,EAAAgyC,KAAA,WAEO,aAAAhyC,EAAAgyC,OACPhyC,EAAAgyC,KAAA,cAcAvT,EAAA2uB,mBAAA,SAAAtnD,GACA,IAAA8nD,EAAA,YAAA33D,KAAA+J,MAAAgyC,KAGA4b,IAAA33D,KAAA42D,aACA52D,KAAAq3C,SAAAsgB,IAIAnvB,EAAA6uB,6BAAA,SAAAxnD,GACA,eAAA7P,KAAA+J,MAAAgyC,KAAA,CACA,IAAA0N,EAAAzpD,KAAA6nC,QAAA2hB,OAAAC,iBAEA,GAAAA,KAAAzS,SAAAyS,EAAAvpC,WAAAlgB,KAAA+J,MAAAmW,UAAAupC,EAAAjS,OAAAx3C,KAAA+J,MAAAytC,KACA,OAGAx3C,KAAA6nC,QAAA2hB,OAAAC,iBAAA,CACAzS,SAAA,EACA92B,SAAAlgB,KAAA+J,MAAAmW,SACAs3B,KAAAx3C,KAAA+J,MAAAytC,QAKAhP,EAAAnnC,QAAA,WAEArB,KAAA+J,MAAA,KAEAitD,EAAA11D,UAAAD,QAAAH,KAAAlB,OAGAi3D,EAtKA,CAuKCP,IAEDjvB,GAAS+F,kBAAA,oBAAwCupB,IAOjD,IAAAa,GAEA,SAAAC,GAaA,SAAAD,EAAAh0B,EAAA55B,GAyBA,OAtBAA,EAAAD,MAAA,CACA65B,SACA4T,KAAAxtC,EAAAwtC,KACAkgB,MAAA1tD,EAAA0tD,MACAr3C,SAAA,EACA07B,KAAA,YAGA/xC,EAAA0tD,QACA1tD,EAAA0tD,MAAA,CAAA1tD,EAAAwtC,OAGAxtC,EAAAmW,MACAnW,EAAAD,MAAAoW,MAAAnW,EAAAmW,MAEAnW,EAAAD,MAAAoW,MAAAnW,EAAA0tD,MAAA18C,KAAA,gBAIAhR,EAAA2sD,YAAA,EAEA3sD,EAAA6sD,iBAAA,EACAgB,EAAA32D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,KArCAs2B,EAAAshC,EAAAC,GA+CA,IAAArvB,EAAAovB,EAAAt2D,UA0CA,OAxCAknC,EAAA2uB,mBAAA,SAAAtnD,GAIA,IAHA,IAAAuC,EAAApS,KAAA4jC,SAAAuO,aACAwlB,GAAA,EAEA72D,EAAA,EAAAic,EAAA3K,EAAArR,OAAsCD,EAAAic,EAAOjc,IAAA,CAC7C,IAAAiJ,EAAAqI,EAAAtR,GAEA,GAAAd,KAAA8nC,SAAA4vB,MAAAj3D,QAAAsJ,EAAAytC,OAAA,eAAAztC,EAAAgyC,KAAA,CACA4b,GAAA,EACA,OAMAA,IAAA33D,KAAA42D,aACA52D,KAAAq3C,SAAAsgB,IAIAnvB,EAAA6uB,6BAAA,SAAAxnD,GAIA,IAHA,IAAAuC,EAAApS,KAAA4jC,SAAAuO,aACA2lB,GAAA,EAEAh3D,EAAA,EAAAic,EAAA3K,EAAArR,OAAsCD,EAAAic,EAAOjc,IAAA,CAC7C,IAAAiJ,EAAAqI,EAAAtR,GAEA,2CAAAL,QAAAsJ,EAAAytC,OAAA,eAAAztC,EAAAgyC,KAAA,CACA+b,GAAA,EACA,OAIAA,IACA93D,KAAA6nC,QAAA2hB,OAAAC,iBAAA,CACAzS,SAAA,KAKA4gB,EA1FA,CA2FEb,IAEFtvB,GAAS+F,kBAAA,uBAAAoqB,IAOT,IAAAG,GAEA,SAAAC,GAaA,SAAAD,EAAAn0B,EAAA55B,GAMA,YALA,IAAAA,IACAA,EAAA,IAGAA,EAAAoI,OAAAwxB,EAAAuO,aACA6lB,EAAA92D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,KAgEA,OAlFAs2B,EAAAyhC,EAAAC,GA+BAD,EAAAz2D,UAEA60D,YAAA,SAAAF,EAAAgC,GAWA,IAAA93C,OAVA,IAAA81C,IACAA,EAAA,SAGA,IAAAgC,IACAA,EAAsBlB,IAOtB/2D,KAAAk4D,SACA/3C,EAAAngB,KAAAk4D,OAAA,QAIAjC,EAAA90D,KAAA,IAAAy2D,GAAA53D,KAAA6nC,QAAA,CACA6vB,MAAA13D,KAAAm4D,OACA3gB,KAAAx3C,KAAAo4D,MACAj4C,WAEAngB,KAAAk2D,gBAAA,EACA,IAAA9jD,EAAApS,KAAA6nC,QAAAsK,aAEA12B,MAAAI,QAAA7b,KAAAm4D,UACAn4D,KAAAm4D,OAAA,CAAAn4D,KAAAo4D,QAGA,QAAAt3D,EAAA,EAAmBA,EAAAsR,EAAArR,OAAmBD,IAAA,CACtC,IAAAiJ,EAAAqI,EAAAtR,GAEA,GAAAd,KAAAm4D,OAAA13D,QAAAsJ,EAAAytC,OAAA,GACA,IAAAke,EAAA,IAAAuC,EAAAj4D,KAAA6nC,QAAA,CACA99B,QAEA4sD,YAAA,EAEAE,iBAAA,IAEAnB,EAAA75B,SAAA,OAAA9xB,EAAAytC,KAAA,cACAye,EAAA90D,KAAAu0D,IAIA,OAAAO,GAGA8B,EAnFA,CAoFCxB,IAED9uB,GAAS+F,kBAAA,kBAAAuqB,IAOT,IAAAM,GAEA,SAAArB,GAaA,SAAAqB,EAAAz0B,EAAA55B,GACA,IAAAijB,EAEAljB,EAAAC,EAAAD,MACA6nC,EAAA5nC,EAAA4nC,IACA2K,EAAA3Y,EAAA2Y,cAUA,OARAvyC,EAAA2sD,YAAA,EACA3sD,EAAA6sD,iBAAA,EACA7sD,EAAAmW,MAAAyxB,EAAAriC,KACAvF,EAAAqtC,SAAAzF,EAAA7vC,WAAAw6C,KAAA3K,EAAAzhC,SACA8c,EAAA+pC,EAAA91D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACA+J,QACAkjB,EAAA2kB,MACA7nC,EAAAm4B,iBAAA,YAAAj6B,GAAAnB,IAAAmmB,MAAAy6B,SACAz6B,EA3BAqJ,EAAA+hC,EAAArB,GA0CA,IAAAxuB,EAAA6vB,EAAA/2D,UAyBA,OAvBAknC,EAAA6e,YAAA,SAAAx3C,GACAmnD,EAAA11D,UAAA+lD,YAAAnmD,KAAAlB,MAEAA,KAAA6nC,QAAA0U,YAAAv8C,KAAA4xC,IAAA7vC,WACA/B,KAAA0nD,OAAA1nD,KAAA4xC,IAAA7vC,YAYAymC,EAAAkf,OAAA,SAAA73C,GACA,IAAA+hC,EAAA5xC,KAAA4xC,IACA2K,EAAAv8C,KAAA6nC,QAAA0U,cAEAv8C,KAAAq3C,SAAAzF,EAAA7vC,WAAAw6C,KAAA3K,EAAAzhC,UAGAkoD,EApEA,CAqEC3B,IAEDjvB,GAAS+F,kBAAA,wBAAA6qB,IAST,IAAAC,GAEA,SAAAC,GAgBA,SAAAD,EAAA10B,EAAA55B,EAAA29B,GACA,OAAA4wB,EAAAr3D,KAAAlB,KAAA4jC,EAAA55B,EAAA29B,IAAA3nC,KAhBAs2B,EAAAgiC,EAAAC,GA0BA,IAAA/vB,EAAA8vB,EAAAh3D,UAsJA,OApJAknC,EAAAgC,cAAA,WACA,6BAAA+tB,EAAAj3D,UAAAkpC,cAAAtpC,KAAAlB,OAGAwoC,EAAA4tB,qBAAA,WACA,6BAAAmC,EAAAj3D,UAAA80D,qBAAAl1D,KAAAlB,OAcAwoC,EAAAkf,OAAA,SAAA73C,GACA7P,KAAAw4D,UAAA3oD,GAAA,aAAAA,EAAAzP,MAAA,gBAAAyP,EAAAzP,OACAJ,KAAAy4D,SAAAz4D,KAAA04D,qBAGAH,EAAAj3D,UAAAomD,OAAAxmD,KAAAlB,OAWAwoC,EAAAiwB,SAAA,SAAA1uD,GACA,GAAA/J,KAAAw4D,SAAAzuD,EAAA,CASA,GALA/J,KAAA24D,iBACA34D,KAAA24D,eAAA34D,KAAA0nD,OAAAz/C,KAAAjI,OAIAA,KAAAw4D,OAAA,CACA,IAAAI,EAAA54D,KAAA6nC,QAAA4Z,qBAAA3J,wBAAA93C,KAAAw4D,QAEAI,GACAA,EAAAv4B,oBAAA,OAAArgC,KAAA24D,gBAGA34D,KAAAw4D,OAAA,KAKA,GAFAx4D,KAAAw4D,OAAAzuD,EAEA/J,KAAAw4D,OAAA,CACAx4D,KAAAw4D,OAAAzc,KAAA,SAEA,IAAA8c,EAAA74D,KAAA6nC,QAAA4Z,qBAAA3J,wBAAA93C,KAAAw4D,QAEAK,GACAA,EAAA32B,iBAAA,OAAAliC,KAAA24D,mBAYAnwB,EAAAkwB,kBAAA,WAGA,IAFA,IAAAtmD,EAAApS,KAAA6nC,QAAAsK,cAAA,GAEArxC,EAAAsR,EAAArR,OAAA,EAAmCD,GAAA,EAAQA,IAAA,CAE3C,IAAAiJ,EAAAqI,EAAAtR,GAEA,GAAAiJ,EAAAytC,OAAAx3C,KAAAo4D,MACA,OAAAruD,IAaAy+B,EAAAswB,eAAA,WACA,OAAA94D,KAAAw4D,QAAAx4D,KAAAw4D,OAAAr4C,MACAngB,KAAAw4D,OAAAr4C,MAGAngB,KAAAyoC,SAAApB,GAAArnC,KAAAo4D,SAUA5vB,EAAAwtB,WAAA,WAEA,OADAh2D,KAAA8nC,SAAAra,MAAAztB,KAAA84D,iBACAP,EAAAj3D,UAAA00D,WAAA90D,KAAAlB,OAUAwoC,EAAA2tB,YAAA,WACA,IAAAF,EAAA,GAEA,IAAAj2D,KAAAw4D,OACA,OAAAvC,EAGA,IAAAtkB,EAAA3xC,KAAAw4D,OAAA7mB,KAEA,IAAAA,EACA,OAAAskB,EAGA,QAAAn1D,EAAA,EAAAic,EAAA40B,EAAA5wC,OAAoCD,EAAAic,EAAOjc,IAAA,CAC3C,IAAA8wC,EAAAD,EAAA7wC,GACAi4D,EAAA,IAAAV,GAAAr4D,KAAA6nC,QAAA,CACA99B,MAAA/J,KAAAw4D,OACA5mB,QAEAqkB,EAAA90D,KAAA43D,GAGA,OAAA9C,GAGAqC,EAjLA,CAkLCP,IASDO,GAAAh3D,UAAA82D,MAAA,WAQAE,GAAAh3D,UAAA2lD,aAAA,WACAxf,GAAS+F,kBAAA,iBAAA8qB,IAOT,IAAAU,GAEA,SAAAT,GAgBA,SAAAS,EAAAp1B,EAAA55B,EAAA29B,GACA,IAAA1a,EAEAA,EAAAsrC,EAAAr3D,KAAAlB,KAAA4jC,EAAA55B,EAAA29B,IAAA3nC,KACA,IAAAoS,EAAAwxB,EAAAuO,aACA+kB,EAAAjvD,GAAAnB,IAAAmmB,MAAAkqC,oBAOA,OANA/kD,EAAA8vB,iBAAA,SAAAg1B,GAEAjqC,EAAA9sB,GAAA,qBACAiS,EAAAiuB,oBAAA,SAAA62B,KAGAjqC,EA3BAqJ,EAAA0iC,EAAAT,GAuCA,IAAA/vB,EAAAwwB,EAAA13D,UAsCA,OApCAknC,EAAA2uB,mBAAA,SAAAtnD,GAIA,IAHA,IAAAuC,EAAApS,KAAA4jC,SAAAuO,aACA3R,GAAA,EAEA1/B,EAAA,EAAAic,EAAA3K,EAAArR,OAAsCD,EAAAic,EAAOjc,IAAA,CAC7C,IAAAiJ,EAAAqI,EAAAtR,GAEA,GAAAiJ,EAAAytC,OAAAx3C,KAAAo4D,OAAA,YAAAruD,EAAAgyC,KAAA,CACAvb,GAAA,EACA,OAKAA,EACAxgC,KAAAu4B,UAEAv4B,KAAAw4B,UAWAgQ,EAAAgC,cAAA,WACA,iCAAA+tB,EAAAj3D,UAAAkpC,cAAAtpC,KAAAlB,OAGAwoC,EAAA4tB,qBAAA,WACA,iCAAAmC,EAAAj3D,UAAA80D,qBAAAl1D,KAAAlB,OAGAg5D,EA9EA,CA+ECjB,IASDiB,GAAA13D,UAAA82D,MAAA,eAQAY,GAAA13D,UAAA2lD,aAAA,eACAxf,GAAS+F,kBAAA,qBAAAwrB,IAOT,IAAAC,GAEA,SAAAV,GAgBA,SAAAU,EAAAr1B,EAAA55B,EAAA29B,GACA,OAAA4wB,EAAAr3D,KAAAlB,KAAA4jC,EAAA55B,EAAA29B,IAAA3nC,KAhBAs2B,EAAA2iC,EAAAV,GA0BA,IAAA/vB,EAAAywB,EAAA33D,UAUA,OARAknC,EAAAgC,cAAA,WACA,8BAAA+tB,EAAAj3D,UAAAkpC,cAAAtpC,KAAAlB,OAGAwoC,EAAA4tB,qBAAA,WACA,8BAAAmC,EAAAj3D,UAAA80D,qBAAAl1D,KAAAlB,OAGAi5D,EArCA,CAsCClB,IASDkB,GAAA33D,UAAA82D,MAAA,YAQAa,GAAA33D,UAAA2lD,aAAA,YACAxf,GAAS+F,kBAAA,kBAAAyrB,IAOT,IAAAC,GAEA,SAAArB,GAaA,SAAAqB,EAAAt1B,EAAA55B,GACA,IAAAijB,EAmBA,OAjBAjjB,EAAAD,MAAA,CACA65B,SACA4T,KAAAxtC,EAAAwtC,KACAr3B,MAAAnW,EAAAwtC,KAAA,YACAmf,YAAA,EACAt2C,SAAA,EACA07B,KAAA,YAGA/xC,EAAA2sD,YAAA,EACA3sD,EAAAyS,KAAA,2BACAwQ,EAAA4qC,EAAA32D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEA67B,SAAA,0BAEA5O,EAAAunB,YAAA,WAAAxqC,EAAAwtC,KAAA,oBAEAvqB,EAqBA,OArDAqJ,EAAA4iC,EAAArB,GA+CAqB,EAAA53D,UAEA+lD,YAAA,SAAAx3C,GACA7P,KAAA4jC,SAAAyF,SAAA,qBAAAnxB,QAGAghD,EAtDA,CAuDEnC,IAEFtvB,GAAS+F,kBAAA,0BAAA0rB,IAOT,IAAAC,GAEA,SAAAZ,GAgBA,SAAAY,EAAAv1B,EAAA55B,EAAA29B,GACA,OAAA4wB,EAAAr3D,KAAAlB,KAAA4jC,EAAA55B,EAAA29B,IAAA3nC,KAhBAs2B,EAAA6iC,EAAAZ,GA0BA,IAAA/vB,EAAA2wB,EAAA73D,UA8BA,OA5BAknC,EAAAgC,cAAA,WACA,6BAAA+tB,EAAAj3D,UAAAkpC,cAAAtpC,KAAAlB,OAGAwoC,EAAA4tB,qBAAA,WACA,6BAAAmC,EAAAj3D,UAAA80D,qBAAAl1D,KAAAlB,OAUAwoC,EAAA2tB,YAAA,WACA,IAAAF,EAAA,GASA,OAPAj2D,KAAA4jC,SAAA4X,OAAAx7C,KAAA4jC,SAAA4X,MAAAoD,2BAAA5+C,KAAA4jC,SAAAyF,SAAA,uBACA4sB,EAAA90D,KAAA,IAAA+3D,GAAAl5D,KAAA6nC,QAAA,CACA2P,KAAAx3C,KAAAo4D,SAEAp4D,KAAAk2D,gBAAA,GAGAqC,EAAAj3D,UAAA60D,YAAAj1D,KAAAlB,KAAAi2D,IAGAkD,EAzDA,CA0DCpB,IASDoB,GAAA73D,UAAA82D,MAAA,WAQAe,GAAA73D,UAAA2lD,aAAA,WACAxf,GAAS+F,kBAAA,iBAAA2rB,IAQT,IAAAC,GAEA,SAAAvB,GAGA,SAAAuB,IACA,OAAAvB,EAAAz2D,MAAApB,KAAAiB,YAAAjB,KAqBA,OAxBAs2B,EAAA8iC,EAAAvB,GAMAuB,EAAA93D,UAEAi5B,SAAA,SAAAn6B,EAAAkF,EAAAqlB,GACA,IAAAovB,EAAA,oCAAA/5C,KAAAyoC,SAAAzoC,KAAA8nC,SAAA3nB,OAYA,MAVA,aAAAngB,KAAA8nC,SAAA/9B,MAAAytC,OACAuC,GAAA,oHAAA/5C,KAAAyoC,SAAA,+BAGAsR,GAAA,UAEA8d,EAAAv2D,UAAAi5B,SAAAr5B,KAAAlB,KAAAI,EAAoE+4B,GAAM,CAC1E4gB,aACKz0C,GAAAqlB,IAKLyuC,EAzBA,CA0BErC,IAEFtvB,GAAS+F,kBAAA,mBAAA4rB,IAOT,IAAAC,GAEA,SAAAd,GAGA,SAAAc,EAAAz1B,EAAA55B,GACA,IAAAijB,EAiBA,YAfA,IAAAjjB,IACAA,EAAA,KAGAijB,EAAAsrC,EAAAr3D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAGAk4D,OAAA,YAEA,+BAAAz3D,QAAAwsB,EAAA4a,QAAAyxB,YAAA,IACArsC,EAAAirC,OAAA,YAGAjrC,EAAA+nC,YAAAxgB,YAAAnN,GAAApa,EAAAirC,SAEAjrC,EApBAqJ,EAAA+iC,EAAAd,GA8BA,IAAA/vB,EAAA6wB,EAAA/3D,UA+BA,OA7BAknC,EAAAgC,cAAA,WACA,8BAAA+tB,EAAAj3D,UAAAkpC,cAAAtpC,KAAAlB,OAGAwoC,EAAA4tB,qBAAA,WACA,8BAAAmC,EAAAj3D,UAAA80D,qBAAAl1D,KAAAlB,OAUAwoC,EAAA2tB,YAAA,WACA,IAAAF,EAAA,GAUA,OARAj2D,KAAA4jC,SAAA4X,OAAAx7C,KAAA4jC,SAAA4X,MAAAoD,2BAAA5+C,KAAA4jC,SAAAyF,SAAA,uBACA4sB,EAAA90D,KAAA,IAAA+3D,GAAAl5D,KAAA6nC,QAAA,CACA2P,KAAAx3C,KAAAk4D,UAEAl4D,KAAAk2D,gBAAA,GAGAD,EAAAsC,EAAAj3D,UAAA60D,YAAAj1D,KAAAlB,KAAAi2D,EAAAmD,KAIAC,EA9DA,CA+DCtB,IASDsB,GAAA/3D,UAAA62D,OAAA,yBASAkB,GAAA/3D,UAAA2lD,aAAA,YACAxf,GAAS+F,kBAAA,iBAAA6rB,IAOT,IAAAE,GAEA,SAAAvC,GAaA,SAAAuC,EAAA31B,EAAA55B,GACA,IAAAijB,EAEAljB,EAAAC,EAAAD,MACAqI,EAAAwxB,EAAA41B,cAEAxvD,EAAAmW,MAAApW,EAAAoW,OAAApW,EAAAmW,UAAA,UACAlW,EAAAqtC,SAAAttC,EAAAitC,SACA/pB,EAAA+pC,EAAA91D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACA+J,QAEAkjB,EAAA4O,SAAA,OAAA9xB,EAAAytC,KAAA,cAEA,IAAA0f,EAAA,WACA,QAAA37C,EAAAta,UAAAF,OAAAC,EAAA,IAAAya,MAAAF,GAAAG,EAAA,EAAyEA,EAAAH,EAAaG,IACtF1a,EAAA0a,GAAAza,UAAAya,GAGAuR,EAAAkqC,mBAAA/1D,MAAA0F,IAAAmmB,IAAAjsB,IASA,OANAoR,EAAA8vB,iBAAA,SAAAg1B,GAEAjqC,EAAA9sB,GAAA,qBACAiS,EAAAiuB,oBAAA,SAAA62B,KAGAjqC,EAvCAqJ,EAAAijC,EAAAvC,GA0CA,IAAAxuB,EAAA+wB,EAAAj4D,UAsDA,OApDAknC,EAAAjO,SAAA,SAAAn6B,EAAAkF,EAAAqlB,GACA,IAAAovB,EAAA,oCAAA/5C,KAAAyoC,SAAAzoC,KAAA8nC,SAAA3nB,OAYA,MAVA,cAAAngB,KAAA8nC,SAAA/9B,MAAAytC,OACAuC,GAAA,oHAAA/5C,KAAAyoC,SAAA,mCAGAsR,GAAA,UAEAid,EAAA11D,UAAAi5B,SAAAr5B,KAAAlB,KAAAI,EAA2D+4B,GAAM,CACjE4gB,aACKz0C,GAAAqlB,IAiBL6d,EAAA6e,YAAA,SAAAx3C,GACA,IAAAuC,EAAApS,KAAA6nC,QAAA2xB,cAEAxC,EAAA11D,UAAA+lD,YAAAnmD,KAAAlB,KAAA6P,GAEA,QAAA/O,EAAA,EAAmBA,EAAAsR,EAAArR,OAAmBD,IAAA,CACtC,IAAAiJ,EAAAqI,EAAAtR,GACAiJ,EAAAitC,QAAAjtC,IAAA/J,KAAA+J,QAaAy+B,EAAA2uB,mBAAA,SAAAtnD,GACA7P,KAAAq3C,SAAAr3C,KAAA+J,MAAAitC,UAGAuiB,EAjGA,CAkGC7C,IAEDjvB,GAAS+F,kBAAA,qBAAA+rB,IAOT,IAAAE,GAEA,SAAAzB,GAaA,SAAAyB,EAAA71B,EAAA55B,GAMA,YALA,IAAAA,IACAA,EAAA,IAGAA,EAAAoI,OAAAwxB,EAAA41B,cACAxB,EAAA92D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,KAlBAs2B,EAAAmjC,EAAAzB,GA4BA,IAAAxvB,EAAAixB,EAAAn4D,UA2CA,OAzCAknC,EAAAgC,cAAA,WACA,0BAAAwtB,EAAA12D,UAAAkpC,cAAAtpC,KAAAlB,OAGAwoC,EAAA4tB,qBAAA,WACA,0BAAA4B,EAAA12D,UAAA80D,qBAAAl1D,KAAAlB,OAaAwoC,EAAA2tB,YAAA,SAAAF,QACA,IAAAA,IACAA,EAAA,IAIAj2D,KAAAk2D,eAAA,EAGA,IAFA,IAAA9jD,EAAApS,KAAA6nC,QAAA2xB,cAEA14D,EAAA,EAAmBA,EAAAsR,EAAArR,OAAmBD,IAAA,CACtC,IAAAiJ,EAAAqI,EAAAtR,GACAm1D,EAAA90D,KAAA,IAAAo4D,GAAAv5D,KAAA6nC,QAAA,CACA99B,QAEA4sD,YAAA,EAEAE,iBAAA,KAIA,OAAAZ,GAGAwD,EAxEA,CAyEClD,IASDkD,GAAAn4D,UAAA2lD,aAAA,cACAxf,GAAS+F,kBAAA,mBAAAisB,IAOT,IAAAC,GAEA,SAAA1C,GAaA,SAAA0C,EAAA91B,EAAA55B,GACA,IAAAijB,EAEA9M,EAAAnW,EAAA2vD,KACAA,EAAAhyC,WAAAxH,EAAA,IAYA,OAVAnW,EAAAmW,QACAnW,EAAAqtC,SAAA,IAAAsiB,EACA3vD,EAAA2sD,YAAA,EACA3sD,EAAA6sD,iBAAA,GACA5pC,EAAA+pC,EAAA91D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACAmgB,QACA8M,EAAA0sC,OAEA1sC,EAAA9sB,GAAAyjC,EAAA,aAAA3W,EAAAy6B,QAEAz6B,EA5BAqJ,EAAAojC,EAAA1C,GA2CA,IAAAxuB,EAAAkxB,EAAAp4D,UAqBA,OAnBAknC,EAAA6e,YAAA,SAAAx3C,GACAmnD,EAAA11D,UAAA+lD,YAAAnmD,KAAAlB,MAEAA,KAAA4jC,SAAAg2B,aAAA55D,KAAA25D,OAYAnxB,EAAAkf,OAAA,SAAA73C,GACA7P,KAAAq3C,SAAAr3C,KAAA4jC,SAAAg2B,iBAAA55D,KAAA25D,OAGAD,EAjEA,CAkEChD,IASDgD,GAAAp4D,UAAA+zD,cAAA,SACA5tB,GAAS+F,kBAAA,uBAAAksB,IAOT,IAAAG,GAEA,SAAArD,GAaA,SAAAqD,EAAAj2B,EAAA55B,GACA,IAAAijB,EAYA,OAVAA,EAAAupC,EAAAt1D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEA85D,mBAEA7sC,EAAA8sC,cAEA9sC,EAAA9sB,GAAAyjC,EAAA,YAAA3W,EAAA6sC,kBAEA7sC,EAAA9sB,GAAAyjC,EAAA,aAAA3W,EAAA8sC,aAEA9sC,EAzBAqJ,EAAAujC,EAAArD,GAmCA,IAAAhuB,EAAAqxB,EAAAv4D,UAqJA,OAnJAknC,EAAAjO,SAAA,WACA,IAAApS,EAAAquC,EAAAl1D,UAAAi5B,SAAAr5B,KAAAlB,MAOA,OALAA,KAAAg6D,SAAAz/B,GAAA,OACAqB,UAAA,0BACAme,UAAA,OAEA5xB,EAAAoT,YAAAv7B,KAAAg6D,UACA7xC,GAGAqgB,EAAAnnC,QAAA,WACArB,KAAAg6D,SAAA,KAEAxD,EAAAl1D,UAAAD,QAAAH,KAAAlB,OAUAwoC,EAAAgC,cAAA,WACA,2BAAAgsB,EAAAl1D,UAAAkpC,cAAAtpC,KAAAlB,OAGAwoC,EAAA4tB,qBAAA,WACA,2BAAAI,EAAAl1D,UAAA80D,qBAAAl1D,KAAAlB,OAUAwoC,EAAAwtB,WAAA,WACA,IAAAF,EAAA,IAAmBhB,GAAI90D,KAAA4jC,UACvBq2B,EAAAj6D,KAAAk6D,gBAEA,GAAAD,EACA,QAAAn5D,EAAAm5D,EAAAl5D,OAAA,EAAoCD,GAAA,EAAQA,IAC5Cg1D,EAAAxsB,SAAA,IAAAowB,GAAA15D,KAAA4jC,SAAA,CACA+1B,KAAAM,EAAAn5D,GAAA,OAKA,OAAAg1D,GAOAttB,EAAA4qB,qBAAA,WAEApzD,KAAAmoB,KAAA4S,aAAA,gBAAA/6B,KAAA4jC,SAAAg2B,iBAeApxB,EAAA6e,YAAA,SAAAx3C,GAOA,IALA,IAAAsqD,EAAAn6D,KAAA4jC,SAAAg2B,eACAK,EAAAj6D,KAAAk6D,gBAEAE,EAAAH,EAAA,GAEAn5D,EAAA,EAAmBA,EAAAm5D,EAAAl5D,OAAkBD,IACrC,GAAAm5D,EAAAn5D,GAAAq5D,EAAA,CACAC,EAAAH,EAAAn5D,GACA,MAIAd,KAAA4jC,SAAAg2B,aAAAQ,IAUA5xB,EAAA0xB,cAAA,WACA,OAAAl6D,KAAA8nC,SAAAoyB,eAAAl6D,KAAA8nC,SAAAwC,eAAAtqC,KAAA8nC,SAAAwC,cAAA4vB,eAWA1xB,EAAA6xB,sBAAA,WACA,OAAAr6D,KAAA4jC,SAAA4X,OAAAx7C,KAAA4jC,SAAA4X,MAAAkH,sBAAA1iD,KAAAk6D,iBAAAl6D,KAAAk6D,gBAAAn5D,OAAA,GAYAynC,EAAAsxB,iBAAA,SAAAjqD,GACA7P,KAAAq6D,wBACAr6D,KAAAg8B,YAAA,cAEAh8B,KAAA67B,SAAA,eAaA2M,EAAAuxB,YAAA,SAAAlqD,GACA7P,KAAAq6D,0BACAr6D,KAAAg6D,SAAAjgB,UAAA/5C,KAAA4jC,SAAAg2B,eAAA,MAIAC,EAzLA,CA0LElE,IASFkE,GAAAv4D,UAAA2lD,aAAA,gBACAxf,GAAS+F,kBAAA,yBAAAqsB,IAQT,IAAAS,GAEA,SAAA7nB,GAGA,SAAA6nB,IACA,OAAA7nB,EAAArxC,MAAApB,KAAAiB,YAAAjB,KAHAs2B,EAAAgkC,EAAA7nB,GAMA,IAAAjK,EAAA8xB,EAAAh5D,UAyBA,OAjBAknC,EAAAgC,cAAA,WACA,oBAAAiI,EAAAnxC,UAAAkpC,cAAAtpC,KAAAlB,OAUAwoC,EAAAjO,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA57B,KAAAwqC,mBAIA8vB,EAhCA,CAiCE7yB,IAEFA,GAAS+F,kBAAA,SAAA8sB,IAOT,IAAAC,GAEA,SAAAC,GAGA,SAAAD,IACA,OAAAC,EAAAp5D,MAAApB,KAAAiB,YAAAjB,KAHAs2B,EAAAikC,EAAAC,GAMA,IAAAhyB,EAAA+xB,EAAAj5D,UA8BA,OAtBAknC,EAAAgC,cAAA,WACA,mCAAAgwB,EAAAl5D,UAAAkpC,cAAAtpC,KAAAlB,OAUAwoC,EAAAjO,SAAA,WACA,IAAApS,EAAAqyC,EAAAl5D,UAAAi5B,SAAAr5B,KAAAlB,KAAA,CACA47B,UAAA57B,KAAAwqC,kBAMA,OADAriB,EAAA4xB,UAAA,OACA5xB,GAGAoyC,EArCA,CAsCCD,IAED7yB,GAAS+F,kBAAA,sBAAA+sB,IAOT,IAAAE,GAEA,SAAAhoB,GAGA,SAAAgoB,IACA,OAAAhoB,EAAArxC,MAAApB,KAAAiB,YAAAjB,KAkBA,OArBAs2B,EAAAmkC,EAAAhoB,GAMAgoB,EAAAn5D,UAQAi5B,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,OACA47B,UAAA,kBACAwvB,IAAA,SAIAqP,EAtBA,CAuBEhzB,IASFgzB,GAAAn5D,UAAAwmC,SAAA,CACAqB,SAAA,mSAEA1B,GAAS+F,kBAAA,aAAAitB,IAQT,IAAAC,GAEA,SAAAC,GAaA,SAAAD,EAAA92B,EAAA55B,GACA,IAAAijB,EAMA,OAJAA,EAAA0tC,EAAAz5D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MAEAG,GAAAyjC,EAAA,QAAA3W,EAAA/U,MAEA+U,EAnBAqJ,EAAAokC,EAAAC,GA+BA,IAAAnyB,EAAAkyB,EAAAp5D,UAkBA,OAhBAknC,EAAAgC,cAAA,WACA,2BAAAmwB,EAAAr5D,UAAAkpC,cAAAtpC,KAAAlB,OAUAwoC,EAAA/N,QAAA,WACA,IAAAvC,EAAAl4B,KAAA4jC,SAAA1L,QACA,OAAAA,EAAAl4B,KAAAyoC,SAAAvQ,EAAA1I,SAAA,IAGAkrC,EAlDA,CAmDEloB,IAQFkoB,GAAAp5D,UAAAwmC,SAAAN,GAA+CgL,GAAWlxC,UAAAwmC,SAAA,CAC1DgM,aAAA,EACAJ,YAAA,EACAW,WAAA,EACAtB,aAAA,IAEAtL,GAAS+F,kBAAA,eAAAktB,IACT,IACAE,GAAA,iBACAC,GAAA,gBACAC,GAAA,gBACAC,GAAA,iBACAC,GAAA,mBACAC,GAAA,eACAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,eACAC,GAAA,2BACAC,GAAA,oBAYAC,GAAA,CACAjR,gBAAA,CACAnwB,SAAA,yBACAl3B,GAAA,+BACAkd,MAAA,QACAnW,QAAA,CAAA4wD,GAAAM,GAAAD,GAAAF,GAAAF,GAAAM,GAAAH,GAAAF,KAEAvQ,kBAAA,CACApwB,SAAA,2BACAl3B,GAAA,iCACAkd,MAAA,eACAnW,QAAA,CAAAoxD,GAAAC,GAAAC,KAEA7S,MAAA,CACAtuB,SAAA,yBACAl3B,GAAA,+BACAkd,MAAA,QACAnW,QAAA,CAAAkxD,GAAAN,GAAAK,GAAAF,GAAAF,GAAAM,GAAAH,GAAAF,KAEApQ,UAAA,CACAvwB,SAAA,2BACAl3B,GAAA,KACAkd,MAAA,kBACAnW,QAAA,mHAEA+gD,WAAA,CACA5wB,SAAA,4BACAl3B,GAAA,0BACAkd,MAAA,cACAnW,QAAA,yPAEA4gD,YAAA,CACAzwB,SAAA,6BACAl3B,GAAA,wBACAkd,MAAA,YACAnW,QAAA,gJACAqW,QAAA,EACAu6B,OAAA,SAAA4gB,GACA,eAAAA,EAAA,KAAAn2C,OAAAm2C,KAGAnR,YAAA,CACAlwB,SAAA,6BACAl3B,GAAA,iCACAkd,MAAA,eACAnW,QAAA,CAAAoxD,GAAAC,KAGA7Q,YAAA,CACArwB,SAAA,6BACAl3B,GAAA,2BACAkd,MAAA,SAGAsqC,cAAA,CACAtwB,SAAA,+BACAl3B,GAAA,6BACAkd,MAAA,eACAnW,QAAA,CAAAsxD,GAAAD,GAAAD,MAqBA,SAAAK,GAAAp0D,EAAAuzC,GAKA,GAJAA,IACAvzC,EAAAuzC,EAAAvzC,IAGAA,GAAA,SAAAA,EACA,OAAAA,EAxBAk0D,GAAA/Q,YAAAxgD,QAAAuxD,GAAAjR,gBAAAtgD,QAqFA,IAAI0xD,GAEJ,SAAAf,GAaA,SAAAgB,EAAA/3B,EAAA55B,GACA,IAAAijB,EA2CA,OAzCAjjB,EAAAqqC,WAAA,GACApnB,EAAA0tC,EAAAz5D,KAAAlB,KAAA4jC,EAAA55B,IAAAhK,MACAihD,cAAAh5C,GAAAnB,IAAAmmB,MAAAg0B,eAEAh0B,EAAA0mB,OAEA1mB,EAAA2lB,eAAA3lB,EAAA4lB,gBAAA,EACA5lB,EAAA2uC,UAAArhC,GAAA,KACAqB,UAAA,mBACA3U,YAAAgG,EAAAwb,SAAA,2BAGAxb,EAAA9E,KAAAoT,YAAAtO,EAAA2uC,WAEA3uC,EAAA4uC,mBAGAluD,IAAA3D,EAAA8xD,2BACA7uC,EAAA6a,SAAAg0B,yBAAA7uC,EAAA6a,SAAAwC,cAAAwxB,0BAGA7uC,EAAA9sB,GAAA8sB,EAAAqS,EAAA,uCACArS,EAAA8uC,eAEA9uC,EAAAumB,UAGAvmB,EAAA9sB,GAAA8sB,EAAAqS,EAAA,0CACArS,EAAA4uC,cAEA5uC,EAAAg0B,kBAGA/nB,GAAAqiC,GAAA,SAAA1vD,GACAohB,EAAA9sB,GAAA8sB,EAAAqS,EAAAzzB,EAAAsuB,UAAA,SAAAlN,EAAAg0B,iBAGAh0B,EAAA6a,SAAAg0B,0BACA7uC,EAAA+uC,kBAGA/uC,EAxDAqJ,EAAAqlC,EAAAhB,GA2DA,IAAAnyB,EAAAmzB,EAAAr6D,UA4QA,OA1QAknC,EAAAnnC,QAAA,WACArB,KAAA47D,UAAA,KAEAjB,EAAAr5D,UAAAD,QAAAH,KAAAlB,OAeAwoC,EAAAyzB,gBAAA,SAAAp2D,EAAAq2D,EAAA97D,GACA,IAAAmuB,EAAAvuB,UAEA,IAAAk8D,IACAA,EAAA,SAGA,IAAA97D,IACAA,EAAA,SAGA,IAAAyL,EAAA0vD,GAAA11D,GACA5C,EAAA4I,EAAA5I,GAAA6E,QAAA,KAAA9H,KAAA+nC,KACAo0B,EAAA,CAAAD,EAAAj5D,GAAA+X,KAAA,KAAArB,OACA,WAAAvZ,EAAA,QAAA6C,EAAA,uBAAA7C,EAAA,qBAAAJ,KAAAyoC,SAAA58B,EAAAsU,OAAA,KAAA/f,EAAA,gCAAA+7D,EAAA,MAAA77D,OAAAuL,EAAA7B,QAAA1G,IAAA,SAAA4C,GACA,IAAAk2D,EAAAn5D,EAAA,IAAAiD,EAAA,GAAA4B,QAAA,WACA,sBAAAs0D,EAAA,YAAAl2D,EAAA,4BAAAi2D,EAAA,IAAAC,EAAA,KAAA7tC,EAAAka,SAAAviC,EAAA,iBAAA8U,KAAA,OACK1a,OAAA,aAAA0a,KAAA,KAYLwtB,EAAA6zB,iBAAA,WACA,IAAAH,EAAA,wBAAAl8D,KAAA+nC,IACA,0EAAAm0B,EAAA,KAAAl8D,KAAAyoC,SAAA,oBAAAzoC,KAAAi8D,gBAAA,QAAAC,GAAA,8CAAAl8D,KAAAi8D,gBAAA,cAAAC,GAAA,yBAAAlhD,KAAA,KAYAwtB,EAAA8zB,iBAAA,WACA,IAAAJ,EAAA,uBAAAl8D,KAAA+nC,IACA,0EAAAm0B,EAAA,KAAAl8D,KAAAyoC,SAAA,0BAAAzoC,KAAAi8D,gBAAA,kBAAAC,GAAA,4CAAAl8D,KAAAi8D,gBAAA,oBAAAC,GAAA,yBAAAlhD,KAAA,KAYAwtB,EAAA+zB,kBAAA,WACA,IAAAL,EAAA,mBAAAl8D,KAAA+nC,IACA,8EAAAm0B,EAAA,KAAAl8D,KAAAyoC,SAAA,sBAAAzoC,KAAAi8D,gBAAA,cAAAC,GAAA,gDAAAl8D,KAAAi8D,gBAAA,gBAAAC,GAAA,yBAAAlhD,KAAA,KAYAwtB,EAAAg0B,gBAAA,WACA,OAAAjiC,GAAA,OACAqB,UAAA,4BACAme,UAAA,CAAA/5C,KAAAq8D,mBAAAr8D,KAAAs8D,mBAAAt8D,KAAAu8D,qBAAAvhD,KAAA,OAaAwtB,EAAAi0B,cAAA,WACA,OAAAliC,GAAA,OACAqB,UAAA,0BACAme,UAAA,yDAAA/5C,KAAAi8D,gBAAA,+FAAAj8D,KAAAi8D,gBAAA,8FAAAj8D,KAAAi8D,gBAAA,yCAAAjhD,KAAA,OAaAwtB,EAAAk0B,kBAAA,WACA,IAAAC,EAAA38D,KAAAyoC,SAAA,8CACA,OAAAlO,GAAA,OACAqB,UAAA,8BACAme,UAAA,4DAAA4iB,EAAA,KAAA38D,KAAAyoC,SAAA,4CAAAk0B,EAAA,uEAAA38D,KAAAyoC,SAAA,qBAAAztB,KAAA,OAIAwtB,EAAA/N,QAAA,WACA,OAAAz6B,KAAAw8D,kBAAAx8D,KAAAy8D,gBAAAz8D,KAAA08D,sBAGAl0B,EAAAroB,MAAA,WACA,OAAAngB,KAAAyoC,SAAA,4BAGAD,EAAAyK,YAAA,WACA,OAAAjzC,KAAAyoC,SAAA,yEAGAD,EAAAgC,cAAA,WACA,OAAAmwB,EAAAr5D,UAAAkpC,cAAAtpC,KAAAlB,MAAA,4BAUAwoC,EAAA0hB,UAAA,WACA,IArugBAjxB,EAAAxY,EAAAm8C,EAqugBA1vB,EAAAltC,KAEA,OAvugBAygB,EAuugBA,SAAAo8C,EAAAhxD,EAAAhG,GACA,IApQAsiB,EAAAyyB,EAoQAvzC,GApQA8gB,EAoQA+kB,EAAA5N,EAAAzzB,EAAAsuB,UApQAygB,EAoQA/uC,EAAA+uC,OAlQA6gB,GADAtzC,EAAAne,QAAAme,EAAAne,QAAA8yD,eAAAz1D,MACAuzC,IAwQA,YAJAjtC,IAAAtG,IACAw1D,EAAAh3D,GAAAwB,GAGAw1D,QA7ugBA,KADAD,EA+ugBK,MA7ugBLA,EAAA,GAGAhhD,GALAqd,EAuugBAsiC,IAlugBA14D,OAAA,SAAAg6D,EAAAh3D,GACA,OAAA4a,EAAAo8C,EAAA5jC,EAAApzB,OACG+2D,IAkvgBHp0B,EAAAu0B,UAAA,SAAAz4C,GACA,IAAA+oB,EAAArtC,KAEAk5B,GAAAqiC,GAAA,SAAA1vD,EAAAhG,IAnQA,SAAAsiB,EAAA9gB,EAAAuzC,GACA,GAAAvzC,EAIA,QAAAvG,EAAA,EAAiBA,EAAAqnB,EAAAne,QAAAjJ,OAAuBD,IACxC,GAAA26D,GAAAtzC,EAAAne,QAAAlJ,GAAAuG,MAAAuzC,KAAAvzC,EAAA,CACA8gB,EAAA20C,cAAAh8D,EACA,OA4PAk8D,CAAA3vB,EAAA/N,EAAAzzB,EAAAsuB,UAAA7V,EAAAze,GAAAgG,EAAA+uC,WAQApS,EAAAqzB,YAAA,WACA,IAAApb,EAAAzgD,KAEAk5B,GAAAqiC,GAAA,SAAA1vD,GACA,IAAArL,EAAAqL,EAAA6M,eAAA,WAAA7M,EAAAwU,QAAA,EACAogC,EAAAnhB,EAAAzzB,EAAAsuB,UAAA2iC,cAAAt8D,KAQAgoC,EAAAwzB,gBAAA,WACA,IAAA13C,EAEA,IACAA,EAAAnO,KAAAC,MAA0BqhB,EAAA5tB,EAAQozD,aAAAC,QAnblC,4BAobK,MAAA5nD,GACCqiB,EAAGM,KAAA3iB,GAGTgP,GACAtkB,KAAA+8D,UAAAz4C,IAQAkkB,EAAAuzB,aAAA,WACA,GAAA/7D,KAAA8nC,SAAAg0B,yBAAA,CAIA,IAAAx3C,EAAAtkB,KAAAkqD,YAEA,IACAvkD,OAAAiW,KAAA0I,GAAAvjB,OACQ02B,EAAA5tB,EAAQozD,aAAAE,QA1chB,0BA0cgBhnD,KAAAsB,UAAA6M,IAERmT,EAAA5tB,EAAQozD,aAAAG,WA5chB,2BA8cK,MAAA9nD,GACCqiB,EAAGM,KAAA3iB,MAQTkzB,EAAAyY,cAAA,WACA,IAAAoc,EAAAr9D,KAAA6nC,QAAAwB,SAAA,oBAEAg0B,GACAA,EAAApc,iBAUAzY,EAAA4L,iBAAA,WACAp0C,KAAAszC,oBAAA,KACAtzC,KAAAO,IAAas5B,EAAAhwB,EAAQ,UAAA7J,KAAAm1C,eACrB,IAAAwW,EAAA3rD,KAAA6nC,QAAAy1B,WACAC,EAAA5R,KAAA6R,eACAC,EAAA9R,KAAA+R,eAEAH,EACAA,EAAAvgC,QACKygC,GACLA,EAAAzgC,SAIA2+B,EAxUA,CAyUEnpB,IAEF/K,GAAS+F,kBAAA,oBAAwCkuB,IAkBjD,IAAIiC,GAEJ,SAAAlrB,GAiBA,SAAAmrB,EAAAh6B,EAAA55B,GACA,IAAAijB,EAEA4wC,EAAA7zD,EAAA8zD,gBAA8DrmC,EAAA5tB,EAAQi0D,eAEtE,OAAA9zD,EAAA8zD,iBACAD,GAAA,GAIA,IAAA/1B,EAAAN,GAAA,CACAjN,UAAAsjC,EACAv1B,qBAAA,GACKt+B,GAyBL,OAxBAijB,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAAkE,IAAA9nC,MACA89D,eAAA9zD,EAAA8zD,gBAAqDrmC,EAAA5tB,EAAQi0D,eAC7D7wC,EAAA8wC,cAAA,KACA9wC,EAAA+wC,gBAAA,KACA/wC,EAAAgxC,kBAA8Bx5B,GAAQ,WACtCxX,EAAAixC,iBACK,OAAAp3D,IAAAmmB,KAEL4wC,GACA5wC,EAAA+wC,gBAAA,IAAA/wC,EAAA6wC,eAAA7wC,EAAAgxC,mBAEAhxC,EAAA+wC,gBAAAG,QAAAv6B,EAAAzb,QAEA8E,EAAA8wC,cAAA,WACA9wC,EAAAgb,KAAAhb,EAAAgb,IAAAm2B,eAIAj+D,GAAA8sB,EAAAgb,IAAAm2B,cAAA,SAAAnxC,EAAAgxC,oBAGAhxC,EAAA8V,IAAA,OAAA9V,EAAA8wC,gBAGA9wC,EAtDAqJ,EAAAsnC,EAAAnrB,GAyDA,IAAAjK,EAAAo1B,EAAAt8D,UAyDA,OAvDAknC,EAAAjO,SAAA,WACA,OAAAkY,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,UACA47B,UAAA,wBAUA4M,EAAA01B,cAAA,WASAl+D,KAAA6nC,SAAA7nC,KAAA6nC,QAAAjnC,SAIAZ,KAAA6nC,QAAAjnC,QAAA,iBAGA4nC,EAAAnnC,QAAA,WACArB,KAAAi+D,mBACAj+D,KAAAi+D,kBAAAp5B,SAGA7kC,KAAAg+D,kBACAh+D,KAAA6nC,QAAA1f,MACAnoB,KAAAg+D,gBAAAK,UAAAr+D,KAAA6nC,QAAA1f,MAGAnoB,KAAAg+D,gBAAAM,cAGAt+D,KAAAioC,KAAAjoC,KAAAioC,IAAAm2B,eACA79D,GAAAP,KAAAioC,IAAAm2B,cAAA,SAAAp+D,KAAAi+D,mBAGAj+D,KAAA+9D,eACA/9D,KAAAO,IAAA,OAAAP,KAAA+9D,eAGA/9D,KAAA89D,eAAA,KACA99D,KAAAu+D,eAAA,KACAv+D,KAAAi+D,kBAAA,KACAj+D,KAAA+9D,cAAA,MAGAH,EAnHA,CAoHEn2B,IAEFA,GAAS+F,kBAAA,gBAAoCmwB,IAG7C,IAAAa,GAEA,SAAA/rB,GAGA,SAAA+rB,EAAA56B,EAAA55B,GACA,IAAAijB,EAGA6a,EAAAN,GAAA,CACAjN,UAAA,GACKvwB,GAOL,OANAijB,EAAAwlB,EAAAvxC,KAAAlB,KAAA4jC,EAAAkE,IAAA9nC,MAEAy+D,SAEAxxC,EAAA9sB,GAAA8sB,EAAA4a,QAAA,iBAAA5a,EAAAyxC,sBAEAzxC,EAfAqJ,EAAAkoC,EAAA/rB,GAkBA,IAAAjK,EAAAg2B,EAAAl9D,UA+PA,OA7PAknC,EAAAm2B,UAAA,WAEA,IAAA3+D,KAAA4+D,gBACA,SAGA,IAAAhN,EAAA5xD,KAAA4xD,kBACArV,EAAAv8C,KAAA6nC,QAAA0U,cACAsiB,EAAA7+D,KAAA8+D,mBAQA,OAAAlN,IAAA/tD,KAAA+tD,GAHA,EAAAiN,EAAA,MAGAtiB,GAKA/T,EAAAu2B,WAAA,WACA/+D,KAAAg/D,aAAAh/D,KAAAg/D,aACA,IAAA3Z,EAAArlD,KAAA6nC,QAAAwd,WAEA,GAAAA,KAAAtkD,OAAA,CAIA,IAAAk+D,EAAAj/D,KAAA+vD,cAIAkP,IAAAj/D,KAAAk/D,eACAl/D,KAAAk/D,eACAl/D,KAAA8+D,mBAAAn7D,KAAAw7D,IAAAF,EAAAj/D,KAAAk/D,eAGAl/D,KAAAg/D,aAAA,EACAh/D,KAAAk/D,aAAAD,EACAj/D,KAAAY,QAAA,sBAGAZ,KAAAg/D,aAAAh/D,KAAAo/D,cAAA,IAEAp/D,KAAA2+D,cAAA3+D,KAAAq/D,mBACAr/D,KAAAs/D,gBAAAt/D,KAAA2+D,YACA3+D,KAAAY,QAAA,qBASA4nC,EAAAk2B,qBAAA,WACA1+D,KAAA6nC,QAAA36B,aAAArJ,IACA7D,KAAAu/D,gBAEAv/D,KAAAw/D,gBAQAh3B,EAAA+2B,cAAA,WACA,IAAAhxC,EAAAvuB,KAEAA,KAAAy/D,eAIAz/D,KAAA0/D,kBAAA1/D,KAAA6sC,YAAA7sC,KAAA++D,WAAA,IACA/+D,KAAA++D,aACA/+D,KAAAG,GAAAH,KAAA6nC,QAAA,OAAA7nC,KAAA++D,YACA/+D,KAAAG,GAAAH,KAAA6nC,QAAA,QAAA7nC,KAAA++D,YACA/+D,KAAA+iC,IAAA/iC,KAAA6nC,QAAA,OAAA7nC,KAAAisD,YAGAjsD,KAAA4+D,kBACA5+D,KAAA2/D,iBAAA,WACApxC,EAAAqwC,iBAAA,EACArwC,EAAAoxC,iBAAA,MAGA3/D,KAAA+iC,IAAA/iC,KAAA6nC,QAAA,aAAA7nC,KAAA2/D,qBAIAn3B,EAAAyjB,WAAA,WACAjsD,KAAA+iC,IAAA/iC,KAAA6nC,QAAA,aAAA7nC,KAAAwuD,iBAQAhmB,EAAAi2B,OAAA,WACAz+D,KAAAg/D,aAAA,EACAh/D,KAAAk/D,aAAA,KACAl/D,KAAAs/D,gBAAA,KACAt/D,KAAA4+D,iBAAA,EACA5+D,KAAA4sC,cAAA5sC,KAAA0/D,mBACA1/D,KAAA0/D,kBAAA,KACA1/D,KAAA8+D,mBAAA,GACA9+D,KAAAO,IAAAP,KAAA6nC,QAAA,OAAA7nC,KAAA++D,YACA/+D,KAAAO,IAAAP,KAAA6nC,QAAA,QAAA7nC,KAAA++D,YACA/+D,KAAAO,IAAAP,KAAA6nC,QAAA,OAAA7nC,KAAAisD,YACAjsD,KAAAO,IAAAP,KAAA6nC,QAAA,aAAA7nC,KAAAwuD,gBAEAxuD,KAAA2/D,mBACA3/D,KAAAO,IAAAP,KAAA6nC,QAAA,aAAA7nC,KAAA2/D,kBACA3/D,KAAA2/D,iBAAA,OAQAn3B,EAAAg3B,aAAA,WACAx/D,KAAAy/D,cAIAz/D,KAAAy+D,UAQAj2B,EAAAunB,YAAA,WAKA,IAJA,IAAA1K,EAAArlD,KAAA6nC,QAAAwd,WACAua,EAAA,GACA9+D,EAAAukD,IAAAtkD,OAAA,EAEAD,KACA8+D,EAAAz+D,KAAAkkD,EAAAjjD,IAAAtB,IAKA,OAAA8+D,EAAA7+D,OAAA6+D,EAAAC,OAAAD,EAAA7+D,OAAA,GAAA8C,KAQA2kC,EAAAspB,cAAA,WAKA,IAJA,IAAAzM,EAAArlD,KAAA6nC,QAAAwd,WACAya,EAAA,GACAh/D,EAAAukD,IAAAtkD,OAAA,EAEAD,KACAg/D,EAAA3+D,KAAAkkD,EAAAtxC,MAAAjT,IAKA,OAAAg/D,EAAA/+D,OAAA++D,EAAAD,OAAA,MAOAr3B,EAAA0oB,WAAA,WACA,IAAAU,EAAA5xD,KAAA4xD,kBAEA,OAAAA,IAAA/tD,IACAA,IAGA+tD,EAAA5xD,KAAA8xD,iBAQAtpB,EAAAsnB,OAAA,WACA,OAAA9vD,KAAAy/D,cAQAj3B,EAAA+lB,WAAA,WACA,OAAAvuD,KAAAq/D,kBAOA72B,EAAAopB,gBAAA,WACA,OAAA5xD,KAAAo/D,cAAAp/D,KAAA+vD,eAOAvnB,EAAA42B,YAAA,WACA,OAAAp/D,KAAAg/D,cAQAx2B,EAAA62B,eAAA,WACA,OAAAr/D,KAAAs/D,iBAGA92B,EAAAi3B,WAAA,WACA,wBAAAz/D,KAAA0/D,mBAOAl3B,EAAAgmB,eAAA,WACAxuD,KAAAuuD,eAIAvuD,KAAA6nC,QAAA0U,YAAAv8C,KAAA4xD,mBAEA5xD,KAAA6nC,QAAAgM,UACA7zC,KAAA6nC,QAAAD,SAIAY,EAAAnnC,QAAA,WACArB,KAAAw/D,eAEA/sB,EAAAnxC,UAAAD,QAAAH,KAAAlB,OAGAw+D,EAlRA,CAmRE/2B,IAEFA,GAAS+F,kBAAA,cAAAgxB,IAeT,IAAAuB,GAAA,SAAAjuB,GACA,IAAA3pB,EAAA2pB,EAAA3pB,KAEA,GAAAA,EAAAytB,aAAA,OAEA,OADA9D,EAAAmN,iBAAA92B,EAAA+pB,MACA,EAgBA,IAAA9Y,EAAA0Y,EAAAvS,GAAA,UACAygC,EAAA,GACA9tB,EAAA,GAEA,IAAA9Y,EAAAr4B,OACA,SAIA,QAAAD,EAAA,EAAiBA,EAAAs4B,EAAAr4B,OAAoBD,IAAA,CACrC,IAAAmW,EAAAmiB,EAAAt4B,GAAAoxC,IAEAj7B,IAAA,IAAA+oD,EAAAv/D,QAAAwW,IACA+oD,EAAA7+D,KAAA8V,GAKA,QAAA+oD,EAAAj/D,SAMA,IAAAi/D,EAAAj/D,SACAmxC,EAAA8tB,EAAA,IAGAluB,EAAAmN,iBAAA/M,IACA,IAQA+tB,GAAAt6D,OAAAC,eAAA,GAA0D,aAC1DwwB,IAAA,WACA,OAAAp2B,KAAAkgE,WAAA,GAAAnmB,WAEApuC,IAAA,SAAA6vD,GAEA,IAAA2E,EAAgBtmC,EAAAhwB,EAAQ6wB,cAAA16B,KAAAgW,SAAAmY,eAExBgyC,EAAApmB,UAAAyhB,EAKA,IAHA,IAAA4E,EAAkBvmC,EAAAhwB,EAAQw2D,yBAG1BF,EAAAr5C,WAAA/lB,QACAq/D,EAAA7kC,YAAA4kC,EAAAr5C,WAAA,IASA,OALA9mB,KAAAk7B,UAAA,GAGIzD,EAAA5tB,EAAQy2D,QAAAh/D,UAAAi6B,YAAAr6B,KAAAlB,KAAAogE,GAEZpgE,KAAA+5C,aAQAwmB,GAAA,SAAAC,EAAAj2D,GAGA,IAFA,IAAAhF,EAAA,GAEAzE,EAAA,EAAiBA,EAAA0/D,EAAAz/D,WACjBwE,EAAAI,OAAA86D,yBAAAD,EAAA1/D,GAAAyJ,KAEAhF,EAAAoG,KAAApG,EAAA6wB,KAHsCt1B,KAUtC,OAFAyE,EAAAC,YAAA,EACAD,EAAAE,cAAA,EACAF,GA0BAm7D,GAAA,SAAA5uB,GACA,IAAA3pB,EAAA2pB,EAAA3pB,KAEA,IAAAA,EAAAw4C,kBAAA,CAIA,IAAA5/B,EAAA,GACA6/B,EA/B0B,SAAA9uB,GAC1B,OAAAyuB,GAAA,CAAAzuB,EAAA3pB,KAAmCsP,EAAA5tB,EAAQg3D,iBAAAv/D,UAA6Bm2B,EAAA5tB,EAAQy2D,QAAAh/D,UAAA2+D,IAAA,aA8BxDa,CAAsBhvB,GAE9CivB,EAAA,SAAAC,GACA,kBACA,QAAAzlD,EAAAta,UAAAF,OAAAC,EAAA,IAAAya,MAAAF,GAAAG,EAAA,EAAyEA,EAAAH,EAAaG,IACtF1a,EAAA0a,GAAAza,UAAAya,GAGA,IAAAulD,EAAAD,EAAA5/D,MAAA+mB,EAAAnnB,GAEA,OADA++D,GAAAjuB,GACAmvB,IAIA,8CAAA/8D,QAAA,SAAA4Y,GACAqL,EAAArL,KAKAikB,EAAAjkB,GAAAqL,EAAArL,GAGAqL,EAAArL,GAAAikD,EAAAhgC,EAAAjkB,OAEAnX,OAAAC,eAAAuiB,EAAA,YAAAqf,GAAAo5B,EAAA,CACAj1D,IAAAo1D,EAAAH,EAAAj1D,QAGAwc,EAAAw4C,kBAAA,WACAx4C,EAAAw4C,kBAAA,KACAh7D,OAAAiW,KAAAmlB,GAAA78B,QAAA,SAAA4Y,GACAqL,EAAArL,GAAAikB,EAAAjkB,KAEAnX,OAAAC,eAAAuiB,EAAA,YAAAy4C,IAIA9uB,EAAA/O,IAAA,YAAA5a,EAAAw4C,qBAQAO,GAAAv7D,OAAAC,eAAA,GAAoD,OACpDwwB,IAAA,WACA,OAAAp2B,KAAA41C,aAAA,OACaqE,GAAexiB,EAAA5tB,EAAQy2D,QAAAh/D,UAAAu7B,aAAA37B,KAAAlB,KAAA,QAGpC,IAEA2L,IAAA,SAAA6vD,GAEA,OADI/jC,EAAA5tB,EAAQy2D,QAAAh/D,UAAAy5B,aAAA75B,KAAAlB,KAAA,MAAAw7D,GACZA,KAwBA2F,GAAA,SAAArvB,GACA,GAAAA,EAAA6Q,kBAAA,CAIA,IAAAx6B,EAAA2pB,EAAA3pB,KAEA,IAAAA,EAAAi5C,gBAAA,CAIA,IAAAC,EA/BoB,SAAAvvB,GACpB,OAAAyuB,GAAA,CAAAzuB,EAAA3pB,KAAmCsP,EAAA5tB,EAAQg3D,iBAAAv/D,UAAA4/D,IAAA,OA8BrBI,CAAgBxvB,GACtCyvB,EAAAp5C,EAAA4S,aACAymC,EAAAr5C,EAAAk1B,KACA13C,OAAAC,eAAAuiB,EAAA,MAAAqf,GAAA65B,EAAA,CACA11D,IAAA,SAAA6vD,GACA,IAAAyF,EAAAI,EAAA11D,IAAAzK,KAAAinB,EAAAqzC,GAGA,OADA1pB,EAAAmN,iBAAA92B,EAAA+pB,KACA+uB,MAIA94C,EAAA4S,aAAA,SAAA3f,EAAAogD,GACA,IAAAyF,EAAAM,EAAArgE,KAAAinB,EAAA/M,EAAAogD,GAMA,MAJA,OAAAjzD,KAAA6S,IACA02B,EAAAmN,iBAAA92B,EAAA+pB,KAGA+uB,GAGA94C,EAAAk1B,KAAA,WACA,IAAA4jB,EAAAO,EAAAtgE,KAAAinB,GAUA,OALA43C,GAAAjuB,KACAA,EAAAmN,iBAAA,IACAyhB,GAAA5uB,IAGAmvB,GAGA94C,EAAAs5C,WACA3vB,EAAAmN,iBAAA92B,EAAAs5C,YACG1B,GAAAjuB,IACH4uB,GAAA5uB,GAGA3pB,EAAAi5C,gBAAA,WACAj5C,EAAAi5C,gBAAA,KACAj5C,EAAAk1B,KAAAmkB,EACAr5C,EAAA4S,aAAAwmC,EACA57D,OAAAC,eAAAuiB,EAAA,MAAAk5C,GAEAl5C,EAAAw4C,mBACAx4C,EAAAw4C,wBAKA,SAAAe,KACA,IAAAjgE,EAAAs1B,EAAA,wJAMA,OAJA2qC,GAAA,WACA,OAAAjgE,GAGAA,EAUA,IAAIkgE,GAEJ,SAAA9e,GAaA,SAAA+e,EAAA53D,EAAA29B,GACA,IAAA1a,EAEAA,EAAA41B,EAAA3hD,KAAAlB,KAAAgK,EAAA29B,IAAA3nC,KACA,IAAA2b,EAAA3R,EAAA2R,OACAkmD,GAAA,EAgBA,GAXAlmD,IAAAsR,EAAAgb,IAAAw5B,aAAA9lD,EAAAu2B,KAAAloC,EAAAmf,KAAA,IAAAnf,EAAAmf,IAAA24C,mBACA70C,EAAAs2B,UAAA5nC,GAEAsR,EAAA80C,gBAAA90C,EAAAgb,KAIAj+B,EAAAg4D,iBACA/0C,EAAAg1C,0BAGAh1C,EAAAgb,IAAAi6B,gBAAA,CAKA,IAJA,IAAAC,EAAAl1C,EAAAgb,IAAAnhB,WACAs7C,EAAAD,EAAAphE,OACAshE,EAAA,GAEAD,KAAA,CACA,IAAA14C,EAAAy4C,EAAAC,GAGA,UAFA14C,EAAA1T,SAAAmY,gBAGAlB,EAAA2xB,0BAQA3xB,EAAAw0B,qBAAA7J,iBAAAluB,GAEAuD,EAAA6zB,mBAAAvK,SAAA7sB,EAAA3f,OAEAkjB,EAAAklB,aAAAoE,SAAA7sB,EAAA3f,OAEA83D,GAAA50C,EAAAgb,IAAA2N,aAAA,iBAAgFuE,GAAazwB,EAAAwoB,OAC7F2vB,GAAA,IAVAQ,EAAAlhE,KAAAuoB,IAgBA,QAAA5oB,EAAA,EAAqBA,EAAAuhE,EAAAthE,OAAwBD,IAC7CmsB,EAAAgb,IAAAlJ,YAAAsjC,EAAAvhE,IA2BA,OAvBAmsB,EAAAq1C,qBAEAr1C,EAAA2xB,0BAAAijB,GACMlqC,EAAGM,KAAM6C,IAAI4mC,OAInBz0C,EAAAs1C,2CAMA9yB,IAAAhB,IAAAQ,MAAA,IAAAjlC,EAAAg1C,wBACA/xB,EAAAu1C,aAAA,GAKAv1C,EAAAw1C,yBAEAx1C,EAAA0d,eAEA1d,EA5FAqJ,EAAAsrC,EAAA/e,GAmGA,IAAAra,EAAAo5B,EAAAtgE,UA6wBA,OA3wBAknC,EAAAnnC,QAAA,WACArB,KAAAioC,KAAAjoC,KAAAioC,IAAAm5B,iBACAphE,KAAAioC,IAAAm5B,kBAGAQ,EAAAc,oBAAA1iE,KAAAioC,KACAjoC,KAAA8nC,SAAA,KAEA+a,EAAAvhD,UAAAD,QAAAH,KAAAlB,OAQAwoC,EAAAy5B,wBAAA,WACAd,GAAAnhE,OAYAwoC,EAAA+5B,wCAAA,WACA,IACAI,EADAxwB,EAAAnyC,KAAAmyC,aAGAywB,EAAA,WACAD,EAAA,GAEA,QAAA7hE,EAAA,EAAqBA,EAAAqxC,EAAApxC,OAAuBD,IAAA,CAC5C,IAAAiJ,EAAAooC,EAAArxC,GAEA,aAAAiJ,EAAAytC,MACAmrB,EAAAxhE,KAAA,CACA4I,QACA84D,WAAA94D,EAAAgyC,SAQA6mB,IACAzwB,EAAAjQ,iBAAA,SAAA0gC,GACA5iE,KAAAG,GAAA,qBACA,OAAAgyC,EAAA9R,oBAAA,SAAAuiC,KAGA,IAAAE,EAAA,SAAAA,IACA,QAAAhiE,EAAA,EAAqBA,EAAA6hE,EAAA5hE,OAA6CD,IAAA,CAClE,IAAAiiE,EAAAJ,EAAA7hE,GAEA,aAAAiiE,EAAAh5D,MAAAgyC,MAAAgnB,EAAAh5D,MAAAgyC,OAAAgnB,EAAAF,aACAE,EAAAh5D,MAAAgyC,KAAAgnB,EAAAF,YAKA1wB,EAAA9R,oBAAA,SAAAyiC,IAKA9iE,KAAAG,GAAA,mCACAgyC,EAAA9R,oBAAA,SAAAuiC,GAEAzwB,EAAA9R,oBAAA,SAAAyiC,GACA3wB,EAAAjQ,iBAAA,SAAA4gC,KAGA9iE,KAAAG,GAAA,iCAEAgyC,EAAA9R,oBAAA,SAAAuiC,GACAzwB,EAAAjQ,iBAAA,SAAA0gC,GAEAzwB,EAAA9R,oBAAA,SAAAyiC,MAcAt6B,EAAAw6B,gBAAA,SAAA5iE,EAAA6iE,GACA,IAAA10C,EAAAvuB,KAGA,GAAAijE,IAAAjjE,KAAA,iBAAAI,EAAA,WAIA,IAAA8iE,EAAA9iE,EAAA+tB,cAEAnuB,KAAAkjE,EAAA,qBACAv9D,OAAAiW,KAAA5b,KAAAkjE,EAAA,qBAAAh/D,QAAA,SAAAi/D,GACA50C,EAAApG,KAAA+6C,EAAA,UAEA7iC,oBAAA8iC,EAAA50C,EAAA20C,EAAA,oBAAAC,MAIAnjE,KAAA,iBAAAI,EAAA,WAAA6iE,EACAjjE,KAAAkjE,EAAA,yBACAljE,KAAAojE,0BAAAF,KAUA16B,EAAAsZ,0BAAA,SAAAmhB,GACAjjE,KAAAgjE,gBAAA,QAAAC,IAUAz6B,EAAAuZ,0BAAA,SAAAkhB,GACAjjE,KAAAgjE,gBAAA,QAAAC,IAWAz6B,EAAA46B,0BAAA,SAAA3mD,GACA,IAAAywB,EAAAltC,KAEAsF,EAAAk4C,GAAA/gC,GACA4mD,EAAArjE,KAAAmoB,KAAA7iB,EAAAu4C,YACAylB,EAAAtjE,KAAAsF,EAAAu4C,cAEA,GAAA79C,KAAA,iBAAAsF,EAAAq4C,YAAA,WAAA0lB,KAAAnhC,iBAAA,CAIA,IAAAhiC,EAAA,CACA02C,OAAA,SAAAjvC,GACA27D,EAAA1iE,QAAA,CACAR,KAAA,SACAiF,OAAAi+D,EACAC,cAAAD,EACAriC,WAAAqiC,KAGAzsB,SAAA,SAAAlvC,GACA27D,EAAA/sB,SAAA5uC,EAAAoC,QAEA+sC,YAAA,SAAAnvC,GACA27D,EAAA9sB,YAAA7uC,EAAAoC,SAIAy5D,EAAA,WAGA,IAFA,IAAAC,EAAA,GAEA3iE,EAAA,EAAqBA,EAAAwiE,EAAAviE,OAAuBD,IAAA,CAG5C,IAFA,IAAA4iE,GAAA,EAEA7wC,EAAA,EAAuBA,EAAAwwC,EAAAtiE,OAAqB8xB,IAC5C,GAAAwwC,EAAAxwC,KAAAywC,EAAAxiE,GAAA,CACA4iE,GAAA,EACA,MAIAA,GACAD,EAAAtiE,KAAAmiE,EAAAxiE,IAIA,KAAA2iE,EAAA1iE,QACAuiE,EAAA9sB,YAAAitB,EAAAj3D,UAIAxM,KAAAsF,EAAAu4C,WAAA,cAAA39C,EACAyF,OAAAiW,KAAA1b,GAAAgE,QAAA,SAAAi/D,GACA,IAAA9iE,EAAAH,EAAAijE,GACAE,EAAAnhC,iBAAAihC,EAAA9iE,GAEA6sC,EAAA/sC,GAAA,mBAAAwH,GACA,OAAA07D,EAAAhjC,oBAAA8iC,EAAA9iE,OAIAL,KAAAG,GAAA,YAAAqjE,GACAxjE,KAAAG,GAAA,mBAAAwH,GACA,OAAAulC,EAAA3sC,IAAA,YAAAijE,OAWAh7B,EAAA85B,mBAAA,WACA,IAAAj1B,EAAArtC,KAEAw9C,GAAAW,MAAAj6C,QAAA,SAAAuY,GACA4wB,EAAA+1B,0BAAA3mD,MAWA+rB,EAAAjO,SAAA,WACA,IAAApS,EAAAnoB,KAAA8nC,SAAA3e,IAKA,IAAAhB,IAAAnoB,KAAA8nC,SAAA67B,iBAAA3jE,KAAA4jE,wBAAA,CAEA,GAAAz7C,EAAA,CACA,IAAA07C,EAAA17C,EAAA+3C,WAAA,GAEA/3C,EAAAiV,YACAjV,EAAAiV,WAAA9B,aAAAuoC,EAAA17C,GAGAy5C,EAAAc,oBAAAv6C,GACAA,EAAA07C,MACO,CACP17C,EAAa0R,EAAAhwB,EAAQ6wB,cAAA,SAErB,IACAhe,EAAA8qB,GAAA,GADAxnC,KAAA8nC,SAAA3e,KAAAuT,GAAA18B,KAAA8nC,SAAA3e,MAGAsmB,KAAA,IAAAzvC,KAAA8nC,SAAAkX,+BACAtiC,EAAAu3B,SAGA1X,GAAApU,EAA0BgR,GAAMzc,EAAA,CAChCzZ,GAAAjD,KAAA8nC,SAAAg8B,OACAC,MAAA,cAIA57C,EAAA67C,SAAAhkE,KAAA8nC,SAAAk8B,SAGA,qBAAAhkE,KAAA8nC,SAAAm8B,SACAlpC,GAAA5S,EAAA,UAAAnoB,KAAA8nC,SAAAm8B,SAQA,IAFA,IAAAC,EAAA,0CAEApjE,EAAA,EAAmBA,EAAAojE,EAAAnjE,OAA0BD,IAAA,CAC7C,IAAAssB,EAAA82C,EAAApjE,GACAuG,EAAArH,KAAA8nC,SAAA1a,GAEA,qBAAA/lB,IACAA,EACA0zB,GAAA5S,EAAAiF,KAEAqP,GAAAtU,EAAAiF,GAGAjF,EAAAiF,GAAA/lB,GAIA,OAAA8gB,GAiBAqgB,EAAAu5B,gBAAA,SAAA55C,GACA,OAAAA,EAAAg8C,cAAA,IAAAh8C,EAAAg8C,aAAA,CAMA,OAAAh8C,EAAAxQ,WAAA,CAWA,IAAAysD,GAAA,EAEAC,EAAA,WACAD,GAAA,GAGApkE,KAAAG,GAAA,YAAAkkE,GAEA,IAAAC,EAAA,WAGAF,GACApkE,KAAAY,QAAA,cAcA,OAVAZ,KAAAG,GAAA,iBAAAmkE,QACAtkE,KAAA2nC,MAAA,WACA3nC,KAAAO,IAAA,YAAA8jE,GACArkE,KAAAO,IAAA,iBAAA+jE,GAEAF,GAEApkE,KAAAY,QAAA,eAUA,IAAA2jE,EAAA,cAEAA,EAAApjE,KAAA,kBAEAgnB,EAAAxQ,YAAA,GACA4sD,EAAApjE,KAAA,cAIAgnB,EAAAxQ,YAAA,GACA4sD,EAAApjE,KAAA,WAIAgnB,EAAAxQ,YAAA,GACA4sD,EAAApjE,KAAA,kBAIAnB,KAAA2nC,MAAA,WACA48B,EAAArgE,QAAA,SAAA9D,GACAJ,KAAAY,QAAAR,IACOJ,UAWPwoC,EAAA8X,eAAA,SAAAgM,GACA,IACAtsD,KAAAioC,IAAAsU,YAAA+P,EACK,MAAA3kD,GACCgwB,EAAGhwB,EAAA,oCAWT6gC,EAAAt7B,SAAA,WACA,IAAAuzC,EAAAzgD,KAMA,GAAAA,KAAAioC,IAAA/6B,WAAArJ,KAAAgrC,IAAAO,IAAA,IAAApvC,KAAAioC,IAAAsU,YAAA,CAeA,OADAv8C,KAAAG,GAAA,aAXA,SAAAqkE,IACA/jB,EAAAxY,IAAAsU,YAAA,IAEAkE,EAAAxY,IAAA/6B,WAAArJ,KACA48C,EAAA7/C,QAAA,kBAGA6/C,EAAAlgD,IAAA,aAAAikE,MAKAC,IAGA,OAAAzkE,KAAAioC,IAAA/6B,UAAAu3D,KAUAj8B,EAAA7pB,MAAA,WACA,OAAA3e,KAAAioC,IAAA5J,aAUAmK,EAAA5pB,OAAA,WACA,OAAA5e,KAAAioC,IAAA1J,cAcAiK,EAAAi6B,uBAAA,WACA,IAAA7hB,EAAA5gD,KAEA,kCAAAA,KAAAioC,IAAA,CAIA,IAAAy8B,EAAA,WACA1kE,KAAAY,QAAA,oBACAiyD,cAAA,KAIA8R,EAAA,WACA,2BAAA3kE,KAAAioC,KAAA,uBAAAjoC,KAAAioC,IAAA28B,yBACA5kE,KAAA+iC,IAAA,sBAAA2hC,GACA1kE,KAAAY,QAAA,oBACAiyD,cAAA,MAKA7yD,KAAAG,GAAA,wBAAAwkE,GACA3kE,KAAAG,GAAA,qBACAygD,EAAArgD,IAAA,wBAAAokE,GAEA/jB,EAAArgD,IAAA,sBAAAmkE,OAYAl8B,EAAAq8B,mBAAA,WACA,uBAAA7kE,KAAAioC,IAAA68B,sBAAA,CACA,IAAAz2B,EAAsB5W,EAAA5tB,EAAQukC,WAAc3W,EAAA5tB,EAAQukC,UAAAC,WAAA,GAEpD,aAAA9lC,KAAA8lC,KAAA,uBAAA9lC,KAAA8lC,GACA,SAIA,UAOA7F,EAAAu8B,gBAAA,WACA,IAAAnnB,EAAA59C,KAAAioC,IAEA2V,EAAA/J,QAAA+J,EAAAumB,cAAAvmB,EAAAonB,eAGAhlE,KAAAioC,IAAAL,OAGA5nC,KAAA4X,WAAA,WACAgmC,EAAA7J,QACA6J,EAAAknB,yBACO,IAEPlnB,EAAAknB,yBAQAt8B,EAAAy8B,eAAA,WACAjlE,KAAAioC,IAAAi9B,wBAiBA18B,EAAA0J,IAAA,SAAA0S,GACA,QAAAj3C,IAAAi3C,EACA,OAAA5kD,KAAAioC,IAAAiK,IAIAlyC,KAAA4nD,OAAAhD,IAQApc,EAAAh2B,MAAA,WACAovD,EAAAuD,kBAAAnlE,KAAAioC,MAYAO,EAAAi5B,WAAA,WACA,OAAAzhE,KAAA0jD,eACA1jD,KAAA0jD,eAAAxR,IAGAlyC,KAAAioC,IAAAw5B,YAUAj5B,EAAAg6B,YAAA,SAAA3nC,GACA76B,KAAAioC,IAAAgM,WAAApZ,GAmBA2N,EAAA2Y,aAAA,SAAA3J,EAAAr3B,EAAAD,GACA,OAAAlgB,KAAA4+C,yBAIA5+C,KAAAioC,IAAAkZ,aAAA3J,EAAAr3B,EAAAD,GAHA2iC,EAAAvhD,UAAA6/C,aAAAjgD,KAAAlB,KAAAw3C,EAAAr3B,EAAAD,IAmCAsoB,EAAA6Y,sBAAA,SAAAr3C,GACA,IAAAhK,KAAA4+C,yBACA,OAAAiE,EAAAvhD,UAAA+/C,sBAAAngD,KAAAlB,KAAAgK,GAGA,IAAAw3C,EAA2B3nB,EAAAhwB,EAAQ6wB,cAAA,SA0BnC,OAxBA1wB,EAAAwtC,OACAgK,EAAAhK,KAAAxtC,EAAAwtC,MAGAxtC,EAAAmW,QACAqhC,EAAArhC,MAAAnW,EAAAmW,QAGAnW,EAAAkW,UAAAlW,EAAA8xC,WACA0F,EAAA1F,QAAA9xC,EAAAkW,UAAAlW,EAAA8xC,SAGA9xC,EAAAqW,UACAmhC,EAAAnhC,QAAArW,EAAAqW,SAGArW,EAAA/G,KACAu+C,EAAAv+C,GAAA+G,EAAA/G,IAGA+G,EAAAkoC,MACAsP,EAAAtP,IAAAloC,EAAAkoC,KAGAsP,GAgBAhZ,EAAA6J,mBAAA,SAAAroC,EAAAs3C,GACA,IAAAE,EAAAqB,EAAAvhD,UAAA+wC,mBAAAnxC,KAAAlB,KAAAgK,EAAAs3C,GAMA,OAJAthD,KAAA4+C,0BACA5+C,KAAAmoB,KAAAoT,YAAAimB,GAGAA,GAUAhZ,EAAA0X,sBAAA,SAAAn2C,GAGA,GAFA84C,EAAAvhD,UAAA4+C,sBAAAh/C,KAAAlB,KAAA+J,GAEA/J,KAAA4+C,yBAIA,IAHA,IAAAxsC,EAAApS,KAAAu/B,GAAA,SACAz+B,EAAAsR,EAAArR,OAEAD,KACAiJ,IAAAqI,EAAAtR,IAAAiJ,IAAAqI,EAAAtR,GAAAiJ,OACA/J,KAAAmoB,KAAA4W,YAAA3sB,EAAAtR,KAgBA0nC,EAAAkZ,wBAAA,WACA,uBAAA1hD,KAAAmoB,KAAAu5B,wBACA,OAAA1hD,KAAAmoB,KAAAu5B,0BAGA,IAAA0jB,EAAA,GAaA,MAXA,qBAAAplE,KAAAmoB,KAAAk9C,yBAAA,qBAAArlE,KAAAmoB,KAAAm9C,0BACAF,EAAAG,mBAAAvlE,KAAAmoB,KAAAk9C,wBACAD,EAAAI,iBAAAxlE,KAAAmoB,KAAAm9C,yBAGQ7tC,EAAA5tB,EAAQ47D,aAA+B,oBAARhuC,EAAA5tB,EAAQ47D,YAAAjiD,IAC/C4hD,EAAAM,aAA0CjuC,EAAA5tB,EAAQ47D,YAAAjiD,MACnCiU,EAAA5tB,EAAQ47D,aAAgBhuC,EAAA5tB,EAAQ47D,YAAAE,QAAsC,kBAARluC,EAAA5tB,EAAQ47D,YAAAE,OAAAC,kBACrFR,EAAAM,aAA0CjuC,EAAA5tB,EAAQie,KAAAtE,MAAciU,EAAA5tB,EAAQ47D,YAAAE,OAAAC,iBAGxER,GAGAxD,EAj3BA,CAk3BExjB,IAIF,GAAAxkB,KAAA,CAQE+nC,GAAKkE,SAAYhsC,EAAAhwB,EAAQ6wB,cAAA,SAC3B,IAAMorC,GAAQjsC,EAAAhwB,EAAQ6wB,cAAA,SACpBorC,GAAKtuB,KAAA,WACLsuB,GAAKhqB,QAAA,KACLgqB,GAAK3lD,MAAA,UACLwhD,GAAKkE,SAAAtqC,YAAsBuqC,IAW7BnE,GAAKlb,YAAA,WAEL,IACIkb,GAAKkE,SAAAvS,OAAA,GACN,MAAA3rD,GACH,SAGA,SAAYg6D,GAAKkE,WAAalE,GAAKkE,SAAA7jB,cAWnC2f,GAAK3f,YAAA,SAAA5hD,GACL,OAASuhE,GAAKkE,SAAA7jB,YAAA5hD,IAaduhE,GAAK1f,cAAA,SAAAC,EAAAl4C,GACL,OAAS23D,GAAK3f,YAAAE,EAAA9hD,OAaduhE,GAAKoE,iBAAA,WAEL,IACA,IAAAzS,EAAiBqO,GAAKkE,SAAAvS,OAEtB,OADIqO,GAAKkE,SAAAvS,SAAA,KACTA,IAAsBqO,GAAKkE,SAAAvS,OACxB,MAAA3rD,GACH,WAcAg6D,GAAKqE,cAAA,WACL,IACA,IAAAzS,EAAgBoO,GAAKkE,SAAAtS,MAWrB,OARIoO,GAAKkE,SAAAtS,SAEDoO,GAAKkE,SAAAtS,MACbx4B,GAAmB4mC,GAAKkE,SAAA,iBAExBppC,GAAsBklC,GAAKkE,SAAA,SAG3BtS,IAAqBoO,GAAKkE,SAAAtS,MACvB,MAAA5rD,GACH,WAYAg6D,GAAKsE,uBAAA,WAGL,GAAAp3B,IAAAO,IAAAC,GAAA,GACA,SAIA,IACA,IAAAuqB,EAAuB+H,GAAKkE,SAAAjM,aAE5B,OADI+H,GAAKkE,SAAAjM,eAAA,KACTA,IAA4B+H,GAAKkE,SAAAjM,aAC9B,MAAAjyD,GACH,WAaAg6D,GAAKuE,sBAAA,WAGL,IACA,IAAAC,EAAA,aAEAxgE,OAAAC,eAA0Bi0B,EAAAhwB,EAAQ6wB,cAAA,gBAClCtE,IAAA+vC,EACAx6D,IAAAw6D,IAEAxgE,OAAAC,eAA0Bi0B,EAAAhwB,EAAQ6wB,cAAA,gBAClCtE,IAAA+vC,EACAx6D,IAAAw6D,IAEAxgE,OAAAC,eAA0Bi0B,EAAAhwB,EAAQ6wB,cAAA,sBAClCtE,IAAA+vC,EACAx6D,IAAAw6D,IAEAxgE,OAAAC,eAA0Bi0B,EAAAhwB,EAAQ6wB,cAAA,sBAClCtE,IAAA+vC,EACAx6D,IAAAw6D,IAEG,MAAAx+D,GACH,SAGA,UAWAg6D,GAAKyE,yBAAA,WACL,OAAA52B,IAAAb,IAAAS,IAWAuyB,GAAK0E,0BAAA,WACL,SAAY1E,GAAKkE,WAAalE,GAAKkE,SAAAS,cAWnC3E,GAAK4E,0BAAA,WACL,SAAY5E,GAAKkE,WAAalE,GAAKkE,SAAArM,cAUnCmI,GAAKz+B,OAAA,iQAQLy+B,GAAKrgE,UAAAihD,sBAAmCof,GAAKoE,mBAQ7CpE,GAAKrgE,UAAAkhD,oBAAiCmf,GAAKqE,gBAW3CrE,GAAKrgE,UAAAohD,qBAAkCif,GAAKsE,yBAQ5CtE,GAAKrgE,UAAAqhD,kBAA+Bgf,GAAKuE,wBAUzCvE,GAAKrgE,UAAAsiE,yBAAAj1B,GAWLgzB,GAAKrgE,UAAAmhD,0BAAA,EASLkf,GAAKrgE,UAAAg9C,wBAAA,EAQLqjB,GAAKrgE,UAAAk9C,0BAAA,EAQLmjB,GAAKrgE,UAAAs9C,yBAAsC+iB,GAAKyE,2BAQhDzE,GAAKrgE,UAAAklE,0BAAuC7E,GAAK0E,4BAQjD1E,GAAKrgE,UAAAmlE,0BAAuC9E,GAAK4E,4BAEjD,IAAAvkB,GAAkB2f,GAAKkE,UAAalE,GAAKkE,SAAAn/D,YAAApF,UAAA0gD,YACzC0kB,GAAA,4CA6rBA,SAAAC,KACA,IAAAllE,EAAAs1B,EAAA,gLAMA,OAJA4vC,GAAA,WACA,OAAAllE,GAGAA,EAlsBAkgE,GAAKiF,iBAAA,WAGL93B,IAAA,IAAAI,KAAAE,KACIuyB,GAAKkE,SAAAn/D,YAAApF,UAAA0gD,YAAA,SAAA5hD,GACT,OAAAA,GAAAsmE,GAAAn+D,KAAAnI,GACA,QAGA4hD,GAAA9gD,KAAAlB,KAAAI,MAKAuhE,GAAKkF,mBAAA,WACL,IAAA/jD,EAAU6+C,GAAKkE,SAAAn/D,YAAApF,UAAA0gD,YAEf,OADE2f,GAAKkE,SAAAn/D,YAAApF,UAAA0gD,eACPl/B,GAIA6+C,GAAKiF,mBAELjF,GAAKe,oBAAA,SAAAv6C,GACL,GAAAA,EAAA,CASA,IALAA,EAAAiV,YACAjV,EAAAiV,WAAA2B,YAAA5W,GAIAA,EAAA+5C,iBACA/5C,EAAA4W,YAAA5W,EAAAkT,YAKAlT,EAAAsU,gBAAA,OAGA,oBAAAtU,EAAAk1B,MAEA,WACA,IACAl1B,EAAAk1B,OACO,MAAA11C,KAHP,KASAg6D,GAAKwD,kBAAA,SAAAh9C,GACL,GAAAA,EAAA,CAOA,IAHA,IAAAiR,EAAAjR,EAAAstB,iBAAA,UACA30C,EAAAs4B,EAAAr4B,OAEAD,KACAqnB,EAAA4W,YAAA3F,EAAAt4B,IAKAqnB,EAAAsU,gBAAA,OAEA,oBAAAtU,EAAAk1B,MAEA,WACA,IACAl1B,EAAAk1B,OACO,MAAA11C,KAHP,KAcA,CAaA,QAeA,eAaA,WAaA,WAgBA,OAcA,eAAAzD,QAAA,SAAAqG,GACEo3D,GAAKrgE,UAAAiJ,GAAA,WACP,OAAAvK,KAAAioC,IAAA19B,IAAAvK,KAAAioC,IAAA2N,aAAArrC,MAOA,CAYA,QAYA,eAYA,WAeA,OAaA,eAAArG,QAAA,SAAAqG,GACEo3D,GAAKrgE,UAAA,MAAA+lC,GAAA98B,IAAA,SAAAixD,GACPx7D,KAAAioC,IAAA19B,GAAAixD,EAEAA,EACAx7D,KAAAioC,IAAAlN,aAAAxwB,KAEAvK,KAAAioC,IAAAxL,gBAAAlyB,MASA,CAWA,SAWA,cAYA,WAYA,SAYA,SAkBA,UAaA,QAaA,UAYA,WAaA,QAcA,eAiBA,sBAYA,SAgBA,eAkBA,aAYA,aAYA,eAAArG,QAAA,SAAAqG,GACEo3D,GAAKrgE,UAAAiJ,GAAA,WACP,OAAAvK,KAAAioC,IAAA19B,MAOA,CAYA,SAWA,MAYA,SAkBA,UAcA,eAiBA,uBAAArG,QAAA,SAAAqG,GACEo3D,GAAKrgE,UAAA,MAAA+lC,GAAA98B,IAAA,SAAAixD,GACPx7D,KAAAioC,IAAA19B,GAAAixD,KAMA,CAQA,QAQA,OAQA,QAAAt3D,QAAA,SAAAqG,GACEo3D,GAAKrgE,UAAAiJ,GAAA,WACP,OAAAvK,KAAAioC,IAAA19B,QAGA6zC,GAAIwE,mBAAoB+e,IAWxBA,GAAKne,oBAAA,GAWLme,GAAKne,oBAAAxB,YAAA,SAAA5hD,GAEL,IACA,OAAWuhE,GAAKkE,SAAA7jB,YAAA5hD,GACb,MAAAuH,GACH,WAiBAg6D,GAAKne,oBAAAL,gBAAA,SAAAxnC,EAAA3R,GAEL,GAAA2R,EAAAvb,KACA,OAAWuhE,GAAKne,oBAAAxB,YAAArmC,EAAAvb,MACb,GAAAub,EAAAu2B,IAAA,CACH,IAAAiU,EAAAjM,GAAAv+B,EAAAu2B,KACA,OAAWyvB,GAAKne,oBAAAxB,YAAA,SAAAmE,GAGhB,UAgBAwb,GAAKne,oBAAAG,aAAA,SAAAhoC,EAAAm2B,EAAA9nC,GACL8nC,EAAA8V,OAAAjsC,EAAAu2B,MAOAyvB,GAAKne,oBAAAniD,QAAA,aAGLsgE,GAAK7e,sBAAuB6e,GAAKne,qBACjCpF,GAAI+D,aAAA,QAAuBwf,IAa3B,IAAAmF,GAAA,CAgBA,WAgBA,QAgBA,UAgBA,UAgBA,UAgBA,iBAgBA,aAgBA,aAgBA,SAgBA,eAgBA,mBAIAC,GAAA,CACAC,QAAA,UACAC,eAAA,iBACAC,QAAA,UACAC,OAAA,UAEAC,GAAA,2DACAC,GAAA,GAQAD,GAAAljE,QAAA,SAAA4Y,GACA,IAAA0+C,EAAA,MAAA1+C,EAAAyqB,OAAA,QAAAzqB,EAAAnC,UAAA,GAAAmC,EACAuqD,GAAAvqD,GAAA,cAAA0+C,IAEA,IAAA8L,GAAA,CACAC,KAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,KACAC,OAAA,KACAC,KAAAhkE,KAaIikE,GAEJ,SAAAr1B,GAgBA,SAAA3E,EAAA3kB,EAAAnf,EAAA29B,GACA,IAAA1a,EAqBA,GAlBA9D,EAAAlmB,GAAAkmB,EAAAlmB,IAAA+G,EAAA/G,IAAA,aAAA08B,MAMA31B,EAAcmvB,GAAM2U,EAAAi6B,eAAA5+C,GAAAnf,IAGpBq+B,cAAA,EAEAr+B,EAAAuwB,UAAA,EAEAvwB,EAAAy8B,SAAA,EAGAz8B,EAAAs+B,qBAAA,GAEAt+B,EAAAkW,SACA,uBAAAiJ,EAAA6+C,QAAA,CACA,IAAAA,EAAA7+C,EAAA6+C,QAAA,UAEAA,KAAAnrC,eACA7yB,EAAAkW,SAAA8nD,EAAAnrC,aAAA,cAKA,IAFA,IAAAhW,EAAAsC,EAEAtC,GAAA,IAAAA,EAAAkT,UAAA,CACA,GAAA2C,GAAA7V,GAAAnO,eAAA,SACA1O,EAAAkW,SAAA2G,EAAAgW,aAAA,QACA,MAGAhW,IAAAuW,WAsBA,IAhBAnQ,EAAAwlB,EAAAvxC,KAAAlB,KAAA,KAAAgK,EAAA29B,IAAA3nC,MAEAo3B,IAAA2B,EAAA9L,EAAA8a,KAEA9a,EAAAg7C,mBAAA,EAGAh7C,EAAAi7C,iBAAA,GAEAj7C,EAAAwd,UAAA,EAEAxd,EAAAoxB,aAAA,EAEApxB,EAAAk7C,aAAA,GAGAl7C,EAAA6a,WAAA7a,EAAA6a,SAAAye,YAAAt5B,EAAA6a,SAAAye,UAAAxlD,OACA,UAAAqU,MAAA,2HAWA,GAPA6X,EAAA9D,MAEA8D,EAAAm7C,cAAAj/C,GAAAuT,GAAAvT,GAEA8D,EAAA/M,SAAA+M,EAAA6a,SAAA5nB,UAGAlW,EAAA4+B,UAAA,CAEA,IAAAy/B,EAAA,GACA1iE,OAAAg1B,oBAAA3wB,EAAA4+B,WAAA1kC,QAAA,SAAAokE,GACAD,EAAAC,EAAAn6C,eAAAnkB,EAAA4+B,UAAA0/B,KAEAr7C,EAAAs7C,WAAAF,OAEAp7C,EAAAs7C,WAAAz6B,EAAAxsC,UAAAwmC,SAAAc,UAIA3b,EAAAu8B,OAAA,GAEAv8B,EAAAu7C,QAAAx+D,EAAA29C,QAAA,GAEA16B,EAAAw7C,YAAAz+D,EAAAiqC,SAEAhnB,EAAAu8B,OAAA2K,WAAA,EAIAhrC,EAAA8qB,UAAA,EACA9qB,EAAAsT,gBAAA,YAEAtT,EAAAysB,aAAA,YACA3oB,EAAA6a,SAAA4gC,UAAA,EAIAz7C,EAAAy7C,SAAAz7C,EAAA6a,SAAA4gC,UAUAz7C,EAAA07C,YAAA,EACA17C,EAAAgb,IAAAhb,EAAAsN,WAEAtN,EAAAu8B,OAAAof,iBAAA37C,EAAA47C,sBAEApiC,GAAA3/B,IAAAmmB,IAAA,CACAyZ,YAAA,QAGAzZ,EAAA67C,QACA77C,EAAA9sB,GAAA,cAAA8sB,EAAA87C,gBAOA,IAAAC,EAAAxhC,GAAAva,EAAA6a,UAEA,GAAA99B,EAAAi/D,QAAA,CACA,IAAAA,EAAAj/D,EAAAi/D,QACAtjE,OAAAiW,KAAAqtD,GAAA/kE,QAAA,SAAAokE,GACA,uBAAAtoE,KAAAsoE,GAGA,UAAAlzD,MAAA,WAAAkzD,EAAA,oBAFAtoE,KAAAsoE,GAAAW,EAAAX,KAIOxhE,IAAAmmB,KAGPA,EAAA6a,SAAAwC,cAAA0+B,EACA/7C,EAAAi8C,YAAA,GAEAj8C,EAAAob,eAGApb,EAAAi+B,QAAA,UAAA/hC,EAAAnT,SAAAmY,eAIAlB,EAAAgnB,WACAhnB,EAAA4O,SAAA,wBAEA5O,EAAA4O,SAAA,yBAIA5O,EAAAgb,IAAAlN,aAAA,iBAEA9N,EAAAi+B,UACAj+B,EAAAgb,IAAAlN,aAAA,aAAA9N,EAAAwb,SAAA,iBAEAxb,EAAAgb,IAAAlN,aAAA,aAAA9N,EAAAwb,SAAA,iBAGAxb,EAAAi+B,WACAj+B,EAAA4O,SAAA,aAGA5O,EAAAk8C,qBACAl8C,EAAA4O,SAAA,eASA8S,IACA1hB,EAAA4O,SAAA,oBAIAiS,EAAAC,QAAA9gB,EAAA8a,KAAAjhC,IAAAmmB,IAEA,IAAAm8C,EAAuB/yC,EAAOvb,MAAA,QAuB9B,OArBAmS,EAAA4O,SAAA,QAAAutC,GAIAn8C,EAAAo8C,YAAA,GAEAp8C,EAAAwf,qBAEAxf,EAAA8V,IAAA,OAAA9V,EAAAq8C,wBAEAr8C,EAAA9sB,GAAA,mBAAA8sB,EAAAs8C,yBAEAt8C,EAAA9sB,GAAA,aAAA8sB,EAAAu8C,mBAEAv8C,EAAAw8C,YAAAx8C,EAAA6a,SAAA2hC,aAEAx8C,EAAAy8C,WAAAz8C,EAAA6a,SAAA4hC,YAEAz8C,EAAA08C,cAAA,EACA18C,EAAA28C,sBAAA,EACA38C,EAAA48C,iBAAA,KACA58C,EAlOAqJ,EAAAwX,EAAA2E,GA8OA,IAAAjK,EAAAsF,EAAAxsC,UA++GA,OA7+GAknC,EAAAnnC,QAAA,WAOArB,KAAAY,QAAA,WAEAZ,KAAAO,IAAA,WAEAP,KAAA8pE,UAAA9pE,KAAA8pE,SAAA1sC,aACAp9B,KAAA8pE,SAAA1sC,WAAA2B,YAAA/+B,KAAA8pE,UACA9pE,KAAA8pE,SAAA,MAIAh8B,EAAAC,QAAA/tC,KAAA+nC,KAAA,KAEA/nC,KAAAmpB,KAAAnpB,KAAAmpB,IAAAya,SACA5jC,KAAAmpB,IAAAya,OAAA,MAGA5jC,KAAAioC,KAAAjoC,KAAAioC,IAAArE,SACA5jC,KAAAioC,IAAArE,OAAA,MAGA5jC,KAAAw7C,QACAx7C,KAAAw7C,MAAAn6C,UACArB,KAAAioE,mBAAA,EACAjoE,KAAAwoE,QAAA,IAGAxoE,KAAA+pE,kBACA/pE,KAAA+pE,gBAAA,MAGA/pE,KAAAmpB,MACAnpB,KAAAmpB,IAAA,MA9rVA06B,GAisVA7jD,KAjsVAiD,MAAA,KAmsVAwvC,EAAAnxC,UAAAD,QAAAH,KAAAlB,OAUAwoC,EAAAjO,SAAA,WACA,IACApS,EADAgB,EAAAnpB,KAAAmpB,IAEAw6C,EAAA3jE,KAAA+pE,gBAAA5gD,EAAAiU,YAAAjU,EAAAiU,WAAAwY,cAAAzsB,EAAAiU,WAAAwY,aAAA,mBACAo0B,EAAA,aAAAhqE,KAAAmpB,IAAApC,QAAAoH,cAEAw1C,EACAx7C,EAAAnoB,KAAAioC,IAAA9e,EAAAiU,WACK4sC,IACL7hD,EAAAnoB,KAAAioC,IAAAwK,EAAAnxC,UAAAi5B,SAAAr5B,KAAAlB,KAAA,QAKA,IAAA2qB,EAAA+R,GAAAvT,GAEA,GAAA6gD,EAAA,CAIA,IAHA7hD,EAAAnoB,KAAAioC,IAAA9e,EACAA,EAAAnpB,KAAAmpB,IAAuB0Q,EAAAhwB,EAAQ6wB,cAAA,SAE/BvS,EAAAghB,SAAApoC,QACAooB,EAAAoS,YAAApT,EAAAkT,YAGAG,GAAArT,EAAA,aACA0T,GAAA1T,EAAA,YAGAA,EAAAoT,YAAApS,GACAw6C,EAAA3jE,KAAA+pE,gBAAA5hD,EAKAxiB,OAAAiW,KAAAuM,GAAAjkB,QAAA,SAAA4Y,GACAqM,EAAArM,GAAAqL,EAAArL,KAqDA,GAhDAqM,EAAA4R,aAAA,iBACApQ,EAAAs/C,SAAA,KAKA36B,KACAnmB,EAAA4R,aAAA,sBACApQ,EAAA1K,KAAA,eAIAkJ,EAAAsT,gBAAA,SACAtT,EAAAsT,gBAAA,UAEA,UAAA9R,UACAA,EAAAhM,MAGA,WAAAgM,UACAA,EAAA/L,OAGAjZ,OAAAg1B,oBAAAhQ,GAAAzmB,QAAA,SAAAkpB,GAIA48C,GAAA,UAAA58C,GACAjF,EAAA4S,aAAA3N,EAAAzC,EAAAyC,IAGA48C,GACA7gD,EAAA4R,aAAA3N,EAAAzC,EAAAyC,MAMAjE,EAAA66C,SAAA76C,EAAAlmB,GACAkmB,EAAAlmB,IAAA,aACAkmB,EAAAyS,UAAA,WAEAzS,EAAAya,OAAAzb,EAAAyb,OAAA5jC,KAEAA,KAAA67B,SAAA,eAIgB,IAARpE,EAAA5tB,EAAQqgE,yBAAA,CAChBlqE,KAAA8pE,SAAsB9lC,GAAkB,yBACxC,IAAAmmC,EAAA7qC,GAAA,wBACA8qC,EAAA9qC,GAAA,QACA8qC,EAAA9uC,aAAAt7B,KAAA8pE,SAAAK,IAAAv1B,YAAAw1B,EAAA/uC,YAGAr7B,KAAAqqE,OAAA,EACArqE,KAAA8oE,QAAA,EAEA9oE,KAAA2e,MAAA3e,KAAA8nC,SAAAnpB,OACA3e,KAAA4e,OAAA5e,KAAA8nC,SAAAlpB,QACA5e,KAAA2zC,KAAA3zC,KAAA8nC,SAAA6L,MACA3zC,KAAAsqE,MAAAtqE,KAAA8nC,SAAAwiC,OACAtqE,KAAAuqE,YAAAvqE,KAAA8nC,SAAAyiC,aAKA,IAFA,IAAAC,EAAArhD,EAAAoD,qBAAA,KAEAzrB,EAAA,EAAmBA,EAAA0pE,EAAAzpE,OAAkBD,IAAA,CACrC,IAAA2pE,EAAAD,EAAA9U,KAAA50D,GACA+6B,GAAA4uC,EAAA,cACAA,EAAA1vC,aAAA,mBAsBA,OAjBA5R,EAAA24C,kBAAA34C,EAAAg7C,aAEAh7C,EAAAiU,aAAAumC,GACAx6C,EAAAiU,WAAA9B,aAAAnT,EAAAgB,GAQAgS,GAAAhS,EAAAhB,GACAnoB,KAAAkoC,UAAAp7B,QAAAqc,GAGAnpB,KAAAioC,IAAAlN,aAAA,OAAA/6B,KAAAs5D,WACAt5D,KAAAioC,IAAA9f,EACAA,GAcAqgB,EAAA7pB,MAAA,SAAAtX,GACA,OAAArH,KAAAmrC,UAAA,QAAA9jC,IAcAmhC,EAAA5pB,OAAA,SAAAvX,GACA,OAAArH,KAAAmrC,UAAA,SAAA9jC,IAkBAmhC,EAAA2C,UAAA,SAAAu/B,EAAArjE,GACA,IAAAsjE,EAAAD,EAAA,IAEA,QAAA/8D,IAAAtG,EACA,OAAArH,KAAA2qE,IAAA,EAGA,QAAAtjE,EAIA,OAFArH,KAAA2qE,QAAAh9D,OACA3N,KAAA+oE,iBAIA,IAAA6B,EAAAjjD,WAAAtgB,GAEA2gB,MAAA4iD,GACMjzC,EAAGO,MAAA,mBAAA7wB,EAAA,sBAAAqjE,IAIT1qE,KAAA2qE,GAAAC,EACA5qE,KAAA+oE,mBAkBAvgC,EAAA8hC,MAAA,SAAA5a,GACA,QAAA/hD,IAAA+hD,EACA,QAAA1vD,KAAA8oE,OA/mjBA,IAAAzjE,EAAA2P,EAknjBAhV,KAAA8oE,SAAApZ,EAEApqB,GAAAtlC,OACAA,KAAAO,IAAA,cAAAP,KAAA+oE,gBAGArZ,GACA1vD,KAAA67B,SAAA,aACA77B,KAAA2zC,MAAA,GAznjBArO,GADAjgC,EA2njBA,WACArF,KAAAG,GAAA,cAAAH,KAAA+oE,kBA1njBA/zD,KAEA3P,EAAAshC,mBACAthC,EAAAshC,iBAAA,IAGAthC,EAAAshC,iBAAAxlC,KAAA6T,KAunjBAhV,KAAAg8B,YAAA,aAGAh8B,KAAA+oE,kBAkBAvgC,EAAAmL,KAAA,SAAA+b,GACA,QAAA/hD,IAAA+hD,EACA,QAAA1vD,KAAAqqE,MAGArqE,KAAAqqE,QAAA3a,EAEAA,GACA1vD,KAAA67B,SAAA,YACA77B,KAAAsqE,OAAA,IAEAtqE,KAAAg8B,YAAA,aAyBAwM,EAAA+hC,YAAA,SAAAM,GACA,QAAAl9D,IAAAk9D,EACA,OAAA7qE,KAAA8qE,aAIA,iBAAAviE,KAAAsiE,GACA,UAAAz1D,MAAA,kGAGApV,KAAA8qE,aAAAD,EAGA7qE,KAAAsqE,OAAA,GACAtqE,KAAA+oE,kBAUAvgC,EAAAugC,eAAA,WACA,IAAgB,IAARtxC,EAAA5tB,EAAQqgE,yBAAhB,CAoBA,IAAAvrD,EACAC,EAEAmsD,EAcAC,QAZAr9D,IAAA3N,KAAA8qE,cAAA,SAAA9qE,KAAA8qE,aAEA9qE,KAAA8qE,aACK9qE,KAAAirE,aAAA,EAELjrE,KAAAirE,aAAA,IAAAjrE,KAAAkrE,cAGA,QAIApwD,MAAA,KACAqwD,EAAAH,EAAA,GAAAA,EAAA,GAIArsD,OAFAhR,IAAA3N,KAAAorE,OAEAprE,KAAAorE,YACKz9D,IAAA3N,KAAAqrE,QAELrrE,KAAAqrE,QAAAF,EAGAnrE,KAAAirE,cAAA,IAKArsD,OAFAjR,IAAA3N,KAAAqrE,QAEArrE,KAAAqrE,QAGA1sD,EAAAwsD,EAKAJ,EADA,aAAAxiE,KAAAvI,KAAAiD,MACA,cAAAjD,KAAAiD,KAEAjD,KAAAiD,KAAA,cAIAjD,KAAA67B,SAAAkvC,GACA7mC,GAAAlkC,KAAA8pE,SAAA,YAAAiB,EAAA,sBAA6DpsD,EAAA,wBAAiCC,EAAA,0BAA4CmsD,EAAA,sCAAsC,IAAAI,EAAA,yBApEhL,CACA,IAAAG,EAAA,kBAAAtrE,KAAAorE,OAAAprE,KAAAorE,OAAAprE,KAAA8nC,SAAAnpB,MAEA4sD,EAAA,kBAAAvrE,KAAAqrE,QAAArrE,KAAAqrE,QAAArrE,KAAA8nC,SAAAlpB,OAEA4sD,EAAAxrE,KAAAw7C,OAAAx7C,KAAAw7C,MAAArzB,KAEAqjD,IACAF,GAAA,IACAE,EAAA7sD,MAAA2sD,GAGAC,GAAA,IACAC,EAAA5sD,OAAA2sD,MAuEA/iC,EAAAke,UAAA,SAAAF,EAAA7qC,GACA,IAAA4S,EAAAvuB,KAGAA,KAAAw7C,OACAx7C,KAAAyrE,cAGA,IAAAC,EAAArkC,GAAAmf,GACAmlB,EAAAnlB,EAAAjf,OAAA,GAAApZ,cAAAq4B,EAAA9lD,MAAA,GAEA,UAAAgrE,GAAA1rE,KAAAmpB,MACMi1B,GAAIkE,QAAA,SAAAogB,oBAAA1iE,KAAAmpB,KACVnpB,KAAAmpB,IAAAya,OAAA,KACA5jC,KAAAmpB,IAAA,MAGAnpB,KAAA4rE,UAAAF,EAEA1rE,KAAAyqC,UAAA,EAGA,IAEAohC,EAAA,CACAlwD,SACA+sD,SAJA,kBAAA1oE,KAAA0oE,YAAA1oE,KAAA0oE,WAKA1pB,uBAAAh/C,KAAA8nC,SAAAkX,uBACAglB,SAAAhkE,KAAAiD,KACA6gE,OAAA9jE,KAAAiD,KAAA,IAAA0oE,EAAA,OACA/pB,YAAA5hD,KAAA8nC,SAAA8Z,YACAqiB,QAAAjkE,KAAA8nC,SAAAm8B,QACA6H,KAAA9rE,KAAA8nC,SAAAgkC,KACAvY,MAAAvzD,KAAA8nC,SAAAyrB,MACA5L,OAAA3nD,KAAA2nD,SACAznC,SAAAlgB,KAAAkgB,WACAyjD,eAAA3jE,KAAA+pE,kBAAA,EACAgC,SAAA/rE,KAAA8nC,SAAA,UACAkkC,oBAAAhsE,KAAA8nC,SAAAmkC,sBACAjK,gBAAAhiE,KAAA8nC,SAAAk6B,iBAEA9jB,GAAAC,MAAAj6C,QAAA,SAAAokE,GACA,IAAAhjE,EAAA44C,GAAAoqB,GACAuD,EAAAvmE,EAAAu4C,YAAAtvB,EAAAjpB,EAAAw4C,eAEI3kB,GAAM0yC,EAAA7rE,KAAA8nC,SAAA4jC,IACNvyC,GAAM0yC,EAAA7rE,KAAA8nC,SAAA6jC,IACNxyC,GAAM0yC,EAAA7rE,KAAA8nC,SAAA0e,EAAAr4B,gBAEVnuB,KAAAmpB,MACA0iD,EAAA1iD,IAAAnpB,KAAAmpB,KAGAxN,KAAAu2B,MAAAlyC,KAAAwpD,OAAAtX,KAAAlyC,KAAAwpD,OAAAjN,YAAA,IACAsvB,EAAA9pE,UAAA/B,KAAAwpD,OAAAjN,aAIA,IAAA2vB,EAAoB9tB,GAAIkE,QAAAkE,GAExB,IAAA0lB,EACA,UAAA92D,MAAA,kBAAAs2D,EAAA,cAAAA,EAAA,wDAGA1rE,KAAAw7C,MAAA,IAAA0wB,EAAAL,GAEA7rE,KAAAw7C,MAAA7T,MAAA1/B,GAAAjI,UAAAmsE,mBAAA,GACAt6B,GAAA7xC,KAAAosE,iBAAA,GAAApsE,KAAAw7C,OAEAsrB,GAAA5iE,QAAA,SAAA2L,GACA0e,EAAApuB,GAAAouB,EAAAitB,MAAA3rC,EAAA0e,EAAA,aAAA8Y,GAAAx3B,GAAA,QAEAlK,OAAAiW,KAAAmrD,IAAA7iE,QAAA,SAAA2L,GACA0e,EAAApuB,GAAAouB,EAAAitB,MAAA3rC,EAAA,SAAAw8D,GACA,IAAA99C,EAAAitB,MAAAoe,gBAAArrC,EAAAitB,MAAA8wB,UACA/9C,EAAA25C,iBAAA/mE,KAAA,CACA6T,SAAAuZ,EAAA,aAAAw4C,GAAAl3D,GAAA,KAAA5H,KAAAsmB,GACA1e,MAAAw8D,IAMA99C,EAAA,aAAAw4C,GAAAl3D,GAAA,KAAAw8D,OAGArsE,KAAAG,GAAAH,KAAAw7C,MAAA,YAAAx7C,KAAAusE,sBACAvsE,KAAAG,GAAAH,KAAAw7C,MAAA,YAAAx7C,KAAAwsE,sBACAxsE,KAAAG,GAAAH,KAAAw7C,MAAA,UAAAx7C,KAAAysE,oBACAzsE,KAAAG,GAAAH,KAAAw7C,MAAA,QAAAx7C,KAAA0sE,kBACA1sE,KAAAG,GAAAH,KAAAw7C,MAAA,UAAAx7C,KAAA2sE,oBACA3sE,KAAAG,GAAAH,KAAAw7C,MAAA,OAAAx7C,KAAA4sE,iBACA5sE,KAAAG,GAAAH,KAAAw7C,MAAA,YAAAx7C,KAAA6sE,sBACA7sE,KAAAG,GAAAH,KAAAw7C,MAAA,QAAAx7C,KAAA8sE,kBACA9sE,KAAAG,GAAAH,KAAAw7C,MAAA,iBAAAx7C,KAAA+sE,2BACA/sE,KAAAG,GAAAH,KAAAw7C,MAAA,mBAAAx7C,KAAAgtE,6BACAhtE,KAAAG,GAAAH,KAAAw7C,MAAA,QAAAx7C,KAAAitE,kBACAjtE,KAAAG,GAAAH,KAAAw7C,MAAA,iBAAAx7C,KAAA+oE,gBACA/oE,KAAAG,GAAAH,KAAAw7C,MAAA,eAAAx7C,KAAAktE,yBACAltE,KAAAG,GAAAH,KAAAw7C,MAAA,WAAAx7C,KAAAmtE,qBACAntE,KAAAG,GAAAH,KAAAw7C,MAAA,aAAAx7C,KAAAotE,uBACAptE,KAAAqtE,oBAAArtE,KAAAstE,SAAA,aAEAttE,KAAAi0C,aAAAj0C,KAAAqtE,uBACArtE,KAAAutE,4BAKAvtE,KAAAw7C,MAAArzB,KAAAiV,aAAAp9B,KAAAmoB,MAAA,UAAAujD,GAAA1rE,KAAAmpB,KACAgS,GAAAn7B,KAAAw7C,MAAArzB,KAAAnoB,KAAAmoB,MAIAnoB,KAAAmpB,MACAnpB,KAAAmpB,IAAAya,OAAA,KACA5jC,KAAAmpB,IAAA,OAUAqf,EAAAijC,YAAA,WACA,IAAAv+B,EAAAltC,KAGAk+C,GAAAC,MAAAj6C,QAAA,SAAAokE,GACA,IAAAhjE,EAAA44C,GAAAoqB,GACAp7B,EAAA5nC,EAAAw4C,aAAA5Q,EAAA5nC,EAAAu4C,gBAEA79C,KAAAosE,gBAAAv6B,GAAA7xC,KAAAw7C,OACAx7C,KAAAyqC,UAAA,EACAzqC,KAAAw7C,MAAAn6C,UACArB,KAAAw7C,OAAA,EAEAx7C,KAAAioE,oBACAjoE,KAAAwoE,QAAA,GACAxoE,KAAAY,QAAA,iBAGAZ,KAAAioE,mBAAA,GAeAz/B,EAAAsJ,KAAA,SAAA07B,GAKA,YAJA7/D,IAAA6/D,GACM71C,EAAGM,KAAM6C,IAAI6rC,OAGnB3mE,KAAAw7C,OAyBAhT,EAAA+kC,0BAAA,WAEAvtE,KAAAytE,+BAKAztE,KAAAG,GAAAH,KAAAw7C,MAAA,YAAAx7C,KAAA0tE,kBACA1tE,KAAAG,GAAAH,KAAAw7C,MAAA,WAAAx7C,KAAA2tE,wBAIA3tE,KAAAG,GAAAH,KAAAw7C,MAAA,aAAAx7C,KAAA4tE,uBACA5tE,KAAAG,GAAAH,KAAAw7C,MAAA,YAAAx7C,KAAA6tE,sBACA7tE,KAAAG,GAAAH,KAAAw7C,MAAA,WAAAx7C,KAAA8tE,qBAGA9tE,KAAAG,GAAAH,KAAAw7C,MAAA,MAAAx7C,KAAA+tE,iBAUAvlC,EAAAilC,6BAAA,WAGAztE,KAAAO,IAAAP,KAAAw7C,MAAA,MAAAx7C,KAAA+tE,gBACA/tE,KAAAO,IAAAP,KAAAw7C,MAAA,aAAAx7C,KAAA4tE,uBACA5tE,KAAAO,IAAAP,KAAAw7C,MAAA,YAAAx7C,KAAA6tE,sBACA7tE,KAAAO,IAAAP,KAAAw7C,MAAA,WAAAx7C,KAAA8tE,qBACA9tE,KAAAO,IAAAP,KAAAw7C,MAAA,YAAAx7C,KAAA0tE,kBACA1tE,KAAAO,IAAAP,KAAAw7C,MAAA,WAAAx7C,KAAA2tE,yBASAnlC,EAAA2jC,iBAAA,WACAnsE,KAAA2qC,eAEA3qC,KAAAwpD,OAAA8J,QACAtzD,KAAAguE,UAAA,YAAAhuE,KAAAwpD,OAAA8J,QAIAtzD,KAAAktE,0BAEAltE,KAAA+sE,6BAcAvkC,EAAA+jC,qBAAA,WAEAvsE,KAAAg8B,YAAA,aACAh8B,KAAAg8B,YAAA,eAEAh8B,KAAAk4B,MAAA,MAEAl4B,KAAA+sE,4BAIA/sE,KAAA6zC,UAWA7zC,KAAAiuE,YAAA,GACAjuE,KAAAY,QAAA,eALAZ,KAAAY,QAAA,aACAZ,KAAAY,QAAA,cASAZ,KAAAkuE,gBAAAluE,KAAA0oE,aAUAlgC,EAAA0lC,gBAAA,SAAA9tE,GACA,IAAAitC,EAAArtC,KAEA,GAAAA,KAAAw7C,OAAA,kBAAAp7C,EAAA,CAIA,IAiBA+tE,EAjBA5a,EAAA,WACA,IAAA6a,EAAA/gC,EAAAkmB,QAEAlmB,EAAAkmB,OAAA,GAEA,IAAA7H,EAAAre,EAAAzF,OAEA,GAAA8jB,KAAAla,MAAAka,EAAA2iB,MAIA,OAAA3iB,EAAA2iB,MAAA,SAAA1mE,GAEA0lC,EAAAkmB,MAAA6a,MAoBA,GAdA,QAAAhuE,GACA+tE,EAAAnuE,KAAA4nC,SAEAumC,EAAA38B,MAAA28B,EAAAE,OACAF,EAAAE,MAAA,WACA,OAAA9a,MAIA4a,EADK,UAAA/tE,EACLmzD,IAEAvzD,KAAA4nC,OAGAumC,KAAA38B,MAAA28B,EAAAE,MAIA,OAAAF,EAAA38B,KAAA,WACAnE,EAAAzsC,QAAA,CACAR,KAAA,mBACAsoE,SAAAtoE,MAEKiuE,MAAA,SAAA1mE,GACL0lC,EAAAzsC,QAAA,CACAR,KAAA,mBACAsoE,SAAAtoE,QAiBAooC,EAAA8lC,oBAAA,SAAApsB,QACA,IAAAA,IACAA,EAAA,IAGA,IAAAhQ,EAAAgQ,EACA9hD,EAAA,GAEA,kBAAA8xC,IACAA,EAAAgQ,EAAAhQ,IACA9xC,EAAA8hD,EAAA9hD,MAKAJ,KAAAwpD,OAAA7tC,OAAA3b,KAAAwpD,OAAA7tC,QAAA,GACA3b,KAAAwpD,OAAApwB,QAAAp5B,KAAAwpD,OAAApwB,SAAA,GAEA8Y,IAAA9xC,IACAA,EA10WA,SAAAwjC,EAAAsO,GACA,IAAAA,EACA,SAIA,GAAAtO,EAAA4lB,OAAA7tC,OAAAu2B,SAAAtO,EAAA4lB,OAAA7tC,OAAAvb,KACA,OAAAwjC,EAAA4lB,OAAA7tC,OAAAvb,KAIA,IAAAmuE,EAAA3qC,EAAA4lB,OAAApwB,QAAAha,OAAA,SAAAvX,GACA,OAAAA,EAAAqqC,UAGA,GAAAq8B,EAAAxtE,OACA,OAAAwtE,EAAA,GAAAnuE,KAMA,IAFA,IAAAg5B,EAAAwK,EAAArE,GAAA,UAEAz+B,EAAA,EAAiBA,EAAAs4B,EAAAr4B,OAAoBD,IAAA,CACrC,IAAA+G,EAAAuxB,EAAAt4B,GAEA,GAAA+G,EAAAzH,MAAAyH,EAAAqqC,KAAArqC,EAAAqqC,QACA,OAAArqC,EAAAzH,KAKA,OAAA8lD,GAAAhU,GA2yWAs8B,CAAAxuE,KAAAkyC,IAIAlyC,KAAAwpD,OAAA7tC,OAAA6rB,GAAA,GAAwC0a,EAAA,CACxChQ,MACA9xC,SASA,IAPA,IAAAmuE,EAAAvuE,KAAAwpD,OAAApwB,QAAAha,OAAA,SAAAvX,GACA,OAAAA,EAAAqqC,KAAArqC,EAAAqqC,UAEAu8B,EAAA,GACAC,EAAA1uE,KAAAu/B,GAAA,UACAovC,EAAA,GAEA7tE,EAAA,EAAmBA,EAAA4tE,EAAA3tE,OAAsBD,IAAA,CACzC,IAAA8tE,EAAAlyC,GAAAgyC,EAAA5tE,IACA2tE,EAAAttE,KAAAytE,GAEAA,EAAA18B,KAAA08B,EAAA18B,SACAy8B,EAAAxtE,KAAAytE,EAAA18B,KAMAy8B,EAAA5tE,SAAAwtE,EAAAxtE,OACAf,KAAAwpD,OAAApwB,QAAAq1C,EAEKF,EAAAxtE,SACLf,KAAAwpD,OAAApwB,QAAA,CAAAp5B,KAAAwpD,OAAA7tC,SAIA3b,KAAAwpD,OAAAtX,OAwCA1J,EAAAgkC,qBAAA,SAAA38D,GACA,IAAA4wC,EAAAzgD,KAIA,IAAAA,KAAA2pE,aAAA,CACA,IAAAkF,EAAA,SAAA38B,GACA,OAAAuO,EAAA6tB,oBAAAp8B,IAGA48B,EAAA9uE,KAAA+uE,gBAAA78B,IACA88B,EAAAn/D,EAAAqiC,IAiBA,GAfA48B,IAAA,SAAAvmE,KAAAumE,IAAA,SAAAvmE,KAAAymE,MAGAhvE,KAAAivE,aAAAjvE,KAAAivE,YAAAn9B,OAAAk9B,GAAAhvE,KAAAivE,YAAArrC,SAAAkrC,KACAD,EAAA,cAMAA,EAAAG,IAKAn/D,EAAAqiC,IAAA,CAaAlyC,KAAAw7C,MAAAzY,IAAA,0BAZA,SAAAmsC,EAAAvnE,GACA,iBAAAA,EAAAvH,KAAA,CACA,IAAA+uE,EAAA1uB,EAAA2uB,QAAA,cAEA3uB,EAAAwuB,YAAAn9B,KAAAq9B,EAEA1uB,EAAA6tB,oBAAAa,GAGA1uB,EAAAjF,MAAAj7C,IAAA,0BAAA2uE,MAOAlvE,KAAAivE,YAAA,CACArrC,OAAA5jC,KAAA+uE,gBAAA78B,IACAJ,KAAAjiC,EAAAqiC,KAEAlyC,KAAAY,QAAA,CACAsxC,IAAAriC,EAAAqiC,IACA9xC,KAAA,eAiBAooC,EAAAylC,WAAA,SAAAoB,GACA,QAAA1hE,IAAA0hE,EAEA,OAAArvE,KAAAq+C,YAGAgxB,IAAArvE,KAAAq+C,cAIAr+C,KAAAq+C,YAAAgxB,EAEArvE,KAAAq+C,aACAr+C,KAAA67B,SAAA,mBACA77B,KAAAY,QAAA,cAEAZ,KAAAg8B,YAAA,qBAaAwM,EAAAokC,gBAAA,WACA5sE,KAAAg8B,YAAA,aACAh8B,KAAAg8B,YAAA,cACAh8B,KAAA67B,SAAA,eAEA77B,KAAAiuE,YAAA,GASAjuE,KAAAY,QAAA,SAeA4nC,EAAA4kC,sBAAA,WACAptE,KAAAw7C,MAAAoe,eAAA,OAAA55D,KAAAwpD,OAAAof,mBACA5oE,KAAAkoE,iBAAAhkE,QAAA,SAAAorE,GACA,OAAAA,EAAAt6D,SAAAs6D,EAAAz/D,SAEA7P,KAAAkoE,iBAAA,IAGAloE,KAAAwpD,OAAAof,iBAAA5oE,KAAAw7C,MAAAoe,eAQA55D,KAAAY,QAAA,eAWA4nC,EAAAikC,mBAAA,WACA,IAAA7rB,EAAA5gD,KAEAA,KAAA67B,SAAA,eAQA77B,KAAAY,QAAA,WAGA,IAAA2uE,EAAAvvE,KAAAu8C,cAUAv8C,KAAAG,GAAA,aARA,SAAAqvE,IACAD,IAAA3uB,EAAArE,gBACAqE,EAAA5kB,YAAA,eAEA4kB,EAAArgD,IAAA,aAAAivE,OAgBAhnC,EAAAinC,mBAAA,WACAzvE,KAAAg8B,YAAA,eAQAh8B,KAAAY,QAAA,YAWA4nC,EAAAknC,0BAAA,WACA1vE,KAAAg8B,YAAA,eASAh8B,KAAAY,QAAA,mBAWA4nC,EAAAmnC,mBAAA,WACA3vE,KAAAg8B,YAAA,eAQAh8B,KAAAY,QAAA,YAWA4nC,EAAAmkC,mBAAA,WACA3sE,KAAA67B,SAAA,eAQA77B,KAAAY,QAAA,YAWA4nC,EAAAonC,kBAAA,WACA5vE,KAAAg8B,YAAA,eAQAh8B,KAAAY,QAAA,WAaA4nC,EAAAqkC,qBAAA,WAGA7sE,KAAA8nC,SAAA+nC,YACMl4C,EAAGM,KAAA,0EACTj4B,KAAAu8C,YAAAv8C,KAAA8nC,SAAA+nC,YAGA7vE,KAAA67B,SAAA,mBAWA77B,KAAAY,QAAA,cAWA4nC,EAAAskC,iBAAA,WACA9sE,KAAAg8B,YAAA,eACAh8B,KAAA67B,SAAA,cAQA77B,KAAAY,QAAA,UAWA4nC,EAAAkkC,iBAAA,WACA1sE,KAAA67B,SAAA,aAEA77B,KAAA8nC,SAAAgkC,MACA9rE,KAAAu8C,YAAA,GACAv8C,KAAA4nC,QACK5nC,KAAA6zC,UACL7zC,KAAA+zC,QAUA/zC,KAAAY,QAAA,UAUA4nC,EAAAukC,0BAAA,WACA/sE,KAAAkN,SAAAlN,KAAAstE,SAAA,cAaA9kC,EAAAklC,iBAAA,SAAA79D,GACAsvB,GAAAtvB,IAMA7P,KAAAyoE,YAIAzoE,KAAA6zC,SACApC,GAAAzxC,KAAA4nC,QAEA5nC,KAAA+zC,UAcAvL,EAAAmlC,uBAAA,SAAA99D,GACA7P,KAAAyoE,YAMAhtD,MAAAna,UAAA6oC,KAAAjpC,KAAAlB,KAAAu/B,GAAA,gDAAApX,GACA,OAAAA,EAAAwT,SAAA9rB,EAAAxK,YAIArF,KAAA6yD,eACA7yD,KAAA8yD,iBAEA9yD,KAAA+yD,uBAaAvqB,EAAAulC,eAAA,WACA/tE,KAAAqpE,YAAArpE,KAAAqpE,eAUA7gC,EAAAolC,sBAAA,WACA5tE,KAAA8vE,cAAA9vE,KAAAqpE,cAUA7gC,EAAAqlC,qBAAA,WACA7tE,KAAA8vE,eACA9vE,KAAAysC,sBAeAjE,EAAAslC,oBAAA,SAAAj+D,GAEAA,EAAAmxB,kBAUAwH,EAAA+gC,wBAAA,WACAvpE,KAAA6yD,eACA7yD,KAAA67B,SAAA,kBAEA77B,KAAAg8B,YAAA,mBAYAwM,EAAAghC,kBAAA,WACAxpE,KAAAysC,sBAiBAjE,EAAAwkC,4BAAA,SAAAn9D,EAAApO,GACAA,GACAzB,KAAA6yD,aAAApxD,EAAAoxD,cAUA7yD,KAAAY,QAAA,qBAUA4nC,EAAAykC,iBAAA,WACA,IAAA/0C,EAAAl4B,KAAAw7C,MAAAtjB,QACAl4B,KAAAk4B,UAWAsQ,EAAA2kC,oBAAA,WACA,IAAA1rE,EAAA,KAEAR,UAAAF,OAAA,IACAU,EAAAR,UAAA,IAUAjB,KAAAY,QAAA,WAAAa,IAUA+mC,EAAAmlB,SAAA,WACA,OAAA3tD,KAAAwpD,QAeAhhB,EAAAwlC,UAAA,SAAAj3D,EAAA+tC,GAEA9kD,KAAA2nC,MAAA,WACA,GAAA5wB,KAAAuuC,GACA,OAlvYA,SAAArB,EAAAnS,EAAA/6B,EAAA+tC,GACA,OAAAhT,EAAA/6B,GAAAktC,EAAAphD,OAAAoiD,GAAAluC,GAAA+tC,IAivYAirB,CAAA/vE,KAAAkpE,YAAAlpE,KAAAw7C,MAAAzkC,EAAA+tC,GACO,GAAA/tC,KAAAwuC,GACP,OAAAV,GAAA7kD,KAAAkpE,YAAAlpE,KAAAw7C,MAAAzkC,EAAA+tC,GAGA,IACA9kD,KAAAw7C,OACAx7C,KAAAw7C,MAAAzkC,GAAA+tC,GAEO,MAAAn9C,GAEP,MADQgwB,EAAGhwB,GACXA,KAEK,IAeL6gC,EAAA8kC,SAAA,SAAAv2D,GACA,GAAA/W,KAAAw7C,OAAAx7C,KAAAw7C,MAAA/Q,SAAA,CAIA,GAAA1zB,KAAAquC,GACA,OA5yYA,SAAYnB,EAAAnS,EAAA/6B,GACZ,OAAAktC,EAAA+rB,YAAA/qB,GAAAluC,GAAA+6B,EAAA/6B,MA2yYak5D,CAAGjwE,KAAAkpE,YAAAlpE,KAAAw7C,MAAAzkC,GACX,GAAAA,KAAAwuC,GACL,OAAAV,GAAA7kD,KAAAkpE,YAAAlpE,KAAAw7C,MAAAzkC,GAMA,IACA,OAAA/W,KAAAw7C,MAAAzkC,KACK,MAAApP,GAEL,QAAAgG,IAAA3N,KAAAw7C,MAAAzkC,GAEA,MADQ4gB,EAAG,aAAA5gB,EAAA,2BAAA/W,KAAA4rE,UAAA,wBAAAjkE,GACXA,EAIA,iBAAAA,EAAA8U,KAGA,MAFQkb,EAAG,aAAA5gB,EAAA,mBAAA/W,KAAA4rE,UAAA,gCAAAjkE,GACX3H,KAAAw7C,MAAA/Q,UAAA,EACA9iC,EAKA,MADMgwB,EAAGhwB,GACTA,KAeA6gC,EAAAZ,KAAA,WACA,IAAA2Z,EAAAvhD,KAEAkwE,EAAAlwE,KAAA8nC,SAAAqoC,SAAgD14C,EAAA5tB,EAAQsmE,QAExD,OAAAD,EACA,IAAAA,EAAA,SAAAE,GACA7uB,EAAA8uB,MAAAD,KAIApwE,KAAAqwE,SAaA7nC,EAAA6nC,MAAA,SAAAr7D,GACA,IAAAs7D,EAAAtwE,KAeA,QAbA,IAAAgV,IACAA,EAAAy8B,IAKAzxC,KAAA6pE,kBACA7pE,KAAAO,IAAA,YAAAP,KAAA6pE,kBAMA7pE,KAAAyqC,SAWK,KAAAzqC,KAAA2pE,eAAA3pE,KAAAkyC,OAAAlyC,KAAAyhE,cAEL,YADAzsD,EAAAhV,KAAAstE,SAAA,SAQAttE,KAAA6pE,iBAAA,WACAyG,EAAAzG,iBAAA,KACA70D,EAAAs7D,EAAA1oC,SAGA5nC,KAAA+iC,IAAA,YAAA/iC,KAAA6pE,sBAzBA,CAEA,GAAA7pE,KAAA4pE,qBACA,OAGA5pE,KAAA4pE,sBAAA,EACA5pE,KAAA2nC,MAAA,WACA2oC,EAAA1G,sBAAA,EACA50D,EAAAs7D,EAAA1oC,YA2BAY,EAAAuL,MAAA,WACA/zC,KAAAguE,UAAA,UAWAxlC,EAAAqL,OAAA,WAEA,WAAA7zC,KAAAstE,SAAA,WAYA9kC,EAAA6X,OAAA,WACA,OAAArgD,KAAAstE,SAAA,WAAAl9B,GAAA,MAeA5H,EAAAklB,UAAA,SAAA6iB,GACA,wBAAAA,EACA,OAAAvwE,KAAA2oE,WAGA3oE,KAAA2oE,aAAA4H,EAEAA,EACAvwE,KAAA67B,SAAA,iBAEA77B,KAAAg8B,YAAA,kBAcAwM,EAAA+T,YAAA,SAAA+P,GACA,2BAAAA,GACAA,EAAA,IACAA,EAAA,QAGAtsD,KAAAguE,UAAA,iBAAA1hB,KAUAtsD,KAAAwpD,OAAAjN,YAAAv8C,KAAAstE,SAAA,kBACAttE,KAAAwpD,OAAAjN,cAoBA/T,EAAAt7B,SAAA,SAAAo/C,GACA,QAAA3+C,IAAA2+C,EAEA,YAAA3+C,IAAA3N,KAAAwpD,OAAAt8C,SAAAlN,KAAAwpD,OAAAt8C,SAAAu3D,KAGAnY,EAAA3kC,WAAA2kC,IAEA,IACAA,EAAAzoD,KAGAyoD,IAAAtsD,KAAAwpD,OAAAt8C,WAEAlN,KAAAwpD,OAAAt8C,SAAAo/C,EAEAA,IAAAzoD,KACA7D,KAAA67B,SAAA,YAEA77B,KAAA8nC,SAAA0oC,QAAAxwE,KAAA6nC,QAAAwmB,aACAruD,KAAA67B,SAAA,gBAGA77B,KAAAg8B,YAAA,YACAh8B,KAAAg8B,YAAA,eAGAhU,MAAAskC,IAQAtsD,KAAAY,QAAA,oBAaA4nC,EAAAwlB,cAAA,WACA,OAAAhuD,KAAAkN,WAAAlN,KAAAu8C,eAWA/T,EAAAulB,qBAAA,WACA,OAAApqD,KAAAigB,MAAA5jB,KAAAkN,YAAAvJ,KAAAigB,MAAA5jB,KAAAu8C,gBAgBA/T,EAAA8H,SAAA,WACA,IAAAA,EAAAtwC,KAAAstE,SAAA,YAMA,OAJAh9B,KAAAvvC,SACAuvC,EAAAF,GAAA,MAGAE,GAYA9H,EAAA6H,gBAAA,WACA,OAAAA,GAAArwC,KAAAswC,WAAAtwC,KAAAkN,aAWAs7B,EAAAwnB,YAAA,WACA,IAAA1f,EAAAtwC,KAAAswC,WACApjC,EAAAlN,KAAAkN,WACA9K,EAAAkuC,EAAAluC,IAAAkuC,EAAAvvC,OAAA,GAMA,OAJAqB,EAAA8K,IACA9K,EAAA8K,GAGA9K,GAgBAomC,EAAA8qB,OAAA,SAAAmd,GACA,IAAAvc,EAEA,YAAAvmD,IAAA8iE,GAEAvc,EAAAvwD,KAAAmgB,IAAA,EAAAngB,KAAAG,IAAA,EAAA6jB,WAAA8oD,KACAzwE,KAAAwpD,OAAA8J,OAAAY,EACAl0D,KAAAguE,UAAA,YAAA9Z,QAEAA,EAAA,GACAl0D,KAAA2zD,YAAAO,MAOAA,EAAAvsC,WAAA3nB,KAAAstE,SAAA,WACAtlD,MAAAksC,GAAA,EAAAA,IAeA1rB,EAAA+qB,MAAA,SAAAmd,GACA,QAAA/iE,IAAA+iE,EAKA,OAAA1wE,KAAAstE,SAAA,aAJAttE,KAAAguE,UAAA,WAAA0C,IAkCAloC,EAAAmoC,aAAA,SAAAC,GACA,YAAAjjE,IAAAijE,EACA5wE,KAAAguE,UAAA,kBAAA4C,GAGA5wE,KAAAstE,SAAA,qBAkBA9kC,EAAAmrB,YAAA,SAAA8c,GACA,QAAA9iE,IAAA8iE,GAAA,IAAAA,EAKA,OAAAzwE,KAAAwpD,OAAA2K,WAJAn0D,KAAAwpD,OAAA2K,WAAAsc,GAeAjoC,EAAAq8B,mBAAA,WACA,OAAA7kE,KAAAstE,SAAA,2BAmBA9kC,EAAAqqB,aAAA,SAAAge,GACA,QAAAljE,IAAAkjE,EAKA,QAAA7wE,KAAA8wE,cAJA9wE,KAAA8wE,gBAAAD,GAmBAroC,EAAAuqB,kBAAA,WACA,IAAAge,EAAAtgC,GACAzwC,KAAA6yD,cAAA,GAEAke,EAAAhe,mBAQA5yD,GAAS05B,EAAAhwB,EAAQknE,EAAAC,iBAAA/oE,GAAAjI,KAAA,SAAAixE,EAAAtpE,GACjB3H,KAAA6yD,aAA0Bh5B,EAAAhwB,EAAQknE,EAAAG,qBAElC,IAAAlxE,KAAA6yD,gBACAtyD,GAAcs5B,EAAAhwB,EAAQknE,EAAAC,iBAAAC,GAQtBjxE,KAAAY,QAAA,uBAEAZ,KAAAioC,IAAA8oC,EAAAhe,sBACK/yD,KAAAw7C,MAAAqpB,qBAGL7kE,KAAAguE,UAAA,oBAIAhuE,KAAAmxE,kBAMAnxE,KAAAY,QAAA,sBAUA4nC,EAAAsqB,eAAA,WACA,IAAAie,EAAAtgC,GACAzwC,KAAA6yD,cAAA,GAEAke,EAAAhe,kBACMl5B,EAAAhwB,EAAQknE,EAAAje,kBACT9yD,KAAAw7C,MAAAqpB,qBACL7kE,KAAAguE,UAAA,mBAEAhuE,KAAAoxE,iBAMApxE,KAAAY,QAAA,sBAWA4nC,EAAA2oC,gBAAA,WACAnxE,KAAAqxE,cAAA,EAEArxE,KAAAsxE,gBAA2Bz3C,EAAAhwB,EAAQkM,gBAAAkuB,MAAAstC,SAEnCpxE,GAAO05B,EAAAhwB,EAAQ,UAAA5B,GAAAjI,UAAAwxE,qBAEX33C,EAAAhwB,EAAQkM,gBAAAkuB,MAAAstC,SAAA,SAEZ11C,GAAahC,EAAAhwB,EAAQ2L,KAAA,mBAMrBxV,KAAAY,QAAA,oBAWA4nC,EAAAgpC,mBAAA,SAAA3hE,GACA,KAAAA,EAAAmyB,WACA,IAAAhiC,KAAA6yD,eACA7yD,KAAA8yD,iBAEA9yD,KAAAoxE,mBAWA5oC,EAAA4oC,eAAA,WACApxE,KAAAqxE,cAAA,EACA9wE,GAAQs5B,EAAAhwB,EAAQ,UAAA7J,KAAAwxE,oBAEZ33C,EAAAhwB,EAAQkM,gBAAAkuB,MAAAstC,SAAAvxE,KAAAsxE,gBAEZt1C,GAAgBnC,EAAAhwB,EAAQ2L,KAAA,mBAQxBxV,KAAAY,QAAA,mBAeA4nC,EAAAwZ,YAAA,SAAA5hD,GAGA,IAFA,IAAA6iD,EAEAniD,EAAA,EAAA+xB,EAAA7yB,KAAA8nC,SAAAye,UAAgDzlD,EAAA+xB,EAAA9xB,OAAcD,IAAA,CAC9D,IAAA0lD,EAAA3zB,EAAA/xB,GACAgxC,EAAiBsM,GAAIkE,QAAAkE,GAQrB,GALA1U,IACAA,EAAerK,GAASmC,aAAA4c,IAIxB1U,GAMA,GAAAA,EAAA2U,gBACAxD,EAAAnR,EAAAkQ,YAAA5hD,IAGA,OAAA6iD,OATQtrB,EAAGO,MAAA,QAAAsuB,EAAA,qEAcX,UAeAhe,EAAAipC,aAAA,SAAAr4C,GACA,IAqCA3Y,EArCAixD,EAAA1xE,KAIA2xE,EAAA3xE,KAAA8nC,SAAAye,UAAAjjD,IAAA,SAAAkjD,GACA,OAAAA,EAAwBpI,GAAIkE,QAAAkE,MACvBpnC,OAAA,SAAAlC,GACL,IAAAspC,EAAAtpC,EAAA,GACA40B,EAAA50B,EAAA,GAEA,OAAA40B,EAEAA,EAAA2U,eAGM9uB,EAAGO,MAAA,QAAAsuB,EAAA,sEACT,KAKAorB,EAAA,SAAAC,EAAAC,EAAAC,GACA,IAAArO,EAUA,OATAmO,EAAA1nC,KAAA,SAAA6nC,GACA,OAAAF,EAAA3nC,KAAA,SAAA8nC,GAGA,GAFAvO,EAAAqO,EAAAC,EAAAC,GAGA,aAIAvO,GAWAwO,EAAA,SAAAj0D,EAAAtC,GACA,IAAA6qC,EAAAvoC,EAAA,GAGA,GAFAA,EAAA,GAEAgkC,cAAAtmC,EAAA+1D,EAAA5pC,SAAA0e,EAAAr4B,gBACA,OACAxS,SACAm2B,KAAA0U,IAeA,OARAxmD,KAAA8nC,SAAAqqC,YAEAP,EAAAx4C,EAAAu4C,GAtBAlxD,EAsBAyxD,EArBA,SAAAroE,EAAAC,GACA,OAAA2W,EAAA3W,EAAAD,MAuBA+nE,EAAAD,EAAAv4C,EAAA84C,MAGA,GAmBA1pC,EAAA0J,IAAA,SAAAv2B,GACA,IAAAy2D,EAAApyE,KAGA,wBAAA2b,EACA,OAAA3b,KAAAwpD,OAAAtX,KAAA,GAKA,IAAA9Y,EAlvZA,SAAAi5C,EAAAngC,GAEA,GAAAz2B,MAAAI,QAAAq2B,GAAA,CACA,IAAAogC,EAAA,GACApgC,EAAAhuC,QAAA,SAAAquE,GACAA,EAAAF,EAAAE,GAEA92D,MAAAI,QAAA02D,GACAD,IAAAhyE,OAAAiyE,GACOl3D,GAAAk3D,IACPD,EAAAnxE,KAAAoxE,KAGArgC,EAAAogC,OAGApgC,EAFG,kBAAAA,KAAAv4B,OAEH,CAAAysC,GAAA,CACAlU,SAEG72B,GAAA62B,IAAA,kBAAAA,oBAAAv4B,OAEH,CAAAysC,GAAAlU,IAGA,GAGA,OAAAA,EAutZAmgC,CAAA12D,GAIAyd,EAAAr4B,QAWAf,KAAA2pE,cAAA,EACA3pE,KAAAwpD,OAAApwB,UACAp5B,KAAAsuE,oBAAAl1C,EAAA,IAEAmqB,GAAAvjD,KAAAo5B,EAAA,YAAAo5C,EAAAjuB,GAQA,IAlnaAN,EAAAnS,EAonaA,GATAsgC,EAAAlJ,YAAA3kB,EAGA6tB,EAAA5oB,OAAApwB,UAEAg5C,EAAA9D,oBAAAkE,GAEAJ,EAAAK,KAAAD,GAGA,OAAAp5C,EAAAr4B,OAAA,EACAqxE,EAAAlgC,IAAA9Y,EAAA14B,MAAA,KAGA0xE,EAAAzI,cAAA,EAEAyI,EAAAx6D,WAAA,WACA5X,KAAAk4B,MAAA,CACA1f,KAAA,EACAgX,QAAAxvB,KAAAyoC,SAAAzoC,KAAA8nC,SAAA4qC,wBAES,QAITN,EAAAznC,gBApoaAsZ,EAyoaAM,EAzoaAzS,EAyoaAsgC,EAAA52B,MAxoaAyI,EAAA//C,QAAA,SAAAogD,GACA,OAAAA,EAAAquB,SAAAruB,EAAAquB,QAAA7gC,QA0laA9xC,KAAA4X,WAAA,WACA5X,KAAAk4B,MAAA,CACA1f,KAAA,EACAgX,QAAAxvB,KAAAyoC,SAAAzoC,KAAA8nC,SAAA4qC,wBAEO,IA0DPlqC,EAAAiqC,KAAA,SAAA92D,GACA,IA3pmBAi3D,EAAAC,EA2pmBAC,EAAA9yE,KAEA+yE,EAAA/yE,KAAAyxE,aAAA,CAAA91D,IAEA,OAAAo3D,IA/pmBAH,EAmqmBAG,EAAAjhC,KAnqmBA+gC,EAmqmBA7yE,KAAA4rE,UAlqmBAvkC,GAAAurC,KAAAvrC,GAAAwrC,IAmqmBA7yE,KAAA2pE,cAAA,EAEA3pE,KAAA0mD,UAAAqsB,EAAAjhC,KAAAihC,EAAAp3D,QACA3b,KAAAw7C,MAAA7T,MAAA,WACAmrC,EAAAnJ,cAAA,KAEA,IAKA3pE,KAAA2nC,MAAA,WAKA3nC,KAAAw7C,MAAA90C,YAAApF,UAAAoX,eAAA,aACA1Y,KAAAguE,UAAA,YAAAryD,GAEA3b,KAAAguE,UAAA,MAAAryD,EAAAu2B,KAGAlyC,KAAA2pE,cAAA,IACK,IACL,KAOAnhC,EAAA6U,KAAA,WACAr9C,KAAAguE,UAAA,SASAxlC,EAAAh2B,MAAA,WACAxS,KAAAw7C,OACAx7C,KAAAw7C,MAAAyE,YAAA,QAGAjgD,KAAA0mD,UAAA1mD,KAAA8nC,SAAAye,UAAA,SACAvmD,KAAAguE,UAAA,SAEA1oC,GAAAtlC,OACAA,KAAAY,QAAA,gBAWA4nC,EAAAwqC,eAAA,WACA,IAAAr3D,EAAA3b,KAAA+uE,gBACA31C,EAAA,GAMA,OAJA,IAAAzzB,OAAAiW,KAAAD,GAAA5a,QACAq4B,EAAAj4B,KAAAwa,GAGA3b,KAAAwpD,OAAApwB,YAUAoP,EAAAumC,cAAA,WACA,OAAA/uE,KAAAwpD,OAAA7tC,QAAA,IAWA6sB,EAAAi5B,WAAA,WACA,OAAAzhE,KAAA+uE,iBAAA/uE,KAAA+uE,gBAAA78B,KAAA,IAYA1J,EAAAyqC,YAAA,WACA,OAAAjzE,KAAA+uE,iBAAA/uE,KAAA+uE,gBAAA3uE,MAAA,IAcAooC,EAAAy7B,QAAA,SAAA58D,GACA,YAAAsG,IAAAtG,GACArH,KAAAguE,UAAA,aAAA3mE,QACArH,KAAA8nC,SAAAm8B,QAAA58D,IAIArH,KAAAstE,SAAA,YAoBA9kC,EAAAkgC,SAAA,SAAArhE,GAEA,QAAAsG,IAAAtG,EACA,OAAArH,KAAA8nC,SAAA4gC,WAAA,EAGA,IAAAwK,EAEA,kBAAA7rE,GAAA,mBAAAkB,KAAAlB,IACArH,KAAA8nC,SAAA4gC,SAAArhE,EACArH,KAAAkuE,gBAAA7mE,GACA6rE,GAAA,GAKAlzE,KAAA8nC,SAAA4gC,WAHKrhE,EAML6rE,KAAAlzE,KAAA8nC,SAAA4gC,SAKA1oE,KAAAw7C,OACAx7C,KAAAguE,UAAA,cAAAkF,IAqBA1qC,EAAAoZ,YAAA,SAAAv6C,GACA,YAAAsG,IAAAtG,GACArH,KAAAguE,UAAA,iBAAA3mE,GACArH,KAAA8nC,SAAA8Z,YAAAv6C,EACArH,MAGAA,KAAAstE,SAAA,gBAcA9kC,EAAAsjC,KAAA,SAAAzkE,GACA,YAAAsG,IAAAtG,GACArH,KAAAguE,UAAA,UAAA3mE,QACArH,KAAA8nC,SAAAgkC,KAAAzkE,IAIArH,KAAAstE,SAAA,SAeA9kC,EAAAmf,OAAA,SAAAzV,GACA,QAAAvkC,IAAAukC,EACA,OAAAlyC,KAAAwoE,QAKAt2B,IACAA,EAAA,IAGAA,IAAAlyC,KAAAwoE,UAKAxoE,KAAAwoE,QAAAt2B,EAEAlyC,KAAAguE,UAAA,YAAA97B,GACAlyC,KAAAioE,mBAAA,EASAjoE,KAAAY,QAAA,kBAgBA4nC,EAAA0kC,wBAAA,WACA,KAAAltE,KAAAwoE,SAAAxoE,KAAA8nC,SAAAmkC,wBAAAjsE,KAAAw7C,OAAAx7C,KAAAw7C,MAAAmM,OAAA,CACA,IAAAwrB,EAAAnzE,KAAAw7C,MAAAmM,UAAA,GAEAwrB,IAAAnzE,KAAAwoE,UACAxoE,KAAAwoE,QAAA2K,EACAnzE,KAAAioE,mBAAA,EAEAjoE,KAAAY,QAAA,mBAkBA4nC,EAAAyL,SAAA,SAAAyb,GACA,QAAA/hD,IAAA+hD,EACA,QAAA1vD,KAAAyoE,UAGA/Y,MAEA1vD,KAAAyoE,YAAA/Y,IAIA1vD,KAAAyoE,UAAA/Y,EAEA1vD,KAAAqtE,uBACArtE,KAAAguE,UAAA,cAAAte,GAGA1vD,KAAAyoE,WACAzoE,KAAAg8B,YAAA,yBACAh8B,KAAA67B,SAAA,wBAMA77B,KAAAY,QAAA,mBAEAZ,KAAAqtE,uBACArtE,KAAAutE,8BAGAvtE,KAAAg8B,YAAA,wBACAh8B,KAAA67B,SAAA,yBAMA77B,KAAAY,QAAA,oBAEAZ,KAAAqtE,uBACArtE,KAAAytE,kCAuBAjlC,EAAA6kC,oBAAA,SAAA3d,GACA,QAAA/hD,IAAA+hD,EACA,QAAA1vD,KAAAozE,qBAGA1jB,MAEA1vD,KAAAozE,uBAAA1jB,IAIA1vD,KAAAozE,qBAAA1jB,EAEA1vD,KAAAozE,sBACApzE,KAAA67B,SAAA,6BAQA77B,KAAAY,QAAA,yBAEAZ,KAAAg8B,YAAA,6BAQAh8B,KAAAY,QAAA,0BAiBA4nC,EAAAtQ,MAAA,SAAA5iB,GACA,YAAA3H,IAAA2H,EACAtV,KAAAogD,QAAA,KAIA,OAAA9qC,GACAtV,KAAAogD,OAAA9qC,EACAtV,KAAAg8B,YAAA,kBAEAh8B,KAAAqzE,cACArzE,KAAAqzE,aAAA7/B,WAMAxzC,KAAAogD,OAAA,IAAAtP,GAAAx7B,GAEAtV,KAAA67B,SAAA,aAGIlE,EAAGO,MAAA,SAAAl4B,KAAAogD,OAAA5nC,KAAA,IAAAs4B,GAAAE,WAAAhxC,KAAAogD,OAAA5nC,MAAA,IAAAxY,KAAAogD,OAAA5wB,QAAAxvB,KAAAogD,aAMPpgD,KAAAY,QAAA,WAWA4nC,EAAAiE,mBAAA,SAAA58B,GACA7P,KAAAszE,eAAA,GAiBA9qC,EAAA6gC,WAAA,SAAA3Z,GACA,QAAA/hD,IAAA+hD,EACA,OAAA1vD,KAAAmoE,YAKA,IAFAzY,SAEA1vD,KAAAmoE,YAAA,CAMA,GAFAnoE,KAAAmoE,YAAAzY,EAEA1vD,KAAAmoE,YAUA,OATAnoE,KAAAszE,eAAA,EACAtzE,KAAAg8B,YAAA,qBACAh8B,KAAA67B,SAAA,wBAMA77B,KAAAY,QAAA,cAYAZ,KAAAw7C,OACAx7C,KAAAw7C,MAAAzY,IAAA,qBAAAp7B,GACAA,EAAA45B,kBACA55B,EAAAq5B,mBAIAhhC,KAAAszE,eAAA,EACAtzE,KAAAg8B,YAAA,mBACAh8B,KAAA67B,SAAA,qBAMA77B,KAAAY,QAAA,kBASA4nC,EAAA8gC,uBAAA,WACA,IAAAiK,EACAC,EACAC,EA4CAC,EA3CAC,EAAA1rE,GAAAjI,UAAAysC,oBA+BAzsC,KAAAG,GAAA,YAnBA,WACAwzE,IAIA3zE,KAAA4sC,cAAA2mC,GAIAA,EAAAvzE,KAAA6sC,YAAA8mC,EAAA,OAWA3zE,KAAAG,GAAA,YA9BA,SAAAwH,GAGAA,EAAAisE,UAAAJ,GAAA7rE,EAAAksE,UAAAJ,IACAD,EAAA7rE,EAAAisE,QACAH,EAAA9rE,EAAAksE,QACAF,OAyBA3zE,KAAAG,GAAA,UATA,SAAA0P,GACA8jE,IAEA3zE,KAAA4sC,cAAA2mC,KASAvzE,KAAAG,GAAA,UAAAwzE,GACA3zE,KAAAG,GAAA,QAAAwzE,GAOA3zE,KAAA6sC,YAAA,WAEA,GAAA7sC,KAAAszE,cAAA,CAKAtzE,KAAAszE,eAAA,EAEAtzE,KAAAqpE,YAAA,GAEArpE,KAAAuW,aAAAm9D,GACA,IAAAp7D,EAAAtY,KAAA8nC,SAAA4rC,kBAEAp7D,GAAA,IAMAo7D,EAAA1zE,KAAA4X,WAAA,WAIA5X,KAAAszE,eACAtzE,KAAAqpE,YAAA,IAEO/wD,MACF,MAiBLkwB,EAAAoxB,aAAA,SAAAD,GACA,QAAAhsD,IAAAgsD,EAOA,OAAA35D,KAAAw7C,OAAAx7C,KAAAw7C,MAAAkH,qBACA1iD,KAAAwpD,OAAAof,kBAAA5oE,KAAAstE,SAAA,gBAGA,EARAttE,KAAAguE,UAAA,kBAAArU,IA2BAnxB,EAAAqgC,oBAAA,SAAAlP,GACA,YAAAhsD,IAAAgsD,EACA35D,KAAAguE,UAAA,yBAAArU,GAGA35D,KAAAw7C,OAAAx7C,KAAAw7C,MAAAkH,qBACA1iD,KAAAstE,SAAA,uBAGA,GAcA9kC,EAAA0iB,QAAA,SAAAwE,GACA,QAAA/hD,IAAA+hD,EAKA,QAAA1vD,KAAA8zE,SAJA9zE,KAAA8zE,WAAApkB,GA6BAlnB,EAAA2Y,aAAA,SAAA3J,EAAAr3B,EAAAD,GACA,GAAAlgB,KAAAw7C,MACA,OAAAx7C,KAAAw7C,MAAA2F,aAAA3J,EAAAr3B,EAAAD,IAwBAsoB,EAAA6J,mBAAA,SAAAroC,EAAAs3C,GACA,GAAAthD,KAAAw7C,MACA,OAAAx7C,KAAAw7C,MAAAnJ,mBAAAroC,EAAAs3C,IAeA9Y,EAAA0X,sBAAA,SAAA35C,QACA,IAAAA,IACAA,EAAA,IAGA,IACAwD,EADAxD,EACAwD,MAQA,GANAA,IACAA,EAAAxD,GAKAvG,KAAAw7C,MACA,OAAAx7C,KAAAw7C,MAAA0E,sBAAAn2C,IAeAy+B,EAAAkZ,wBAAA,WACA,OAAA1hD,KAAAstE,SAAA,4BAUA9kC,EAAAyiC,WAAA,WACA,OAAAjrE,KAAAw7C,OAAAx7C,KAAAw7C,MAAAyvB,YAAAjrE,KAAAw7C,MAAAyvB,cAAA,GAUAziC,EAAA0iC,YAAA,WACA,OAAAlrE,KAAAw7C,OAAAx7C,KAAAw7C,MAAA0vB,aAAAlrE,KAAAw7C,MAAA0vB,eAAA,GAgBA1iC,EAAAtoB,SAAA,SAAA1H,GACA,QAAA7K,IAAA6K,EACA,OAAAxY,KAAAs5D,UAGAt5D,KAAAs5D,UAAA32D,OAAA6V,GAAA2V,eAYAqa,EAAAI,UAAA,WACA,OAAApB,GAAAsG,EAAAxsC,UAAAwmC,SAAAc,UAAA5oC,KAAAuoE,aAWA//B,EAAAurC,OAAA,WACA,IAAA/pE,EAAAw9B,GAAAxnC,KAAA8nC,UACA11B,EAAApI,EAAAoI,OACApI,EAAAoI,OAAA,GAEA,QAAAtR,EAAA,EAAmBA,EAAAsR,EAAArR,OAAmBD,IAAA,CACtC,IAAAiJ,EAAAqI,EAAAtR,IAEAiJ,EAAAy9B,GAAAz9B,IACA65B,YAAAj2B,EACA3D,EAAAoI,OAAAtR,GAAAiJ,EAGA,OAAAC,GAoBAw+B,EAAAwrC,YAAA,SAAAv5C,EAAAzwB,GACA,IAAAiqE,EAAAj0E,MAEAgK,KAAA,IACAywB,WAAA,GACA,IAAAy5C,EAAA,IAAoB1hC,GAAWxyC,KAAAgK,GAM/B,OALAhK,KAAAspC,SAAA4qC,GACAA,EAAA/zE,GAAA,qBACA8zE,EAAAl1C,YAAAm1C,KAEAA,EAAAh8D,OACAg8D,GASA1rC,EAAA2rC,yBAAA,WACA,GAAAn0E,KAAA0pE,aAOA,IAHA,IAAA0K,EAAAp0E,KAAAo0E,oBACAvoC,EAAA7rC,KAAA6rC,eAEA/qC,EAAA,EAAmBA,EAAAsmE,GAAArmE,OAA6BD,IAAA,CAChD,IAAAuzE,EAAAjN,GAAAtmE,GAGA,GAAA+qC,GAFA7rC,KAAAs0E,aAAAD,GAEA,CAEA,GAAAD,IAAAC,EACA,OAIAD,GACAp0E,KAAAg8B,YAAAqrC,GAAA+M,IAGAp0E,KAAA67B,SAAAwrC,GAAAgN,IACAr0E,KAAAu0E,YAAAF,EACA,SAWA7rC,EAAAgsC,yBAAA,WACA,IAAA54C,EAAA57B,KAAAy0E,yBACAz0E,KAAAu0E,YAAA,GAEA34C,GACA57B,KAAAg8B,YAAAJ,IAyCA4M,EAAAihC,YAAA,SAAAiL,GAEA,YAAA/mE,IAAA+mE,EACav7C,GAAMn5B,KAAAs0E,eAGnBt0E,KAAAu0E,YAAA,GACAv0E,KAAAs0E,aAAwBn7C,GAAM,GAAGmuC,GAAAoN,GAGjC10E,KAAAm0E,2BAEWh7C,GAAMn5B,KAAAs0E,gBAgBjB9rC,EAAAkhC,WAAA,SAAAriE,GAEA,YAAAsG,IAAAtG,EACArH,KAAA20E,aAGAttE,EAAA6mC,QAAA7mC,MACArH,KAAA20E,aAOA30E,KAAA20E,YAAAttE,EAGAA,GACArH,KAAAG,GAAA,eAAAH,KAAAm0E,0BACAn0E,KAAAm0E,6BAEAn0E,KAAAO,IAAA,eAAAP,KAAAm0E,0BACAn0E,KAAAw0E,4BAGAntE,QAhBA,GA2BAmhC,EAAA4rC,kBAAA,WACA,OAAAp0E,KAAAu0E,aAYA/rC,EAAAisC,uBAAA,WACA,OAAApN,GAAArnE,KAAAu0E,cAAA,IAcAzmC,EAAAi6B,eAAA,SAAA5+C,GACA,IAAAyrD,EAAA,CACAx7C,QAAA,GACAhnB,OAAA,IAEAyiE,EAAAn4C,GAAAvT,GACA2rD,EAAAD,EAAA,cAWA,GATAr5C,GAAArS,EAAA,cACA0rD,EAAAlhC,MAAA,GAGAnY,GAAArS,EAAA,eACA0rD,EAAAvK,OAAA,GAIA,OAAAwK,EAAA,CAGA,IAAAC,EAA4BC,IAAcF,GAAA,MAC1Cx/D,EAAAy/D,EAAA,GACAtzE,EAAAszE,EAAA,GAEAz/D,GACQqiB,EAAGO,MAAA5iB,GAGL6jB,GAAM07C,EAAApzE,GAKZ,GAFI03B,GAAMy7C,EAAAC,GAEV1rD,EAAA+4C,gBAGA,IAFA,IAAA/4B,EAAAhgB,EAAArC,WAEAhmB,EAAA,EAAA+xB,EAAAsW,EAAApoC,OAA0CD,EAAA+xB,EAAO/xB,IAAA,CACjD,IAAAs6B,EAAA+N,EAAAroC,GAEAm0E,EAAA75C,EAAAplB,SAAAmY,cAEA,WAAA8mD,EACAL,EAAAx7C,QAAAj4B,KAAAu7B,GAAAtB,IACS,UAAA65C,GACTL,EAAAxiE,OAAAjR,KAAAu7B,GAAAtB,IAKA,OAAAw5C,GAWApsC,EAAA2gC,kBAAA,WACA,IAAAhpC,EAAetG,EAAAhwB,EAAQ6wB,cAAA,KAGvB,sBAAAyF,EAAA8D,OAAA,oBAAA9D,EAAA8D,OAAA,iBAAA9D,EAAA8D,OAAA,gBAAA9D,EAAA8D,OACA,gBAAA9D,EAAA8D,QAGA6J,EA9tHA,CA+tHErG,IAmDFyW,GAAAC,MAAAj6C,QAAA,SAAAokE,GACA,IAAAhjE,EAAA44C,GAAAoqB,GAEER,GAAMxmE,UAAAgE,EAAAu4C,YAAA,WACR,OAAA79C,KAAAw7C,MACAx7C,KAAAw7C,MAAAl2C,EAAAu4C,eAKA79C,KAAAsF,EAAAw4C,aAAA99C,KAAAsF,EAAAw4C,cAAA,IAAAx4C,EAAAm4C,UACAz9C,KAAAsF,EAAAw4C,iBAYAgqB,GAAM/5B,QAAA,GACN,IAAImnC,GAAYz9C,EAAA5tB,EAAQukC,UAUxB05B,GAAMxmE,UAAAwmC,SAAA,CAENye,UAAanI,GAAIiE,kBACjB8yB,MAAA,GACAC,MAAA,GAEA1B,kBAAA,IAEAxZ,cAAA,GAGAsW,QAAA,EAEArnC,SAAA,gKACAjpB,SAAYg1D,KAAcA,GAAStsC,WAAcssC,GAAStsC,UAAA,IAAiBssC,GAASG,cAAiBH,GAASh1D,WAAA,KAE9G0oB,UAAA,GAEA8pC,oBAAA,iDACAjJ,YAAA,GACAC,YAAA,GAEA,CAOA,QAOA,UAQA,WAqBA,eAwBA,cAAAxlE,QAAA,SAAAuc,GACEqnD,GAAMxmE,UAAAmf,GAAA,WACR,OAAAzgB,KAAAstE,SAAA7sD,MAGAqmD,GAAA5iE,QAAA,SAAA2L,GACEi4D,GAAMxmE,UAAA,aAAA+lC,GAAAx3B,GAAA,gBACR,OAAA7P,KAAAY,QAAAiP,MA6DA43B,GAAS+F,kBAAA,SAA6Bs6B,IAStC,IAiBAwN,GAAA,GAYAC,GAAA,SAAA94D,GACA,OAAA64D,GAAA58D,eAAA+D,IAcA+4D,GAAA,SAAA/4D,GACA,OAAA84D,GAAA94D,GAAA64D,GAAA74D,QAAA9O,GAgBA8nE,GAAA,SAAA7xC,EAAAnnB,GACAmnB,EAAA,eAAAA,EAAA,mBACAA,EAAA,eAAAnnB,IAAA,GAkBAi5D,GAAA,SAAA9xC,EAAAvB,EAAAszC,GACA,IAAAxS,GAAAwS,EAAA,2BACA/xC,EAAAhjC,QAAAuiE,EAAA9gC,GACAuB,EAAAhjC,QAAAuiE,EAAA,IAAA9gC,EAAA5lB,KAAA4lB,IAgEAuzC,GAAA,SAAAn5D,EAAAo5D,GAIA,OADAA,EAAAv0E,UAAAmb,OACA,WACAi5D,GAAA11E,KAAA,CACAyc,OACAq5D,OAAAD,EACA9wE,SAAA,OACK,GAEL,QAAAwW,EAAAta,UAAAF,OAAAC,EAAA,IAAAya,MAAAF,GAAAG,EAAA,EAAuEA,EAAAH,EAAaG,IACpF1a,EAAA0a,GAAAza,UAAAya,GAGA,IAAA3W,EAAAwxB,EAAAs/C,EAAA,CAAA71E,MAAAM,OAAAU,IAQA,OALAhB,KAAAyc,GAAA,WACA,OAAA1X,GAGA2wE,GAAA11E,KAAA+E,EAAAgxE,gBACAhxE,IAmBAixE,GAEA,WASA,SAAAA,EAAApyC,GACA,GAAA5jC,KAAA0G,cAAAsvE,EACA,UAAA5gE,MAAA,0DAGApV,KAAA4jC,SAGA6C,GAAAzmC,aACAA,KAAAY,QACAsmC,GAAAlnC,UAAA0G,YAAAygC,cACAsuC,GAAA7xC,EAAA5jC,KAAAyc,MAGAzc,KAAAqB,QAAA4G,GAAAjI,UAAAqB,SAEAuiC,EAAAzjC,GAAA,UAAAH,KAAAqB,SAOA,IAAAmnC,EAAAwtC,EAAA10E,UAmOA,OAjOAknC,EAAAxlC,QAAA,WACA,OAAAhD,KAAA0G,YAAAuvE,SAgBAztC,EAAAutC,aAAA,SAAA1zC,GAQA,YAPA,IAAAA,IACAA,EAAA,IAGAA,EAAA5lB,KAAAzc,KAAAyc,KACA4lB,EAAAyzC,OAAA91E,KAAA0G,YACA27B,EAAAt9B,SAAA/E,KACAqiC,GAkBAmG,EAAA5nC,QAAA,SAAAiP,EAAAwyB,GAKA,YAJA,IAAAA,IACAA,EAAA,IAGAzhC,GAAAZ,KAAAulC,YAAA11B,EAAA7P,KAAA+1E,aAAA1zC,KAgBAmG,EAAApB,mBAAA,SAAAz/B,KAWA6gC,EAAAnnC,QAAA,WACA,IAAAob,EAAAzc,KAAAyc,KACAmnB,EAAA5jC,KAAA4jC,OAQA5jC,KAAAY,QAAA,WACAZ,KAAAO,MACAqjC,EAAArjC,IAAA,UAAAP,KAAAqB,SAIAuiC,EAAA,eAAAnnB,IAAA,EACAzc,KAAA4jC,OAAA5jC,KAAA6mC,MAAA,KAGAjD,EAAAnnB,GAAAm5D,GAAAn5D,EAAA64D,GAAA74D,KAcAu5D,EAAAE,QAAA,SAAAJ,GACA,IAAA9uE,EAAA,kBAAA8uE,EAAAN,GAAAM,KACA,0BAAA9uE,IAAAgvE,EAAA10E,UAAAssC,cAAA5mC,EAAA1F,YAmBA00E,EAAAG,eAAA,SAAA15D,EAAAq5D,GACA,qBAAAr5D,EACA,UAAArH,MAAA,yBAAAqH,EAAA,mCAAAA,EAAA,KAGA,GAAA84D,GAAA94D,GACMkb,EAAGM,KAAA,mBAAAxb,EAAA,wEACJ,GAAUqrD,GAAMxmE,UAAAoX,eAAA+D,GACrB,UAAArH,MAAA,yBAAAqH,EAAA,0DAGA,uBAAAq5D,EACA,UAAA1gE,MAAA,uBAAAqH,EAAA,qCAAAq5D,EAAA,KAcA,OAXAR,GAAA74D,GAAAq5D,EAnXA,WAsXAr5D,IACAu5D,EAAAE,QAAAJ,GACQhO,GAAMxmE,UAAAmb,GAlRd,SAAAA,EAAAq5D,GACA,IAAAM,EAAA,WAOAV,GAAA11E,KAAA,CACAyc,OACAq5D,SACA/wE,SAAA,OACK,GACL,IAAAA,EAAA+wE,EAAA10E,MAAApB,KAAAiB,WAOA,OANAw0E,GAAAz1E,KAAAyc,GACAi5D,GAAA11E,KAAA,CACAyc,OACAq5D,SACA/wE,aAEAA,GAMA,OAHAY,OAAAiW,KAAAk6D,GAAA5xE,QAAA,SAAAqG,GACA6rE,EAAA7rE,GAAAurE,EAAAvrE,KAEA6rE,EAwPcC,CAAA55D,EAAAq5D,GAENhO,GAAMxmE,UAAAmb,GAAAm5D,GAAAn5D,EAAAq5D,IAIdA,GAcAE,EAAAM,iBAAA,SAAA75D,GACA,GA7YA,WA6YAA,EACA,UAAArH,MAAA,mCAGAmgE,GAAA94D,YACA64D,GAAA74D,UACaqrD,GAAMxmE,UAAAmb,KAgBnBu5D,EAAAO,WAAA,SAAAp4B,GAKA,IAAAz7C,EASA,YAbA,IAAAy7C,IACAA,EAAAx4C,OAAAiW,KAAA05D,KAIAn3B,EAAAj6C,QAAA,SAAAuY,GACA,IAAAq5D,EAAAN,GAAA/4D,GAEAq5D,KACApzE,KAAA,IACA+Z,GAAAq5D,KAGApzE,GAaAszE,EAAAQ,iBAAA,SAAA/5D,GACA,IAAAq5D,EAAAN,GAAA/4D,GACA,OAAAq5D,KAAAG,SAAA,IAGAD,EAnQA,GAmRAA,GAAAR,aAOAQ,GAAAS,iBA1dA,SA2dAT,GAAAG,eA3dA,SA2dAH,IAOAlO,GAAMxmE,UAAAo1E,YAAA,SAAAj6D,GACN,QAAAzc,KAAA,qBAAAA,KAAA,eAAAyc,IASAqrD,GAAMxmE,UAAAq1E,UAAA,SAAAl6D,GACN,QAAA84D,GAAA94D,IAmEA,IA2FAm6D,GAAA,SAAA3zE,GACA,WAAAA,EAAAxC,QAAA,KAAAwC,EAAAvC,MAAA,GAAAuC,GAmFA,SAAA4zE,GAAA5zE,EAAA+G,EAAA29B,GACA,IAAA/D,EAAAizC,GAAAC,UAAA7zE,GAEA,GAAA2gC,EASA,OARA55B,GACM2tB,EAAGM,KAAA,WAAAh1B,EAAA,0DAGT0kC,GACA/D,EAAA+D,SAGA/D,EAGA,IAAAzb,EAAA,kBAAAllB,EAAAq8B,GAAA,IAAAs3C,GAAA3zE,MAEA,IAAA62B,GAAA3R,GACA,UAAAljB,UAAA,sDAGO40B,EAAAhwB,EAAQ2L,KAAAmmB,SAAAxT,IACXwP,EAAGM,KAAA,mDAGPjuB,KAAA,GACA6sE,GAAAE,MAAA,eAAA7yE,QAAA,SAAA8yE,GACA,IAAAt9D,EAAAs9D,EAAA7uD,EAAAqf,GAAAx9B,IAEAqR,GAAA3B,KAAA+B,MAAAI,QAAAnC,GAKA1P,EAAAw9B,GAAAx9B,EAAA0P,GAJMie,EAAGO,MAAA,kDAQT,IAAA++C,EAAwBxvC,GAASmC,aAAA,UAKjC,OAJAhG,EAAA,IAAAqzC,EAAA9uD,EAAAne,EAAA29B,GACAkvC,GAAAE,MAAA,SAAA7yE,QAAA,SAAA8yE,GACA,OAAAA,EAAApzC,KAEAA,EA+FA,GArFAizC,GAAAK,OAAA,GAcAL,GAAAE,MAAA,SAAA32E,EAAAqgB,GAOA,OANAo2D,GAAAK,OAAA92E,GAAAy2E,GAAAK,OAAA92E,IAAA,GAEAqgB,IACAo2D,GAAAK,OAAA92E,GAAAy2E,GAAAK,OAAA92E,GAAAE,OAAAmgB,IAGAo2D,GAAAK,OAAA92E,IAaAy2E,GAAAM,KAAA,SAAA/2E,EAAAqgB,GACAo2D,GAAAE,MAAA32E,EAAAqgB,IAaAo2D,GAAAO,SAAA,SAAAh3E,EAAAqgB,GACAo2D,GAAAE,MAAA32E,EAAA,GAAAE,OAAAmgB,GAAAnd,IAAA,SAAA+zE,GAMA,OALA,SAAAhxC,IAEA,OADAwwC,GAAAS,WAAAl3E,EAAAimC,GACAgxC,EAAAj2E,WAAA,EAAAH,gBAoBA41E,GAAAS,WAAA,SAAAl3E,EAAAqgB,GACA,IAAAjgB,EAAAq2E,GAAAE,MAAA32E,GAAAK,QAAAggB,GAEA,QAAAjgB,IAAA,KAIAq2E,GAAAK,OAAA92E,GAAAy2E,GAAAK,OAAA92E,GAAAM,QACAm2E,GAAAK,OAAA92E,GAAAO,OAAAH,EAAA,IACA,KAIY,IAARi3B,EAAA5tB,EAAQqgE,0BAAAtwC,KAAA,CACZ,IAAA29C,GAAAj4C,GAAA,wBAEA,IAAAi4C,GAAA,CACAA,GAAcvzC,GAAkB,uBAChC,IAAQwzC,GAAIl4C,GAAA,QAEJk4C,IACFA,GAAIl8C,aAAAi8C,GAAuBC,GAAIn8C,YAGrC6I,GAAAqzC,GAAA,kJAOA5zC,GAAA,EAAAkzC,IAOAA,GAAAZ,QAAoB5/C,EAQpBwgD,GAAA7sE,QAAoB89D,GAAMxmE,UAAAwmC,SAQ1B+uC,GAAAY,WAAA,WACA,OAAS3P,GAAM/5B,SAkBf8oC,GAAAC,UAAA,SAAA7zE,GACA,IACAkmB,EADA4kB,EAAgB+5B,GAAM/5B,QAGtB,qBAAA9qC,EAAA,CACA,IAAAy0E,EAAAd,GAAA3zE,GACA2gC,EAAAmK,EAAA2pC,GAEA,GAAA9zC,EACA,OAAAA,EAGAza,EAAAmW,GAAA,IAAAo4C,QAEAvuD,EAAAlmB,EAGA,GAAA62B,GAAA3Q,GAAA,CACA,IAAAwuD,EAAAxuD,EACAyuD,EAAAD,EAAA/zC,OACAogC,EAAA2T,EAAA3T,SAGA,GAAA4T,GAAA7pC,EAAAi2B,GACA,OAAA4T,GAAA7pC,EAAAi2B,KAeA6S,GAAAgB,cAAA,WACA,OAEAlyE,OAAAiW,KAAgBksD,GAAM/5B,SAAAzqC,IAAA,SAAAwZ,GACtB,OAAagrD,GAAM/5B,QAAAjxB,KACdsC,OAAA8uB,UAIL2oC,GAAA9oC,QAAoB+5B,GAAM/5B,QAC1B8oC,GAAAjtC,aAAyBnC,GAASmC,aAmBlCitC,GAAArpC,kBAAA,SAAA86B,EAAAwP,GACM15B,GAAI/T,OAAAytC,IACNngD,EAAGM,KAAA,OAAAqwC,EAAA,+GAGL7gC,GAAS+F,kBAAAtsC,KAAwBumC,GAAS6gC,EAAAwP,IAG5CjB,GAAAv0B,QAAoBlE,GAAIkE,QACxBu0B,GAAA10B,aAAyB/D,GAAI+D,aAC7B00B,GAAAkB,IAnjfA,SAAA33E,EAAA6jD,GACAL,GAAAxjD,GAAAwjD,GAAAxjD,IAAA,GACAwjD,GAAAxjD,GAAAe,KAAA8iD,IA0jfAt+C,OAAAC,eAAAixE,GAAA,cACAxvE,MAAA,GACA2wE,WAAA,EACAxyE,YAAA,IAEAG,OAAAC,eAAAixE,GAAA5yB,WAAA,cACA58C,MAAAy8C,GACAk0B,WAAA,EACAxyE,YAAA,IASAqxE,GAAAjnC,WASAinC,GAAApnC,iBACAonC,GAAAoB,OA7bA,SAAA9wE,EAAA+wE,QACA,IAAAA,IACAA,EAAA,IAGA,IAAAhxE,EAAA,WACAC,EAAA/F,MAAApB,KAAAiB,YAGAk3E,EAAA,GAeA,QAAA17D,IAbA,kBAAAy7D,GACAA,EAAAxxE,cAAAf,OAAArE,UAAAoF,cACAQ,EAAAgxE,EAAAxxE,aAGAyxE,EAAAD,GACG,oBAAAA,IACHhxE,EAAAgxE,GA5DA,SAAAhxE,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAlC,UAAA,kEAAAkC,GAGAD,EAAA5F,UAAAqE,OAAAyB,OAAAD,KAAA7F,UAAA,CACAoF,YAAA,CACAW,MAAAH,EACA1B,YAAA,EACAE,UAAA,EACAD,cAAA,KAIA0B,IAEAD,EAAAkxE,OAAAjxE,GA+CAkxE,CAAAnxE,EAAAC,GAGAgxE,EACAA,EAAAz/D,eAAA+D,KACAvV,EAAA5F,UAAAmb,GAAA07D,EAAA17D,IAIA,OAAAvV,GAgaA2vE,GAAArvC,gBACAqvC,GAAA5uE,QACA4uE,GAAAV,eAAAH,GAAAG,eACAU,GAAAP,iBAAAN,GAAAM,iBAaAO,GAAAf,OAAA,SAAAxN,EAAAwN,GAEA,OADEn+C,EAAGM,KAAA,wEACL+9C,GAAAG,eAAA7N,EAAAwN,IAGAe,GAAAN,WAAAP,GAAAO,WACAM,GAAArB,UAAAQ,GAAAR,UACAqB,GAAAL,iBAAAR,GAAAQ,iBAeAK,GAAAyB,YAAA,SAAA9/D,EAAA/W,GACA,IAAA82E,EAIA,OAFA//D,GAAA,GAAAA,GAAA2V,cACA0oD,GAAA7sE,QAAA4+B,UAAApB,GAAAqvC,GAAA7sE,QAAA4+B,YAAA2vC,EAAA,IAA6F//D,GAAA/W,EAAA82E,IAC7F1B,GAAA7sE,QAAA4+B,UAAApwB,IAUAq+D,GAAAz/C,IAAgBO,EAChBk/C,GAAAj/C,aAAAmB,EACA89C,GAAA2B,gBAAA3B,GAAAzmC,oBACAymC,GAAAlqB,cACAkqB,GAAA4B,cAr1bA,SAAAC,GACA1wE,GAAA0wE,GAq1bA7B,GAAA8B,gBA90bA,WACA3wE,GAAAqkD,IA80bAwqB,GAAAt8B,SAAqBb,GACrBm9B,GAAAp8B,cAA0BN,GAC1B08B,GAAA/xC,eACA+xC,GAAA12E,MACA02E,GAAA9zC,OACA8zC,GAAAt2E,OACAs2E,GAAAj2E,WAcAi2E,GAAAnhE,IAAgB2lC,EAAAxxC,EAChBgtE,GAAAj7B,UAAsBF,GACtBm7B,GAAA/5B,cACA+5B,GAAA75B,cACA,6JAAA94C,QAAA,SAAA4Y,GACA+5D,GAAA/5D,GAAA,WAEA,OADI6a,EAAGM,KAAA,WAAAnb,EAAA,qCAAyCA,EAAA,cAChD0iB,GAAA1iB,GAAA1b,MAAA,KAAAH,cAGA41E,GAAAprC,cAA0BnS,GAQ1Bu9C,GAAA+B,IAAAp5C,GAQAq3C,GAAA5/D,IAAAqjC,GAYA,IAAIu+B,GAAU,SAAAr/D,EAAAC,GAEd,kBAAAlR,KAAAkR,GACAA,GAIA,QAAAlR,KAAAiR,KACAA,EAAcs/D,EAAAjvE,EAAU0P,iBAAkBke,EAAA5tB,EAAQ+W,SAAAC,KAAArH,IAGzCs/D,EAAAjvE,EAAU0P,iBAAAC,EAAAC,KAGfs/D,GAAc,SAAAh0E,EAAAC,GAClB,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAII+zE,GAAW,WACf,SAAApnD,EAAAvsB,EAAAC,GACA,QAAAxE,EAAA,EAAmBA,EAAAwE,EAAAvE,OAAkBD,IAAA,CACrC,IAAAyE,EAAAD,EAAAxE,GACAyE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAP,EAAAE,EAAAM,IAAAN,IAIA,gBAAAP,EAAAe,EAAAC,GAGA,OAFAD,GAAA6rB,EAAA5sB,EAAA1D,UAAAyE,GACAC,GAAA4rB,EAAA5sB,EAAAgB,GACAhB,GAde,GA2CXi0E,GAAQ,SAAA/xE,EAAAC,GACZ,uBAAAA,GAAA,OAAAA,EACA,UAAAlC,UAAA,kEAAAkC,GAGAD,EAAA5F,UAAAqE,OAAAyB,OAAAD,KAAA7F,UAAA,CACAoF,YAAA,CACAW,MAAAH,EACA1B,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA0B,IAAAxB,OAAAQ,eAAAR,OAAAQ,eAAAe,EAAAC,GAAAD,EAAAb,UAAAc,IAGI+xE,GAAyB,SAAA35E,EAAA2B,GAC7B,IAAA3B,EACA,UAAAsH,eAAA,6DAGA,OAAA3F,GAAA,kBAAAA,GAAA,oBAAAA,EAAA3B,EAAA2B,GAGAi4E,GAAA,WA2BA,gBAAAC,EAAAt4E,GACA,GAAA2a,MAAAI,QAAAu9D,GACA,OAAAA,EACK,GAAA5yE,OAAAC,YAAAd,OAAAyzE,GACL,OA9BA,SAAAA,EAAAt4E,GACA,IAAAu4E,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,OAAA7rE,EAEA,IACA,QAAA8rE,EAAAnlD,EAAA8kD,EAAA5yE,OAAAC,cAA+C6yE,GAAAG,EAAAnlD,EAAAyvB,QAAAjuB,QAC/CujD,EAAAl4E,KAAAs4E,EAAApyE,QAEAvG,GAAAu4E,EAAAt4E,SAAAD,GAH8Ew4E,GAAA,IAKzE,MAAAhkE,GACLikE,GAAA,EACAC,EAAAlkE,EACK,QACL,KACAgkE,GAAAhlD,EAAA,QAAAA,EAAA,SACO,QACP,GAAAilD,EAAA,MAAAC,GAIA,OAAAH,EAOAK,CAAAN,EAAAt4E,GAEA,UAAAmE,UAAA,yDAjCA,GA8CA00E,GAAA9C,GAAArvC,aACAoyC,GAAA/C,GAAA/xC,YACA+0C,GAAAhD,GAAAz/C,IAWA0iD,GAAA,SAAAl6D,EAAA5K,GACA,sBAAA9Q,QAAA,SAAA61E,GACA,QAAAC,KAAAp6D,EAAAE,YAAAi6D,GACA,QAAAE,KAAAr6D,EAAAE,YAAAi6D,GAAAC,GAAA,CACA,IAAAE,EAAAt6D,EAAAE,YAAAi6D,GAAAC,GAAAC,GACAjlE,EAAAklE,EAAAH,EAAAC,EAAAC,OA6DAE,GAAA,SAAAv6D,EAAA2C,GACA,IAAA7f,EAAAi3E,GAAA/5D,EAAA,IACArD,EAAA7Z,EAAA2Z,UAAAkG,EAAAxN,KAEA,IAAAwH,EACA,YAKA,GAAAA,EAAAK,UAAA2F,EAAA3F,UAAAL,EAAAK,SAAA7b,SAAAwhB,EAAA3F,SAAA7b,QAAAwb,EAAAuB,gBAAAyE,EAAAzE,cACA,YAGA,IAAAs8D,EAAAT,GAAAp9D,EAAAgG,GAEAhG,EAAAK,WACAw9D,EAAAx9D,SAxDA,SAAAy6D,EAAA3vB,EAAA93C,GACA,IAAAlN,EAAAglD,EAAAhnD,QACAkP,KAAA,EAGA,IAFA,IAAA7O,EAAA4C,KAAAG,IAAAuzE,EAAAt2E,OAAA2mD,EAAA3mD,OAAA6O,GAEA9O,EAAA8O,EAAsB9O,EAAAC,EAAYD,IAClC4B,EAAA5B,EAAA8O,GAAA+pE,GAAAtC,EAAAv2E,GAAA4B,EAAA5B,EAAA8O,IAGA,OAAAlN,EA+CA23E,CAAA99D,EAAAK,SAAA2F,EAAA3F,SAAA2F,EAAAzE,cAAAvB,EAAAuB,gBAIAs8D,EAAAx9D,SAAA1Y,QAAA,SAAAkhB,IAhDA,SAAAA,EAAAk1D,GACAl1D,EAAAxH,cACAwH,EAAAxH,YAA0Bi7D,GAAUyB,EAAAl1D,EAAArQ,MAGpCqQ,EAAAvf,MAAAuf,EAAAvf,IAAA+X,cACAwH,EAAAvf,IAAA+X,YAA8Bi7D,GAAUyB,EAAAl1D,EAAAvf,IAAAkP,MAGxCqQ,EAAA9hB,MAAA8hB,EAAA9hB,IAAAsa,cACAwH,EAAA9hB,IAAAsa,YAA8Bi7D,GAAUyB,EAAAl1D,EAAA9hB,IAAAyR,MAuCxCwlE,CAAAn1D,EAAAg1D,EAAAx8D,eAKA,QAAA9c,EAAA,EAAiBA,EAAA4B,EAAA2Z,UAAAtb,OAA6BD,IAC9C4B,EAAA2Z,UAAAvb,GAAAiU,MAAAwN,EAAAxN,MACArS,EAAA2Z,UAAAvb,GAAAs5E,GAKA,OADA13E,EAAA2Z,UAAAkG,EAAAxN,KAAAqlE,EACA13E,GAGA83E,GAAA,SAAA56D,GAIA,IAFA,IAAA9e,EAAA8e,EAAAvD,UAAAtb,OAEAD,KAAA,CACA,IAAAyb,EAAAqD,EAAAvD,UAAAvb,GACA8e,EAAAvD,UAAAE,EAAAxH,KAAAwH,EACAA,EAAAqB,YAA2Bi7D,GAAUj5D,EAAA7K,IAAAwH,EAAAxH,KACrCwH,EAAAtZ,GAAAnC,EAEAyb,EAAAG,aAMAH,EAAAG,WAAA,GACAm9D,GAAA5hD,KAAA,yEAKAwiD,GAAA,SAAA76D,GACAk6D,GAAAl6D,EAAA,SAAA4a,GACAA,EAAAzlB,MACAylB,EAAA5c,YAA+Bi7D,GAAUj5D,EAAA7K,IAAAylB,EAAAzlB,SAgBzC2lE,GAAA,SAAAn4D,EAAAmlC,GACA,IAAAizB,EAAAp4D,EAAA3F,SAAA2F,EAAA3F,SAAA7b,OAAA,GAWA,OARA2mD,GAAAizB,KAAAztE,SACA,IAAAytE,EAAAztE,SAIA,KAAAqV,EAAA1E,gBAAA,KAgBI+8D,GAAc,SAAAvkC,GAGlB,SAAAwkC,EAAAC,EAAAC,EAAA1iE,GACI0gE,GAAc/4E,KAAA66E,GAElB,IAAA5tD,EAAgBisD,GAAyBl5E,MAAA66E,EAAAx0E,WAAAV,OAAAS,eAAAy0E,IAAA35E,KAAAlB,OAMzC,GAJAitB,EAAA6tD,SACA7tD,EAAA+tD,KAAAD,EACA9tD,EAAA5U,mBAEA4U,EAAA6tD,OACA,UAAA1lE,MAAA,wCA8BA,OA1BA6X,EAAA4Z,MAAA,eAEA5Z,EAAA9sB,GAAA,gCACA,kBAAA8sB,EAAA4Z,QAKA5Z,EAAA4Z,MAAA,wBACA5Z,EAAAoiD,QAAApiD,EAAA+tD,KAAAtlE,IAAA,CACAX,IAAa8jE,GAAU5rD,EAAArN,OAAA7K,IAAAkY,EAAA1K,QAAAxN,KACvBsD,gBAAA4U,EAAA5U,iBACO,SAAA6f,EAAA+iD,GAEP,GAAAhuD,EAAAoiD,QAIA,OAAAn3C,EACAjL,EAAAiuD,qBAAAjuD,EAAAoiD,QAAApiD,EAAA1K,QAAAxN,IAAA,sBAGAkY,EAAAkuD,aAAAluD,EAAAoiD,QAAApiD,EAAA1K,QAAAxN,UAIAkY,EAgVA,OA1XEgsD,GAAQ4B,EA2XTjB,IA9UCZ,GAAW6B,EAAA,EACbh1E,IAAA,uBACAwB,MAAA,SAAA+zE,EAAAnkE,EAAAokE,GAEAr7E,KAAAqvE,QAAA,KAEAgM,IACAr7E,KAAA6mC,MAAAw0C,GAGAr7E,KAAAk4B,MAAA,CACA3b,SAAAvc,KAAA4f,OAAAvD,UAAApF,GACAJ,OAAAukE,EAAAvkE,OACA2Y,QAAA,sCAAAvY,EACAtB,aAAAylE,EAAAzlE,aACA6C,KAAA4iE,EAAAvkE,QAAA,SAEA7W,KAAAY,QAAA,WAIG,CACHiF,IAAA,eACAwB,MAAA,SAAA+zE,EAAAnkE,GACA,IAAAsX,EAAAvuB,KAGAA,KAAAqvE,QAAA,KACArvE,KAAA6mC,MAAA,gBACA,IAAA+T,EAAA,IAAuBjsB,EACvBisB,EAAAz5C,KAAAi6E,EAAAzlE,cACAilC,EAAAx4C,MACAw4C,EAAAzrB,SAAApa,IAAAkC,EAGA2jC,EAAAzrB,SAAAzS,WAAAk+B,EAAAzrB,SAAAzS,YAAA,GAEA,IAAAgrC,EAAAyyB,GAAAn6E,KAAA4f,OAAAg7B,EAAAzrB,UACAnvB,KAAA6d,eAAA+8B,EAAAzrB,SAAAtR,eAEA6pC,GACA1nD,KAAA4f,OAAA8nC,EACA1nD,KAAAs7E,OAAAt7E,KAAA4f,OAAAvD,UAAAu+B,EAAAzrB,SAAApa,MAEA/U,KAAAY,QAAA,qBAIAZ,KAAAuiB,QAAA9E,UACQga,EAAA5tB,EAAQ0M,aAAAvW,KAAAu7E,oBAChBv7E,KAAAu7E,mBAAkC9jD,EAAA5tB,EAAQ+N,WAAA,WAC1C2W,EAAA3tB,QAAA,uBACS85E,GAAA16E,KAAAuiB,UAAAmlC,KAGT1nD,KAAAY,QAAA,oBAMG,CACHiF,IAAA,UACAwB,MAAA,WACArH,KAAAw7E,cACM/jD,EAAA5tB,EAAQ0M,aAAAvW,KAAAu7E,sBAEX,CACH11E,IAAA,cACAwB,MAAA,WACA,GAAArH,KAAAqvE,QAAA,CACA,IAAAoM,EAAAz7E,KAAAqvE,QACArvE,KAAAqvE,QAAA,KACAoM,EAAA/jE,mBAAA,KACA+jE,EAAAljE,WAgBG,CACH1S,IAAA,QACAwB,MAAA,SAAAkV,GACA,IAAA2wB,EAAAltC,KAGA,IAAAuc,EACA,OAAAvc,KAAAs7E,OAIA,oBAAAt7E,KAAA6mC,MACA,UAAAzxB,MAAA,qCAAApV,KAAA6mC,OAGA,IAAAw0C,EAAAr7E,KAAA6mC,MAGA,qBAAAtqB,EAAA,CACA,IAAAvc,KAAA4f,OAAAvD,UAAAE,GACA,UAAAnH,MAAA,yBAAAmH,GAGAA,EAAAvc,KAAA4f,OAAAvD,UAAAE,GAGA,IAAAm/D,GAAA17E,KAAAs7E,QAAA/+D,EAAAxH,MAAA/U,KAAAs7E,OAAAvmE,IAEA,GAAA/U,KAAA4f,OAAAvD,UAAAE,EAAAxH,KAAA0I,QAgBA,OAdAzd,KAAAqvE,UACArvE,KAAAqvE,QAAA33D,mBAAA,KACA1X,KAAAqvE,QAAA92D,QACAvY,KAAAqvE,QAAA,MAGArvE,KAAA6mC,MAAA,gBACA7mC,KAAAs7E,OAAA/+D,OAEAm/D,IACA17E,KAAAY,QAAA,iBACAZ,KAAAY,QAAA,iBAOA,GAAA86E,EAAA,CAMA,GAFA17E,KAAA6mC,MAAA,kBAEA7mC,KAAAqvE,QAAA,CACA,GAAYwJ,GAAU74E,KAAA4f,OAAA7K,IAAAwH,EAAAxH,OAAA/U,KAAAqvE,QAAAp4D,IAGtB,OAGAjX,KAAAqvE,QAAA33D,mBAAA,KACA1X,KAAAqvE,QAAA92D,QACAvY,KAAAqvE,QAAA,KAIArvE,KAAAs7E,QACAt7E,KAAAY,QAAA,iBAGAZ,KAAAqvE,QAAArvE,KAAAg7E,KAAAtlE,IAAA,CACAX,IAAa8jE,GAAU74E,KAAA4f,OAAA7K,IAAAwH,EAAAxH,KACvBsD,gBAAArY,KAAAqY,iBACO,SAAA6f,EAAA+iD,GAEP,GAAA/tC,EAAAmiC,QAAA,CAIA,GAAAn3C,EACA,OAAAgV,EAAAguC,qBAAAhuC,EAAAmiC,QAAA9yD,EAAAxH,IAAAsmE,GAGAnuC,EAAAiuC,aAAAF,EAAA1+D,EAAAxH,KAGA,gBAAAsmE,EACAnuC,EAAAtsC,QAAA,kBAEAssC,EAAAtsC,QAAA,qBAQG,CACHiF,IAAA,QACAwB,MAAA,WACArH,KAAAw7E,cACM/jD,EAAA5tB,EAAQ0M,aAAAvW,KAAAu7E,oBAEd,iBAAAv7E,KAAA6mC,QAGA7mC,KAAA27E,SAAA,GAIA,oBAAA37E,KAAA6mC,MAIA7mC,KAAAs7E,OACAt7E,KAAA6mC,MAAA,gBAEA7mC,KAAA6mC,MAAA,cAEO,0BAAA7mC,KAAA6mC,QACP7mC,KAAA6mC,MAAA,mBAOG,CACHhhC,IAAA,OACAwB,MAAA,SAAAu0E,GACA,IAAAvuC,EAAArtC,KAEMy3B,EAAA5tB,EAAQ0M,aAAAvW,KAAAu7E,oBACd,IAAAh5D,EAAAviB,KAAAuiB,QAEA,GAAAq5D,EAAA,CACA,IAAAnnD,EAAAlS,IAAA1E,eAAA,UACA7d,KAAAu7E,mBAAkC9jD,EAAA5tB,EAAQ+N,WAAA,WAC1C,OAAAy1B,EAAAgQ,QACS5oB,QAITz0B,KAAA27E,QAKAp5D,MAAA9E,QACAzd,KAAAY,QAAA,sBAEAZ,KAAAY,QAAA,kBAPAZ,KAAA+T,UAcG,CACHlO,IAAA,QACAwB,MAAA,WACA,IAAAo5C,EAAAzgD,KAEAA,KAAA27E,SAAA,EAEA37E,KAAAqvE,QAAArvE,KAAAg7E,KAAAtlE,IAAA,CACAX,IAAA/U,KAAA86E,OACAziE,gBAAArY,KAAAqY,iBACO,SAAA6f,EAAA+iD,GAEP,GAAAx6B,EAAA4uB,QAAA,CAOA,GAFA5uB,EAAA4uB,QAAA,KAEAn3C,EAaA,OAZAuoB,EAAAvoB,MAAA,CACArhB,OAAAokE,EAAApkE,OACA2Y,QAAA,sCAAAixB,EAAAq6B,OACAnlE,aAAAslE,EAAAtlE,aAEA6C,KAAA,GAGA,iBAAAioC,EAAA5Z,QACA4Z,EAAAk7B,SAAA,GAGAl7B,EAAA7/C,QAAA,SAGA,IAAAg6C,EAAA,IAAyBjsB,EAMzB,OALAisB,EAAAz5C,KAAA85E,EAAAtlE,cACAilC,EAAAx4C,MACAq+C,EAAA5Z,MAAA,cACA+T,EAAAzrB,SAAApa,IAAA0rC,EAAAq6B,OAEAlgC,EAAAzrB,SAAA9S,WACAokC,EAAA7gC,OAAAg7B,EAAAzrB,SACAqrD,GAAA/5B,EAAA7gC,QACA66D,GAAAh6B,EAAA7gC,QAEA6gC,EAAA7/C,QAAA,uBAEA6/C,EAAA4uB,SAGA5uB,EAAAl+B,MAAAq4B,EAAAzrB,SAAA9S,UAAA,OAQAokC,EAAA7gC,OAAA,CACAE,YAAA,CACAtB,MAAA,GACAuB,MAAA,GACAkP,kBAAA,GACAxQ,UAAA,IAEA1J,IAAe0iB,EAAA5tB,EAAQ+W,SAAAC,KACvBxE,UAAA,EACAtH,IAAA0rC,EAAAq6B,OACA73E,GAAA,KAGAw9C,EAAA7gC,OAAAvD,UAAAokC,EAAAq6B,QAAAr6B,EAAA7gC,OAAAvD,UAAA,GACAokC,EAAA7gC,OAAAvD,UAAA,GAAAuB,YAAA6iC,EAAAq6B,OAGAr6B,EAAA7gC,OAAAvD,UAAA,GAAAK,WAAA+jC,EAAA7gC,OAAAvD,UAAA,GAAAK,YAAA,GAEA+jC,EAAA06B,aAAAF,EAAAx6B,EAAAq6B,QAEAr6B,EAAA7/C,QAAA,0BAIAi6E,EA3XkB,GAoYlBrC,GAAA3B,GAAA2B,gBAkHAqD,GAAA,SAAAt/D,EAAAu/D,EAAAC,GACA,IAAAC,EACAC,EAMA,MAJA,qBAAAH,IACAA,EAAAv/D,EAAAuB,cAAAvB,EAAAK,SAAA7b,QAGA+6E,EAAAv/D,EAAAuB,cACA,GAIAk+D,EAtHA,SAAAz/D,EAAAu/D,GACA,IAAAp5E,EAAA,EACA5B,EAAAg7E,EAAAv/D,EAAAuB,cAGAsH,EAAA7I,EAAAK,SAAA9b,GAGA,GAAAskB,EAAA,CACA,wBAAAA,EAAArR,MACA,OACArR,OAAA0iB,EAAArR,MACAid,SAAA,GAIA,wBAAA5L,EAAAhjB,IACA,OACAM,OAAA0iB,EAAAhjB,IAAAgjB,EAAAlY,SACA8jB,SAAA,GAKA,KAAAlwB,KAAA,CAGA,wBAFAskB,EAAA7I,EAAAK,SAAA9b,IAEAsB,IACA,OACAM,SAAA0iB,EAAAhjB,IACA4uB,SAAA,GAMA,GAFAtuB,GAAA0iB,EAAAlY,SAEA,qBAAAkY,EAAArR,MACA,OACArR,SAAA0iB,EAAArR,MACAid,SAAA,GAKA,OACAtuB,SACAsuB,SAAA,GAwEAkrD,CAAA3/D,EAAAu/D,IAEA9qD,QAIAgrD,EAAAt5E,QAKAu5E,EAvEA,SAAA1/D,EAAAu/D,GAMA,IALA,IAAAp5E,EAAA,EACA0iB,OAAA,EACAtkB,EAAAg7E,EAAAv/D,EAAAuB,cAGQhd,EAAAyb,EAAAK,SAAA7b,OAA8BD,IAAA,CAGtC,wBAFAskB,EAAA7I,EAAAK,SAAA9b,IAEAiT,MACA,OACArR,OAAA0iB,EAAArR,MAAArR,EACAsuB,SAAA,GAMA,GAFAtuB,GAAA0iB,EAAAlY,SAEA,qBAAAkY,EAAAhjB,IACA,OACAM,OAAA0iB,EAAAhjB,IAAAM,EACAsuB,SAAA,GAMA,OACAtuB,QAAA,EACAsuB,SAAA,GA0CAmrD,CAAA5/D,EAAAu/D,IAEA9qD,QAGAirD,EAAAv5E,OAIAs5E,EAAAt5E,OAAAq5E,GAmBIK,GAAQ,SAAA7/D,EAAAu/D,EAAAC,GACZ,IAAAx/D,EACA,SASA,GANA,kBAAAw/D,IACAA,EAAA,GAKA,qBAAAD,EAAA,CAEA,GAAAv/D,EAAAuU,cACA,OAAAvU,EAAAuU,cAIA,IAAAvU,EAAAkB,QACA,OAAaga,EAAA5tB,EAAQhG,SAKrB,OAAAg4E,GAAAt/D,EAAAu/D,EAAAC,IAeAM,GAAA,SAAA9/D,EAAA+/D,EAAAC,GACA,IAAAC,EAAA,EAEA,GAAAF,EAAAC,EAAA,CACA,IAAAr/D,EAAA,CAAAq/D,EAAAD,GACAA,EAAAp/D,EAAA,GACAq/D,EAAAr/D,EAAA,GAGA,GAAAo/D,EAAA,GACA,QAAAx7E,EAAAw7E,EAA4Bx7E,EAAA6C,KAAAG,IAAA,EAAAy4E,GAA2Bz7E,IACvD07E,GAAAjgE,EAAAsB,eAGAy+D,EAAA,EAGA,QAAAhoD,EAAAgoD,EAA2BhoD,EAAAioD,EAAejoD,IAC1CkoD,GAAAjgE,EAAAK,SAAA0X,GAAApnB,SAGA,OAAAsvE,GAgBAC,GAAA,SAAAlgE,GACA,IAAAA,EAAAK,SAAA7b,OACA,SAOA,IAJA,IAAAD,EAAAyb,EAAAK,SAAA7b,OAAA,EACA27E,EAAAngE,EAAAK,SAAA9b,GAAAoM,UAAAqP,EAAAsB,eACA8+D,EAAAD,EAAA,EAAAngE,EAAAsB,eAEA/c,QACA47E,GAAAngE,EAAAK,SAAA9b,GAAAoM,WAEAyvE,KAKA,OAAAh5E,KAAAmgB,IAAA,EAAAhjB,IAiBA87E,GAAA,SAAArgE,EAAAw/D,EAAAc,GACA,IAAAtgE,MAAAK,SACA,YAGA,GAAAL,EAAAkB,QACA,OAAW2+D,GAAQ7/D,GAGnB,UAAAw/D,EACA,YAGAA,KAAA,EACA,IAAAD,EAAAe,EAAAJ,GAAAlgE,KAAAK,SAAA7b,OACA,OAAA86E,GAAAt/D,IAAAuB,cAAAg+D,EAAAC,IA+BAe,GAAA,SAAA7xC,GACA,OAAAA,EAAAtnC,KAAAigB,MAAAqnB,KAAA,GAGA8xC,GAAA,SAAAC,EAAA/xC,GAEA,GAAA6xC,GAAA7xC,GACA,OAAAA,EAAA,GAAA+xC,EAKA,IAFA,IAAAC,EAAAhyC,EAAA9iC,WAAA2S,MAAA,QAAA/Z,OAEAD,EAAA,EAAiBA,GAAAm8E,EAAuBn8E,IAAA,CACxC,IAAA2C,EAAAE,KAAAC,IAAA,GAAA9C,GACAyzC,EAAAtJ,EAAAxnC,EAEA,GAAAq5E,GAAAvoC,IAAAzzC,IAAAm8E,EACA,OAAA1oC,EAAAyoC,GAAAv5E,IAKAy5E,GAAAH,GAAA90E,KAAA,QACAk1E,GAAAJ,GAAA90E,KAAA,SA2FAm1E,GAAA,SAAA7gE,GACA,OAAAA,EAAA8gE,cAAA9gE,EAAA8gE,aAAAv1D,KAAAtE,OAYA85D,GAAA,SAAA/gE,GACA,OAAAA,EAAA8gE,cAAA9gE,EAAA8gE,eAAAx5E,KAWA05E,GAAA,SAAAhhE,GACA,IAAAihE,EAAAJ,GAAA7gE,GACA,OAAAA,EAAAikB,WAAAg9C,GA2DA5nC,GAAA,SAAAxoB,EAAA7Q,GACA,OAAAA,EAAAG,YAAAH,EAAAG,WAAA0Q,IAqCAqwD,GAAA,SAAA79D,EAAA2C,GACA,OAAA3C,EAAAvD,UAAAtb,OACA,SAGA,IAAA28E,EAAAn7D,EAAA7F,WAAAW,WAAAgI,OAAAs4D,UACA,OAMG,IANH/9D,EAAAvD,UAAA+C,OAAA,SAAA7C,GACA,QAAAghE,GAAAhhE,KAIAA,EAAAG,WAAAW,WAAA,GAAAqgE,IACG38E,QAIH68E,GAAA,CACA1wE,SAAYkvE,GACZ/2B,SA5QA,SAAA9oC,EAAAw/D,GACA,IACAjqB,EAAAiqB,GAAA,EACAhsB,EAAA6sB,GAAArgE,EAAAw/D,GAFA,GAIA,cAAAhsB,EACAyoB,KAGAA,GAAA1mB,EAAA/B,IAoQA0sB,iBACAoB,oBA9NA,SAAAthE,EAAAggC,EAAA+/B,EAAAv6E,GACA,IAAAjB,OAAA,EACAskB,OAAA,EACA04D,EAAAvhE,EAAAK,SAAA7b,OACA0gB,EAAA86B,EAAAx6C,EAEA,GAAA0f,EAAA,GAGA,GAAA66D,EAAA,EACA,IAAAx7E,EAAAw7E,EAAA,EAA8Bx7E,GAAA,EAAQA,IAItC,GAHAskB,EAAA7I,EAAAK,SAAA9b,IACA2gB,GAAA07D,GAAA/3D,EAAAlY,WAEA,EACA,OACA6wE,WAAAj9E,EACAiB,YAAAs6E,GAAA9/D,EAAA+/D,EAAAx7E,IAQA,OACAi9E,WAAA,EACAh8E,UAAAw6C,GAOA,GAAA+/B,EAAA,GACA,IAAAx7E,EAAAw7E,EAAwBx7E,EAAA,EAAOA,IAG/B,IAFA2gB,GAAAlF,EAAAsB,gBAEA,EACA,OACAkgE,WAAA,EACAh8E,UAAAw6C,GAKA+/B,EAAA,EAKA,IAAAx7E,EAAAw7E,EAAsBx7E,EAAAg9E,EAAiBh9E,IAIvC,GAHAskB,EAAA7I,EAAAK,SAAA9b,IACA2gB,GAAAy7D,GAAA93D,EAAAlY,WAEA,EACA,OACA6wE,WAAAj9E,EACAiB,YAAAs6E,GAAA9/D,EAAA+/D,EAAAx7E,IAMA,OACAi9E,WAAAD,EAAA,EACA/7E,UAAAw6C,IA6JAghC,aACAS,WA5GA,SAAAzhE,GACA,OAAAA,EAAAikB,UA4GA48C,iBACAE,kBACAV,eACAqB,MAtGA,SAAA17D,GACA,QAAAzhB,EAAA,EAAiBA,EAAAyhB,EAAA3F,SAAA7b,OAA2BD,IAC5C,GAAAyhB,EAAA3F,SAAA9b,GAAA+E,IACA,SAIA,UAgGAq4E,OAvFA,SAAA37D,GACA,QAAAzhB,EAAA,EAAiBA,EAAAyhB,EAAA3F,SAAA7b,OAA2BD,IAC5C,GAAAyhB,EAAA3F,SAAA9b,GAAAwC,IACA,SAIA,UAiFAsyC,gBACAuoC,2BA9CA,SAAAC,EAAA9gE,EAAAf,GACA,IAAA8hE,EAAAp9E,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,KAEA,OAAA20C,GAAA,YAAAr5B,IAIA6hE,EAAA7hE,EAAAG,WAAAW,UACA,EAAAghE,GAAA/gE,EAJAmnD,KA2CAgZ,6BAMAa,GAAAzH,GAAAnhE,IACA6oE,GAAA1H,GAAArvC,aAEAg3C,GAAA,WA+DA,OA9DA,SAAAC,EAAAz0E,EAAAgL,GAEAhL,EAAAu0E,GAAA,CACAjmE,QAAA,MACKtO,GAGL,IAAA00E,EAAAD,EAAAC,eAAA7H,GAAA8H,IAAAjpE,IAAAgpE,cAEA,GAAAA,GAAA,oBAAAA,EAAA,CACA,IAAAE,EAAAF,EAAA10E,GAEA40E,IACA50E,EAAA40E,GAIA,IAAAvP,EAAAiP,GAAAt0E,EAAA,SAAAkuB,EAAA3iB,GACA,IAAAspE,EAAAxP,EAAA95D,UAEA2iB,GAAA2mD,IACAxP,EAAAyP,aAAAh3D,KAAAtE,MACA6rD,EAAA0P,cAAA1P,EAAAyP,aAAAzP,EAAA2P,YACA3P,EAAAgP,cAAAQ,EAAAt8E,YAAAs8E,EAAA99E,OAEAsuE,EAAA/xD,YACA+xD,EAAA/xD,UAAA3Z,KAAAigB,MAAAyrD,EAAAgP,cAAAhP,EAAA0P,cAAA,SAIAxpE,EAAAyB,UACAq4D,EAAA4P,gBAAA1pE,EAAAyB,SAMAkhB,GAAA,cAAAA,EAAA1f,OACA62D,EAAA6P,UAAA,GAMAhnD,GAAAm3C,EAAAz4D,SAAA,MAAArB,EAAAkB,YAAA,MAAAlB,EAAAkB,YAAA,IAAAlB,EAAAkB,aACAyhB,EAAA,IAAA9iB,MAAA,mCAAAi6D,IAAAwP,GAAAxP,EAAA15D,iBAGAX,EAAAkjB,EAAAm3C,KAEA8P,EAAA9P,EAAA92D,MASA,OAPA82D,EAAA92D,MAAA,WAEA,OADA82D,EAAAz4D,SAAA,EACAuoE,EAAA/9E,MAAAiuE,EAAApuE,YAGAouE,EAAAt6D,IAAA/K,EAAA+K,IACAs6D,EAAA2P,YAAAl3D,KAAAtE,MACA6rD,IAiBA+P,GAAA,SAAAl+D,EAAApgB,GACA,OAAAogB,EAAAnN,MAAAjT,GAAA,IAAAogB,EAAA9e,IAAAtB,IAUAu+E,GAAA,SAAA13E,EAAA7G,GACA,IAAAuG,EAAAM,EAAAQ,SAAA,IACA,WAAAwS,UAAA,IAAAtT,EAAAtG,QAAAsG,GAAAvG,EAAA,WAGAw+E,GAAA,SAAA33E,GACA,OAAAA,GAAA,IAAAA,EAAA,IACAhF,OAAAC,aAAA+E,GAGA,KAcA43E,GAAA,SAAA/vD,GACA,IAAAgwD,EAAA,GAcA,OAbA75E,OAAAiW,KAAA4T,GAAAtrB,QAAA,SAAA2B,GACA,IAAAwB,EAAAmoB,EAAA3pB,GAEA45E,YAAAC,OAAAr4E,GACAm4E,EAAA35E,GAAA,CACAiO,MAAAzM,EAAA5E,OACAiC,WAAA2C,EAAA3C,WACAnC,WAAA8E,EAAA9E,YAGAi9E,EAAA35E,GAAAwB,IAGAm4E,GAQAG,GAAA,SAAAhwE,GACA,IAAA4R,EAAA5R,EAAA4R,WAAA,CACAxgB,OAAA8C,IACA+L,OAAA,GAEA,OAAA2R,EAAAxgB,OAAAwgB,EAAA3R,OAAAD,EAAAiO,aAAA5C,KAAA,MAOA4kE,GAAA,SAAAn+E,GAOA,IANA,IAAAqS,EAAA2H,MAAAna,UAAAZ,MAAAQ,KAAAO,GAEAiB,EAAA,GAIAmwB,EAAA,EAAiBA,EAAA/e,EAAA/S,OALjB,GAK0C8xB,IAG1CnwB,GAFAoR,EAAApT,MANA,GAMAmyB,EANA,GAMAA,EANA,IAMAvvB,IAAA+7E,IAAArkE,KAAA,IAEA,IADAlH,EAAApT,MAPA,GAOAmyB,EAPA,GAOAA,EAPA,IAOAvvB,IAAAg8E,IAAAtkE,KAAA,IACA,KAGA,OAAAtY,GAmBAm9E,GAEAl6E,OAAA85B,OAAA,CACA8/C,6BACAI,iBACAC,WACAE,QAtBA,SAAA5iE,GACA,IAAApJ,EAAAoJ,EAAApJ,MACA,OAAA8rE,GAAA9rE,IAqBAisE,WAlBA,SAAA5+D,GACA,IAAAze,EAAA,GACA5B,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAAqgB,EAAApgB,OAAmBD,IAChC4B,GAAA08E,GAAAj+D,EAAArgB,GAAA,IAGA,OAAA4B,KA2BAs9E,GAAA,SAAAC,EAAA7/E,EAAA8/E,EAAAhzE,GACA,IAAAiD,OAAA,EAEA,cAAA/P,EAAA,CACA+P,EAAA,IAAA2X,KAAA,IAAA5a,EAAAgzE,EAAApgD,WACA,IAAAqgD,EAAAF,EAAAG,cACAC,EAAAH,EAAAE,cACAE,EAAAnwE,EAAAiwE,cACA,OAAAC,GAAAF,MAAAG,EACG,cAAAlgF,EAEH,OADA+P,EAAAjD,EAAAgzE,EACAA,GAAAD,MAAA9vE,GAiBAowE,GAAA,SAAA9+D,EAAArhB,EAAAmc,GACA,IAAAA,EAAAK,UAAA,IAAAL,EAAAK,SAAA7b,OACA,YAGA,cAAAX,GAAA,WAAAA,EACA,YAKA,IAFA,IAAAogF,EAAA,EAEA1/E,EAAA,EAAiBA,EAAAyb,EAAAK,SAAA7b,OAA8BD,IAAA,CAC/C,IAAAskB,EAAA7I,EAAAK,SAAA9b,GACA2/E,EAAAD,EAAAp7D,EAAAlY,SACAgzE,OAAA,EACAQ,OAAA,EAEA,WAAAtgF,GACA8/E,EAAA96D,EAAArR,MACA2sE,EAAAF,IAGAN,EAAA96D,EAAA6I,eACAyyD,EAAAt7D,EAAA6I,gBAGA,IAAA0yD,EAAA,qBAAAv7D,EAAArR,OAAA,qBAAAqR,EAAAhjB,KAAA49E,GAAAv+D,EAAArhB,EAAA8/E,EAAA96D,EAAAhjB,IAAAgjB,EAAArR,OACA6sE,EAAAZ,GAAAv+D,EAAArhB,EAAAsgF,EAAAt7D,EAAAlY,UAEA,GAAAyzE,EACA,OACAv7D,UACAs7D,iBACAtgF,KAAA,YAEK,GAAAwgF,EACL,OACAx7D,UACAs7D,iBACAtgF,KAAA,YAIAogF,EAAAC,EAGA,aA0GAI,GAAA,SAAA3jE,GACA,IAAAX,EAAAW,EAAAX,SACAukE,EAAA5jE,EAAAuE,KACAA,OAAA9T,IAAAmzE,OAAAnzE,EAAAmzE,EACA9rE,EAAAkI,EAAAlI,SAEA,IAAAA,EACA,UAAAI,MAAA,4CAGA,IAAAmH,QAAA5O,IAAA8T,EACA,OAAAzM,EAAA,CACAwa,QAAA,sDAIA,IAAAuxD,EAhHA,SAAAt/D,EAAAlF,GAOA,OAAAgkE,GAAA9+D,EAAA,SAAAlF,GAyGAykE,CAAAv/D,EAAAlF,GAEA,IAAAwkE,EACA,OAAA/rE,EAAA,CACAwa,QAAA,mCAIA,gBAAAuxD,EAAA3gF,KACA,OAAA4U,EAAA,CACAwa,QAAA,uFACAyxD,SAAAF,EAAAL,iBAIA,IAAAQ,EAAA,CACAC,aAAA1/D,GAUA,OAPAs/D,EAAA37D,QAAA6I,iBAIAizD,EAAAE,gBAAAL,EAAA37D,QAAA6I,eAAAmyD,eAGAprE,EAAA,KAAAksE,IAkBAG,GAAA,SAAAA,EAAApjE,GACA,IAAAijE,EAAAjjE,EAAAijE,WACA3kE,EAAA0B,EAAA1B,SACA+kE,EAAArjE,EAAAsjE,WACAA,OAAA5zE,IAAA2zE,EAAA,EAAAA,EACAE,EAAAvjE,EAAAujE,OACAC,EAAAxjE,EAAAyjE,eACAA,OAAA/zE,IAAA8zE,KACA3vC,EAAA7zB,EAAA6zB,KACA98B,EAAAiJ,EAAAjJ,SAEA,IAAAA,EACA,UAAAI,MAAA,+CAGA,wBAAA8rE,IAAA3kE,IAAAilE,EACA,OAAAxsE,EAAA,CACAwa,QAAA,uEAIA,IAAAjT,EAAAkB,UAAAq0B,EAAAuM,YACA,OAAArpC,EAAA,CACAwa,QAAA,4DAIA,IAvHA,SAAAjT,GACA,IAAAA,EAAAK,UAAA,IAAAL,EAAAK,SAAA7b,OACA,SAGA,QAAAD,EAAA,EAAiBA,EAAAyb,EAAAK,SAAA7b,OAA8BD,IAG/C,IAFAyb,EAAAK,SAAA9b,GAEAmtB,eACA,SAIA,SA0GA0zD,CAAAplE,GACA,OAAAvH,EAAA,CACAwa,QAAA,yDAAAjT,EAAAqB,cAIA,IAAAmjE,EA5KA,SAAAG,EAAA3kE,GACA,IAAA0R,OAAA,EAEA,IACAA,EAAA,IAAAnG,KAAAo5D,GACG,MAAAv5E,GAEH,YAMA,OAAA44E,GAAAtyD,EAAA,SAAA1R,GA+JAqlE,CAAAV,EAAA3kE,GAEA,IAAAwkE,EACA,OAAA/rE,EAAA,CACAwa,QAAA0xD,EAAA,iCAIA,gBAAAH,EAAA3gF,KAEA,WAAAmhF,EACAvsE,EAAA,CACAwa,QAAA0xD,EAAA,oCAIAG,EAAA,CACAH,aACA3kE,WACAglE,aAAA,EACAC,SACAE,iBACA5vC,OACA98B,aAIA,IAAAoQ,EAAA27D,EAAA37D,QACAy8D,EA9KA,SAAAC,EAAAZ,GACA,IAAAa,OAAA,EACAC,OAAA,EAEA,IACAD,EAAA,IAAAj6D,KAAAg6D,GACAE,EAAA,IAAAl6D,KAAAo5D,GACG,MAAAv5E,IAGH,IAAAs6E,EAAAF,EAAAjiD,UAEA,OADAkiD,EAAAliD,UACAmiD,GAAA,IAkKAC,CAAA98D,EAAA6I,eAAAizD,GACAiB,EAAA/8D,EAAArR,MAAA8tE,EAOA/vC,EAAA/O,IAAA,SALA,WACA,OAAA/tB,EAAA,KAAA88B,EAAAyK,iBAMAmlC,GACA5vC,EAAAiC,QAGAytC,EAAAW,IAmBAC,GAAA,SAAAC,EAAAhmD,GACA,IAAA/5B,EAAA,GACAxB,OAAA,EAEA,GAAAuhF,KAAAthF,OAEA,IAAAD,EAAA,EAAeA,EAAAuhF,EAAAthF,OAAuBD,IACtCu7B,EAAAgmD,EAAAtuE,MAAAjT,GAAAuhF,EAAAjgF,IAAAtB,KACAwB,EAAAnB,KAAA,CAAAkhF,EAAAtuE,MAAAjT,GAAAuhF,EAAAjgF,IAAAtB,KAKA,OAAA+1E,GAAAzmC,iBAAA9tC,IAWAggF,GAAA,SAAAhyC,EAAA7uB,GACA,OAAA2gE,GAAA9xC,EAAA,SAAAv8B,EAAA3R,GACA,OAAA2R,EAlCA,MAkCA0N,GAAArf,EAlCA,MAkCAqf,KAWA8gE,GAAA,SAAAF,EAAA5gE,GACA,OAAA2gE,GAAAC,EAAA,SAAAtuE,GACA,OAAAA,EA/CA,MA+CA0N,KAiCA+gE,GAAA,SAAAthE,GACA,IAAAuhE,EAAA,GAEA,IAAAvhE,MAAAngB,OACA,SAGA,QAAAD,EAAA,EAAiBA,EAAAogB,EAAAngB,OAAkBD,IACnC2hF,EAAAthF,KAAA+f,EAAAnN,MAAAjT,GAAA,OAAAogB,EAAA9e,IAAAtB,IAGA,OAAA2hF,EAAAznE,KAAA,OA8BA0nE,GAAA,SAAAL,GAGA,IAFA,IAAAM,EAAA,GAEA7hF,EAAA,EAAiBA,EAAAuhF,EAAAthF,OAAuBD,IACxC6hF,EAAAxhF,KAAA,CACA4S,MAAAsuE,EAAAtuE,MAAAjT,GACAsB,IAAAigF,EAAAjgF,IAAAtB,KAIA,OAAA6hF,GAwEAC,GAAA,SAAA7uE,EAAA3R,EAAA2H,GACA,IAAAjJ,OAAA,EACA8wC,OAAA,EAEA,GAAA7nC,GAIAA,EAAA4nC,KAMA,IAFA7wC,EAAAiJ,EAAA4nC,KAAA5wC,OAEAD,MACA8wC,EAAA7nC,EAAA4nC,KAAA7wC,IAEAiB,WAAAK,GAAAwvC,EAAAzhC,SAAA4D,GACAhK,EAAA4yC,UAAA/K,IAyCAixC,GAAA,SAAA31E,GASA,OANA8a,MAAA9a,IAAAvJ,KAAAw7D,IAAAjyD,KAAArJ,IACAwhB,OAAAs4D,UAEAzwE,GAgBI41E,GAAgB,SAAAC,EAAAC,EAAAC,GACpB,IAAAC,EAAYzrD,EAAA5tB,EAAQs5E,eAAkB1rD,EAAA5tB,EAAQsK,OAS9C,GAPA6uE,GACAA,EAAA9+E,QAAA,SAAAuL,GACA,IAAA1F,EAAA0F,EAAAY,OACArQ,KAAAojF,kBAAAr5E,GAAAuoC,OAAA,IAAA4wC,EAAAzzE,EAAA1N,UAAA/B,KAAAqjF,gBAAA5zE,EAAAU,QAAAnQ,KAAAqjF,gBAAA5zE,EAAAF,QACKwzE,GAGLE,EAAA,CACA,IAAAK,EAAAT,GAAAE,EAAAQ,aAAAr2E,UAcA,GAbA+1E,EAAA/+E,QAAA,SAAAqK,GACA,IAAAkT,EAAAlT,EAAA+B,QAAAtQ,KAAAqjF,gBACA90E,EAAAxD,OAAA7G,QAAA,SAAAkN,GACA,IAAAwgC,EAAA,IAAAsxC,EAAAzhE,IAAArQ,EAAA/J,OAAA+J,EAAA6F,KAAA7F,EAAA3P,MAAA,IACAmwC,EAAAxgC,QACAwgC,EAAAvqC,MAAA+J,EA9DA,SAAAwgC,GACAjsC,OAAAisB,iBAAAggB,EAAAxgC,MAAA,CACAnO,GAAA,CACAmzB,IAAA,WAEA,OADAygD,GAAAz/C,IAAAa,KAAA,0DACA2Z,EAAAvqC,MAAAxB,MAGAwB,MAAA,CACA+uB,IAAA,WAEA,OADAygD,GAAAz/C,IAAAa,KAAA,8DACA2Z,EAAAvqC,MAAA5F,OAGA+hF,YAAA,CACAptD,IAAA,WAEA,OADAygD,GAAAz/C,IAAAa,KAAA,oEACA2Z,EAAAvqC,MAAA5F,SA8CAgiF,CAAA7xC,GACA5xC,KAAA0jF,eAAApxC,OAAAV,IACO5xC,OACF+iF,GAILA,EAAAW,gBAAAX,EAAAW,eAAA/xC,MAAAoxC,EAAAW,eAAA/xC,KAAA5wC,OAAA,CAKA,IAJA,IAAA4wC,EAAAoxC,EAAAW,eAAA/xC,KACAgyC,EAAA,GAGA7iF,EAAA,EAAqBA,EAAA6wC,EAAA5wC,OAAiBD,IACtC6wC,EAAA7wC,IACA6iF,EAAAxiF,KAAAwwC,EAAA7wC,IAKA,IAAA8iF,EAAAD,EAAA9gF,OAAA,SAAA0D,EAAAqrC,GACA,IAAAiyC,EAAAt9E,EAAAqrC,EAAA7vC,YAAA,GAGA,OAFA8hF,EAAA1iF,KAAAywC,GACArrC,EAAAqrC,EAAA7vC,WAAA8hF,EACAt9E,GACO,IAEPu9E,EAAAn+E,OAAAiW,KAAAgoE,GAAA/jB,KAAA,SAAAh2D,EAAAC,GACA,OAAAub,OAAAxb,GAAAwb,OAAAvb,KAGAg6E,EAAA5/E,QAAA,SAAAnC,EAAAgiF,GACA,IAAAC,EAAAJ,EAAA7hF,GACAkiF,EAAA5+D,OAAAy+D,EAAAC,EAAA,KAAAT,EAEAU,EAAA9/E,QAAA,SAAA0tC,GACAA,EAAAzhC,QAAA8zE,SAOA5kF,GAAA,qBAAAC,cAAA,GACA4kF,GAAA,qBAAA19E,OAAA,WAAAA,SACA29E,GAAA,yBACAC,GAAA/kF,GAAA+kF,aAAA/kF,GAAAglF,mBAAAhlF,GAAAilF,gBAAAjlF,GAAAklF,cACAC,GAAAnlF,GAAAmlF,KAAAnlF,GAAAolF,WAAAD,OAAAE,MACAC,GAAAtlF,GAAAslF,OAUA,SAAAC,GAAAC,EAAApkE,GACA,gBAAAqkE,GACA,IAAA5+E,EAAAlG,KAEA,IAAAygB,EACA,WAAAkkE,GAAAE,GACK,GAAAF,KAAAG,EAAA,CAEL,IACAC,EAAAC,GADAvkE,EAAAtY,WAAAL,QAAA,gBAAuD,IAAApH,MAAA,OAIvD,OAFAV,KAAAkkF,IAAA,IAAAS,GAAAI,GAiEA,SAAAE,EAAAF,GACA,IAAAE,IAAAF,EAAA,OACA,IAAAG,EAAAD,EAAAE,UACAF,EAAAF,SAEAE,EAAAE,UAAA,WACAF,EAAAF,QAAAP,GAAAY,gBAAAH,EAAAF,QACAG,EAAAhkF,KAAA+jF,IAvEAI,CAAArlF,KAAAkkF,IAAAa,GACA/kF,KAAAkkF,IAEA,IAAAoB,EAAA,CACAC,YAAA,SAAAhjD,GACAr8B,EAAAs/E,WACA5tE,WAAA,WACA1R,EAAAs/E,UAAA,CACA/jF,KAAA8gC,EACAl9B,OAAAigF,QAMA7kE,EAAAvf,KAAAokF,GAEAtlF,KAAAulF,YAAA,SAAAhjD,GACA3qB,WAAA,WACA0tE,EAAAE,UAAA,CACA/jF,KAAA8gC,EACAl9B,OAAAa,OAKAlG,KAAAylF,cAAA,GAMA,GAAAd,GAAA,CACA,IAAAe,GACAX,GAAAC,GAAA,mCACAW,GAAA,IAAAj6E,WAAA,GAEA,KACAg6E,GAAA,IAAAf,GAAAI,KAEAQ,YAAAI,GAAA,CAAAA,GAAAljF,SACG,MAAAkF,IACHg9E,GAAA,KACG,QACHH,GAAAY,gBAAAL,IAEAW,IACAA,GAAAP,aAKA,SAAAH,GAAA79D,GACA,IACA,OAAAq9D,GAAAoB,gBAAA,IAAAC,KAAA,CAAA1+D,GAAA,CACA/mB,KAAA+jF,MAEG,MAAAx8E,IACH,IAAAm+E,EAAA,IAAA1B,GAEA,OADA0B,EAAAxwB,OAAAnuC,GACAq9D,GAAAoB,gBAAAE,EAAAC,QAAA3lF,QAeA,IAAA4lF,GAAA,IAAApB,GAAA,yCAAAtlF,EAAA2mF,GACA,IAAA1mF,EAAAS,MAEA,WAUA,IACAu9B,EAAA2oD,EAAAC,EAAAC,EAAAn7E,EAAAo7E,EAAAC,EAAAt7E,EAAAu7E,EAAAC,EAAAC,EAAA3jF,EAAAC,EAAA2jF,EAAAxjF,EAAAmB,EAAAsiF,EAAAC,EAAAC,EAAAtjF,EAAAujF,EAAAC,EAAArmD,EAAAsmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EADAC,EAAAlkF,KAAAC,IAAA,SAGA,WACA,IAAA9C,EA0CA,GAzCA4/B,EAAA,CACAonD,KAAA,GAEAC,KAAA,GACAC,KAAA,GACA9B,KAAA,GACA+B,KAAA,GACA9B,KAAA,GACAC,KAAA,GACA/hF,KAAA,GACA4G,KAAA,GACA/H,KAAA,GACAwjF,KAAA,GACAL,KAAA,GACAC,KAAA,GACAt7E,KAAA,GACAu7E,KAAA,GACA2B,KAAA,GAEA1B,KAAA,GACAC,KAAA,GACAE,KAAA,GACAwB,KAAA,GACAvB,KAAA,GACAwB,KAAA,GACAC,KAAA,GACAxB,KAAA,GACAyB,KAAA,GACAC,KAAA,GACAC,KAAA,GACA9kF,KAAA,GACAF,KAAA,GACAD,KAAA,GACAT,KAAA,GACAikF,KAAA,GACAD,KAAA,GACA/jF,KAAA,GACA0lF,KAAA,IAIA,qBAAA/8E,WAAA,CAIA,IAAA5K,KAAA4/B,EACAA,EAAAhoB,eAAA5X,KACA4/B,EAAA5/B,GAAA,CAAAA,EAAAkS,WAAA,GAAAlS,EAAAkS,WAAA,GAAAlS,EAAAkS,WAAA,GAAAlS,EAAAkS,WAAA,KAIAg0E,EAAA,IAAAt7E,WAAA,KAAAsH,WAAA,OAAAA,WAAA,OAAAA,WAAA,OAAAA,WAAA,KACAk0E,EAAA,IAAAx7E,WAAA,KAAAsH,WAAA,OAAAA,WAAA,OAAAA,WAAA,OAAAA,WAAA,KACAi0E,EAAA,IAAAv7E,WAAA,WACAy7E,EAAA,IAAAz7E,WAAA,GACA,MACA,QACA,gBACA,QACA,QACA,QACA,iDAEA07E,EAAA,IAAA17E,WAAA,GACA,MACA,QACA,gBACA,QACA,QACA,QACA,iDAEA27E,EAAA,CACAzpC,MAAAupC,EACAnnE,MAAAonE,GAEAI,EAAA,IAAA97E,WAAA,GACA,MACA,QACA,SACA,eACA,EACA,QAEA67E,EAAA,IAAA77E,WAAA,GACA,MACA,IACA,MAEA+7E,EAAA,IAAA/7E,WAAA,GACA,MACA,UAEAg8E,EAAAD,EACAE,EAAA,IAAAj8E,WAAA,GACA,MACA,QACA,UAEAk8E,EAAAH,EACAH,EAAA,IAAA57E,WAAA,GACA,MACA,IACA,eAzGA,GA6GA6xB,EAAA,SAAAn9B,GACA,IAEAU,EACA4B,EAHAgmF,EAAA,GACAvmF,EAAA,EAKA,IAAArB,EAAA,EAAiBA,EAAAG,UAAAF,OAAsBD,IACvC4nF,EAAAvnF,KAAAF,UAAAH,IAKA,IAFAA,EAAA4nF,EAAA3nF,OAEAD,KACAqB,GAAAumF,EAAA5nF,GAAAyB,WAQA,IALAG,EAAA,IAAAgJ,WAAAvJ,EAAA,GACA,IAAAsC,SAAA/B,EAAAD,OAAAC,EAAAgC,WAAAhC,EAAAH,YACAomF,UAAA,EAAAjmF,EAAAH,YACAG,EAAAiJ,IAAAvL,EAAA,GAEAU,EAAA,EAAAqB,EAAA,EAA2BrB,EAAA4nF,EAAA3nF,OAAoBD,IAC/C4B,EAAAiJ,IAAA+8E,EAAA5nF,GAAAqB,GACAA,GAAAumF,EAAA5nF,GAAAyB,WAGA,OAAAG,GAGAwjF,EAAA,WACA,OAAA3oD,EAAAmD,EAAAwlD,KAAA3oD,EAAAmD,EAAAunD,KAAAT,KAGArB,EAAA,SAAAp8E,GACA,OAAAwzB,EAAAmD,EAAAylD,KAAA,IAAAz6E,WAAA,GACA,MAEA,EACA,GACA,IACA,EAEA,EACA,GACA,GACA,GACA,MACA,YACA,YAEA,EACA,EAGA3B,EAAA6+E,iBAAA,EAAA7+E,EAAA8+E,yBAAA,EAAA9+E,EAAA8+E,wBAAA,EAAA9+E,EAAA++E,cAAA,YAIA1C,EAAA,WACA,OAAA7oD,EAAAmD,EAAA0lD,KAAAY,EAAAC,EAAAD,EAAAE,IAGA7iF,EAAA,SAAAjE,GACA,OAAAm9B,EAAAmD,EAAAr8B,KAAAgjF,EAAAjnF,KAGA6K,EAAA,SAAAxJ,GACA,OAAA87B,EAAAmD,EAAAz1B,KAAAxJ,IAGAyB,EAAA,SAAA6G,GACA,IAAArH,EAAA,IAAAgJ,WAAA,GACA,MACA,QACA,QACA,WACA3B,EAAAmD,WAAA,OAAAnD,EAAAmD,WAAA,OAAAnD,EAAAmD,WAAA,UAAAnD,EAAAmD,SACA,OACA,MAWA,OAPAnD,EAAAg/E,aACArmF,EAAA,IAAAqH,EAAAg/E,aAAA,OACArmF,EAAA,IAAAqH,EAAAg/E,aAAA,OACArmF,EAAA,IAAAqH,EAAAg/E,aAAA,MACArmF,EAAA,QAAAqH,EAAAg/E,YAGAxrD,EAAAmD,EAAAx9B,KAAAR,IAGAgkF,EAAA,SAAA38E,GACA,OAAAwzB,EAAAmD,EAAAgmD,KAAAxjF,EAAA6G,GAAA1F,EAAA0F,EAAA3J,MAAAkmF,EAAAv8E,KAGAs8E,EAAA,SAAAn8E,GACA,OAAAqzB,EAAAmD,EAAA2lD,KAAA,IAAA36E,WAAA,UACA,WAAAxB,IAAA,aAAAA,IAAA,UAAAA,IAAA,MAAAA,MAIAo8E,EAAA,SAAAv8E,GACA,OAAAwzB,EAAAmD,EAAA4lD,KAAA,UAAAv8E,EAAA3J,KAAAm9B,EAAAmD,EAAA+nD,KAAAnB,GAAA/pD,EAAAmD,EAAAynD,KAAAZ,GAAArB,IAAAU,EAAA78E,KAGAiB,EAAA,SAAAd,EAAAkI,GAIA,IAHA,IAAA42E,EAAA,GACAloF,EAAAsR,EAAArR,OAEAD,KACAkoF,EAAAloF,GAAAyC,EAAA6O,EAAAtR,IAGA,OAAAy8B,EAAAn8B,MAAA,MAAAs/B,EAAA11B,KAAAq7E,EAAAn8E,IAAA5J,OAAA0oF,KASAzC,EAAA,SAAAn0E,GAIA,IAHA,IAAAtR,EAAAsR,EAAArR,OACAmK,EAAA,GAEApK,KACAoK,EAAApK,GAAAgC,EAAAsP,EAAAtR,IAGA,OAAAy8B,EAAAn8B,MAAA,MAAAs/B,EAAA6lD,KAAAE,EAAA,aAAAnmF,OAAA4K,GAAA5K,OAAAkmF,EAAAp0E,MAGAo0E,EAAA,SAAAp0E,GAIA,IAHA,IAAAtR,EAAAsR,EAAArR,OACAmK,EAAA,GAEApK,KACAoK,EAAApK,GAAAgmF,EAAA10E,EAAAtR,IAGA,OAAAy8B,EAAAn8B,MAAA,MAAAs/B,EAAA8lD,MAAAlmF,OAAA4K,KAGAu7E,EAAA,SAAAv5E,GACA,IAAA4G,EAAA,IAAApI,WAAA,GACA,MACA,QACA,QACA,YACA,WAAAwB,IAAA,aAAAA,IAAA,UAAAA,IAAA,MAAAA,EACA,QACA,IACA,IACA,QACA,QACA,yEACA,gDACA,kBAEA,OAAAqwB,EAAAmD,EAAA+lD,KAAA3yE,IAGA6yE,EAAA,SAAA58E,GACA,IAEAk/E,EACAnoF,EAHAyK,EAAAxB,EAAAwB,SAAA,GACAuI,EAAA,IAAApI,WAAA,EAAAH,EAAAxK,QAKA,IAAAD,EAAA,EAAiBA,EAAAyK,EAAAxK,OAAoBD,IACrCmoF,EAAA19E,EAAAzK,GAAAmoF,MACAn1E,EAAAhT,EAAA,GAAAmoF,EAAAC,WAAA,EAAAD,EAAAE,cAAA,EAAAF,EAAAG,cAGA,OAAA7rD,EAAAmD,EAAAimD,KAAA7yE,IAGA8yE,EAAA,SAAA78E,GACA,OAAAwzB,EAAAmD,EAAAkmD,KAAAC,EAAA98E,GAAAwzB,EAAAmD,EAAA6nD,KAAAX,GAAArqD,EAAAmD,EAAA2nD,KAAAX,GAAAnqD,EAAAmD,EAAA4nD,KAAAX,GAAApqD,EAAAmD,EAAA0nD,KAAAX,KAGA,WACA,IAAA4B,EAAAC,EAEAzC,EAAA,SAAA98E,GACA,OAAAwzB,EAAAmD,EAAAmmD,KAAA,IAAAn7E,WAAA,GACA,MACA,oBAAA3B,EAAA3J,KAAAipF,EAAAt/E,GAAAu/E,EAAAv/E,KAGAs/E,EAAA,SAAAt/E,GACA,IAIAjJ,EAJAuL,EAAAtC,EAAAsC,KAAA,GACAP,EAAA/B,EAAA+B,KAAA,GACAy9E,EAAA,GACAC,EAAA,GAGA,IAAA1oF,EAAA,EAAmBA,EAAAuL,EAAAtL,OAAgBD,IACnCyoF,EAAApoF,MAAA,MAAAkL,EAAAvL,GAAAyB,cAAA,GACAgnF,EAAApoF,KAAA,IAAAkL,EAAAvL,GAAAyB,YAEAgnF,IAAAjpF,OAAAmb,MAAAna,UAAAZ,MAAAQ,KAAAmL,EAAAvL,KAIA,IAAAA,EAAA,EAAmBA,EAAAgL,EAAA/K,OAAgBD,IACnC0oF,EAAAroF,MAAA,MAAA2K,EAAAhL,GAAAyB,cAAA,GACAinF,EAAAroF,KAAA,IAAA2K,EAAAhL,GAAAyB,YACAinF,IAAAlpF,OAAAmb,MAAAna,UAAAZ,MAAAQ,KAAA4K,EAAAhL,KAGA,OAAAy8B,EAAAmD,EAAAonD,KAAA,IAAAp8E,WAAA,aACA,IACA,IACA,IACA,yBACA,MAAA3B,EAAA4U,QAAA,MAAA5U,EAAA4U,OACA,MAAA5U,EAAA6U,SAAA,MAAA7U,EAAA6U,OACA,SACA,SACA,QACA,IACA,mGACA,KACA,QACA2e,EAAAmD,EAAAqnD,KAAA,IAAAr8E,WAAA,GACA3B,EAAA0/E,WACA1/E,EAAA2/E,qBACA3/E,EAAA4/E,SACA,KACArpF,OAAA,CAAA+L,EAAAtL,SACAT,OAAAipF,GAAAjpF,OAAA,CAAAwL,EAAA/K,SACAT,OAAAkpF,KACAjsD,EAAAmD,EAAAsnD,KAAA,IAAAt8E,WAAA,cACA,aACA,kBAIA49E,EAAA,SAAAv/E,GACA,OAAAwzB,EAAAmD,EAAAwnD,KAAA,IAAAx8E,WAAA,CACA,YACA,IAEA,QACA,SACA,MAAA3B,EAAA++E,eAAA,MAAA/+E,EAAA++E,cACA,MAAA/+E,EAAA6/E,aAAA,MAAA7/E,EAAA6/E,WACA,IACA,KACA,MAAA7/E,EAAAg/E,aAAA,MAAAh/E,EAAAg/E,WAAA,MAEA5C,EAAAp8E,KAvEA,GA2EAhH,EAAA,SAAAgH,GACA,IAAArH,EAAA,IAAAgJ,WAAA,GACA,MACA,QACA,SACA,WAAA3B,EAAA9G,KAAA,aAAA8G,EAAA9G,KAAA,UAAA8G,EAAA9G,KAAA,MAAA8G,EAAA9G,GACA,SACA,WAAA8G,EAAAmD,WAAA,aAAAnD,EAAAmD,WAAA,UAAAnD,EAAAmD,WAAA,MAAAnD,EAAAmD,SACA,gBACA,IACA,IACA,IACA,IACA,0EACA,MAAAnD,EAAA4U,QAAA,MAAA5U,EAAA4U,MAAA,KACA,MAAA5U,EAAA6U,SAAA,MAAA7U,EAAA6U,OAAA,MAEA,OAAA2e,EAAAmD,EAAA39B,KAAAL,IAQAa,EAAA,SAAAwG,GACA,IAAA8/E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA0BA,OAzBAL,EAAAtsD,EAAAmD,EAAAl9B,KAAA,IAAAkI,WAAA,GACA,QACA,WAAA3B,EAAA9G,KAAA,aAAA8G,EAAA9G,KAAA,UAAA8G,EAAA9G,KAAA,MAAA8G,EAAA9G,GACA,QACA,QACA,QACA,WAEAgnF,EAAAtmF,KAAAigB,MAAA7Z,EAAAY,qBAAAk9E,EAAA,IACAqC,EAAAvmF,KAAAigB,MAAA7Z,EAAAY,qBAAAk9E,EAAA,IACAiC,EAAAvsD,EAAAmD,EAAAh9B,KAAA,IAAAgI,WAAA,GACA,MAEAu+E,IAAA,OAAAA,IAAA,OAAAA,IAAA,UAAAA,EAAAC,IAAA,OAAAA,IAAA,OAAAA,IAAA,UAAAA,KAIA,GAQA,UAAAngF,EAAA3J,MACA2pF,EAAAhD,EAAAh9E,EATA,IAUAwzB,EAAAmD,EAAAn9B,KAAAsmF,EAAAC,EAAAC,KAMAC,EAAArD,EAAA58E,GACAggF,EAAAhD,EAAAh9E,EAAAigF,EAAAjpF,OAjBA,IAkBAw8B,EAAAmD,EAAAn9B,KAAAsmF,EAAAC,EAAAC,EAAAC,KASAlnF,EAAA,SAAAiH,GAEA,OADAA,EAAAmD,SAAAnD,EAAAmD,UAAA,WACAqwB,EAAAmD,EAAA59B,KAAAC,EAAAgH,GAAA28E,EAAA38E,KAGA+8E,EAAA,SAAA/8E,GACA,IAAArH,EAAA,IAAAgJ,WAAA,GACA,OACA,WAAA3B,EAAA9G,KAAA,aAAA8G,EAAA9G,KAAA,UAAA8G,EAAA9G,KAAA,MAAA8G,EAAA9G,GACA,QACA,QACA,QACA,UAUA,MAJA,UAAA8G,EAAA3J,OACAsC,IAAA3B,OAAA,MAGAw8B,EAAAmD,EAAAomD,KAAApkF,IAGA,WACA,IAAAynF,EAAAC,EAAAC,EAKAA,EAAA,SAAA9+E,EAAAqE,GACA,IAAA06E,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAoBA,OAlBAl/E,EAAAxK,cACA4M,IAAApC,EAAA,GAAA2B,WACAo9E,EAAA,QAGA38E,IAAApC,EAAA,GAAApJ,OACAooF,EAAA,QAGA58E,IAAApC,EAAA,GAAA09E,QACAuB,EAAA,QAGA78E,IAAApC,EAAA,GAAAk/E,wBACAA,EAAA,IAIA,GACA,EAAAH,EAAAC,EAAAC,EAAAC,EAAA,GACA,WAAAl/E,EAAAxK,UAAA,aAAAwK,EAAAxK,UAAA,UAAAwK,EAAAxK,UAAA,MAAAwK,EAAAxK,QACA,WAAA6O,KAAA,aAAAA,KAAA,UAAAA,KAAA,MAAAA,IAIAw6E,EAAA,SAAArgF,EAAA6F,GACA,IAAAkE,EAAAvI,EAAAm/E,EAAA5pF,EAKA,IAHA8O,GAAA,OADArE,EAAAxB,EAAAwB,SAAA,IACAxK,OACA+S,EAAAu2E,EAAA9+E,EAAAqE,GAEA9O,EAAA,EAAmBA,EAAAyK,EAAAxK,OAAoBD,IACvC4pF,EAAAn/E,EAAAzK,GACAgT,IAAAxT,OAAA,aAAAoqF,EAAAx9E,YAAA,aAAAw9E,EAAAx9E,YAAA,UAAAw9E,EAAAx9E,YAAA,MAAAw9E,EAAAx9E,UACA,WAAAw9E,EAAAvoF,QAAA,aAAAuoF,EAAAvoF,QAAA,UAAAuoF,EAAAvoF,QAAA,MAAAuoF,EAAAvoF,KACAuoF,EAAAzB,MAAA0B,WAAA,EAAAD,EAAAzB,MAAAC,UAAAwB,EAAAzB,MAAAE,cAAA,EAAAuB,EAAAzB,MAAAG,eAAA,EAAAsB,EAAAzB,MAAA2B,cAAA,EAAAF,EAAAzB,MAAA4B,gBAAA,MAAAH,EAAAzB,MAAA6B,oBAAA,GAAAJ,EAAAzB,MAAA6B,qBACA,WAAAJ,EAAAD,yBAAA,aAAAC,EAAAD,yBAAA,UAAAC,EAAAD,yBAAA,MAAAC,EAAAD,wBAIA,OAAAltD,EAAAmD,EAAAqmD,KAAA,IAAAr7E,WAAAoI,KAGAq2E,EAAA,SAAApgF,EAAA6F,GACA,IAAAkE,EAAAvI,EAAAm/E,EAAA5pF,EAKA,IAHA8O,GAAA,MADArE,EAAAxB,EAAAwB,SAAA,IACAxK,OACA+S,EAAAu2E,EAAA9+E,EAAAqE,GAEA9O,EAAA,EAAmBA,EAAAyK,EAAAxK,OAAoBD,IACvC4pF,EAAAn/E,EAAAzK,GACAgT,IAAAxT,OAAA,aAAAoqF,EAAAx9E,YAAA,aAAAw9E,EAAAx9E,YAAA,UAAAw9E,EAAAx9E,YAAA,MAAAw9E,EAAAx9E,UACA,WAAAw9E,EAAAvoF,QAAA,aAAAuoF,EAAAvoF,QAAA,UAAAuoF,EAAAvoF,QAAA,MAAAuoF,EAAAvoF,OAGA,OAAAo7B,EAAAmD,EAAAqmD,KAAA,IAAAr7E,WAAAoI,KAGAizE,EAAA,SAAAh9E,EAAA6F,GACA,gBAAA7F,EAAA3J,KACA+pF,EAAApgF,EAAA6F,GAGAw6E,EAAArgF,EAAA6F,IA3EA,GA+EA,IAyBAhO,EAAAC,EAAAC,EAAAC,EAAAC,EAzBA+oF,EAAA,CACA3E,OACAn7E,OACAD,OACAu7E,OACA52E,YAAA,SAAAyC,GACA,IAEA1P,EAFAsoF,EAAA5E,IACA6E,EAAA1E,EAAAn0E,GAKA,OAHA1P,EAAA,IAAAgJ,WAAAs/E,EAAAzoF,WAAA0oF,EAAA1oF,aACAoJ,IAAAq/E,GACAtoF,EAAAiJ,IAAAs/E,EAAAD,EAAAzoF,YACAG,IAWAwoF,EAPA,SAAA7jF,GACA,OAAAA,IAAA,GAqFAvF,EAAA,SAAA7B,GAKA,OAHA2B,EAAA3B,EAAA,iBAGA4C,OAAA,SAAAH,EAAAI,GACA,IAAAC,EAAAC,EAAAxC,EAAAyC,EAAAC,EAGA,OAFAH,EAAAnB,EAAAkB,EAAA,eAMAE,EAAAD,EAAA,GAEAE,EAAAioF,EAAAnoF,EADAvC,EAAA,IAAAwC,EAAA,QACA,GAAAD,EAAAvC,EAAA,OAAAuC,EAAAvC,EAAA,MAAAuC,EAAAvC,EAAA,KACA0C,EAAAtB,EAAAkB,EAAA,sBAOAtC,EAAA,KADAwC,EAAAE,EAAA,IACA,MACAR,EAAAO,GAAAioF,EAAAhoF,EAAA1C,IAAA,GAAA0C,EAAA1C,EAAA,OAAA0C,EAAA1C,EAAA,MAAA0C,EAAA1C,EAAA,IACAkC,GANA,MATA,MATA,KA6CAX,EAAA,SAAAD,EAAAqB,GACA,IAAAC,EAAAC,EAAAX,EA+BA,OA7BAU,EAAAxB,EAAAuB,EAAA,iBAEAE,EAAA,GAAA/C,OAAAc,MAAA,GAAAgC,EAAAE,IAAA,SAAAC,GACA,OAAA3B,EAAA2B,EAAA,UAAAD,IAAA,SAAAE,GACA,IAAAP,EAAAQ,EAoBA,OAlBAR,EAAAioF,EAAA1nF,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEAC,EAAA3B,EAAAmB,IAAA,KAEArB,EAAA2B,EAAA,UAAAD,IAAA,SAAAI,GACA,IAAAV,EAAAN,EASA,OARAM,EAAAU,EAAA,GACAhB,EAAAwoF,EAAAxnF,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA,IAAAV,IACAN,GAAAiB,KAAAC,IAAA,MACAlB,GAAAwoF,EAAAxnF,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAGAhB,IACW,IACXmB,KAEAJ,OAIAf,EAAAiB,KAAAG,IAAA1C,MAAA,KAAAiC,GACAU,SAAArB,KAAA,GAeAV,EAAA,SAAA/B,GACA,IAAA+D,EAAApC,EAAA3B,EAAA,iBAEAgE,EAAA,GAqBA,OApBAD,EAAAE,QAAA,SAAApB,GACA,IAAAqB,EAAAvC,EAAAkB,EAAA,iBAEAsB,EAAAxC,EAAAkB,EAAA,UAEAqB,EAAAD,QAAA,SAAAG,EAAA7D,GACA,IAEA8D,EAEAC,EAJAC,EAAA3C,EAAAwC,EAAA7B,SAAA,OACAO,EAAAqB,EAAA5D,GAKA,SAAAgE,IAGAD,EAAA,KAFAD,EAAA,IAAAG,SAAA1B,EAAAN,OAAAM,EAAA2B,WAAA3B,EAAAR,aACAoC,SAAA,GACAL,EAAAM,UAAA,IAAAN,EAAAM,UAAA,IACAX,EAAA9C,KAAAoD,QAIAN,GAGA,IAAAknF,EAAA,CACAtmF,QAnMAjD,EAAA,SAAAH,EAAAS,GACA,IACApB,EACAqB,EACA/B,EACAgC,EACAC,EALAC,EAAA,GAOA,IAAAJ,EAAAnB,OAEA,YAGA,IAAAD,EAAA,EAAiBA,EAAAW,EAAAc,YACjBJ,EAAA+oF,EAAAzpF,EAAAX,IAAA,GAAAW,EAAAX,EAAA,OAAAW,EAAAX,EAAA,MAAAW,EAAAX,EAAA,IACAV,EAAAyB,EAAAJ,EAAAe,SAAA1B,EAAA,EAAAA,EAAA,IACAsB,EAAAD,EAAA,EAAArB,EAAAqB,EAAAV,EAAAc,WAEAnC,IAAA8B,EAAA,KACA,IAAAA,EAAAnB,OAGAuB,EAAAnB,KAAAM,EAAAe,SAAA1B,EAAA,EAAAsB,KAGAC,EAAAT,EAAAH,EAAAe,SAAA1B,EAAA,EAAAsB,GAAAF,EAAAxB,MAAA,KAEAK,SACAuB,IAAAhC,OAAA+B,KAKAvB,EAAAsB,EAIA,OAAAE,GA+JAT,UAtJAA,EAAA,SAAAY,GACA,IAAAC,EAAA,GAKA,OAJAA,GAAAC,OAAAC,aAAAH,EAAA,IACAC,GAAAC,OAAAC,aAAAH,EAAA,IACAC,GAAAC,OAAAC,aAAAH,EAAA,IACAC,GAAAC,OAAAC,aAAAH,EAAA,KAkJAX,YACAC,YACAkC,cAAAjC,GAYAjC,EAAA,WACAC,KAAAC,KAAA,WACA,IAAAC,EAAA,GAQAF,KAAAG,GAAA,SAAAC,EAAAC,GACAH,EAAAE,KACAF,EAAAE,GAAA,IAGAF,EAAAE,GAAAF,EAAAE,GAAAE,OAAAD,IAUAL,KAAAO,IAAA,SAAAH,EAAAC,GACA,IAAAG,EAEA,QAAAN,EAAAE,KAIAI,EAAAN,EAAAE,GAAAK,QAAAJ,GACAH,EAAAE,GAAAF,EAAAE,GAAAM,QACAR,EAAAE,GAAAO,OAAAH,EAAA,GACAA,GAAA,IASAR,KAAAY,QAAA,SAAAR,GACA,IAAAS,EAAAC,EAAAC,EAAAC,EAGA,GAFAH,EAAAX,EAAAE,GAUA,OAAAa,UAAAF,OAGA,IAFAA,EAAAF,EAAAE,OAEAD,EAAA,EAAuBA,EAAAC,IAAYD,EACnCD,EAAAC,GAAAI,KAAAlB,KAAAiB,UAAA,QAEW,CAIX,IAHAD,EAAA,GACAF,EAAAG,UAAAF,OAEAD,EAAA,EAAuBA,EAAAG,UAAAF,SAAsBD,EAC7CE,EAAAG,KAAAF,UAAAH,IAKA,IAFAC,EAAAF,EAAAE,OAEAD,EAAA,EAAuBA,EAAAC,IAAYD,EACnCD,EAAAC,GAAAM,MAAApB,KAAAgB,KASAhB,KAAAqB,QAAA,WACAnB,EAAA,MAeAH,EAAAuB,UAAAC,KAAA,SAAAC,GAOA,OANAxB,KAAAG,GAAA,gBAAAsB,GACAD,EAAAL,KAAAM,KAEAzB,KAAAG,GAAA,gBAAAuB,GACAF,EAAAG,MAAAD,KAEAF,GAOAzB,EAAAuB,UAAAH,KAAA,SAAAM,GACAzB,KAAAY,QAAA,OAAAa,IAGA1B,EAAAuB,UAAAK,MAAA,SAAAD,GACA1B,KAAAY,QAAA,OAAAc,IAGA,IAwQA0pF,EA0BAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAvSAr7E,GAAAtQ,EAyKA4rF,GAAA,SAAAv6E,EAAAw6E,GACA,IAAAlB,EAvBA,CACAvoF,KAAA,EACA8mF,MAAA,CACA0B,UAAA,EACAzB,UAAA,EACAC,aAAA,EACAC,cAAA,EACA0B,oBAAA,EACAD,gBAAA,IA4BA,OAZAH,EAAAkB,aACAlB,EAAAD,sBAAAr5E,EAAApE,IAAAoE,EAAAnE,IACAy9E,EAAAx9E,SAAAkE,EAAAlE,SACAw9E,EAAAvoF,KAAA,EAAAiP,EAAArQ,OAEA2pF,EAAAvoF,MAAAiP,EAAA7O,WAEA6O,EAAAxE,WACA89E,EAAAzB,MAAAC,UAAA,EACAwB,EAAAzB,MAAA4B,gBAAA,GAGAH,GA6DAxhF,GA/OA,SAAA6C,GACA,IAAAjL,EACA+qF,EACAC,EAAA,GACA/gF,EAAA,GAGA,IAFA+gF,EAAAvpF,WAAA,EAEAzB,EAAA,EAAiBA,EAAAiL,EAAAhL,OAAqBD,IAGtC,gCAFA+qF,EAAA9/E,EAAAjL,IAEAsL,aAGA0/E,EAAA/qF,SACA+qF,EAAA5+E,SAAA2+E,EAAA5+E,IAAA6+E,EAAA7+E,IACAlC,EAAA5J,KAAA2qF,KAGAA,EAAA,CAAAD,IACAtpF,WAAAspF,EAAApqF,KAAAc,WACAupF,EAAA9+E,IAAA6+E,EAAA7+E,IACA8+E,EAAA7+E,IAAA4+E,EAAA5+E,MAGA,8CAAA4+E,EAAAz/E,cACA0/E,EAAAl/E,UAAA,GAGAk/E,EAAA5+E,SAAA2+E,EAAA5+E,IAAA6+E,EAAA7+E,IACA6+E,EAAAvpF,YAAAspF,EAAApqF,KAAAc,WACAupF,EAAA3qF,KAAA0qF,IAYA,OANA9gF,EAAAhK,UAAA+qF,EAAA5+E,UAAA4+E,EAAA5+E,UAAA,KACA4+E,EAAA5+E,SAAAnC,IAAAhK,OAAA,GAAAmM,UAIAnC,EAAA5J,KAAA2qF,GACA/gF,GAqMA7B,GA9LA,SAAA6B,GACA,IAAAjK,EACAgrF,EACAh+E,EAAA,GACAvB,EAAA,GAeA,IAZAuB,EAAAvL,WAAA,EACAuL,EAAAf,SAAA,EACAe,EAAAZ,SAAA,EACAY,EAAAd,IAAAjC,EAAA,GAAAiC,IACAc,EAAAb,IAAAlC,EAAA,GAAAkC,IAEAV,EAAAhK,WAAA,EACAgK,EAAAQ,SAAA,EACAR,EAAAW,SAAA,EACAX,EAAAS,IAAAjC,EAAA,GAAAiC,IACAT,EAAAU,IAAAlC,EAAA,GAAAkC,IAEAnM,EAAA,EAAiBA,EAAAiK,EAAAhK,OAAmBD,KACpCgrF,EAAA/gF,EAAAjK,IAEA8L,UAGAkB,EAAA/M,SACAwL,EAAApL,KAAA2M,GACAvB,EAAAhK,YAAAuL,EAAAvL,WACAgK,EAAAQ,UAAAe,EAAAf,SACAR,EAAAW,UAAAY,EAAAZ,WAGAY,EAAA,CAAAg+E,IACA/+E,SAAA++E,EAAA/qF,OACA+M,EAAAvL,WAAAupF,EAAAvpF,WACAuL,EAAAd,IAAA8+E,EAAA9+E,IACAc,EAAAb,IAAA6+E,EAAA7+E,IACAa,EAAAZ,SAAA4+E,EAAA5+E,WAEAY,EAAAZ,UAAA4+E,EAAA5+E,SACAY,EAAAf,UAAA++E,EAAA/qF,OACA+M,EAAAvL,YAAAupF,EAAAvpF,WACAuL,EAAA3M,KAAA2qF,IAaA,OATAv/E,EAAAxL,QAAA+M,EAAAZ,UAAA,IACAY,EAAAZ,SAAAX,IAAAxL,OAAA,GAAAmM,UAGAX,EAAAhK,YAAAuL,EAAAvL,WACAgK,EAAAQ,UAAAe,EAAAf,SACAR,EAAAW,UAAAY,EAAAZ,SAEAX,EAAApL,KAAA2M,GACAvB,GAuIArD,GA1HA,SAAAqD,GACA,IAAAuB,EAeA,OAbAvB,EAAA,MAAAK,UAAAL,EAAAxL,OAAA,IAEA+M,EAAAvB,EAAAC,QACAD,EAAAhK,YAAAuL,EAAAvL,WACAgK,EAAAQ,UAAAe,EAAAf,SAIAR,EAAA,MAAAU,IAAAa,EAAAb,IACAV,EAAA,MAAAS,IAAAc,EAAAd,IACAT,EAAA,MAAAW,UAAAY,EAAAZ,UAGAX,GA0GArD,GAzDA,SAAAqD,EAAAw/E,GACA,IAAAv/B,EACA1rD,EACA4pF,EACA58E,EACAg+E,EACAF,EAAAG,GAAA,EACAxgF,EAAA,GAEA,IAAAihD,EAAA,EAAiBA,EAAAjgD,EAAAxL,OAAiByrD,IAGlC,IAFA1+C,EAAAvB,EAAAigD,GAEA1rD,EAAA,EAAmBA,EAAAgN,EAAA/M,OAAuBD,IAC1CgrF,EAAAh+E,EAAAhN,GAEA8qF,IADAlB,EAAAiB,GAAAG,EAAAF,IACAzpF,KACAoJ,EAAApK,KAAAupF,GAIA,OAAAn/E,GAqCArC,GAjCA,SAAAqD,GACA,IAAAigD,EACA1rD,EACA+xB,EACA/kB,EACAg+E,EACAD,EACAD,EAAA,EACAI,EAAAz/E,EAAAhK,WACA0pF,EAAA1/E,EAAAQ,SAEAtL,EAAA,IAAAiK,WADAsgF,EAAA,EAAAC,GAEA3nF,EAAA,IAAAG,SAAAhD,EAAAgB,QAEA,IAAA+pD,EAAA,EAAiBA,EAAAjgD,EAAAxL,OAAiByrD,IAGlC,IAFA1+C,EAAAvB,EAAAigD,GAEA1rD,EAAA,EAAmBA,EAAAgN,EAAA/M,OAAuBD,IAG1C,IAFAgrF,EAAAh+E,EAAAhN,GAEA+xB,EAAA,EAAqBA,EAAAi5D,EAAA/qF,OAAyB8xB,IAC9Cg5D,EAAAC,EAAAj5D,GACAvuB,EAAAqkF,UAAAiD,EAAAC,EAAApqF,KAAAc,YACAqpF,GAAA,EACAnqF,EAAAkK,IAAAkgF,EAAApqF,KAAAmqF,GACAA,GAAAC,EAAApqF,KAAAc,WAKA,OAAAd,GAUAyqF,GAAA,oBACAC,GAAA,4CAEAC,GAAA,SAAAnpE,GAGA,IAFA,IAAApZ,EAAA,GAEAoZ,KACApZ,EAAA1I,KAAA,GAGA,OAAA0I,GAaAwiF,GAAA,CACAC,MAAA,CAAAJ,GAAA,SAAAE,GAAA,WACAG,MAAA,CAAAL,GAAA,MAAAE,GAAA,WACAI,MAAA,CAAAN,GAAA,UAAAE,GAAA,WACAK,MAAA,CAAAP,GAAA,UAAAE,GAAA,kBAAAA,GAAA,WACAM,MAAA,CAAAR,GAAA,UAAAE,GAAA,kBAAAA,GAAA,WACAO,MAAA,CAAAT,GAAA,UAAAE,GAAA,cAAAA,GAAA,YACAQ,MAAA,CAAAV,GAAA,UAAAE,GAAA,kBAAAA,GAAA,eAAAA,GAAA,YACAS,MAAA,CAAAX,GAAA,UAAAE,GAAA,kBAAAA,GAAA,eAAAA,GAAA,eAAAA,GAAA,cACAU,MAAA,CAAAX,GAAAC,GAAA,iBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,WACAW,MAAA,CAAAZ,GAAAC,GAAA,iBAAAA,GAAA,iBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,kBAAAA,GAAA,YACAY,KAAA,CAAAb,GAAAC,GAAA,gBAAAA,GAAA,UAEAa,IAvBA7B,EAuBAiB,GAtBA1mF,OAAAiW,KAAAwvE,GAAAvoF,OAAA,SAAA0D,EAAAV,GAIA,OAHAU,EAAAV,GAAA,IAAA6F,WAAA0/E,EAAAvlF,GAAAhD,OAAA,SAAAu2E,EAAA/oB,GACA,OAAA+oB,EAAA94E,OAAA+vD,IACS,KACT9pD,GACO,KA2CPklF,EAAA,SAAA3gF,EAAAoiF,GACA,OAAA7B,EAAAG,EAAA1gF,EAAAoiF,KAGAxB,EAAA,SAAA5gF,EAAAoiF,GACA,OAAA5B,EAAAC,EAAAzgF,GAAAoiF,IArBA7B,EAAA,SAAA/+B,GACA,OAVA,IAUAA,GAGAg/B,EAAA,SAAAh/B,EAAA4gC,GACA,OAAA5gC,EAAA4gC,GAGA3B,EAAA,SAAAzgF,GACA,OAAAA,EAlBA,KAqBA0gF,EAAA,SAAA1gF,EAAAoiF,GACA,OAAApiF,EAAAoiF,GAWA,IAAAC,GAKA1B,EALA0B,GAMAzB,EAiIAviF,GA1GA,SAAAY,EAAAgB,EAAAX,EAAAC,GACA,IAAA+iF,EACAC,EAIAC,EACAxsF,EAJAysF,EAAA,EACAC,EAAA,EACAC,EAAA,EAIA,GAAA1iF,EAAAhK,SAIAqsF,EAAAD,GAAApjF,EAAAY,oBAAAZ,EAAAg/E,YAEAsE,EAAA1pF,KAAAse,KApCA,KAoCAlY,EAAAg/E,WAAA,OAEA3+E,GAAAC,IAEAkjF,EAAAH,EAAAzpF,KAAAmgB,IAAA1Z,EAAAC,GAGAojF,GADAD,EAAA7pF,KAAAigB,MAAA2pE,EAAAF,IACAA,KAKAG,EAAA,GAAAC,EAAAC,OAAA,CAYA,KARAJ,EAAAL,GAAAljF,EAAAg/E,eAKAuE,EAAAviF,EAAA,GAAAtJ,MAGAX,EAAA,EAAiBA,EAAA0sF,EAAyB1sF,IAC1CiK,EAAApK,OAAAG,EAAA,GACAW,KAAA6rF,IAIAvjF,EAAAY,qBAAAhH,KAAAigB,MAAAupE,GAAAM,EAAA1jF,EAAAg/E,eA6DA5/E,GAtDA,SAAAc,EAAAF,EAAAI,GACA,OAAAJ,EAAA4jF,eAAAxjF,EACAF,GAIAF,EAAA4jF,cAAA9pF,IACAoG,EAAAmV,OAAA,SAAA0sE,GAEA,OAAAA,EAAA7+E,KAAA9C,IACAJ,EAAA4jF,cAAAhqF,KAAAG,IAAAiG,EAAA4jF,cAAA7B,EAAA7+E,KACAlD,EAAA6jF,cAAA7jF,EAAA4jF,eACA,OA0CAxkF,GAjCA,SAAA4B,GACA,IAAAjK,EACAgrF,EACAvgF,EAAA,GAEA,IAAAzK,EAAA,EAAiBA,EAAAiK,EAAAhK,OAAmBD,IACpCgrF,EAAA/gF,EAAAjK,GACAyK,EAAApK,KAAA,CACAgB,KAAA2pF,EAAArqF,KAAAc,WACA2K,SAAA,OAKA,OAAA3B,GAmBApC,GAfA,SAAA4B,GACA,IAAAjK,EACAgrF,EACAF,EAAA,EACAnqF,EAAA,IAAAiK,WA9GA,SAAAoN,GACA,IAAAhY,EAEA+sF,EAAA,EAEA,IAAA/sF,EAAA,EAAiBA,EAAAgY,EAAA/X,OAAkBD,IAEnC+sF,GADA/0E,EAAAhY,GACAW,KAAAc,WAGA,OAAAsrF,EAoGAC,CAAA/iF,IAEA,IAAAjK,EAAA,EAAiBA,EAAAiK,EAAAhK,OAAmBD,IACpCgrF,EAAA/gF,EAAAjK,GACAW,EAAAkK,IAAAmgF,EAAArqF,KAAAmqF,GACAA,GAAAE,EAAArqF,KAAAc,WAGA,OAAAd,GAwGA2H,GA5CA,SAAAW,UACAA,EAAA4jF,qBACA5jF,EAAAgkF,qBACAhkF,EAAA6jF,qBACA7jF,EAAAikF,eAwCA5kF,GA5BA,SAAAW,EAAAsB,GACA,IAAAV,EAEAgjF,EAAA5jF,EAAA4jF,cAsBA,OApBAtiF,IACAsiF,GAAA5jF,EAAAW,kBAAAuC,KAKAtC,EAAAZ,EAAAW,kBAAAC,oBAEAA,GAAAgjF,EAEAhjF,EAAAhH,KAAAmgB,IAAA,EAAAnZ,GAEA,UAAAZ,EAAA3J,OAIAuK,GADAZ,EAAAg/E,WAvFA,IAyFAp+E,EAAAhH,KAAAigB,MAAAjZ,IAGAA,GAGAvB,GAvFA,SAAAW,EAAAtI,GACA,kBAAAA,EAAAuL,WACAW,IAAA5D,EAAAW,kBAAAsC,MACAjD,EAAAW,kBAAAsC,IAAAvL,EAAAuL,UAGAW,IAAA5D,EAAA6jF,cACA7jF,EAAA6jF,cAAAnsF,EAAAuL,IAEAjD,EAAA6jF,cAAAjqF,KAAAG,IAAAiG,EAAA6jF,cAAAnsF,EAAAuL,UAGAW,IAAA5D,EAAAikF,cACAjkF,EAAAikF,cAAAvsF,EAAAuL,IAEAjD,EAAAikF,cAAArqF,KAAAmgB,IAAA/Z,EAAAikF,cAAAvsF,EAAAuL,MAIA,kBAAAvL,EAAAwL,WACAU,IAAA5D,EAAAW,kBAAAuC,MACAlD,EAAAW,kBAAAuC,IAAAxL,EAAAwL,UAGAU,IAAA5D,EAAA4jF,cACA5jF,EAAA4jF,cAAAlsF,EAAAwL,IAEAlD,EAAA4jF,cAAAhqF,KAAAG,IAAAiG,EAAA4jF,cAAAlsF,EAAAwL,UAGAU,IAAA5D,EAAAgkF,cACAhkF,EAAAgkF,cAAAtsF,EAAAwL,IAEAlD,EAAAgkF,cAAApqF,KAAAmgB,IAAA/Z,EAAAgkF,cAAAtsF,EAAAwL,OA2OAghF,GApJA,SAAAn6E,GASA,IARA,IAAAhT,EAAA,EACA4B,EAAA,CACAwrF,aAAA,EACAC,YAAA,GAEAD,EAAA,EACAC,EAAA,EAEArtF,EAAAgT,EAAAvR,YAnBA,MAqBAuR,EAAAhT,IAFA,CAOA,WAAAgT,EAAAhT,IACAotF,GAAA,IACAptF,IAKA,IAFAotF,GAAAp6E,EAAAhT,KAEA,MAAAgT,EAAAhT,IACAqtF,GAAA,IACArtF,IAMA,GAHAqtF,GAAAr6E,EAAAhT,MAGA4B,EAAAgmF,SA1CA,IA0CAwF,EAAA,CACAxrF,EAAAwrF,cACAxrF,EAAAyrF,cACAzrF,EAAAgmF,QAAA50E,EAAAtR,SAAA1B,IAAAqtF,GACA,MAIArtF,GAAAqtF,EACAD,EAAA,EACAC,EAAA,EAGA,OAAAzrF,GAwGAurF,GApGA,SAAAG,GAGA,aAAAA,EAAA1F,QAAA,GACA,KAIA,MAAA0F,EAAA1F,QAAA,MAAA0F,EAAA1F,QAAA,IACA,KAIA,SAAA/lF,OAAAC,aAAAwrF,EAAA1F,QAAA,GAAA0F,EAAA1F,QAAA,GAAA0F,EAAA1F,QAAA,GAAA0F,EAAA1F,QAAA,IACA,KAIA,IAAA0F,EAAA1F,QAAA,GACA,KAKA0F,EAAA1F,QAAAlmF,SAAA,EAAA4rF,EAAA1F,QAAA3nF,OAAA,IA4EAktF,GAxEA,SAAAjhF,EAAAqhF,GACA,IACAvtF,EACAmiB,EACArT,EACAnO,EAJAa,EAAA,GAMA,QAAA+rF,EAAA,IACA,OAAA/rF,EAMA,IAFA2gB,EAAA,GAAAorE,EAAA,GAEAvtF,EAAA,EAAiBA,EAAAmiB,EAAWniB,IAE5BW,EAAA,CACArB,KAAA,EAAAiuF,EAAA,GAFAz+E,EAAA,EAAA9O,IAGAkM,OAGA,EAAAqhF,EAAAz+E,EAAA,KACAnO,EAAA6sF,OAAAD,EAAAz+E,EAAA,MAAAy+E,EAAAz+E,EAAA,GACAtN,EAAAnB,KAAAM,IAIA,OAAAa,GA6CA2rF,GA1CA,SAAAxsF,GAOA,IANA,IAGA8sF,EACAC,EAJAztF,EAAAU,EAAAc,WACAksF,EAAA,GACA3tF,EAAA,EAIAA,EAAAC,EAAA,GACA,IAAAU,EAAAX,IAAA,IAAAW,EAAAX,EAAA,QAAAW,EAAAX,EAAA,IACA2tF,EAAAttF,KAAAL,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAA2tF,EAAA1tF,OACA,OAAAU,EAIA8sF,EAAAxtF,EAAA0tF,EAAA1tF,OACAytF,EAAA,IAAA9iF,WAAA6iF,GACA,IAAAG,EAAA,EAEA,IAAA5tF,EAAA,EAAiBA,EAAAytF,EAAeG,IAAA5tF,IAChC4tF,IAAAD,EAAA,KAEAC,IAEAD,EAAAjiF,SAGAgiF,EAAA1tF,GAAAW,EAAAitF,GAGA,OAAAF,GAIAP,GA/JA,EAyKA97E,GAAA,SAAAA,IACAA,EAAA7Q,UAAArB,KAAAiB,KAAAlB,MACAA,KAAA2uF,gBAAA,GACA3uF,KAAA4uF,WAAA,KAAAC,GAAA,KACA,IAAAA,GAAA,KACA,IAAAA,GAAA,KACA,IAAAA,GAAA,MAEA7uF,KAAAwS,QAEAxS,KAAA4uF,WAAA1qF,QAAA,SAAA4qF,GACAA,EAAA3uF,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,SACA8uF,EAAA3uF,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,UACOA,QAGPmS,GAAA7Q,UAAA,IAAA+O,IAEAlP,KAAA,SAAA0O,GACA,IAAAu+E,EAAAC,EAAAU,EAEA,gBAAAl/E,EAAAzD,cAKAgiF,EAAAH,GAAAp+E,EAAAm/E,cAEAd,cAAAD,KAKAI,EAAAJ,GAAAG,IAcA,GAAAv+E,EAAA5C,IAAAjN,KAAAivF,WAEAjvF,KAAAkvF,qBAAA,MAFA,CAIO,GAAAr/E,EAAA5C,MAAAjN,KAAAivF,YAAAjvF,KAAAkvF,oBAQP,OAPAlvF,KAAAmvF,mBAEAnvF,KAAAmvF,cAEAnvF,KAAAkvF,qBAAA,IAOAH,EAAAd,GAAAp+E,EAAA7C,IAAAqhF,GACAruF,KAAA2uF,gBAAA3uF,KAAA2uF,gBAAAruF,OAAAyuF,GAEA/uF,KAAAivF,aAAAp/E,EAAA5C,MACAjN,KAAAmvF,YAAA,GAGAnvF,KAAAmvF,cACAnvF,KAAAivF,WAAAp/E,EAAA5C,MAGAkF,GAAA7Q,UAAAK,MAAA,WAEA3B,KAAA2uF,gBAAA5tF,QASAf,KAAA2uF,gBAAAzqF,QAAA,SAAAi8B,EAAA4jD,GACA5jD,EAAAivD,aAAArL,IAGA/jF,KAAA2uF,gBAAA9uB,KAAA,SAAAh2D,EAAAC,GACA,OAAAD,EAAAmD,MAAAlD,EAAAkD,IACAnD,EAAAulF,aAAAtlF,EAAAslF,aAGAvlF,EAAAmD,IAAAlD,EAAAkD,MAEAhN,KAAA2uF,gBAAAzqF,QAAA,SAAAuP,GACAA,EAAArT,KAAA,GAEAJ,KAAAqvF,qBAAA57E,IAIOzT,MACPA,KAAA2uF,gBAAA5tF,OAAA,EACAf,KAAA4uF,WAAA1qF,QAAA,SAAA4qF,GACAA,EAAAntF,SACO3B,OA9BPA,KAAA4uF,WAAA1qF,QAAA,SAAA4qF,GACAA,EAAAntF,SACS3B,OAgCTmS,GAAA7Q,UAAAkR,MAAA,WACAxS,KAAAivF,WAAA,KACAjvF,KAAAkvF,qBAAA,EACAlvF,KAAAmvF,YAAA,EACAnvF,KAAAsvF,qBAAA,YACAtvF,KAAA4uF,WAAA1qF,QAAA,SAAAqrF,GACAA,EAAA/8E,WAIAL,GAAA7Q,UAAA+tF,qBAAA,SAAA57E,GAEAzT,KAAAwvF,mBAAA/7E,GACAzT,KAAAsvF,qBAAA77E,EAAArT,MAAA,EACOJ,KAAAyvF,mBAAAh8E,KACPzT,KAAAsvF,qBAAA77E,EAAArT,MAAA,GAGA,OAAAJ,KAAAsvF,qBAAA77E,EAAArT,OAMAJ,KAAA4uF,YAAAn7E,EAAArT,MAAA,GAAAJ,KAAAsvF,qBAAA77E,EAAArT,OAAAe,KAAAsS,IAGAtB,GAAA7Q,UAAAkuF,mBAAA,SAAA/7E,GACA,qBAAAA,EAAA66E,SAGAn8E,GAAA7Q,UAAAmuF,mBAAA,SAAAh8E,GACA,qBAAAA,EAAA66E,SAaA,IAAAoB,GAAA,CACAC,GAAA,IAEAC,GAAA,IAEAC,GAAA,IAEAC,GAAA,IAEAC,GAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,GAEAC,IAAA,GAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,GAEAC,IAAA,GAEAC,IAAA,GAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,MAIAC,GAAA,SAAA78E,GACA,cAAAA,EACA,IAGAA,EAAAk3E,GAAAl3E,MACA7V,OAAAC,aAAA4V,KAOA88E,GAAA,6EAGAC,GAAA,WAIA,IAHA,IAAA7yF,EAAA,GACA5B,EAAA00F,GAEA10F,KACA4B,EAAAvB,KAAA,IAGA,OAAAuB,GAGAmsF,GAAA,SAAAA,EAAA4G,EAAAC,GACA7G,EAAAvtF,UAAArB,KAAAiB,KAAAlB,MACAA,KAAA21F,OAAAF,GAAA,EACAz1F,KAAA41F,aAAAF,GAAA,EACA11F,KAAAgoC,MAAA,SAAAhoC,KAAA21F,QAAA,EAAA31F,KAAA41F,eACA51F,KAAA61F,eACA71F,KAAAwS,QAEAxS,KAAAmB,KAAA,SAAAsS,GACA,IAAAhS,EAAAq0F,EAAAC,EAAAC,EAAAzmF,EAIA,IAFA9N,EAAA,MAAAgS,EAAA66E,UAEAtuF,KAAAi2F,kBAeA,GATA,cAAAx0F,GACAzB,KAAAi2F,iBAAAx0F,EACSA,IAAAzB,KAAAk2F,WACTl2F,KAAAi2F,iBAAA,MAGAF,EAAAt0F,IAAA,EACAu0F,EAAA,IAAAv0F,EAEAA,IAAAzB,KAAAk2F,SAES,GAAAz0F,IAAAzB,KAAAm2F,wBACTn2F,KAAAo2F,MAAA,aACS,GAAA30F,IAAAzB,KAAAq2F,gBAKTr2F,KAAAo2F,MAAA,QACAp2F,KAAAs2F,gBAAA7iF,EAAAzG,KAEAhN,KAAAu2F,eAAA9iF,EAAAzG,KAEA8oF,EAAA91F,KAAAw2F,WACAx2F,KAAAw2F,WAAAx2F,KAAAy2F,cACAz2F,KAAAy2F,cAAAX,EAEA91F,KAAA02F,UAAAjjF,EAAAzG,SACS,GAAAvL,IAAAzB,KAAA22F,gBACT32F,KAAA42F,YAAA,EACA52F,KAAA62F,UAAApjF,EAAAzG,UACS,GAAAvL,IAAAzB,KAAA82F,gBACT92F,KAAA42F,YAAA,EACA52F,KAAA62F,UAAApjF,EAAAzG,UACS,GAAAvL,IAAAzB,KAAA+2F,gBACT/2F,KAAA42F,YAAA,EACA52F,KAAA62F,UAAApjF,EAAAzG,UACS,GAAAvL,IAAAzB,KAAAg3F,iBACTh3F,KAAAs2F,gBAAA7iF,EAAAzG,KACAhN,KAAAu2F,eAAA9iF,EAAAzG,KACAhN,KAAAi3F,eACAj3F,KAAA02F,UAAAjjF,EAAAzG,SACS,GAAAvL,IAAAzB,KAAAk3F,WACT,UAAAl3F,KAAAo2F,MACAp2F,KAAAy2F,cAAAz2F,KAAAm3F,MAAAn3F,KAAAy2F,cAAAz2F,KAAAm3F,MAAAz2F,MAAA,MAEAV,KAAAw2F,WAAAx2F,KAAAm3F,MAAAn3F,KAAAw2F,WAAAx2F,KAAAm3F,MAAAz2F,MAAA,WAES,GAAAe,IAAAzB,KAAAo3F,wBACTp3F,KAAAu2F,eAAA9iF,EAAAzG,KACAhN,KAAAw2F,WAAAjB,UACS,GAAA9zF,IAAAzB,KAAAq3F,4BACTr3F,KAAAy2F,cAAAlB,UACS,GAAA9zF,IAAAzB,KAAAs3F,0BACT,YAAAt3F,KAAAo2F,QAGAp2F,KAAAu2F,eAAA9iF,EAAAzG,KACAhN,KAAAw2F,WAAAjB,MAGAv1F,KAAAo2F,MAAA,UACAp2F,KAAA02F,UAAAjjF,EAAAzG,SACS,GAAAhN,KAAAu3F,mBAAAxB,EAAAC,GAMTzmF,EAAA8lF,IADAU,GAAA,EAAAA,IAAA,GACAC,GACAh2F,UAAAo2F,OAAA3iF,EAAAzG,IAAAuC,GACAvP,KAAAw3F,eACS,GAAAx3F,KAAAy3F,eAAA1B,EAAAC,GAMT,UAAAh2F,KAAAo2F,MACAp2F,KAAAy2F,cAAAz2F,KAAAm3F,MAAAn3F,KAAAy2F,cAAAz2F,KAAAm3F,MAAAz2F,MAAA,MAEAV,KAAAw2F,WAAAx2F,KAAAm3F,MAAAn3F,KAAAw2F,WAAAx2F,KAAAm3F,MAAAz2F,MAAA,MAQA6O,EAAA8lF,IADAU,GAAA,EAAAA,IAAA,GACAC,GACAh2F,UAAAo2F,OAAA3iF,EAAAzG,IAAAuC,GACAvP,KAAAw3F,eACS,GAAAx3F,KAAA03F,aAAA3B,EAAAC,GAETh2F,KAAAs2F,gBAAA7iF,EAAAzG,KAGAhN,UAAAo2F,OAAA3iF,EAAAzG,IAAA,KACAhN,KAAAw3F,UAEA,SAAAxB,IACAh2F,KAAA23F,cAAAlkF,EAAAzG,IAAA,OAGA,OAAAgpF,IACAh2F,KAAA23F,cAAAlkF,EAAAzG,IAAA,YAGS,GAAAhN,KAAA43F,oBAAA7B,EAAAC,GAKTh2F,KAAAw3F,SAAA,EAAAxB,OACS,GAAAh2F,KAAA63F,MAAA9B,EAAAC,GAAA,CAGT,IAAA8B,EAAAxC,GAAA70F,QAAA,KAAAgB,GAEA,WAAAzB,KAAAo2F,QAIA0B,EAAA93F,KAAA42F,YAAA,MACAkB,EAAA93F,KAAA42F,YAAA,GAGA52F,KAAA62F,UAAApjF,EAAAzG,IAAA8qF,IAGAA,IAAA93F,KAAAm3F,OAEAn3F,KAAAs2F,gBAAA7iF,EAAAzG,KACAhN,KAAAm3F,KAAAW,GAKA,EAAA9B,IAAA,IAAAh2F,KAAA+3F,YAAAt3F,QAAA,MACAT,KAAA23F,cAAAlkF,EAAAzG,IAAA,OAGA,SAAAvL,KAKAzB,KAAAw3F,QAAA,OAAA/1F,IAAA,IAGAzB,KAAAg4F,WAAAhC,IAKA,SAAAA,IACAh2F,KAAA23F,cAAAlkF,EAAAzG,IAAA,YAIShN,KAAAi4F,aAAAlC,KACT,IAAAC,IACAA,EAAA,MAGAzmF,EAAA8lF,GAAAU,GACAxmF,GAAA8lF,GAAAW,GACAh2F,UAAAo2F,OAAA3iF,EAAAzG,IAAAuC,GACAvP,KAAAw3F,SAAAjoF,EAAAxO,aA7KAf,KAAAi2F,iBAAA,OAmLApH,GAAAvtF,UAAA,IAAA+O,GAGAw+E,GAAAvtF,UAAAi1F,eAAA,SAAAvpF,GACA,IAAAytB,EAAAz6B,KAAAw2F,WACAlzF,IAAA,SAAAw0F,GACA,IACA,OAAAA,EAAAn+E,OACS,MAAAhS,IAMT,OADA+vB,QAAAQ,MAAA,+BACA,MAGAld,KAAA,MACAlT,QAAA,iBAEA2yB,EAAA15B,QACAf,KAAAY,QAAA,QACAsP,SAAAlQ,KAAA02F,UACAtmF,OAAApD,EACAuC,KAAAkrB,EACApqB,OAAArQ,KAAAgoC,SASA6mD,GAAAvtF,UAAAkR,MAAA,WACAxS,KAAAo2F,MAAA,QAKAp2F,KAAAk4F,QAAA,EACAl4F,KAAA02F,UAAA,EACA12F,KAAAw2F,WAAAjB,KACAv1F,KAAAy2F,cAAAlB,KACAv1F,KAAAi2F,iBAAA,KAEAj2F,KAAAw3F,QAAA,EACAx3F,KAAAm3F,KAjQA,GAkQAn3F,KAAA42F,YAAA,EAEA52F,KAAA+3F,YAAA,IAOAlJ,GAAAvtF,UAAAu0F,aAAA,WAaA,IAAA71F,KAAA41F,cACA51F,KAAAm4F,MAAA,GACAn4F,KAAAo4F,KAAA,GACAp4F,KAAAq4F,UAAA,GAAAr4F,KAAA21F,SAAA,EACA31F,KAAAs4F,QAAA,IACO,IAAAt4F,KAAA41F,eACP51F,KAAAm4F,MAAA,GACAn4F,KAAAo4F,KAAA,GACAp4F,KAAAq4F,UAAA,GAAAr4F,KAAA21F,SAAA,EACA31F,KAAAs4F,QAAA,IAOAt4F,KAAAk2F,SAAA,EAEAl2F,KAAAm2F,wBAAA,GAAAn2F,KAAAq4F,SACAr4F,KAAAq2F,gBAAA,GAAAr2F,KAAAq4F,SAEAr4F,KAAA22F,gBAAA,GAAA32F,KAAAq4F,SACAr4F,KAAA82F,gBAAA,GAAA92F,KAAAq4F,SACAr4F,KAAA+2F,gBAAA,GAAA/2F,KAAAq4F,SACAr4F,KAAAg3F,iBAAA,GAAAh3F,KAAAq4F,SAEAr4F,KAAAs3F,0BAAA,GAAAt3F,KAAAq4F,SAEAr4F,KAAAk3F,WAAA,GAAAl3F,KAAAq4F,SACAr4F,KAAAo3F,wBAAA,GAAAp3F,KAAAq4F,SACAr4F,KAAAq3F,4BAAA,GAAAr3F,KAAAq4F,UAeAxJ,GAAAvtF,UAAAi2F,mBAAA,SAAAxB,EAAAC,GACA,OAAAD,IAAA/1F,KAAAo4F,MAAApC,GAAA,IAAAA,GAAA,IAeAnH,GAAAvtF,UAAAm2F,eAAA,SAAA1B,EAAAC,GACA,OAAAD,IAAA/1F,KAAAo4F,KAAA,GAAArC,IAAA/1F,KAAAo4F,KAAA,IAAApC,GAAA,IAAAA,GAAA,IAeAnH,GAAAvtF,UAAAo2F,aAAA,SAAA3B,EAAAC,GACA,OAAAD,IAAA/1F,KAAAo4F,MAAApC,GAAA,IAAAA,GAAA,IAeAnH,GAAAvtF,UAAAs2F,oBAAA,SAAA7B,EAAAC,GACA,OAAAD,IAAA/1F,KAAAs4F,SAAAtC,GAAA,IAAAA,GAAA,IAeAnH,GAAAvtF,UAAAu2F,MAAA,SAAA9B,EAAAC,GACA,OAAAD,GAAA/1F,KAAAm4F,OAAApC,EAAA/1F,KAAAm4F,MAAA,GAAAnC,GAAA,IAAAA,GAAA,KAaAnH,GAAAvtF,UAAA02F,WAAA,SAAAhC,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAYAnH,GAAAvtF,UAAA22F,aAAA,SAAAM,GACA,OAAAA,GAAA,IAAAA,GAAA,KAWA1J,GAAAvtF,UAAAu1F,UAAA,SAAA7pF,EAAAwrF,GAWA,GATA,WAAAx4F,KAAAo2F,QACAp2F,KAAAm3F,KA/aA,GAgbAn3F,KAAAo2F,MAAA,SAEAp2F,KAAAu2F,eAAAvpF,GACAhN,KAAAy2F,cAAAlB,KACAv1F,KAAAw2F,WAAAjB,WAGA5nF,IAAA6qF,OAAAx4F,KAAAm3F,KAEA,QAAAr2F,EAAA,EAAuBA,EAAAd,KAAA42F,YAAsB91F,IAC7Cd,KAAAw2F,WAAAgC,EAAA13F,GAAAd,KAAAw2F,WAAAx2F,KAAAm3F,KAAAr2F,GACAd,KAAAw2F,WAAAx2F,KAAAm3F,KAAAr2F,GAAA,QAIA6M,IAAA6qF,IACAA,EAAAx4F,KAAAm3F,MAGAn3F,KAAAk4F,QAAAM,EAAAx4F,KAAA42F,YAAA,GAKA/H,GAAAvtF,UAAAq2F,cAAA,SAAA3qF,EAAAyX,GACAzkB,KAAA+3F,YAAA/3F,KAAA+3F,YAAAz3F,OAAAmkB,GACA,IAAAlV,EAAAkV,EAAA5hB,OAAA,SAAA0M,EAAAkV,GACA,OAAAlV,EAAA,IAAAkV,EAAA,KACO,IACPzkB,UAAAo2F,OAAAppF,EAAAuC,IAKAs/E,GAAAvtF,UAAAg1F,gBAAA,SAAAtpF,GACA,GAAAhN,KAAA+3F,YAAAh3F,OAAA,CAIA,IAAAwO,EAAAvP,KAAA+3F,YAAAh9E,UAAAlY,OAAA,SAAA0M,EAAAkV,GACA,OAAAlV,EAAA,KAAAkV,EAAA,KACO,IACPzkB,KAAA+3F,YAAA,GACA/3F,UAAAo2F,OAAAppF,EAAAuC,KAIAs/E,GAAAvtF,UAAAm3F,MAAA,SAAAzrF,EAAAuC,GACA,IAAAmpF,EAAA14F,KAAAy2F,cAAAz2F,KAAAm3F,MAEAuB,GAAAnpF,EACAvP,KAAAy2F,cAAAz2F,KAAAm3F,MAAAuB,GAGA7J,GAAAvtF,UAAAq3F,OAAA,SAAA3rF,EAAAuC,GACA,IAAAmpF,EAAA14F,KAAAw2F,WAAAx2F,KAAAm3F,MACAuB,GAAAnpF,EACAvP,KAAAw2F,WAAAx2F,KAAAm3F,MAAAuB,GAGA7J,GAAAvtF,UAAA21F,aAAA,WACA,IAAAn2F,EAEA,IAAAA,EAAA,EAAiBA,EAAAd,KAAAk4F,QAAkBp3F,IACnCd,KAAAw2F,WAAA11F,GAAA,GAGA,IAAAA,EAAAd,KAAAm3F,KAAA,EAA6Br2F,EAAA00F,GAAoB10F,IACjDd,KAAAw2F,WAAA11F,GAAA,GAIA,IAAAA,EAAAd,KAAAk4F,QAA4Bp3F,EAAAd,KAAAm3F,KAAer2F,IAC3Cd,KAAAw2F,WAAA11F,GAAAd,KAAAw2F,WAAA11F,EAAA,GAIAd,KAAAw2F,WAAAx2F,KAAAm3F,MAAA,IAGAtI,GAAAvtF,UAAAs3F,QAAA,SAAA5rF,EAAAuC,GACA,IAAAmpF,EAAA14F,KAAAw2F,WAAAx2F,KAAAm3F,MACAuB,GAAAnpF,EACAvP,KAAAw2F,WAAAx2F,KAAAm3F,MAAAuB,GAIA,IAAAxmF,GAAA,CACAC,iBACA08E,iBAEAgK,GAAA,CACAvxF,iBAAA,GACAC,iBAAA,GACAC,qBAAA,IAKAsxF,GAAA,SAAAzxF,EAAAwhB,GACA,IAAAkwE,EAAA,EAeA,IAbA1xF,EAAAwhB,IAQAkwE,GAAA,GAKAp1F,KAAAw7D,IAAAt2C,EAAAxhB,GAlBA,YAmBAA,GApBA,WAoBA0xF,EAGA,OAAA1xF,GAGA0J,GAAA,SAAAA,EAAA3Q,GACA,IAAA44F,EAAAC,EACAloF,EAAAzP,UAAArB,KAAAiB,KAAAlB,MACAA,KAAAk5F,MAAA94F,EAEAJ,KAAAmB,KAAA,SAAAM,GACAA,EAAArB,OAAAJ,KAAAk5F,aAIAvrF,IAAAsrF,IACAA,EAAAx3F,EAAAwL,KAGAxL,EAAAwL,IAAA6rF,GAAAr3F,EAAAwL,IAAAgsF,GACAx3F,EAAAuL,IAAA8rF,GAAAr3F,EAAAuL,IAAAisF,GACAD,EAAAv3F,EAAAwL,IACAjN,KAAAY,QAAA,OAAAa,KAGAzB,KAAA2B,MAAA,WACAs3F,EAAAD,EACAh5F,KAAAY,QAAA,SAGAZ,KAAAuS,cAAA,WACA0mF,OAAA,EACAD,OAAA,IAIAjoF,GAAAzP,UAAA,IAAA+O,GACA,IAiFA8oF,GAjFAC,GACAroF,GAIAiD,GAAA,SAAAF,EAAAC,EAAA3R,GACA,IAAAtB,EACA4B,EAAA,GAEA,IAAA5B,EAAAiT,EAAqBjT,EAAAsB,EAAStB,IAC9B4B,GAAA,UAAAoR,EAAAhT,GAAAqH,SAAA,KAAAzH,OAAA,GAGA,OAAAgC,GAIA22F,GAAA,SAAAvlF,EAAAC,EAAA3R,GACA,OAAAk3F,mBAAAtlF,GAAAF,EAAAC,EAAA3R,KAOA2Q,GAAA,SAAAtR,GACA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA83F,GAAA,CACAC,KAAA,SAAArwE,GACA,IAAAroB,EAEA,OAAAqoB,EAAA1nB,KAAA,IAKA,IAAAX,EAAA,EAAmBA,EAAAqoB,EAAA1nB,KAAAV,OAAqBD,IACxC,OAAAqoB,EAAA1nB,KAAAX,GAAA,CAEAqoB,EAAA8pB,YAAAomD,GAAAlwE,EAAA1nB,KAAA,EAAAX,GAEAqoB,EAAA9hB,MAAAgyF,GAAAlwE,EAAA1nB,KAAAX,EAAA,EAAAqoB,EAAA1nB,KAAAV,QAAA+G,QAAA,WACA,MAIAqhB,EAAA1nB,KAAA0nB,EAAA9hB,QAEAoyF,KAAA,SAAAtwE,GACA,IAAAroB,EAEA,OAAAqoB,EAAA1nB,KAAA,GAKA,IAAAX,EAAA,EAAmBA,EAAAqoB,EAAA1nB,KAAAV,OAAqBD,IACxC,OAAAqoB,EAAA1nB,KAAAX,GAAA,CAEAqoB,EAAA8pB,YAAAomD,GAAAlwE,EAAA1nB,KAAA,EAAAX,GACAqoB,EAAAlS,IAAAoiF,GAAAlwE,EAAA1nB,KAAAX,EAAA,EAAAqoB,EAAA1nB,KAAAV,QACA,QAIA24F,KAAA,SAAAvwE,GACA,IAAAroB,EA7CAgT,EA+CA,IAAAhT,EAAA,EAAmBA,EAAAqoB,EAAA1nB,KAAAV,OAAqBD,IACxC,OAAAqoB,EAAA1nB,KAAAX,GAAA,CAEAqoB,EAAAwwE,OAlDA7lF,EAkDAqV,EAAA1nB,KAjDAoS,SAAAG,GAAAF,EAiDA,EAAAhT,KACA,MAIAqoB,EAAAq6D,YAAAr6D,EAAA1nB,KAAAe,SAAA1B,EAAA,GACAqoB,EAAA1nB,KAAA0nB,EAAAq6D,eAKA2V,GAAA,SAAAnvF,GACA,IAaAlJ,EAbA+6C,EAAA,CACA7jB,SAAAhuB,MAAAguB,OAIAzyB,WAAAyE,KAAAzE,YAGAq0F,EAAA,EAEAn3F,EAAA,GAEAo3F,EAAA,EASA,GANAV,GAAA73F,UAAArB,KAAAiB,KAAAlB,MAIAA,KAAAuQ,aAAAsoF,GAAArxF,qBAAAW,SAAA,IAEA0zC,EAAAt2C,WACA,IAAAzE,EAAA,EAAmBA,EAAA+6C,EAAAt2C,WAAAxE,OAAgCD,IACnDd,KAAAuQ,eAAA,KAAAsrC,EAAAt2C,WAAAzE,GAAAqH,SAAA,KAAAzH,OAAA,GAIAV,KAAAmB,KAAA,SAAAswB,GACA,IAAAtI,EAAAxV,EAAAC,EAAAxC,EAAAtQ,EAEA,sBAAA2wB,EAAArxB,KAaA,GANAqxB,EAAAqoE,yBACAD,EAAA,EACAp3F,EAAA1B,OAAA,GAIA,IAAA0B,EAAA1B,SAAA0wB,EAAAhwB,KAAAV,OAAA,IAAA0wB,EAAAhwB,KAAA,SAAAuR,WAAA,IAAAye,EAAAhwB,KAAA,SAAAuR,WAAA,IAAAye,EAAAhwB,KAAA,SAAAuR,WAAA,IACA6oC,EAAA7jB,OAEAN,QAAAN,IAAA,8CAsBA,GAfA30B,EAAAtB,KAAAswB,GACAooE,GAAApoE,EAAAhwB,KAAAc,WAEA,IAAAE,EAAA1B,SAKA64F,EAAA7mF,GAAA0e,EAAAhwB,KAAAe,SAAA,OAGAo3F,GAAA,MAIAC,EAAAD,GAAA,CAYA,IAPAzwE,EAAA,CACA1nB,KAAA,IAAAiK,WAAAkuF,GACA7uF,OAAA,GACAiC,IAAAvK,EAAA,GAAAuK,IACAC,IAAAxK,EAAA,GAAAwK,KAGAnM,EAAA,EAAmBA,EAAA84F,GACnBzwE,EAAA1nB,KAAAkK,IAAAlJ,EAAA,GAAAhB,KAAAe,SAAA,EAAAo3F,EAAA94F,MACAA,GAAA2B,EAAA,GAAAhB,KAAAc,WACAs3F,GAAAp3F,EAAA,GAAAhB,KAAAc,WACAE,EAAA+J,QAIAmH,EAAA,GAEA,GAAAwV,EAAA1nB,KAAA,KAEAkS,GAAA,EAEAA,GAAAZ,GAAAoW,EAAA1nB,KAAAe,SAAA,QAEAo3F,GAAA7mF,GAAAoW,EAAA1nB,KAAAe,SAAA,SAKA,GAIA,IAFAoR,EAAAb,GAAAoW,EAAA1nB,KAAAe,SAAAmR,EAAA,EAAAA,EAAA,KAEA,EAEA,OAAA+jB,QAAAN,IAAA,+DAUA,IANAhmB,EAAA,CACAnO,GAFAN,OAAAC,aAAAumB,EAAA1nB,KAAAkS,GAAAwV,EAAA1nB,KAAAkS,EAAA,GAAAwV,EAAA1nB,KAAAkS,EAAA,GAAAwV,EAAA1nB,KAAAkS,EAAA,IAGAlS,KAAA0nB,EAAA1nB,KAAAe,SAAAmR,EAAA,GAAAA,EAAAC,EAAA,MAEA/N,IAAAuL,EAAAnO,GAEAs2F,GAAAnoF,EAAAnO,MACAs2F,GAAAnoF,EAAAnO,IAAAmO,GAGA,iDAAAA,EAAAuoF,OAAA,CACA,IAAAz0F,EAAAkM,EAAA3P,KACAU,GAAA,EAAA+C,EAAA,QAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OACA/C,GAAA,EACAA,GAAA,EAAA+C,EAAA,GACAkM,EAAAE,UAAAnP,OAKAwL,IAAAwb,EAAAnc,UAAAW,IAAAwb,EAAAlc,MACAkc,EAAAnc,IAAAoE,EAAAE,UACA6X,EAAAlc,IAAAmE,EAAAE,WAGAtR,KAAAY,QAAA,YAAAwQ,GAIA+X,EAAApe,OAAA5J,KAAAiQ,GACAuC,GAAA,GAEAA,GAAAC,QACSD,EAAAimF,GAET55F,KAAAY,QAAA,OAAAuoB,OAIA7nB,UAAA,IAAA+O,GACA,IAGA0pF,GAAAC,GAAAC,GAHAtrF,GAAAwqF,GACAe,GAAAd,IAaAW,GAAA,WACA,IAAAt3F,EAAA,IAAAiJ,WATA,KAUAyuF,EAAA,EAEAJ,GAAAz4F,UAAArB,KAAAiB,KAAAlB,MAOAA,KAAAmB,KAAA,SAAA2S,GACA,IAEAsmF,EAFA9d,EAAA,EACAC,EArBA,IAmCA,IAVA4d,IACAC,EAAA,IAAA1uF,WAAAoI,EAAAvR,WAAA43F,IACAxuF,IAAAlJ,EAAAD,SAAA,EAAA23F,IACAC,EAAAzuF,IAAAmI,EAAAqmF,GACAA,EAAA,GAEAC,EAAAtmF,EAIAyoE,EAAA6d,EAAA73F,YAjCA,KAmCA63F,EAAA9d,IAnCA,KAmCA8d,EAAA7d,IAYAD,IACAC,MAVAv8E,KAAAY,QAAA,OAAAw5F,EAAA53F,SAAA85E,EAAAC,IACAD,GAzCA,IA0CAC,GA1CA,KAwDAD,EAAA8d,EAAA73F,aACAE,EAAAkJ,IAAAyuF,EAAA53F,SAAA85E,GAAA,GACA6d,EAAAC,EAAA73F,WAAA+5E,IAQAt8E,KAAA2B,MAAA,WAlEA,MAsEAw4F,GApEA,KAoEA13F,EAAA,KACAzC,KAAAY,QAAA,OAAA6B,GACA03F,EAAA,GAGAn6F,KAAAY,QAAA,WAIAU,UAAA,IAAA+O,IAMA2pF,GAAA,WACA,IAAAK,EAAAC,EAAAC,EAAAh7F,EAEAy6F,GAAA14F,UAAArB,KAAAiB,KAAAlB,MAEAT,EAAAS,KACAA,KAAAw6F,qBAAA,GACAx6F,KAAAy6F,qBAAA9sF,EAEA0sF,EAAA,SAAA3R,EAAAgS,GACA,IAAA9qF,EAAA,EAOA8qF,EAAAC,4BACA/qF,GAAA84E,EAAA94E,GAAA,GAGA,QAAA8qF,EAAAt6F,KACAk6F,EAAA5R,EAAAlmF,SAAAoN,GAAA8qF,GAEAH,EAAA7R,EAAAlmF,SAAAoN,GAAA8qF,IAIAJ,EAAA,SAAA5R,EAAAkS,GACAA,EAAAC,eAAAnS,EAAA,GAEAkS,EAAAE,oBAAApS,EAAA,GAGAnpF,EAAAw7F,QAAA,GAAArS,EAAA,QAAAA,EAAA,IACAkS,EAAAG,OAAAx7F,EAAAw7F,QAYAR,EAAA,SAAA7R,EAAAsS,GACA,IAAAC,EAAArrF,EAMA,KAAA84E,EAAA,IAmBA,IAdAnpF,EAAAk7F,gBAAA,CACA78C,MAAA,KACA59B,MAAA,KACAk7E,iBAAA,IAIAD,EAAA,IADA,GAAAvS,EAAA,OAAAA,EAAA,IACA,EAKA94E,EAAA,KAFA,GAAA84E,EAAA,QAAAA,EAAA,KAIA94E,EAAAqrF,GAAA,CACA,IAAAE,EAAAzS,EAAA94E,GACAwrF,GAAA,GAAA1S,EAAA94E,EAAA,OAAA84E,EAAA94E,EAAA,GAIAurF,IAAAtC,GAAAvxF,kBAAA,OAAA/H,EAAAk7F,gBAAA78C,MACAr+C,EAAAk7F,gBAAA78C,MAAAw9C,EACWD,IAAAtC,GAAAtxF,kBAAA,OAAAhI,EAAAk7F,gBAAAz6E,MACXzgB,EAAAk7F,gBAAAz6E,MAAAo7E,EACWD,IAAAtC,GAAArxF,uBAEXjI,EAAAk7F,gBAAA,kBAAAW,GAAAD,GAKAvrF,GAAA,OAAA84E,EAAA94E,EAAA,OAAA84E,EAAA94E,EAAA,IAIAorF,EAAAP,gBAAAl7F,EAAAk7F,kBAOAz6F,KAAAmB,KAAA,SAAAsS,GACA,IAAA/Q,EAAA,GACAkN,EAAA,EAgBA,GAfAlN,EAAAi4F,6BAAA,GAAAlnF,EAAA,IAEA/Q,EAAA04F,IAAA,GAAA3nF,EAAA,GACA/Q,EAAA04F,MAAA,EACA14F,EAAA04F,KAAA3nF,EAAA,IAMA,GAAAA,EAAA,YACA7D,GAAA6D,EAAA7D,GAAA,GAIA,IAAAlN,EAAA04F,IACA14F,EAAAtC,KAAA,MACAi6F,EAAA5mF,EAAAjR,SAAAoN,GAAAlN,GACA1C,KAAAY,QAAA,OAAA8B,QACS,GAAAA,EAAA04F,MAAAp7F,KAAA+6F,OAKT,IAJAr4F,EAAAtC,KAAA,MACAi6F,EAAA5mF,EAAAjR,SAAAoN,GAAAlN,GACA1C,KAAAY,QAAA,OAAA8B,GAEA1C,KAAAw6F,qBAAAz5F,QACAf,KAAAq7F,YAAAj6F,MAAApB,UAAAw6F,qBAAAhuF,mBAESmB,IAAA3N,KAAAy6F,gBAGTz6F,KAAAw6F,qBAAAr5F,KAAA,CAAAsS,EAAA7D,EAAAlN,IAEA1C,KAAAq7F,YAAA5nF,EAAA7D,EAAAlN,IAIA1C,KAAAq7F,YAAA,SAAA5nF,EAAA7D,EAAAlN,GAEAA,EAAA04F,MAAAp7F,KAAAy6F,gBAAA78C,MACAl7C,EAAAy4F,WAAAtC,GAAAvxF,iBACS5E,EAAA04F,MAAAp7F,KAAAy6F,gBAAAz6E,MACTtd,EAAAy4F,WAAAtC,GAAAtxF,iBAIA7E,EAAAy4F,WAAAn7F,KAAAy6F,gBAAA,kBAAA/3F,EAAA04F,KAGA14F,EAAAtC,KAAA,MACAsC,EAAAjB,KAAAgS,EAAAjR,SAAAoN,GACA5P,KAAAY,QAAA,OAAA8B,MAIApB,UAAA,IAAA+O,GACA2pF,GAAAsB,aAAA,CACAC,KAAA,GACAC,KAAA,KAWAvB,GAAA,WACA,IAAA16F,EAAAS,KAEA49C,EAAA,CACAn8C,KAAA,GACAU,KAAA,GAEA6d,EAAA,CACAve,KAAA,GACAU,KAAA,GAEAs5F,EAAA,CACAh6F,KAAA,GACAU,KAAA,GAgDAu5F,EAAA,SAAAC,EAAAv7F,EAAAw7F,GACA,IAMAC,EACA14F,EAPA24F,EAAA,IAAApwF,WAAAiwF,EAAAx5F,MACA0N,EAAA,CACAzP,QAEAU,EAAA,EACA8O,EAAA,EAKA,GAAA+rF,EAAAl6F,KAAAV,UAAA46F,EAAAx5F,KAAA,IAMA,IAFA0N,EAAAtL,QAAAo3F,EAAAl6F,KAAA,GAAA25F,IAEAt6F,EAAA,EAAmBA,EAAA66F,EAAAl6F,KAAAV,OAA2BD,IAC9CqC,EAAAw4F,EAAAl6F,KAAAX,GACAg7F,EAAAnwF,IAAAxI,EAAA1B,KAAAmO,GACAA,GAAAzM,EAAA1B,KAAAc,YAlEA,SAAAmmF,EAAAqT,GACA,IAAAC,EAEAD,EAAAE,aAAA,GAAAvT,EAAA,MAAAA,EAAA,IAEAqT,EAAAjC,uBAAA,OAAApR,EAAA,IAaA,KATAsT,EAAAtT,EAAA,MAaAqT,EAAA/uF,KAAA,GAAA07E,EAAA,aAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,aAAAA,EAAA,SACAqT,EAAA/uF,KAAA,EAEA+uF,EAAA/uF,MAAA,EAAA07E,EAAA,SAEAqT,EAAA9uF,IAAA8uF,EAAA/uF,IAEA,GAAAgvF,IACAD,EAAA9uF,KAAA,GAAAy7E,EAAA,cAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,aAAAA,EAAA,SACAqT,EAAA9uF,KAAA,EAEA8uF,EAAA9uF,MAAA,EAAAy7E,EAAA,WAOAqT,EAAAt6F,KAAAinF,EAAAlmF,SAAA,EAAAkmF,EAAA,IA8BAwT,CAAAJ,EAAAjsF,GAGAgsF,EAAA,UAAAz7F,GAAAyP,EAAAosF,cAAAN,EAAAx5F,MAEAy5F,GAAAC,KACAF,EAAAx5F,KAAA,EACAw5F,EAAAl6F,KAAAV,OAAA,GAKA86F,GACAt8F,EAAAqB,QAAA,OAAAiP,KAIAoqF,GAAA34F,UAAArB,KAAAiB,KAAAlB,MAOAA,KAAAmB,KAAA,SAAAM,IACA,CACAm5F,IAAA,aAGAmB,IAAA,WACA,IAAAJ,EAAAR,EAEA,OAAA15F,EAAA05F,YACA,KAAAtC,GAAAvxF,iBACA,KAAAuxF,GAAAvxF,iBACAq0F,EAAA/9C,EACAu9C,EAAA,QACA,MAEA,KAAAtC,GAAAtxF,iBACAo0F,EAAA37E,EACAm7E,EAAA,QACA,MAEA,KAAAtC,GAAArxF,qBACAm0F,EAAAF,EACAN,EAAA,iBACA,MAEA,QAEA,OAKA15F,EAAAk5F,2BACAe,EAAAC,EAAAR,GAAA,GAKAQ,EAAAl6F,KAAAN,KAAAM,GACAk6F,EAAAx5F,MAAAV,OAAAc,YAEAy4F,IAAA,WACA,IAAAnrF,EAAA,CACAzP,KAAA,WACAgS,OAAA,IAEAqoF,EAAAh5F,EAAAg5F,gBAEA,OAAAA,EAAA78C,OACA/tC,EAAAuC,OAAAjR,KAAA,CACAuJ,kBAAA,CACAC,oBAAA,GAEA1H,IAAAw3F,EAAA78C,MACApsC,MAAA,MACApR,KAAA,UAIA,OAAAq6F,EAAAz6E,OACAnQ,EAAAuC,OAAAjR,KAAA,CACAuJ,kBAAA,CACAC,oBAAA,GAEA1H,IAAAw3F,EAAAz6E,MACAxO,MAAA,OACApR,KAAA,UAIAb,EAAAqB,QAAA,OAAAiP,MAESpO,EAAArB,SAaTJ,KAAA2B,MAAA,WAGA+5F,EAAA99C,EAAA,SACA89C,EAAA17E,EAAA,SACA07E,EAAAD,EAAA,kBACAz7F,KAAAY,QAAA,WAIAU,UAAA,IAAA+O,GACA,IAAAhH,GAAA,CACA8yF,QAAA,EACAC,mBAhdA,IAidAzqF,sBAAAooF,GACAloF,qBAAAmoF,GACAjoF,iBAAAkoF,GACAlpF,wBAAAmpF,GACA/nF,cAAAD,GAAAC,cACA08E,aAAA38E,GAAA28E,aACAj+E,eAAAjC,IAGA,QAAAvO,MAAAy4F,GACAA,GAAAngF,eAAAtY,MACAiJ,GAAAjJ,IAAAy4F,GAAAz4F,KAIA,IAEAi8F,GAFAC,GAAAjzF,GAIAyJ,GAAA,uEAUAupF,GAAA,WACA,IAAA55F,EAEA45F,GAAA/6F,UAAArB,KAAAiB,KAAAlB,MAEAA,KAAAmB,KAAA,SAAAsS,GACA,IAEA8oF,EACAC,EACAC,EACAC,EACAC,EACAC,EAPA97F,EAAA,EACA+7F,EAAA,EAQA,aAAAppF,EAAArT,KAkBA,IAXAqC,GACAi6F,EAAAj6F,GACAA,EAAA,IAAAiJ,WAAAgxF,EAAAn6F,WAAAkR,EAAAhS,KAAAc,aACAoJ,IAAA+wF,GACAj6F,EAAAkJ,IAAA8H,EAAAhS,KAAAi7F,EAAAn6F,aAEAE,EAAAgR,EAAAhS,KAKAX,EAAA,EAAA2B,EAAA1B,QAEA,SAAA0B,EAAA3B,IAAA,WAAA2B,EAAA3B,EAAA,KAkBA,GATA07F,EAAA,MAAA/5F,EAAA3B,EAAA,IAGAy7F,GAAA,EAAA95F,EAAA3B,EAAA,QAAA2B,EAAA3B,EAAA,WAAA2B,EAAA3B,EAAA,OAEA87F,EAAA,KADAD,EAAA,WAAAl6F,EAAA3B,EAAA,MACAgS,IAAA,GAAArQ,EAAA3B,EAAA,SACA27F,EAAA37F,EAAAy7F,EAGA95F,EAAAF,WAAAk6F,EACA,OAiBA,GAbAz8F,KAAAY,QAAA,QACAoM,IAAAyG,EAAAzG,IAAA6vF,EAAAD,EACA3vF,IAAAwG,EAAAxG,IAAA4vF,EAAAD,EACAD,cACA/T,gBAAA,GAAAnmF,EAAA3B,EAAA,UACAgoF,cAAA,EAAArmF,EAAA3B,EAAA,YAAA2B,EAAA3B,EAAA,QACAioF,WAAAj2E,IAAA,GAAArQ,EAAA3B,EAAA,SACA+nF,wBAAA,GAAApmF,EAAA3B,EAAA,QAEA8oF,WAAA,GACAnoF,KAAAgB,EAAAD,SAAA1B,EAAA,EAAA07F,EAAAC,KAGAh6F,EAAAF,aAAAk6F,EAEA,YADAh6F,OAAAkL,GAIAkvF,IAEAp6F,IAAAD,SAAAi6F,QAxCA37F,KA4CAd,KAAA2B,MAAA,WACA3B,KAAAY,QAAA,WAIAU,UAAA,IAAA+O,GACA,IAoJAysF,GAAAC,GAEAC,GAtJAxB,GAAAa,GAkJAY,GA3IA,SAAAC,GACA,IACAC,EAAAD,EAAA36F,WAEA66F,EAAA,EAGAC,EAAA,EAGAr9F,KAAAe,OAAA,WACA,SAAAo8F,GAIAn9F,KAAAs9F,cAAA,WACA,SAAAH,EAAAE,GAIAr9F,KAAAu9F,SAAA,WACA,IAAAp/D,EAAA++D,EAAA36F,WAAA46F,EACAK,EAAA,IAAA9xF,WAAA,GACA+xF,EAAA95F,KAAAG,IAAA,EAAAq5F,GAEA,OAAAM,EACA,UAAAroF,MAAA,sBAGAooF,EAAA7xF,IAAAuxF,EAAA16F,SAAA27B,IAAAs/D,IACAL,EAAA,IAAA34F,SAAA+4F,EAAA/6F,QAAAmC,UAAA,GAEAy4F,EAAA,EAAAI,EACAN,GAAAM,GAIAz9F,KAAA09F,SAAA,SAAAz6E,GACA,IAAA06E,EAEAN,EAAAp6E,GACAm6E,IAAAn6E,EACAo6E,GAAAp6E,IAEAA,GAAAo6E,EAEAp6E,GAAA,GADA06E,EAAAh6F,KAAAigB,MAAAX,EAAA,IAEAk6E,GAAAQ,EACA39F,KAAAu9F,WACAH,IAAAn6E,EACAo6E,GAAAp6E,IAKAjjB,KAAA49F,SAAA,SAAAz7F,GACA,IAAA07F,EAAAl6F,KAAAG,IAAAu5F,EAAAl7F,GAEA27F,EAAAV,IAAA,GAAAS,EAaA,OAVAR,GAAAQ,GAEA,EACAT,IAAAS,EACSV,EAAA,GACTn9F,KAAAu9F,YAGAM,EAAA17F,EAAA07F,GAEA,EACAC,GAAAD,EAAA79F,KAAA49F,SAAAC,GAGAC,GAIA99F,KAAA+9F,iBAAA,WACA,IAAAC,EAEA,IAAAA,EAAA,EAAkCA,EAAAX,IAAyCW,EAC3E,QAAAZ,EAAA,aAAAY,GAIA,OAFAZ,IAAAY,EACAX,GAAAW,EACAA,EAMA,OADAh+F,KAAAu9F,WACAS,EAAAh+F,KAAA+9F,oBAIA/9F,KAAAi+F,sBAAA,WACAj+F,KAAA09F,SAAA,EAAA19F,KAAA+9F,qBAIA/9F,KAAAk+F,cAAA,WACAl+F,KAAA09F,SAAA,EAAA19F,KAAA+9F,qBAIA/9F,KAAAm+F,sBAAA,WACA,IAAAC,EAAAp+F,KAAA+9F,mBAEA,OAAA/9F,KAAA49F,SAAAQ,EAAA,MAIAp+F,KAAAq+F,cAAA,WACA,IAAAP,EAAA99F,KAAAm+F,wBAEA,SAAAL,EAEA,EAAAA,IAAA,GAGA,GAAAA,IAAA,IAKA99F,KAAAs+F,YAAA,WACA,WAAAt+F,KAAA49F,SAAA,IAIA59F,KAAAu+F,iBAAA,WACA,OAAAv+F,KAAA49F,SAAA,IAGA59F,KAAAu9F,aAYAR,GAAA,WACA,IACAj8F,EACA2B,EAFA+7F,EAAA,EAIAzB,GAAAz7F,UAAArB,KAAAiB,KAAAlB,MAUAA,KAAAmB,KAAA,SAAAM,GACA,IAAAg9F,EAoBA,IAlBAh8F,IAGAg8F,EAAA,IAAA/yF,WAAAjJ,EAAAF,WAAAd,OAAAc,aACAoJ,IAAAlJ,GACAg8F,EAAA9yF,IAAAlK,OAAAgB,EAAAF,YACAE,EAAAg8F,GALAh8F,EAAAhB,OAiBc+8F,EAAA/7F,EAAAF,WAAA,EAAmCi8F,IACjD,OAAA/7F,EAAA+7F,EAAA,IAEA19F,EAAA09F,EAAA,EACA,MAIA,KAAA19F,EAAA2B,EAAAF,YAGA,OAAAE,EAAA3B,IACA,OAEA,OAAA2B,EAAA3B,EAAA,IACAA,GAAA,EACA,MACe,OAAA2B,EAAA3B,EAAA,IACfA,IACA,MAIA09F,EAAA,IAAA19F,EAAA,GACAd,KAAAY,QAAA,OAAA6B,EAAAD,SAAAg8F,EAAA,EAAA19F,EAAA,IAIA,GACAA,UACe,IAAA2B,EAAA3B,MAAA2B,EAAA1B,QAEfy9F,EAAA19F,EAAA,EACAA,GAAA,EACA,MAEA,OAEA,OAAA2B,EAAA3B,EAAA,QAAA2B,EAAA3B,EAAA,IACAA,GAAA,EACA,MAIAd,KAAAY,QAAA,OAAA6B,EAAAD,SAAAg8F,EAAA,EAAA19F,EAAA,IACA09F,EAAA19F,EAAA,EACAA,GAAA,EACA,MAEA,QAGAA,GAAA,EAMA2B,IAAAD,SAAAg8F,GACA19F,GAAA09F,EACAA,EAAA,GAGAx+F,KAAA2B,MAAA,WAEAc,KAAAF,WAAA,GACAvC,KAAAY,QAAA,OAAA6B,EAAAD,SAAAg8F,EAAA,IAIA/7F,EAAA,KACA+7F,EAAA,EACAx+F,KAAAY,QAAA,WAIAU,UAAA,IAAA+O,GAIA2sF,GAAA,CACA0B,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,IAOAvC,GAAA,WACA,IACAv9F,EACAgF,EACA+6F,EACAC,EACAC,EACAC,EACAC,EAPAC,EAAA,IAAA5C,GASAD,GAAAx7F,UAAArB,KAAAiB,KAAAlB,MAEAT,EAAAS,KAaAA,KAAAmB,KAAA,SAAAsS,GACA,UAAAA,EAAArT,OAIAmE,EAAAkP,EAAAlP,QACA+6F,EAAA7rF,EAAAzG,IACAuyF,EAAA9rF,EAAAxG,IACA0yF,EAAAx+F,KAAAsS,KAYAksF,EAAAx/F,GAAA,gBAAAsB,GACA,IAAAoO,EAAA,CACAtL,UACAyI,IAAAsyF,EACAryF,IAAAsyF,EACA99F,QAGA,UAAAA,EAAA,IACA,OACAoO,EAAAzD,YAAA,4CACA,MAEA,OACAyD,EAAAzD,YAAA,WACAyD,EAAAm/E,YAAAwQ,EAAA/9F,EAAAe,SAAA,IACA,MAEA,OACAqN,EAAAzD,YAAA,yBACAyD,EAAAm/E,YAAAwQ,EAAA/9F,EAAAe,SAAA,IACAqN,EAAAhE,OAAA4zF,EAAA5vF,EAAAm/E,aACA,MAEA,OACAn/E,EAAAzD,YAAA,yBACA,MAEA,OACAyD,EAAAzD,YAAA,6BAQA7M,EAAAqB,QAAA,OAAAiP,KAEA8vF,EAAAx/F,GAAA,kBACAZ,EAAAqB,QAAA,UAGAZ,KAAA2B,MAAA,WACAg+F,EAAAh+F,SAaA+9F,EAAA,SAAAz8E,EAAA28E,GACA,IAEA/sE,EAFAgtE,EAAA,EACAC,EAAA,EAIA,IAAAjtE,EAAA,EAAmBA,EAAA5P,EAAW4P,IAC9B,IAAAitE,IAEAA,GAAAD,EADAD,EAAAvB,gBACA,UAGAwB,EAAA,IAAAC,EAAAD,EAAAC,GAaAN,EAAA,SAAA/9F,GAOA,IANA,IAGA8sF,EACAC,EAJAztF,EAAAU,EAAAc,WACAksF,EAAA,GACA3tF,EAAA,EAIAA,EAAAC,EAAA,GACA,IAAAU,EAAAX,IAAA,IAAAW,EAAAX,EAAA,QAAAW,EAAAX,EAAA,IACA2tF,EAAAttF,KAAAL,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAA2tF,EAAA1tF,OACA,OAAAU,EAIA8sF,EAAAxtF,EAAA0tF,EAAA1tF,OACAytF,EAAA,IAAA9iF,WAAA6iF,GACA,IAAAG,EAAA,EAEA,IAAA5tF,EAAA,EAAmBA,EAAAytF,EAAeG,IAAA5tF,IAClC4tF,IAAAD,EAAA,KAEAC,IAEAD,EAAAjiF,SAGAgiF,EAAA1tF,GAAAW,EAAAitF,GAGA,OAAAF,GAaAiR,EAAA,SAAAh+F,GACA,IAKAm+F,EACAnW,EACAE,EACAD,EACAqW,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAx/F,EAlBAy/F,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAyBA,GATAlX,GADAmW,EAAA,IAAA3C,GAAAx7F,IACA88F,mBAEA7U,EAAAkW,EAAArB,mBAEA5U,EAAAiW,EAAArB,mBAEAqB,EAAA3B,wBAGAjB,GAAAvT,KAGA,KAFAsW,EAAAH,EAAAzB,0BAGAyB,EAAAlC,SAAA,GAGAkC,EAAA3B,wBAEA2B,EAAA3B,wBAEA2B,EAAAlC,SAAA,GAEAkC,EAAAtB,eAIA,IAFA+B,EAAA,IAAAN,EAAA,KAEAj/F,EAAA,EAAuBA,EAAAu/F,EAAsBv/F,IAC7C8+F,EAAAtB,eAGAoB,EADA5+F,EAAA,EACA,GAEA,GAFA8+F,GAaA,GAJAA,EAAA3B,wBAIA,KAFA+B,EAAAJ,EAAAzB,yBAGAyB,EAAAzB,6BACS,OAAA6B,EAST,IARAJ,EAAAlC,SAAA,GAEAkC,EAAA1B,gBAEA0B,EAAA1B,gBAEA+B,EAAAL,EAAAzB,wBAEAr9F,EAAA,EAAqBA,EAAAm/F,EAAoCn/F,IACzD8+F,EAAA1B,gBA0BA,GAtBA0B,EAAA3B,wBAEA2B,EAAAlC,SAAA,GAEAwC,EAAAN,EAAAzB,wBACAgC,EAAAP,EAAAzB,wBAGA,KAFAiC,EAAAR,EAAAhC,SAAA,KAGAgC,EAAAlC,SAAA,GAGAkC,EAAAlC,SAAA,GAEAkC,EAAAtB,gBAEAiC,EAAAX,EAAAzB,wBACAqC,EAAAZ,EAAAzB,wBACAsC,EAAAb,EAAAzB,wBACAuC,EAAAd,EAAAzB,yBAGAyB,EAAAtB,eAEAsB,EAAAtB,cAAA,CAIA,OAFAsB,EAAArB,oBAGA,OACA+B,EAAA,MACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,QACAA,EAAA,QACA,MAEA,QACAA,EAAA,QACA,MAEA,QACAA,EAAA,QACA,MAEA,QACAA,EAAA,SACA,MAEA,QACAA,EAAA,MACA,MAEA,QACAA,EAAA,MACA,MAEA,QACAA,EAAA,MACA,MAEA,SAEAA,EAAA,CAAAV,EAAArB,oBAAA,EAAAqB,EAAArB,mBAAAqB,EAAArB,oBAAA,EAAAqB,EAAArB,oBAKA+B,IACAK,EAAAL,EAAA,GAAAA,EAAA,IAKA,OACA7W,aACAE,WACAD,uBACA/qE,MAAAhb,KAAAse,MAAA,IAAAi+E,EAAA,KAAAK,EAAA,EAAAC,GAAAG,GACA/hF,QAAA,EAAAwhF,IAAAD,EAAA,QAAAM,EAAA,EAAAC,MAKAp/F,UAAA,IAAA+O,GACA,IAyJAuwF,GAzJArF,GAAA,CACAhyF,WAAAuzF,GACA+D,cAAA9D,IA8IAld,GAjIA,SAAAp+E,GACA,OAAAA,EAAA,SAAAuR,WAAA,IAAAvR,EAAA,SAAAuR,WAAA,IAAAvR,EAAA,SAAAuR,WAAA,IAgIA6sE,GAlGA,SAAA3sE,EAAAC,GACA,IAAAC,EAAAF,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,MAAAD,EAAAC,EAAA,GAIA,OAFA,GADAD,EAAAC,EAAA,KACA,EAGAC,EAAA,GAGAA,EAAA,IAyFAysE,GAtFA,SAAA3sE,EAAAC,GACA,IAAAG,GAAA,IAAAJ,EAAAC,EAAA,OACAI,EAAAL,EAAAC,EAAA,MAEA,OADA,KAAAD,EAAAC,EAAA,GACAI,EAAAD,IAiGAstF,GAAA,WACA,IAAAxG,EAAA,IAAA1uF,WACA4F,EAAA,EAEAsvF,GAAAt/F,UAAArB,KAAAiB,KAAAlB,MAEAA,KAAAqR,aAAA,SAAAvG,GACAwG,EAAAxG,GAGA9K,KAAAmB,KAAA,SAAA2S,GACA,IAEAgtF,EACArvE,EACAhe,EACAstF,EALAntF,EAAA,EACAT,EAAA,EAgBA,IATAinF,EAAAr5F,QACAggG,EAAA3G,EAAAr5F,QACAq5F,EAAA,IAAA1uF,WAAAoI,EAAAvR,WAAAw+F,IACAp1F,IAAAyuF,EAAA53F,SAAA,EAAAu+F,IACA3G,EAAAzuF,IAAAmI,EAAAitF,IAEA3G,EAAAtmF,EAGAsmF,EAAAr5F,OAAAoS,GAAA,GACA,GAAAinF,EAAAjnF,KAAA,IAAAH,WAAA,IAAAonF,EAAAjnF,EAAA,SAAAH,WAAA,IAAAonF,EAAAjnF,EAAA,SAAAH,WAAA,GAuBW,cAAAonF,EAAAjnF,KAAA,WAAAinF,EAAAjnF,EAAA,IAyBXA,QAzBW,CAGX,GAAAinF,EAAAr5F,OAAAoS,EAAA,EACA,MAMA,GAAAA,GAHAS,EAAAisE,GAAAua,EAAAjnF,IAGAinF,EAAAr5F,OACA,MAGA0S,EAAA,CACArT,KAAA,QACAqB,KAAA24F,EAAA53F,SAAA2Q,IAAAS,GACA5G,IAAAsE,EACArE,IAAAqE,GAEAtR,KAAAY,QAAA,OAAA6S,GACAN,GAAAS,MA5CA,CAGA,GAAAwmF,EAAAr5F,OAAAoS,EAAA,GACA,MAQA,GAAAA,GAJAS,EAAAisE,GAAAua,EAAAjnF,IAIAinF,EAAAr5F,OACA,MAGA0wB,EAAA,CACArxB,KAAA,iBACAqB,KAAA24F,EAAA53F,SAAA2Q,IAAAS,IAEA5T,KAAAY,QAAA,OAAA6wB,GACAte,GAAAS,EA8BAktF,EAAA1G,EAAAr5F,OAAAoS,EAGAinF,EADA0G,EAAA,EACA1G,EAAA53F,SAAA2Q,GAEA,IAAAzH,cAKApK,UAAA,IAAA+O,GACA,IAOAxH,GAAAC,GAAAC,GAAAC,GAPA+8C,GAAA66C,GACAr3F,GAAAgyF,GAAAhyF,WACAy3F,GAAAnhB,GAEAn2E,GAAA,sFACAC,GAAA,kEAQAC,GAAA,SAAAC,EAAAC,GACA,IAAAhJ,EAEA,GAAA+I,EAAA9I,SAAA+I,EAAA/I,OACA,SAIA,IAAAD,EAAA,EAAiBA,EAAA+I,EAAA9I,OAAcD,IAC/B,GAAA+I,EAAA/I,KAAAgJ,EAAAhJ,GACA,SAIA,WAaAgI,GAAA,SAAAiB,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAAxG,IACAmG,KAAA,GAEAlB,GAAAxH,UAAArB,KAAAiB,KAAAlB,MAEAA,KAAAmB,KAAA,SAAAM,GACA2H,GAAAW,EAAAtI,GAEAsI,GACAL,GAAAxF,QAAA,SAAAqG,GACAR,EAAAQ,GAAA9I,EAAA8I,KAKAN,EAAA9I,KAAAM,IAGAzB,KAAAwK,eAAA,SAAAC,GACAN,EAAAM,EAAAV,EAAAW,kBAAAC,qBAGA3K,KAAA4K,4BAAA,SAAAD,GACAN,EAAAM,GAGA3K,KAAA6K,oBAAA,SAAAC,GACAV,EAAAU,GAGA9K,KAAA2B,MAAA,WACA,IAAAoJ,EAAAC,EAAAC,EAAAC,EAEA,IAAAjB,EAAAlJ,QAKAgK,EAAA5B,GAAAc,EAAAF,EAAAI,GACAJ,EAAAY,oBAAAvB,GAAAW,EAAAC,EAAAqB,wBACAlC,GAAAY,EAAAgB,EAAAX,EAAAC,GAGAN,EAAAwB,QAAApC,GAAA4B,GAEAE,EAAA8/E,EAAA9/E,KAAA9B,GAAA4B,IACAd,EAAA,GACAe,EAAA+/E,EAAA//E,KAAAd,EAAA,CAAAH,IACAmB,EAAA,IAAAQ,WAAAV,EAAAzI,WAAA0I,EAAA1I,YAEA2H,IACAgB,EAAAS,IAAAX,GACAE,EAAAS,IAAAV,EAAAD,EAAAzI,YACA6G,GAAAW,GACA/J,KAAAY,QAAA,QACAmJ,QACAmB,UAEAlL,KAAAY,QAAA,8BAxBAZ,KAAAY,QAAA,gCA4BAU,UAAA,IAAA+O,IAaAxH,GAAA,SAAAkB,EAAAC,GACA,IAGA6B,EACAC,EAJA5B,EAAA,EACA6B,EAAA,GACAC,EAAA,GAGAhC,KAAA,GAEAnB,GAAAvH,UAAArB,KAAAiB,KAAAlB,aAEA+J,EAAAkC,OACAjM,KAAAkM,UAAA,GAUAlM,KAAAmB,KAAA,SAAAgL,GACA/C,GAAAW,EAAAoC,GAEA,2BAAAA,EAAAC,aAAAP,IACAA,EAAAM,EAAAN,OACA9B,EAAAsC,IAAA,CAAAF,EAAA1K,MACAkI,GAAAzF,QAAA,SAAAqG,GACAR,EAAAQ,GAAAsB,EAAAtB,IACWvK,OAGX,2BAAAmM,EAAAC,aAAAN,IACAA,EAAAK,EAAA1K,KACAsI,EAAA+B,IAAA,CAAAK,EAAA1K,OAIAsK,EAAA5K,KAAAgL,IAQAnM,KAAA2B,MAAA,WAIA,IAHA,IAAAoJ,EAAAuB,EAAAC,EAAAvB,EAAAC,EAAAC,EAGAa,EAAAhL,QACA,+BAAAgL,EAAA,GAAAK,aAIAL,EAAAS,QAIA,OAAAT,EAAAhL,OAGA,OAFAf,KAAAyM,oBACAzM,KAAAY,QAAA,6BA+CA,GAxCAmK,EAAA7B,GAAA6C,IACAQ,EAAArD,GAAA6B,IAmBA,MAAA6B,YAEAN,EAAAtM,KAAA6M,iBAAAd,EAAA,GAAAhC,KAGAwC,EAAAO,QAAAR,GAGAC,EAAAhK,YAAA+J,EAAA/J,WACAgK,EAAAQ,UAAAT,EAAAS,SACAR,EAAAS,IAAAV,EAAAU,IACAT,EAAAU,IAAAX,EAAAW,IACAV,EAAAW,UAAAZ,EAAAY,UAGAX,EAAArD,GAAAqD,IAKAP,EAAAjL,OAAA,CACA,IAAAqM,EAQA,KALAA,EADApD,EAAAqD,eACArN,KAAAsN,gBAAAf,GAEAvM,KAAAuN,kBAAAhB,IAiBA,OAZAvM,KAAAkM,UAAAY,QAAA,CACAU,IAAAjB,EAAAkB,MACA3B,IAAA/B,EAAA+B,IACAO,IAAAtC,EAAAsC,MAGArM,KAAAkM,UAAAnL,OAAA4C,KAAAG,IAAA,EAAA9D,KAAAkM,UAAAnL,QAEAgL,EAAA,GAEA/L,KAAAyM,oBACAzM,KAAAY,QAAA,6BAMAwI,GAAAW,GACAwC,EAAAa,EAGAhE,GAAAW,EAAAwC,GAGAxC,EAAAwB,QAAArC,GAAAqD,GAEAtB,EAAA8/E,EAAA9/E,KAAA/B,GAAAqD,IACAxC,EAAAY,oBAAAvB,GAAAW,EAAAC,EAAAqB,wBACArL,KAAAY,QAAA,oBAAA2L,EAAAjJ,IAAA,SAAAkK,GACA,OACAR,IAAAQ,EAAAR,IACAC,IAAAO,EAAAP,IACA1K,WAAAiL,EAAAjL,eAIAvC,KAAAkM,UAAAY,QAAA,CACAU,IAAAjB,EAAAkB,MACA3B,IAAA/B,EAAA+B,IACAO,IAAAtC,EAAAsC,MAGArM,KAAAkM,UAAAnL,OAAA4C,KAAAG,IAAA,EAAA9D,KAAAkM,UAAAnL,QAEAgL,EAAA,GACA/L,KAAAY,QAAA,sBAAAmJ,EAAAY,qBACA3K,KAAAY,QAAA,oBAAAmJ,EAAAW,mBACAM,EAAA+/E,EAAA//E,KAAAd,EAAA,CAAAH,IAGAmB,EAAA,IAAAQ,WAAAV,EAAAzI,WAAA0I,EAAA1I,YAEA2H,IACAgB,EAAAS,IAAAX,GACAE,EAAAS,IAAAV,EAAAD,EAAAzI,YACAvC,KAAAY,QAAA,QACAmJ,QACAmB,UAEAlL,KAAAyM,eAEAzM,KAAAY,QAAA,8BAGAZ,KAAAyM,aAAA,WACArD,GAAAW,GAGA8B,OAAA8B,EACA7B,OAAA6B,GAKA3N,KAAA6M,iBAAA,SAAAV,GACA,IAKAyB,EACAC,EACAC,EACAC,EACAjN,EALAkN,EAAAnK,IAOA,IAAA/C,EAAA,EAAmBA,EAAAd,KAAAkM,UAAAnL,OAA2BD,IAE9CgN,GADAC,EAAA/N,KAAAkM,UAAApL,IACA0M,IAEAzD,EAAA+B,KAAAlC,GAAAG,EAAA+B,IAAA,GAAAiC,EAAAjC,IAAA,KAAA/B,EAAAsC,KAAAzC,GAAAG,EAAAsC,IAAA,GAAA0B,EAAA1B,IAAA,MAKAyB,EAAAb,IAAAlD,EAAAW,kBAAAuC,MAKAW,EAAAzB,EAAAc,IAAAa,EAAAb,IAAAa,EAAAZ,YAvBA,KA0BAU,GA5BA,QA+BAC,GAAAG,EAAAJ,KACAC,EAAAE,EACAC,EAAAJ,IAKA,OAAAC,EACAA,EAAAL,IAGA,MAKAxN,KAAAuN,kBAAA,SAAAhB,GACA,IAAA0B,EAAAC,EAAAC,EAAAX,EAAAjL,EAAAwK,EAAAG,EAAAE,EAMA,IALA7K,EAAAgK,EAAAhK,WACAwK,EAAAR,EAAAQ,SACAG,EAAAX,EAAAW,SACAe,EAAAC,EAAA,EAEAD,EAAAjC,EAAAjL,QAAAmN,EAAA3B,EAAAxL,SACAoN,EAAAnC,EAAAiC,GACAT,EAAAjB,EAAA2B,GAEAC,EAAAnB,MAAAQ,EAAAR,MAIAQ,EAAAR,IAAAmB,EAAAnB,IAGAiB,KAMAC,IACA3L,GAAAiL,EAAAjL,WACAwK,GAAAS,EAAAT,SACAG,GAAAM,EAAAN,UAGA,WAAAgB,EAEA3B,EAGA2B,IAAA3B,EAAAxL,OAEA,OAGAqM,EAAAb,EAAA7L,MAAAwN,IACA3L,aACA6K,EAAAF,WACAE,EAAAL,WACAK,EAAAJ,IAAAI,EAAA,GAAAJ,IACAI,EAAAH,IAAAG,EAAA,GAAAH,IACAG,IAKApN,KAAAsN,gBAAA,SAAAf,GACA,IAAA0B,EAAAC,EAAAC,EAAAX,EAAAY,EAAAC,EAkCAC,EA5BA,IALAL,EAAAjC,EAAAjL,OAAA,EACAmN,EAAA3B,EAAAxL,OAAA,EACAqN,EAAA,KACAC,GAAA,EAEAJ,GAAA,GAAAC,GAAA,IAIA,GAHAC,EAAAnC,EAAAiC,GACAT,EAAAjB,EAAA2B,GAEAC,EAAAnB,MAAAQ,EAAAR,IAAA,CACAqB,GAAA,EACA,MAGAF,EAAAnB,IAAAQ,EAAAR,IACAiB,KAIAA,IAAAjC,EAAAjL,OAAA,IAIAqN,EAAAF,GAGAA,KAGA,IAAAG,GAAA,OAAAD,EACA,YAWA,QALAE,EADAD,EACAH,EAEAE,GAIA,OAAA7B,EAGA,IAAAa,EAAAb,EAAA7L,MAAA4N,GACAC,EAAAnB,EAAAvK,OAAA,SAAA2L,EAAAhB,GAIA,OAHAgB,EAAAjM,YAAAiL,EAAAjL,WACAiM,EAAAtB,UAAAM,EAAAN,SACAsB,EAAAzB,UAAAS,EAAAT,SACAyB,GACS,CACTjM,WAAA,EACA2K,SAAA,EACAH,SAAA,IAOA,OALAK,EAAA7K,WAAAgM,EAAAhM,WACA6K,EAAAF,SAAAqB,EAAArB,SACAE,EAAAL,SAAAwB,EAAAxB,SACAK,EAAAJ,IAAAI,EAAA,GAAAJ,IACAI,EAAAH,IAAAG,EAAA,GAAAH,IACAG,GAGApN,KAAAyO,cAAA,SAAAC,GACA1C,EAAA0C,KAIApN,UAAA,IAAA+O,IAUArH,GAAA,SAAAgB,EAAA2E,GAIA3O,KAAA4O,eAAA,EACA5O,KAAA2O,iBAGA,qBAFA3E,KAAA,IAEA6E,MACA7O,KAAA8O,cAAA9E,EAAA6E,MAEA7O,KAAA8O,aAAA,EAGA,mBAAA9E,EAAAqB,yBACArL,KAAAqL,uBAAArB,EAAAqB,wBAGArL,KAAA+O,cAAA,GACA/O,KAAAgP,WAAA,KACAhP,KAAAiP,aAAA,GACAjP,KAAAkP,gBAAA,GACAlP,KAAAmP,gBAAA,GACAnP,KAAAoP,aAAA,EACApP,KAAAqP,cAAA,EAEArG,GAAA1H,UAAArB,KAAAiB,KAAAlB,MAGAA,KAAAmB,KAAA,SAAAmO,GAGA,OAAAA,EAAAC,KACAvP,KAAAkP,gBAAA/N,KAAAmO,GAIAA,EAAAvE,OACA/K,KAAAmP,gBAAAhO,KAAAmO,IAMAtP,KAAA+O,cAAA5N,KAAAmO,EAAAvF,OACA/J,KAAAiP,aAAA9N,KAAAmO,EAAApE,OACAlL,KAAAoP,cAAAE,EAAApE,MAAA3I,WAEA,UAAA+M,EAAAvF,MAAA3J,OACAJ,KAAAgP,WAAAM,EAAAvF,YAGA,UAAAuF,EAAAvF,MAAA3J,OACAJ,KAAAwP,WAAAF,EAAAvF,YAKAzI,UAAA,IAAA+O,GAEArH,GAAA1H,UAAAK,MAAA,SAAAD,GACA,IAOA+N,EACAC,EACAC,EAEA7O,EAXA8O,EAAA,EACAC,EAAA,CACAC,SAAA,GACAC,eAAA,GACAxB,SAAA,GACAyB,KAAA,IAKAC,EAAA,EAGA,GAAAjQ,KAAA+O,cAAAhO,OAAAf,KAAA4O,eAAA,CACA,0BAAAlN,GAAA,uBAAAA,EAIA,OACS,GAAA1B,KAAA8O,YAGT,OACS,OAAA9O,KAAA+O,cAAAhO,OAcT,OAPAf,KAAAqP,qBAEArP,KAAAqP,eAAArP,KAAA4O,iBACA5O,KAAAY,QAAA,QACAZ,KAAAqP,cAAA,IAmCA,IA5BArP,KAAAgP,YACAiB,EAAAjQ,KAAAgP,WAAAtE,kBAAAsC,IACArD,GAAAzF,QAAA,SAAAqG,GACAsF,EAAAG,KAAAzF,GAAAvK,KAAAgP,WAAAzE,IACSvK,OACFA,KAAAwP,aACPS,EAAAjQ,KAAAwP,WAAA9E,kBAAAsC,IACAtD,GAAAxF,QAAA,SAAAqG,GACAsF,EAAAG,KAAAzF,GAAAvK,KAAAwP,WAAAjF,IACSvK,OAGT,IAAAA,KAAA+O,cAAAhO,OACA8O,EAAAzP,KAAAJ,KAAA+O,cAAA,GAAA3O,KAEAyP,EAAAzP,KAAA,WAGAJ,KAAAqP,eAAArP,KAAA+O,cAAAhO,OACA4O,EAAAo7E,EAAAp7E,YAAA3P,KAAA+O,eAEAc,EAAAF,YAAA,IAAAjE,WAAAiE,EAAApN,YAGAsN,EAAAF,YAAAhE,IAAAgE,GAEAE,EAAApO,KAAA,IAAAiK,WAAA1L,KAAAoP,cAEAtO,EAAA,EAAiBA,EAAAd,KAAAiP,aAAAlO,OAA8BD,IAC/C+O,EAAApO,KAAAkK,IAAA3L,KAAAiP,aAAAnO,GAAA8O,GACAA,GAAA5P,KAAAiP,aAAAnO,GAAAyB,WAKA,IAAAzB,EAAA,EAAiBA,EAAAd,KAAAkP,gBAAAnO,OAAiCD,KAClD2O,EAAAzP,KAAAkP,gBAAApO,IACAiB,UAAA0N,EAAAS,SAEAlQ,KAAAqL,yBACAoE,EAAA1N,WAAAkO,GAGAR,EAAA1N,WAAA,IACA0N,EAAAU,QAAAV,EAAAW,OAEApQ,KAAAqL,yBACAoE,EAAAU,SAAAF,GAGAR,EAAAU,SAAA,IACAN,EAAAE,eAAAN,EAAAY,SAAA,EACAR,EAAAC,SAAA3O,KAAAsO,GAKA,IAAA3O,EAAA,EAAiBA,EAAAd,KAAAmP,gBAAApO,OAAiCD,KAClD4O,EAAA1P,KAAAmP,gBAAArO,IACAwP,QAAAZ,EAAA1C,IAEAhN,KAAAqL,yBACAqE,EAAAY,SAAAL,GAGAP,EAAAY,SAAA,IACAT,EAAAtB,SAAApN,KAAAuO,GAKAG,EAAAtB,SAAAgC,aAAAvQ,KAAA2O,eAAA4B,aAEAvQ,KAAA+O,cAAAhO,OAAA,EACAf,KAAAgP,WAAA,KACAhP,KAAAiP,aAAAlO,OAAA,EACAf,KAAAkP,gBAAAnO,OAAA,EACAf,KAAAoP,aAAA,EACApP,KAAAmP,gBAAApO,OAAA,EAEAf,KAAAY,QAAA,OAAAiP,GAEA7P,KAAAqP,eAAArP,KAAA4O,iBACA5O,KAAAY,QAAA,QACAZ,KAAAqP,cAAA,KAWAtG,GAAA,SAAAiB,GACA,IAEAgF,EACAQ,EAHAjQ,EAAAS,KACAwQ,GAAA,EAIAzH,GAAAzH,UAAArB,KAAAiB,KAAAlB,MAEAgK,KAAA,GACAhK,KAAA2K,oBAAAX,EAAAW,qBAAA,EACA3K,KAAAyQ,kBAAA,GAEAzQ,KAAA0Q,iBAAA,WACA,IAAAC,EAAA,GACA3Q,KAAAyQ,kBAAAE,EACAA,EAAAvQ,KAAA,MACAuQ,EAAAhC,eAAA,IAAA2tF,GAAA1rF,eAEAD,EAAAE,UAAA,IAAAk1C,GACAp1C,EAAAG,6BAAA,IAAAwrF,GAAAvrF,wBAAA,SACAJ,EAAAK,qCAAA,IAAAsrF,GAAAvrF,wBAAA,kBACAJ,EAAAM,WAAA,IAAAuqF,GACA7qF,EAAAO,eAAA,IAAAlI,GAAAgB,EAAA2G,EAAAhC,gBACAgC,EAAAQ,eAAAR,EAAAE,UACAF,EAAAE,UAAAtP,KAAAoP,EAAAG,8BAAAvP,KAAAoP,EAAAM,YACAN,EAAAE,UAAAtP,KAAAoP,EAAAK,sCAAAzP,KAAAoP,EAAAhC,gBAAApN,KAAAoP,EAAAO,gBACAP,EAAAhC,eAAAxO,GAAA,qBAAAiR,GACAT,EAAAE,UAAAQ,aAAAD,EAAAE,aAEAX,EAAAE,UAAA1Q,GAAA,gBAAAsB,GACA,mBAAAA,EAAArB,MAAAuQ,EAAAY,qBACA/B,KAAA,CACA9E,kBAAA,CACAC,oBAAApL,EAAAoL,qBAEA6G,MAAA,OACApR,KAAA,SAGAuQ,EAAAO,eAAAtC,iBACA+B,EAAAY,mBAAA,IAAAzI,GAAA0G,EAAAxF,GAEA2G,EAAAM,WAAA1P,KAAAoP,EAAAY,oBAAAhQ,KAAAoP,EAAAO,mBAIAP,EAAAO,eAAA/Q,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,SAEA2Q,EAAAO,eAAA/Q,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,UAGAA,KAAAyR,gBAAA,WACA,IAAAd,EAAA,GACA3Q,KAAAyQ,kBAAAE,EACAA,EAAAvQ,KAAA,KACAuQ,EAAAhC,eAAA,IAAA2tF,GAAA1rF,eAEAD,EAAAe,aAAA,IAAA4qF,GAAA3qF,sBACAhB,EAAAiB,YAAA,IAAA0qF,GAAAzqF,qBACAlB,EAAAmB,iBAAA,IAAAwqF,GAAAvqF,iBACApB,EAAAqB,6BAAA,IAAAsqF,GAAAvrF,wBAAA,SACAJ,EAAAG,6BAAA,IAAAwrF,GAAAvrF,wBAAA,SACAJ,EAAAK,qCAAA,IAAAsrF,GAAAvrF,wBAAA,kBACAJ,EAAAM,WAAA,IAAAuqF,GACA7qF,EAAAsB,WAAA,IAAA1I,GACAoH,EAAAuB,cAAA,IAAAoqF,GAAAnqF,cACAxB,EAAAO,eAAA,IAAAlI,GAAAgB,EAAA2G,EAAAhC,gBACAgC,EAAAQ,eAAAR,EAAAe,aAEAf,EAAAe,aAAAnQ,KAAAoP,EAAAiB,aAAArQ,KAAAoP,EAAAmB,kBAGAnB,EAAAmB,iBAAAvQ,KAAAoP,EAAAqB,8BAAAzQ,KAAAoP,EAAAsB,YACAtB,EAAAmB,iBAAAvQ,KAAAoP,EAAAG,8BAAAvP,KAAAoP,EAAAM,YACAN,EAAAmB,iBAAAvQ,KAAAoP,EAAAK,sCAAAzP,KAAAoP,EAAAhC,gBAAApN,KAAAoP,EAAAO,gBAEAP,EAAAsB,WAAA1Q,KAAAoP,EAAAuB,eAAA3Q,KAAAoP,EAAAO,gBACAP,EAAAmB,iBAAA3R,GAAA,gBAAAsB,GACA,IAAAX,EAEA,gBAAAW,EAAArB,KAAA,CAGA,IAFAU,EAAAW,EAAA2Q,OAAArR,OAEAD,KACAkO,GAAA,UAAAvN,EAAA2Q,OAAAtR,GAAAV,KAGeoP,GAAA,UAAA/N,EAAA2Q,OAAAtR,GAAAV,QACfoP,EAAA/N,EAAA2Q,OAAAtR,IACA4J,kBAAAC,oBAAApL,EAAAoL,sBAJAqE,EAAAvN,EAAA2Q,OAAAtR,IACA4J,kBAAAC,oBAAApL,EAAAoL,oBAQAqE,IAAA2B,EAAA0B,qBACA1B,EAAAO,eAAAtC,iBACA+B,EAAA0B,mBAAA,IAAAxJ,GAAAmG,EAAAhF,GACA2G,EAAA0B,mBAAAlS,GAAA,6BAAAuK,GAIA8E,IACAA,EAAA9E,oBAKAiG,EAAAY,mBAAA/G,eAAAE,EAAAuC,QAGA0D,EAAA0B,mBAAAlS,GAAA,oBAAAZ,EAAAqB,QAAAqH,KAAA1I,EAAA,YACAoR,EAAA0B,mBAAAlS,GAAA,+BAAAwK,GACA6E,GACAmB,EAAAY,mBAAA3G,4BAAAD,KAIAgG,EAAAsB,WAAA1Q,KAAAoP,EAAA0B,oBAAA9Q,KAAAoP,EAAAO,iBAGA1B,IAAAmB,EAAAY,qBAEAZ,EAAAO,eAAAtC,iBACA+B,EAAAY,mBAAA,IAAAzI,GAAA0G,EAAAxF,GAEA2G,EAAAM,WAAA1P,KAAAoP,EAAAY,oBAAAhQ,KAAAoP,EAAAO,oBAKAP,EAAAO,eAAA/Q,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,SAEA2Q,EAAAO,eAAA/Q,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,UAIAA,KAAAsS,uBAAA,SAAA3H,GACA,IAAAgG,EAAA3Q,KAAAyQ,kBAEAzG,EAAAqB,yBACArL,KAAA2K,uBAGA6E,IACAA,EAAA9E,kBAAAuC,SAAAU,EACA6B,EAAA9E,kBAAAsC,SAAAW,EACAvE,GAAAoG,GAEAxF,EAAAqB,yBACAmE,EAAA9E,kBAAAC,uBAGAgG,EAAAG,8BACAH,EAAAG,6BAAAyB,iBAIAvD,IACA2B,EAAA0B,qBACA1B,EAAA0B,mBAAAnG,UAAA,GACAyE,EAAAqB,6BAAAO,iBAGAvD,EAAAtE,kBAAAuC,SAAAU,EACAqB,EAAAtE,kBAAAsC,SAAAW,EACAvE,GAAA4F,GACA2B,EAAAuB,cAAAM,QAEAxI,EAAAqB,yBACA2D,EAAAtE,kBAAAC,wBAIAgG,EAAAK,sCACAL,EAAAK,qCAAAuB,iBAIAvS,KAAA6K,oBAAA,SAAAC,GACA0E,GACAxP,KAAAyQ,kBAAAc,mBAAA1G,oBAAAC,IAIA9K,KAAAyO,cAAA,SAAAzC,GACAgD,GAAAhP,KAAAyQ,kBAAA4B,oBACArS,KAAAyQ,kBAAA4B,mBAAA5D,cAAAzC,IAKAhM,KAAAmB,KAAA,SAAAM,GACA,GAAA+O,EAAA,CACA,IAAAiC,EAAAuuF,GAAAv/F,GAEAgR,GAAA,QAAAzS,KAAAyQ,kBAAArQ,KACAJ,KAAA0Q,mBACW+B,GAAA,OAAAzS,KAAAyQ,kBAAArQ,MACXJ,KAAAyR,kBAGAjB,GAAA,EAGAxQ,KAAAyQ,kBAAAU,eAAAhQ,KAAAM,IAIAzB,KAAA2B,MAAA,WACA6O,GAAA,EAEAxQ,KAAAyQ,kBAAAU,eAAAxP,SAIA3B,KAAA0S,cAAA,WACA1S,KAAAyQ,kBAAAyB,eACAlS,KAAAyQ,kBAAAyB,cAAAM,WAKAlR,UAAA,IAAA+O,GACA,IAQA4wF,GACAC,GATAC,GAAA,CACAxuF,WAAA5J,GACA6J,mBAAA/J,GACAgK,mBAAA/J,GACAY,oBACAC,qBAKAy3F,GAAAjW,EAAAtpF,UACAw/F,GAAA,SAAA/0C,GACA,WAAAxkC,KAAA,IAAAwkC,EAAA,aAEAg1C,GAAA,SAAArY,GACA,OACA0B,WAAA,GAAA1B,EAAA,QACAC,UAAA,EAAAD,EAAA,GACAE,cAAA,IAAAF,EAAA,QACAG,eAAA,GAAAH,EAAA,QACA2B,cAAA,GAAA3B,EAAA,QACA4B,gBAAA,EAAA5B,EAAA,GACA6B,oBAAA7B,EAAA,MAAAA,EAAA,KAGAsY,GAAA,SAAAC,GACA,IAEA1gG,EACAC,EAHA0gG,EAAA,IAAAh9F,SAAA+8F,EAAA/+F,OAAA++F,EAAA98F,WAAA88F,EAAAj/F,YACAG,EAAA,GAIA,IAAA5B,EAAA,EAAiBA,EAAA,EAAA0gG,EAAAzgG,OAA0BD,GAAAC,EAI3C,GAHAA,EAAA0gG,EAAA78F,UAAA9D,GACAA,GAAA,EAEAC,GAAA,EACA2B,EAAAvB,KAAA,uDAIA,UAAAqgG,EAAA1gG,IACA,OACA4B,EAAAvB,KAAA,yCACA,MAEA,OACAuB,EAAAvB,KAAA,6CACA,MAEA,OACAuB,EAAAvB,KAAA,YACA,MAEA,OACAuB,EAAAvB,KAAA,0BACA,MAEA,OACAuB,EAAAvB,KAAA,0BACA,MAEA,OACAuB,EAAAvB,KAAA,8BACA,MAEA,QACAuB,EAAAvB,KAAA,iBAAAqgG,EAAA1gG,GAAA,IAKA,OAAA4B,GAGAg/F,GAAA,CAIA5Z,KAAA,SAAArmF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACA,OACAo/F,mBAAAr9F,EAAAs9F,UAAA,GACAjjF,MAAAra,EAAAs9F,UAAA,IACAhjF,OAAAta,EAAAs9F,UAAA,IACAC,gBAAAv9F,EAAAs9F,UAAA,IAAAt9F,EAAAs9F,UAAA,OACAE,eAAAx9F,EAAAs9F,UAAA,IAAAt9F,EAAAs9F,UAAA,OACAG,WAAAz9F,EAAAs9F,UAAA,IACAI,MAAA19F,EAAAs9F,UAAA,IACA/1F,OAAAo1F,GAAAx/F,EAAAe,SAAA,GAAAf,EAAAc,eAGAwlF,KAAA,SAAAtmF,GACA,IAWAwgG,EACAC,EACAtyF,EACA9O,EAdAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAy/F,qBAAA1gG,EAAA,GACA2gG,qBAAA3gG,EAAA,GACAioF,qBAAAjoF,EAAA,GACA4gG,mBAAA5gG,EAAA,GACA6gG,mBAAA,EAAA7gG,EAAA,GACA4K,IAAA,GACAP,IAAA,IAEAy2F,EAAA,GAAA9gG,EAAA,GAQA,IAFAmO,EAAA,EAEA9O,EAAA,EAAmBA,EAAAyhG,EAAgCzhG,IACnDohG,EAAA59F,EAAAs9F,UAAAhyF,GACAA,GAAA,EACAlN,EAAA2J,IAAAlL,KAAA,IAAAuK,WAAAjK,EAAAe,SAAAoN,IAAAsyF,KACAtyF,GAAAsyF,EAOA,IAHAD,EAAAxgG,EAAAmO,GACAA,IAEA9O,EAAA,EAAmBA,EAAAmhG,EAA+BnhG,IAClDohG,EAAA59F,EAAAs9F,UAAAhyF,GACAA,GAAA,EACAlN,EAAAoJ,IAAA3K,KAAA,IAAAuK,WAAAjK,EAAAe,SAAAoN,IAAAsyF,KACAtyF,GAAAsyF,EAGA,OAAAx/F,GAEAslF,KAAA,SAAAvmF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACA,OACAigG,aAAAl+F,EAAAM,UAAA,GACA69F,WAAAn+F,EAAAM,UAAA,GACA89F,WAAAp+F,EAAAM,UAAA,KAGAuhF,KAAA,SAAA1kF,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAmgG,KAAAlhG,EAAA,MAAAA,EAAA,GACAmhG,eAAA,GAAAnhG,EAAA,GACAohG,cAAA,CACAC,wBAAArhG,EAAA,IACA05F,WAAA15F,EAAA,WACAo4F,WAAAp4F,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAghG,WAAAhhG,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAihG,WAAAjhG,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAshG,wBAAA,CACA55E,IAAA1nB,EAAA,IACAV,OAAAU,EAAA,IACAuhG,gBAAAvhG,EAAA,WACAwhG,wBAAA,EAAAxhG,EAAA,QAAAA,EAAA,UACAyhG,qBAAAzhG,EAAA,eAKA2kF,KAAA,SAAA3kF,GASA,IARA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAygG,WAAA/B,GAAA3/F,EAAAe,SAAA,MACA4gG,aAAA9+F,EAAAM,UAAA,GACAy+F,iBAAA,IAEAviG,EAAA,EAEAA,EAAAW,EAAAc,YACAG,EAAA2gG,iBAAAliG,KAAAigG,GAAA3/F,EAAAe,SAAA1B,IAAA,KACAA,GAAA,EAGA,OAAA4B,GAEAwjF,KAAA,SAAAzkF,GACA,OACAyJ,MAAA+1F,GAAAx/F,KAGAwmF,KAAA,SAAAxmF,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA8gG,eAAArC,GAAAx/F,EAAAe,SAAA,MAGA6B,KAAA,SAAA5C,GACA,IACAiB,EAAA,CACAM,QAFA,IAAAyB,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YAEAoC,SAAA,GACAskF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAgC,YAAA48F,GAAA3/F,EAAAe,SAAA,OACAia,KAAA,IAEA3b,EAAA,EAEA,IAAAA,EAAA,GAAoBA,EAAAW,EAAAc,WAAqBzB,IAAA,CACzC,OAAAW,EAAAX,GAAA,CAEAA,IACA,MAGA4B,EAAA+Z,MAAA9Z,OAAAC,aAAAnB,EAAAX,IAMA,OADA4B,EAAA+Z,KAAA68E,mBAAAiK,OAAA7gG,EAAA+Z,OACA/Z,GAEAuI,KAAA,SAAAxJ,GACA,OACAc,WAAAd,EAAAc,WACAihG,KAAAjC,GAAA9/F,KAGAyB,KAAA,SAAAzB,GACA,IAEAye,EAFA5b,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAzB,EAAA,EAEA4B,EAAA,CACAM,QAAAsB,EAAAK,SAAA,GACAskF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA0d,SAAA,IA+BA,OA5BA,IAAAxd,EAAAM,SACAlC,GAAA,EACA4B,EAAAgjE,aAAA27B,GAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAA+gG,iBAAApC,GAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAAZ,UAAAwC,EAAAM,UAAA9D,GACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,KAEA4B,EAAAgjE,aAAA27B,GAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAA+gG,iBAAApC,GAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAAZ,UAAAwC,EAAAM,UAAA9D,GACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,IAGAA,GAAA,EAGAof,EAAA5b,EAAAs9F,UAAA9gG,GACA4B,EAAAwd,UAAAvd,OAAAC,aAAA,IAAAsd,GAAA,KACAxd,EAAAwd,UAAAvd,OAAAC,aAAA,SAAAsd,IAAA,IACAxd,EAAAwd,UAAAvd,OAAAC,aAAA,OAAAsd,IACAxd,GAEAgkF,KAAA,SAAAjlF,GACA,OACAyJ,MAAA+1F,GAAAx/F,KAGA4kF,KAAA,SAAA5kF,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA0H,eAAAzI,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,KAGA6kF,KAAA,SAAA7kF,GACA,OACAyJ,MAAA+1F,GAAAx/F,KAMAymF,KAAA,SAAAzmF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CAEAi/F,mBAAAr9F,EAAAs9F,UAAA,GAEA9Y,aAAAxkF,EAAAs9F,UAAA,IACAhY,WAAAtlF,EAAAs9F,UAAA,IAGA7Y,WAAAzkF,EAAAs9F,UAAA,IAAAt9F,EAAAs9F,UAAA,WAQA,OAJAngG,EAAAc,WAAA,KACAG,EAAAghG,iBAAAzC,GAAAx/F,EAAAe,SAAA,SAGAE,GAEAsI,KAAA,SAAAvJ,GACA,OACAyJ,MAAA+1F,GAAAx/F,KAGA8kF,KAAA,SAAA9kF,GACA,OACAyJ,MAAA+1F,GAAAx/F,KAGA+kF,KAAA,SAAA/kF,GACA,OACAyJ,MAAA+1F,GAAAx/F,KAGAglF,KAAA,SAAAhlF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAzB,EAAA,EACA4B,EAAA,CACAM,QAAAsB,EAAAK,SAAA,GACAskF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,OAoCA,OAjCA,IAAAE,EAAAM,SACAlC,GAAA,EACA4B,EAAAgjE,aAAA27B,GAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAA+gG,iBAAApC,GAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAAZ,UAAAwC,EAAAM,UAAA9D,GACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,KAEA4B,EAAAgjE,aAAA27B,GAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAA+gG,iBAAApC,GAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAAZ,UAAAwC,EAAAM,UAAA9D,GACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,IAGAA,GAAA,EAEA4B,EAAAi3D,KAAAr1D,EAAAs9F,UAAA9gG,GAAAwD,EAAAs9F,UAAA9gG,EAAA,MACAA,GAAA,EACA4B,EAAA4wD,OAAAhvD,EAAAK,SAAA7D,GAAAwD,EAAAK,SAAA7D,EAAA,KACAA,GAAA,EACAA,GAAA,EACAA,GAAA,EACA4B,EAAAihG,OAAA,IAAAv1E,YAAA3sB,EAAAe,SAAA1B,IAAA,KACAA,GAAA,GACAA,GAAA,GACA4B,EAAAkhG,YAAAt/F,EAAAM,UAAA9D,GACA4B,GAEAmhG,KAAA,SAAApiG,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACA,OACAS,QAAAsB,EAAAK,SAAA,GACAskF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAm3D,KAAAr1D,EAAAM,UAAA,GACAk/F,aAAAx/F,EAAAM,UAAA,KAGA+hF,KAAA,SAAAllF,GACA,IAKAX,EALA4B,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA+I,QAAA,IAIA,IAAAzK,EAAA,EAAmBA,EAAAW,EAAAc,WAAqBzB,IACxC4B,EAAA6I,QAAApK,KAAA,CACA+nF,WAAA,GAAAznF,EAAAX,KAAA,EACAqoF,cAAA,GAAA1nF,EAAAX,KAAA,EACAsoF,cAAA,EAAA3nF,EAAAX,KAIA,OAAA4B,GAEAqhG,KAAA,SAAAtiG,GACA,IAWAX,EAXAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAwhG,WAAA,GACAC,YAAA3/F,EAAAM,UAAA,GACA9C,UAAAwC,EAAAM,UAAA,GACAs/F,yBAAA5/F,EAAAM,UAAA,IACAu/F,YAAA7/F,EAAAM,UAAA,KAEAw/F,EAAA9/F,EAAAs9F,UAAA,IAGA,IAAA9gG,EAAA,GAAoBsjG,EAAgBtjG,GAAA,GAAAsjG,IACpC1hG,EAAAshG,WAAA7iG,KAAA,CACAkjG,eAAA,IAAA5iG,EAAAX,MAAA,EACAwjG,eAAA,WAAAhgG,EAAAM,UAAA9D,GACAyjG,mBAAAjgG,EAAAM,UAAA9D,EAAA,GACA0jG,iBAAA,IAAA/iG,EAAAX,EAAA,IACA2jG,SAAA,IAAAhjG,EAAAX,EAAA,QACA4jG,aAAA,UAAApgG,EAAAM,UAAA9D,EAAA,KAIA,OAAA4B,GAEAylF,KAAA,SAAA1mF,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAmiG,QAAAljG,EAAA,GAAAA,EAAA,SAGAmlF,KAAA,SAAAnlF,GACA,OACAyJ,MAAA+1F,GAAAx/F,KAGA2mF,KAAA,SAAA3mF,GACA,IAOAX,EAPAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAoiG,aAAA,IAEAC,EAAAvgG,EAAAM,UAAA,GAGA,IAAA9D,EAAA,EAAmB+jG,EAAY/jG,GAAA,EAAA+jG,IAC/BniG,EAAAkiG,aAAAzjG,KAAAmD,EAAAM,UAAA9D,IAGA,OAAA4B,GAEA2lF,KAAA,SAAA5mF,GACA,IAOAX,EAPAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAsiG,EAAAvgG,EAAAM,UAAA,GACAlC,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAsiG,eAAA,IAIA,IAAAhkG,EAAA,EAAmB+jG,EAAY/jG,GAAA,GAAA+jG,IAC/BniG,EAAAoiG,eAAA3jG,KAAA,CACA4jG,WAAAzgG,EAAAM,UAAA9D,GACAkkG,gBAAA1gG,EAAAM,UAAA9D,EAAA,GACAmkG,uBAAA3gG,EAAAM,UAAA9D,EAAA,KAIA,OAAA4B,GAEAmkF,KAAA,SAAAplF,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA0iG,mBAAAjE,GAAAx/F,EAAAe,SAAA,MAGA8lF,KAAA,SAAA7mF,GACA,IAOAX,EAPAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA2iG,WAAA7gG,EAAAM,UAAA,GACAwgG,QAAA,IAIA,IAAAtkG,EAAA,GAAoBA,EAAAW,EAAAc,WAAqBzB,GAAA,EACzC4B,EAAA0iG,QAAAjkG,KAAAmD,EAAAM,UAAA9D,IAGA,OAAA4B,GAEA6lF,KAAA,SAAA9mF,GACA,IAOAX,EAPAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA6iG,cAAA,IAEAR,EAAAvgG,EAAAM,UAAA,GAGA,IAAA9D,EAAA,EAAmB+jG,EAAY/jG,GAAA,EAAA+jG,IAC/BniG,EAAA2iG,cAAAlkG,KAAA,CACAw7F,YAAAr4F,EAAAM,UAAA9D,GACAwkG,YAAAhhG,EAAAM,UAAA9D,EAAA,KAIA,OAAA4B,GAEA8lF,KAAA,SAAA/mF,GACA,OAAAigG,GAAAtb,KAAA3kF,IAEAiC,KAAA,SAAAjC,GACA,IAAAiB,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAmI,oBAAAlJ,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAQA,OALA,IAAAiB,EAAAM,UACAN,EAAAiI,qBAAAhH,KAAAC,IAAA,MACAlB,EAAAiI,qBAAAlJ,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAGAiB,GAEAc,KAAA,SAAA/B,GACA,IAaAX,EAbAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA+B,QAAAD,EAAAM,UAAA,IAEA2gG,EAAA,EAAA7iG,EAAAumF,MAAA,GACAuc,EAAA,EAAA9iG,EAAAumF,MAAA,GACAwc,EAAA,EAAA/iG,EAAAumF,MAAA,GACAyc,EAAA,GAAAhjG,EAAAumF,MAAA,GACA0c,EAAA,GAAAjjG,EAAAumF,MAAA,GACA2c,EAAA,MAAAljG,EAAAumF,MAAA,GACA4c,EAAA,OAAAnjG,EAAAumF,MAAA,GAuCA,OArCAnoF,EAAA,EAEAykG,IACAzkG,GAAA,EAGA4B,EAAAqpF,eAAAznF,EAAAM,UAAA,IACA9D,GAAA,GAGA0kG,IACA9iG,EAAAuiG,uBAAA3gG,EAAAM,UAAA9D,GACAA,GAAA,GAGA2kG,IACA/iG,EAAAojG,sBAAAxhG,EAAAM,UAAA9D,GACAA,GAAA,GAGA4kG,IACAhjG,EAAAqjG,kBAAAzhG,EAAAM,UAAA9D,GACAA,GAAA,GAGA6kG,IACAjjG,EAAAsjG,mBAAA1hG,EAAAM,UAAA9D,IAGA8kG,IACAljG,EAAAkjG,iBAAA,IAGAL,GAAAM,IACAnjG,EAAAujG,sBAAA,GAGAvjG,GAEAK,KAAA,SAAAtB,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAzB,EAAA,EACA4B,EAAA,CACAM,QAAAsB,EAAAK,SAAA,GACAskF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,OAyCA,OAtCA,IAAAE,EAAAM,SACAlC,GAAA,EACA4B,EAAAgjE,aAAA27B,GAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAA+gG,iBAAApC,GAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAA6B,QAAAD,EAAAM,UAAA9D,GACAA,GAAA,EACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,KAEA4B,EAAAgjE,aAAA27B,GAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAA+gG,iBAAApC,GAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAA6B,QAAAD,EAAAM,UAAA9D,GACAA,GAAA,EACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,IAGAA,GAAA,EACAA,GAAA,EACA4B,EAAAwjG,MAAA5hG,EAAAs9F,UAAA9gG,GACAA,GAAA,EACA4B,EAAAyjG,eAAA7hG,EAAAs9F,UAAA9gG,GACAA,GAAA,EAEA4B,EAAA4wD,OAAAhvD,EAAAK,SAAA7D,GAAAwD,EAAAK,SAAA7D,EAAA,KACAA,GAAA,EACAA,GAAA,EACA4B,EAAAihG,OAAA,IAAAv1E,YAAA3sB,EAAAe,SAAA1B,IAAA,KACAA,GAAA,GACA4B,EAAAic,MAAAra,EAAAs9F,UAAA9gG,GAAAwD,EAAAs9F,UAAA9gG,EAAA,MACAA,GAAA,EACA4B,EAAAkc,OAAAta,EAAAs9F,UAAA9gG,GAAAwD,EAAAs9F,UAAA9gG,EAAA,MACA4B,GAEAa,KAAA,SAAA9B,GACA,OACAyJ,MAAA+1F,GAAAx/F,KAGAqB,KAAA,SAAArB,GACA,OACAyJ,MAAA+1F,GAAAx/F,KAGAqlF,KAAA,SAAArlF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACA,OACAS,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA+B,QAAAD,EAAAM,UAAA,GACAwhG,8BAAA9hG,EAAAM,UAAA,GACAkhG,sBAAAxhG,EAAAM,UAAA,IACAmhG,kBAAAzhG,EAAAM,UAAA,IACAyhG,gBAAA,EAAA5kG,EAAA,IACA6kG,oBAAA,IAAA7kG,EAAA,QACA8kG,qBAAA,GAAA9kG,EAAA,QACA+kG,oBAAA,GAAA/kG,EAAA,QACAglG,4BAAA,EAAAhlG,EAAA,KACAilG,0BAAApiG,EAAAs9F,UAAA,MAGA7a,KAAA,SAAAtlF,GACA,IAqBAipF,EArBAhoF,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA+I,QAAA,IAEAjH,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YAEAokG,EAAA,EAAAjkG,EAAAumF,MAAA,GAEA2d,EAAA,EAAAlkG,EAAAumF,MAAA,GAEA4d,EAAA,EAAAnkG,EAAAumF,MAAA,GAEA6d,EAAA,EAAApkG,EAAAumF,MAAA,GAEA8d,EAAA,EAAArkG,EAAAumF,MAAA,GAEA+d,EAAA,EAAAtkG,EAAAumF,MAAA,GAEA0T,EAAAr4F,EAAAM,UAAA,GACAgL,EAAA,EAqCA,IAlCA+2F,IAEAjkG,EAAAkpF,WAAAtnF,EAAA2iG,SAAAr3F,GACAA,GAAA,GAKAg3F,GAAAjK,IACAjS,EAAA,CACAzB,MAAAqY,GAAA7/F,EAAAe,SAAAoN,IAAA,KAEAA,GAAA,EAEAi3F,IACAnc,EAAAx9E,SAAA5I,EAAAM,UAAAgL,GACAA,GAAA,GAGAk3F,IACApc,EAAAvoF,KAAAmC,EAAAM,UAAAgL,GACAA,GAAA,GAGAo3F,IAEAtc,EAAAD,sBAAAnmF,EAAAM,UAAAgL,GACAA,GAAA,GAGAlN,EAAA6I,QAAApK,KAAAupF,GACAiS,KAGAA,KACAjS,EAAA,GAEAmc,IACAnc,EAAAx9E,SAAA5I,EAAAM,UAAAgL,GACAA,GAAA,GAGAk3F,IACApc,EAAAvoF,KAAAmC,EAAAM,UAAAgL,GACAA,GAAA,GAGAm3F,IACArc,EAAAzB,MAAAqY,GAAA7/F,EAAAe,SAAAoN,IAAA,IACAA,GAAA,GAGAo3F,IAEAtc,EAAAD,sBAAAnmF,EAAAM,UAAAgL,GACAA,GAAA,GAGAlN,EAAA6I,QAAApK,KAAAupF,GAGA,OAAAhoF,GAEAwkG,OAAA,SAAAzlG,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,QAGAimF,KAAA,SAAAhnF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACA,OACAS,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA2kG,aAAA7iG,EAAAs9F,UAAA,GACAwF,QAAA,IAAAC,YAAA,CAAA/iG,EAAAs9F,UAAA,GAAAt9F,EAAAs9F,UAAA,GAAAt9F,EAAAs9F,UAAA,SA4GA0F,GAAA,CACAC,QAjGAtG,GAAA,SAAAx/F,GAYA,IAXA,IAEA6C,EACAnC,EACA/B,EACAgC,EACAm7B,EANAz8B,EAAA,EACA4B,EAAA,GAOA8kG,EAAA,IAAA/nB,YAAAh+E,EAAAV,QACAy6D,EAAA,IAAA9vD,WAAA87F,GAEAC,EAAA,EAAqBA,EAAAhmG,EAAAV,SAAiB0mG,EACtCjsC,EAAAisC,GAAAhmG,EAAAgmG,GAKA,IAFAnjG,EAAA,IAAAG,SAAA+iG,GAEA1mG,EAAAW,EAAAc,YAEAJ,EAAAmC,EAAAM,UAAA9D,GACAV,EAAAghG,GAAA3/F,EAAAe,SAAA1B,EAAA,EAAAA,EAAA,IACAsB,EAAAD,EAAA,EAAArB,EAAAqB,EAAAV,EAAAc,YAEAg7B,GAAAmkE,GAAAthG,IAAA,SAAAqB,GACA,OACAA,UAESA,EAAAe,SAAA1B,EAAA,EAAAsB,KAETD,OACAo7B,EAAAn9B,OAEAsC,EAAAvB,KAAAo8B,GACAz8B,EAAAsB,EAGA,OAAAM,GA6DAglG,QA/CAxG,GAAA,SAAAyG,EAAA3F,GACA,IAAA4F,EAIA,OAHA5F,KAAA,EACA4F,EAAA,IAAAnsF,MAAA,EAAAumF,EAAA,GAAAhnF,KAAA,KAEA2sF,EAAArkG,IAAA,SAAAi6B,EAAA/8B,GAEA,OAAAonG,EAAArqE,EAAAn9B,KAAA,KACAuF,OAAAiW,KAAA2hB,GAAAne,OAAA,SAAAvZ,GACA,eAAAA,GAAA,UAAAA,IACSvC,IAAA,SAAAuC,GACT,IAAAgiG,EAAAD,EAAA,KAAA/hG,EAAA,KACAwB,EAAAk2B,EAAA13B,GAEA,GAAAwB,aAAAqE,YAAArE,aAAA+mB,YAAA,CACA,IAAAta,EAAA2H,MAAAna,UAAAZ,MAAAQ,KAAA,IAAAwK,WAAArE,EAAA5E,OAAA4E,EAAA3C,WAAA2C,EAAA9E,aAAAe,IAAA,SAAAwkG,GACA,gBAAAA,EAAA3/F,SAAA,KAAAzH,OAAA,KACasa,KAAA,IAAAuJ,MAAA,YAEb,OAAAzQ,EAIA,IAAAA,EAAA/S,OACA8mG,EAAA,IAAA/zF,EAAAkH,KAAA,IAAAta,MAAA,OAGAmnG,EAAA,MAAA/zF,EAAAxQ,IAAA,SAAAiqB,GACA,OAAAq6E,EAAA,KAAAr6E,IACavS,KAAA,WAAA4sF,EAAA,MATbC,EAAA,KAaA,OAAAA,EAAA1xF,KAAAsB,UAAApQ,EAAA,QAAAyT,MAAA,MAAAxX,IAAA,SAAAiqB,EAAA/sB,GACA,WAAAA,EACA+sB,EAGAq6E,EAAA,KAAAr6E,IACWvS,KAAA,QACFA,KAAA,OACTuiB,EAAAryB,MAAA,KAAAg2F,GAAA3jE,EAAAryB,MAAA82F,EAAA,SACOhnF,KAAA,OAMP+sF,UAAArG,GAAAh+F,KACAskG,UAAAtG,GAAAr9F,KACA4jG,UAAAvG,GAAAl+F,KACA0kG,UAAAxG,GAAA3a,MAEAohB,GAAAla,GACAma,GAAAl2F,GAAAC,cAYAk2F,GAAA,SAAAz4F,EAAArE,GAGA,IAFA,IAAA+8F,EAAA14F,EAEA9O,EAAA,EAAqBA,EAAAyK,EAAAxK,OAAoBD,IAAA,CACzC,IAAA4pF,EAAAn/E,EAAAzK,GAEA,GAAAwnG,EAAA5d,EAAAvoF,KACA,OAAAuoF,EAGA4d,GAAA5d,EAAAvoF,KAGA,aA+HAomG,GAAA,SAAAnjF,EAAAojF,GAEA,IAAAplG,EAAA+nF,EAAAtmF,QAAAugB,EAAA,iBAEAqjF,EAAAtd,EAAAtmF,QAAAugB,EAAA,UACAsjF,EAAA,GACAC,EAAA,GAkCA,OAhCAF,EAAAvkG,QAAA,SAAA+G,EAAAzK,GACA,IAAAooG,EAAAxlG,EAAA5C,GACAmoG,EAAAxnG,KAAA,CACA8J,OACA1H,KAAAqlG,MAGAD,EAAAzkG,QAAA,SAAA2kG,GACA,IAWAC,EAXA79F,EAAA49F,EAAA59F,KACA1H,EAAAslG,EAAAtlG,KACAC,EAAA2nF,EAAAtmF,QAAAtB,EAAA,UAEAwlG,EAAAzB,GAAAW,UAAAzkG,EAAA,IACAe,EAAAwkG,EAAAxkG,QACAb,EAAAynF,EAAAtmF,QAAAtB,EAAA,UAEAoH,EAAAjH,EAAA3C,OAAA,EAAAumG,GAAAS,UAAArkG,EAAA,IAAAiH,oBAAA,EACAq+F,EAAA7d,EAAAtmF,QAAAtB,EAAA,UAIAilG,IAAAjkG,GAAAykG,EAAAjoG,OAAA,IAEA+nG,EA5IA,SAAAtH,EAAAj2F,EAAAhH,GACA,IAEA0kG,EACAnoG,EACAC,EACAmoG,EALAzH,EAAA,IAAAh9F,SAAA+8F,EAAA/+F,OAAA++F,EAAA98F,WAAA88F,EAAAj/F,YACAG,EAAA,GAMA,IAAA5B,EAAA,EAAiBA,EAAA,EAAA0gG,EAAAzgG,OAA0BD,GAAAC,EAI3C,GAHAA,EAAA0gG,EAAA78F,UAAA9D,GACAA,GAAA,IAEAC,GAAA,GAIA,UAAAygG,EAAA1gG,IACA,OACA,IAAAW,EAAA+/F,EAAAh/F,SAAA1B,EAAA,EAAAA,EAAA,EAAAC,GACAooG,EAAAd,GAAAvnG,EAAAyK,GACA09F,EAAA,CACA78F,YAAA,WACAjK,KAAApB,EACAU,OACAutF,YAAAmZ,GAAA1mG,GACA8C,WAGA4kG,GACAF,EAAAj8F,IAAAm8F,EAAAn8F,IACAi8F,EAAAh8F,IAAAk8F,EAAAl8F,IACAi8F,EAAAC,IAIAF,EAAAj8F,IAAAk8F,EAAAl8F,IACAi8F,EAAAh8F,IAAAi8F,EAAAj8F,KAGAvK,EAAAvB,KAAA8nG,GAQA,OAAAvmG,EA6FA0mG,CAAAn+F,EA5EA,SAAA+9F,EAAAr+F,EAAAnH,GACA,IAAA+7F,EAAA50F,EACAm7F,EAAAtiG,EAAAsiG,uBAAA,EACAC,EAAAviG,EAAAuiG,mBAAA,EACAxhG,EAAAf,EAAAe,QACA8kG,EAAA,GA4BA,OA3BAL,EAAA9kG,QAAA,SAAA6iF,GAIA,IACAx7E,EADA+7F,GAAAY,UAAAnhB,GACAx7E,QACAA,EAAArH,QAAA,SAAAwmF,QACA/8E,IAAA+8E,EAAAx9E,WACAw9E,EAAAx9E,SAAA44F,QAGAn4F,IAAA+8E,EAAAvoF,OACAuoF,EAAAvoF,KAAA4jG,GAGArb,EAAAnmF,UACAmmF,EAAAz9E,IAAAsyF,OAEA5xF,IAAA+8E,EAAAD,wBACAC,EAAAD,sBAAA,GAGAC,EAAA19E,IAAAuyF,EAAA7U,EAAAD,sBACA8U,GAAA7U,EAAAx9E,WAEAm8F,IAAA/oG,OAAAiL,KAEA89F,EA0CAC,CAAAN,EAAAr+F,EAAAo+F,GACAxkG,GAEAmkG,EAAAnkG,KACAmkG,EAAAnkG,GAAA,IAGAmkG,EAAAnkG,GAAAmkG,EAAAnkG,GAAAjE,OAAAwoG,MAGAJ,GAkOAz/F,GAAA,CACAsgG,UAAAxe,EACAI,QACAx4E,WAAAwuF,GAAAxuF,WACAE,mBAAAsuF,GAAAtuF,mBACAD,mBAAAuuF,GAAAvuF,mBACA42F,cAlMA,WACA,IACAC,EAEAC,EAEAnlG,EAEAzC,EAEA6nG,EATAC,GAAA,EAeA5pG,KAAA4pG,cAAA,WACA,OAAAA,GAQA5pG,KAAAC,KAAA,WACAwpG,EAAA,IAAArB,GACAwB,GAAA,EAEAH,EAAAtpG,GAAA,gBAAA0P,GAEAA,EAAA9N,UAAA8N,EAAAK,SAAApO,EACA+N,EAAAM,QAAAN,EAAAO,OAAAtO,EACA6nG,EAAA75F,SAAA3O,KAAA0O,GACA85F,EAAA55F,eAAAF,EAAAQ,SAAA,KAUArQ,KAAA6pG,UAAA,SAAA5lG,EAAA6lG,GACA,QAAA7lG,GAAA,IAAAA,EAAAlD,QAAA+oG,GAAA,kBAAAA,GAAA,IAAAnkG,OAAAiW,KAAAkuF,GAAA/oG,UAIAwD,IAAAN,EAAA,IAAAnC,IAAAgoG,EAAAvlG,KAcAvE,KAAAoW,MAAA,SAAAgP,EAAAnhB,EAAA6lG,GACA,IAAAC,EAEA,IAAA/pG,KAAA4pG,gBACA,YACS,IAAA3lG,IAAA6lG,EACT,YACS,GAAA9pG,KAAA6pG,UAAA5lG,EAAA6lG,GAGTvlG,EAAAN,EAAA,GACAnC,EAAAgoG,EAAAvlG,QAES,IAAAA,IAAAzC,EAET,OADA4nG,EAAAvoG,KAAAikB,GACA,KAIA,KAAAskF,EAAA3oG,OAAA,IACA,IAAAipG,EAAAN,EAAAl9F,QACAxM,KAAAoW,MAAA4zF,EAAA/lG,EAAA6lG,GAKA,eAFAC,EAzGA,SAAA3kF,EAAA7gB,EAAAzC,GAGA,OAAAyC,EAKA,CACAukG,QAFAP,GAAAnjF,EAAA7gB,GAEAA,GACAzC,aANA,KAqGAmoG,CAAA7kF,EAAA7gB,EAAAzC,KAEAioG,EAAAjB,SAIA9oG,KAAAkqG,SAAAH,EAAAjB,SAEA9oG,KAAA07F,cACAiO,GANA,MAgBA3pG,KAAAkqG,SAAA,SAAA1G,GACA,IAAAxjG,KAAA4pG,kBAAApG,GAAA,IAAAA,EAAAziG,OACA,YAGAyiG,EAAAt/F,QAAA,SAAAimG,GACAV,EAAAtoG,KAAAgpG,MASAnqG,KAAA07F,YAAA,WACA,IAAA17F,KAAA4pG,gBACA,YAGAH,EAAA9nG,SAOA3B,KAAAoqG,oBAAA,WACAT,EAAA75F,SAAA,GACA65F,EAAA55F,eAAA,IAQA/P,KAAAqqG,mBAAA,WACA,IAAArqG,KAAA4pG,gBACA,YAGAH,EAAAj3F,SASAxS,KAAAsqG,iBAAA,WACAtqG,KAAAoqG,sBACApqG,KAAAqqG,sBAOArqG,KAAAwS,MAAA,WACAk3F,EAAA,GACAnlG,EAAA,KACAzC,EAAA,KAEA6nG,EAOA3pG,KAAAoqG,sBANAT,EAAA,CACA75F,SAAA,GAEAC,eAAA,IAMA/P,KAAAqqG,sBAGArqG,KAAAwS,UAaAka,GAAA,SAAA3nB,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIA0sB,GAAA,WACA,SAAAC,EAAAvsB,EAAAC,GACA,QAAAxE,EAAA,EAAuBA,EAAAwE,EAAAvE,OAAkBD,IAAA,CACzC,IAAAyE,EAAAD,EAAAxE,GACAyE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAP,EAAAE,EAAAM,IAAAN,IAIA,gBAAAP,EAAAe,EAAAC,GAGA,OAFAD,GAAA6rB,EAAA5sB,EAAA1D,UAAAyE,GACAC,GAAA4rB,EAAA5sB,EAAAgB,GACAhB,GAdA,GAkFAulG,GAAA,WACA,SAAAA,EAAAhrG,EAAAyK,GACA0iB,GAAA1sB,KAAAuqG,GACAvqG,KAAAgK,WAAA,GACAhK,KAAAT,OACAS,KAAAC,OAmFA,OA5EA0xB,GAAA44E,EAAA,EACA1kG,IAAA,OACAwB,MAAA,WAlEA,IAAA9H,EAAA4hG,EAmEAnhG,KAAAmhG,YACAnhG,KAAAmhG,WAAA9/F,UAGArB,KAAAmhG,WAAA,IAAAl4F,GAAA0J,WAAA3S,KAAAgK,SAvEAzK,EAwEAS,KAAAT,MAxEA4hG,EAwEAnhG,KAAAmhG,YAvEAhhG,GAAA,gBAAAilB,GAKA,IAAAolF,EAAAplF,EAAAzV,YACAyV,EAAAzV,YAAA,CACAlO,KAAA+oG,EAAA/nG,OACAiC,WAAA8lG,EAAA9lG,WACAnC,WAAAioG,EAAAjoG,YAEA,IAAAkoG,EAAArlF,EAAA3jB,KACA2jB,EAAA3jB,KAAAgpG,EAAAhoG,OACAlD,EAAAgmF,YAAA,CACAmlB,OAAA,OACAtlF,UACA1gB,WAAA+lG,EAAA/lG,WACAnC,WAAAkoG,EAAAloG,YACS,CAAA6iB,EAAA3jB,SAGT0/F,EAAAjvF,eACAivF,EAAAjvF,cAAA/R,GAAA,gBAAAsP,GACAlQ,EAAAgmF,YAAA,CACAmlB,OAAA,UACAjpG,KAAAgO,MAKA0xF,EAAAhhG,GAAA,gBAAAsB,GACAlC,EAAAgmF,YAAA,CACAmlB,OAAA,WAGAvJ,EAAAhhG,GAAA,mBAAAwqG,GACAprG,EAAAgmF,YAAA,CACAmlB,OAAA,UACAC,gBA0CO,CACP9kG,IAAA,OACAwB,MAAA,SAAA5F,GAEA,IAAA2jB,EAAA,IAAA1Z,WAAAjK,SAAAiD,WAAAjD,EAAAc,YACAvC,KAAAmhG,WAAAhgG,KAAAikB,KAOO,CACPvf,IAAA,QACAwB,MAAA,WACArH,KAAAC,SAUO,CACP4F,IAAA,qBACAwB,MAAA,SAAA5F,GACA,IAAA4hF,EAAA5hF,EAAA4hF,iBAAA,EACArjF,KAAAmhG,WAAA7uF,uBAAA3O,KAAAs6B,MAAA,IAAAolD,MAEO,CACPx9E,IAAA,sBACAwB,MAAA,SAAA5F,GACAzB,KAAAmhG,WAAAt2F,oBAAAlH,KAAAse,KAAA,IAAAxgB,EAAAmpG,gBASO,CACP/kG,IAAA,QACAwB,MAAA,SAAA5F,GACAzB,KAAAmhG,WAAAx/F,UAEO,CACPkE,IAAA,gBACAwB,MAAA,WACArH,KAAAmhG,WAAAzuF,kBAEO,CACP7M,IAAA,gBACAwB,MAAA,SAAA5F,GACAzB,KAAAmhG,WAAA1yF,cAAAhN,EAAAuK,gBAAAtL,aAGA6pG,EAxFA,GAsHA,IAnBA,SAAAhrG,GACAA,EAAAimF,UAAA,SAAA31E,GACA,SAAAA,EAAApO,KAAAipG,QAAA76F,EAAApO,KAAAuI,QACAhK,KAAA6qG,gBAAA,IAAAN,GAAAhrG,EAAAsQ,EAAApO,KAAAuI,UAIAhK,KAAA6qG,kBACA7qG,KAAA6qG,gBAAA,IAAAN,GAAAhrG,IAGAsQ,EAAApO,MAAAoO,EAAApO,KAAAipG,QAAA,SAAA76F,EAAApO,KAAAipG,QACA1qG,KAAA6qG,gBAAAh7F,EAAApO,KAAAipG,SACA1qG,KAAA6qG,gBAAAh7F,EAAApO,KAAAipG,QAAA76F,EAAApO,QAMA,CAAAlC,GAzlNA,KAmmNAurG,GAAA,CACAC,WAAA,OACAC,yBAAA,UAEAC,aAAA,KAWAC,GAAA,SAAA1tF,GACA,OAAAA,EAAAla,IAAA,SAAAkO,GACA,OAAAA,EAAA1J,QAAA,+BAAAqjG,EAAAC,EAAAC,GAGA,eAFA,KAAAhmF,OAAA+lF,GAAAjjG,SAAA,KAAAzH,OAAA,GAEA,MADA,KAAA2kB,OAAAgmF,GAAAljG,SAAA,KAAAzH,OAAA,QAWA4qG,GAAA,WACA,IAIAC,EAJA/tF,EAAAvc,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,MACAyB,EAAA,CACA8oG,WAAA,GAgBA,OAbA9oG,EAAA8oG,WAAAhuF,EAAA1C,MAAA,KAAA/Z,OACA2B,EAAA8oG,WAAA9oG,EAAA8oG,YAAA,GAEAD,EAAA,8BAAAjxF,KAAAkD,MAGA9a,EAAAqoG,WAAAQ,EAAA,GACA7oG,EAAAsoG,yBAAAO,EAAA,IAIA7oG,EAAAuoG,aAAA,8CAAA3wF,KAAAkD,GACA9a,EAAAuoG,aAAAvoG,EAAAuoG,cAAAvoG,EAAAuoG,aAAA,GACAvoG,GA2BA+oG,GAAA,SAAArrG,EAAAsrG,EAAAluF,GAIA,OAAApd,EAAA,IAAAsrG,EAAA,aAAoCluF,EAAA4B,OAAA,SAAAqU,GACpC,QAAAA,IACGzY,KAAA,WA8EH2wF,GAAA,SAAA/rF,EAAA2C,GACA,IAAAqpF,EAtEA,SAAArpF,GAKA,OAAAA,EAAA3F,UAAA2F,EAAA3F,SAAA7b,QAAAwhB,EAAA3F,SAAA,GAAAtZ,IACA,MAGA,OA6DAuoG,CAAAtpF,GACAupF,EApDA,SAAAvpF,GAGA,IAAAwpF,EAAAxpF,EAAA7F,YAAA,GAEA,OAAAqvF,EAAAxuF,OACA+tF,GAAAS,EAAAxuF,QAGAutF,GA2CAkB,CAAAzpF,GACAwpF,EAAAxpF,EAAA7F,YAAA,GAEAuvF,GAAA,EACAC,GAAA,EAEA,IAAA3pF,EAEA,SAGA,GAAA3C,EAAAE,YAAAtB,OAAAutF,EAAAvtF,MAAA,CACA,IAAA2tF,EAAAvsF,EAAAE,YAAAtB,MAAAutF,EAAAvtF,OAEA,GAAA2tF,EAKA,QAAAC,KAJAF,GAAA,EAEAD,GAAA,EAEAE,EAIA,IAAAA,EAAAC,GAAAr3F,MAAAo3F,EAAAC,GAAA/vF,UAAA,CACA4vF,GAAA,EACA,OAQAC,IAAAJ,EAAAb,eACAgB,IAIAH,EAAAb,aA9EA,SAAArrF,EAAAysF,GACA,IAAAzsF,EAAAE,YAAAtB,QAAA6tF,EACA,YAGA,IAAAF,EAAAvsF,EAAAE,YAAAtB,MAAA6tF,GAEA,IAAAF,EACA,YAGA,QAAA1vF,KAAA0vF,EAAA,CACA,IAAAG,EAAAH,EAAA1vF,GAEA,GAAA6vF,EAAAjsF,SAAAisF,EAAAjwF,UAEA,OAAAivF,GAAAgB,EAAAjwF,UAAA,GAAAK,WAAAa,QAAA0tF,aAIA,YA0DAsB,CAAA3sF,EAAAmsF,EAAAvtF,QAGAstF,EAAAb,eACAp0B,GAAAz/C,IAAAa,KAAA,+HACA6zE,EAAAb,aAAAH,GAAAG,eAKA,IAAAuB,EAAA,GAEAV,EAAAf,aACAyB,EAAA5uD,MAAA,GAAAkuD,EAAAf,WAAAe,EAAAd,0BAGAc,EAAAb,eACAuB,EAAAxsF,MAAA,WAAA8rF,EAAAb,cAKA,IAAAwB,EAAAhB,GAAA,QAAAG,EAAA,CAAAY,EAAAxsF,QACA0sF,EAAAjB,GAAA,QAAAG,EAAA,CAAAY,EAAA5uD,QACA+uD,EAAAlB,GAAA,QAAAG,EAAA,CAAAY,EAAA5uD,MAAA4uD,EAAAxsF,QAEA,OAAAksF,GACAD,GAAAO,EAAA5uD,MACA,CAAA8uD,EAAAD,GAGAR,GAAAO,EAAA5uD,MASA,CAAA+uD,EAAAF,GANA,CAAAA,KAWAD,EAAA5uD,MAMA,CAAA+uD,GALA,CAAAF,IA6CAG,GAAA,SAAAp7F,GACA,uBAAAjJ,KAAAiJ,IAWAq7F,GAAA,SAAAr7F,GACA,wBAAAjJ,KAAAiJ,IAiBAs7F,GAAA,SAAArqG,EAAA85C,EAAAwwD,GACA,wBAAAxwD,GAAA,OAAAA,IAAA95C,EAAA1B,OACA,SAIA,IAAAisG,EAAArpG,KAAAse,KAAA,KAAAs6B,EAAAwwD,EAAA,IACAjsG,OAAA,EAEA,IAAAA,EAAA,EAAaA,EAAA2B,EAAA1B,UACb0B,EAAA3B,GAAAkM,IAAAggG,GADgClsG,KAMhC,OAAA2B,EAAA/B,MAAAI,IAuFAwvC,GAAA,SAAA28D,EAAAC,EAAAC,GACA,IAAAp5F,EAAA,KACA3R,EAAA,KACAgrG,EAAA,EACAC,EAAA,GACAlsF,EAAA,GAEA,IAAA8rF,IAAAC,EACA,OAAAr2B,GAAA2B,kBAIA,IAAAy0B,EACA,OAAAC,EAAA58D,SAGA,IAAA48D,EACA,OAAAD,EAAA38D,SAIA,GAAA68D,EACA,OAAAF,EAAA38D,SAIA,OAAA28D,EAAA38D,SAAAvvC,QAAA,IAAAmsG,EAAA58D,SAAAvvC,OACA,OAAA81E,GAAA2B,kBASA,IAJA,IAAA80B,EAAAL,EAAA38D,SACAi9D,EAAAL,EAAA58D,SACArtB,EAAAqqF,EAAAvsG,OAEAkiB,KACAoqF,EAAAlsG,KAAA,CACAsgB,KAAA6rF,EAAAv5F,MAAAkP,GACA7iB,KAAA,UAEAitG,EAAAlsG,KAAA,CACAsgB,KAAA6rF,EAAAlrG,IAAA6gB,GACA7iB,KAAA,QAMA,IAFA6iB,EAAAsqF,EAAAxsG,OAEAkiB,KACAoqF,EAAAlsG,KAAA,CACAsgB,KAAA8rF,EAAAx5F,MAAAkP,GACA7iB,KAAA,UAEAitG,EAAAlsG,KAAA,CACAsgB,KAAA8rF,EAAAnrG,IAAA6gB,GACA7iB,KAAA,QAUA,IALAitG,EAAAxtC,KAAA,SAAAh2D,EAAAC,GACA,OAAAD,EAAA4X,KAAA3X,EAAA2X,OAIAwB,EAAA,EAAiBA,EAAAoqF,EAAAtsG,OAAwBkiB,IACzC,UAAAoqF,EAAApqF,GAAA7iB,KAIA,MAHAgtG,IAIAr5F,EAAAs5F,EAAApqF,GAAAxB,MAEK,QAAA4rF,EAAApqF,GAAA7iB,MAIL,MAHAgtG,IAIAhrG,EAAAirG,EAAApqF,GAAAxB,MAKA,OAAA1N,GAAA,OAAA3R,IACA+e,EAAAhgB,KAAA,CAAA4S,EAAA3R,IACA2R,EAAA,KACA3R,EAAA,MAIA,OAAAy0E,GAAAzmC,iBAAAjvB,IAuDAqsF,GAAA,SAAAC,GAGA,SAAAD,EAAAE,EAAAlwF,GACIu7D,GAAc/4E,KAAAwtG,GAElB,IAAAvgF,EAAgBisD,GAAyBl5E,MAAAwtG,EAAAnnG,WAAAV,OAAAS,eAAAonG,IAAAtsG,KAAAlB,KAAA62E,GAAA/xC,cAEzC7X,EAAA0gF,iBAAA,EACA1gF,EAAA2gF,gBAAA,GACA3gF,EAAA4gF,iBAAA,EACA5gF,EAAAs2D,aAAAmqB,EACAzgF,EAAA6gF,QAAAtwF,EACAyP,EAAA8gF,YAAA,KACA9gF,EAAA+gF,YAAA,KACA/gF,EAAAghF,gBAAA,EACAhhF,EAAAihF,yBAAA,EACAjhF,EAAAkhF,WAAA,GACAlhF,EAAAmhF,aAAA,EACAnhF,EAAAohF,YAAAx3B,GAAAjnC,QAAAN,YAAA,GACA,IAAAtlC,EAAA,CACA6E,OAAA,EACAxB,eAAA4f,EAAAohF,aAoFA,OAjFAphF,EAAA6gF,QAAA5pG,QAAA,SAAAsN,GACAo7F,GAAAp7F,GACAyb,EAAA8gF,YAAAv8F,EACOq7F,GAAAr7F,KACPyb,EAAA+gF,YAAAx8F,KAMAyb,EAAAqhF,YAAA,IAAAtoB,GAEA/4D,EAAAqhF,YAAA/oB,YAAA,CACAmlB,OAAA,OACA1gG,YAGAijB,EAAAqhF,YAAA9oB,UAAA,SAAA31E,GACA,eAAAA,EAAApO,KAAAipG,OACAz9E,EAAAshF,MAAA1+F,GAGA,SAAAA,EAAApO,KAAAipG,OACAz9E,EAAAuhF,MAAA3+F,GAGA,YAAAA,EAAApO,KAAAipG,OACAz9E,EAAAwhF,eAAA5+F,QADA,GAOAlK,OAAAC,eAAAqnB,EAAA,mBACAmJ,IAAA,WACA,OAAAp2B,KAAA2tG,kBAEAhiG,IAAA,SAAAkvB,GACA,kBAAAA,MAAA,IACA76B,KAAA2tG,iBAAA9yE,EACA76B,KAAAkuG,yBAAA,EAEAluG,KAAAmuG,WAAAptG,OAAA,EACAf,KAAAouG,aAAA,EAGApuG,KAAAsuG,YAAA/oB,YAAA,CACAmlB,OAAA,qBACArnB,gBAAAxoD,QAMAl1B,OAAAC,eAAAqnB,EAAA,qBACAmJ,IAAA,WACA,OAAAp2B,KAAA0uG,cAAA1uG,KAAA2uG,cAAAC,mBAEAjjG,IAAA,SAAAoI,GACA/T,KAAA0uG,eACA1uG,KAAA0uG,aAAAE,kBAAA76F,GAGA/T,KAAA2uG,eACA3uG,KAAA2uG,aAAAC,kBAAA76F,MAKApO,OAAAC,eAAAqnB,EAAA,YACAmJ,IAAA,WACA,SAAAp2B,KAAA6tG,kBAAA7tG,KAAAiuG,gBAAAjuG,KAAA2uG,cAAA3uG,KAAA2uG,aAAAE,UAAA7uG,KAAA0uG,cAAA1uG,KAAA0uG,aAAAG,aAKAlpG,OAAAC,eAAAqnB,EAAA,YACAmJ,IAAA,WACA,OAAAka,GAAAtwC,KAAA0uG,aAAA1uG,KAAA2uG,aAAA3uG,KAAAiuG,mBAGAhhF,EA0ZA,OAngBEgsD,GAAQu0B,EAAAC,GAqHRz0B,GAAWw0B,EAAA,EACb3nG,IAAA,QACAwB,MAAA,SAAAwI,GACA,IAAAuV,EAAAvV,EAAApO,KAAA2jB,QAEAA,EAAA3jB,KAAA,IAAAiK,WAAA0Z,EAAA3jB,KAAAoO,EAAApO,KAAAiD,WAAAmL,EAAApO,KAAAc,YACA6iB,EAAAzV,YAAA,IAAAjE,WAAA0Z,EAAAzV,YAAAlO,KAAA2jB,EAAAzV,YAAAjL,WAAA0gB,EAAAzV,YAAApN,YArkPA,SAAAusG,EAAApB,EAAAtoF,GACA,IAAAwe,EAAA8pE,EAAA7lE,QAEA,GAAAziB,EAAAtV,UAAAsV,EAAAtV,SAAA/O,OAKA,QAAAwD,KAJAuqG,EAAA1rB,oBACA0rB,EAAA1rB,kBAAA,IAGAh+D,EAAArV,eACA,IAAA++F,EAAA1rB,kBAAA7+E,GAAA,CACAq/B,EAAA4X,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,YAEA,IAAA1S,EAAA65B,EAAAuO,aAAAuE,aAAAnyC,GAMAuqG,EAAA1rB,kBAAA7+E,GAJAwF,GAQA65B,EAAAyO,mBAAA,CACAmF,KAAA,WACAv0C,GAAAsB,EACA4b,MAAA5b,IACW,GAAAwF,MAMXqb,EAAA7W,UAAA6W,EAAA7W,SAAAxN,SAAA+tG,EAAAprB,iBACAorB,EAAAprB,eAAA9/C,EAAAyO,mBAAA,CACAmF,KAAA,WACAr3B,MAAA,mBACK,GAAApW,MACL+kG,EAAAprB,eAAAqrB,gCAAA3pF,EAAA7W,SAAAgC,cA+hPAy+F,CAAAhvG,UAAAujF,aAAAn+D,GAEAplB,KAAA4tG,gBAAAzsG,KAAAikB,KAaG,CACHvf,IAAA,QACAwB,MAAA,SAAAwI,GAEA,WAAA7P,KAAAujF,aAAA5rE,WAOA3X,KAAAivG,0BANAjvG,KAAA4tG,gBAAA7sG,OAAA,IAkBG,CACH8E,IAAA,2BACAwB,MAAA,WACA,IAAAknB,EAAAvuB,KAEA0gC,EAAA,kBACAA,EAAAx8B,QAAA,SAAA9D,GAGA,GAAAmuB,EAAAnuB,EAAA,YAKAmuB,EAAAnuB,EAAA,YAIA,IAAAqC,EAAA,KAGA,GAAA8rB,EAAAg1D,aAAAnjF,EAAA,YACAqC,EAAA8rB,EAAAg1D,aAAAnjF,EAAA,YAWAyuG,UAAA,MACS,CACT,IACAvvF,EAAAlf,EAAA,gBAAsCmuB,EADtCnuB,EAAA,UACsC,IACtCqC,EApPA,SAAAirG,EAAApuF,GACA,IAAAwvF,EAAApB,EAAAwB,gBAAA5vF,GACA+mB,EAAA1gC,OAAAyB,OAAA,MACAi/B,EAAAwoE,UAAA,EACAxoE,EAAA8oE,YAAAL,EAEA,IAAAr1D,EAAA,SAAA5zC,GACA,oBAAAipG,EAAAjpG,GACAwgC,EAAAxgC,GAAA,WACA,OAAAipG,EAAAjpG,GAAAzE,MAAA0tG,EAAA7tG,YAEK,qBAAAolC,EAAAxgC,IACLF,OAAAC,eAAAygC,EAAAxgC,EAAA,CACAuwB,IAAA,WACA,OAAA04E,EAAAjpG,IAEA8F,IAAA,SAAA6vD,GACA,OAAAszC,EAAAjpG,GAAA21D,MAMA,QAAA31D,KAAAipG,EACAr1D,EAAA5zC,GAGA,OAAAwgC,EAyNA+oE,CAAA7gF,EAAAg1D,aAAA8rB,mBAAA/vF,GACAiP,EAAAg1D,aAAAnjF,EAAA,WAAAqC,EAGA8rB,EAAAnuB,EAAA,WAAAqC,EAEA,qCAAAyB,QAAA,SAAA2L,GACApN,EAAAy/B,iBAAAryB,EAAA,WAEA,aAAAzP,IAAAmuB,EAAA0/E,eAuBA,MAnBA,cAAAp+F,IACA0e,EAAAnuB,EAAA,WAAAyuG,UAAA,GAGAnuE,EAAA8E,MAAA,SAAAxiB,GAGA,kBAAAA,IAAAuL,EAAA0/E,kBAKA7tG,IAAA4iB,IAAAuL,EAAAvL,EAAA,aAAAuL,EAAAvL,EAAA,WAAA6rF,YAQAtgF,EAAA3tB,QAAAiP,QADA,WAiBG,CACHhK,IAAA,eACAwB,MAAA,SAAA+d,GAIA,GAFAplB,KAAA6tG,iBAAA,EAEA7tG,KAAA2uG,cAAA3uG,KAAA2uG,aAAAr+D,SAAAvvC,OAAA,CACA,IAAAwsG,EAAAvtG,KAAA2uG,aAAAr+D,SACAtwC,KAAAsuG,YAAA/oB,YAAA,CACAmlB,OAAA,sBACAE,YAAA2C,EAAAnrG,IAAAmrG,EAAAxsG,OAAA,KAIAf,KAAA0uG,cACA1uG,KAAAsuG,YAAA/oB,YAAA,CACAmlB,OAAA,gBACA1+F,gBAAA8gG,GAAA9sG,KAAAmuG,WAAAnuG,KAAAujF,aAAA17C,QAAA7nC,KAAAujF,aAAA17C,QAAA0U,cAAA,KAAAv8C,KAAAouG,gBAIApuG,KAAAsuG,YAAA/oB,YAAA,CACAmlB,OAAA,OAIAjpG,KAAA2jB,EAAA3iB,OAGAiC,WAAA0gB,EAAA1gB,WACAnC,WAAA6iB,EAAA7iB,YACO,CAAA6iB,EAAA3iB,SACPzC,KAAAsuG,YAAA/oB,YAAA,CACAmlB,OAAA,YAaG,CACH7kG,IAAA,iBACAwB,MAAA,SAAAwI,GACA7P,KAAAmuG,WAjgBA,SAAA1rG,EAAA8J,EAAAzE,GACA,IAAAyE,EAAAxL,OACA,OAAA0B,EAGA,GAAAqF,EAKA,OAAAyE,EAAA7L,QAMA,IAHA,IAAAqT,EAAAxH,EAAA,GAAAS,IACAlM,EAAA,EAESA,EAAA2B,EAAA1B,UACT0B,EAAA3B,GAAAkM,KAAA+G,GAD4BjT,KAM5B,OAAA2B,EAAA/B,MAAA,EAAAI,GAAAR,OAAAiM,GA2eA+iG,CAAAtvG,KAAAmuG,WAAAt+F,EAAApO,KAAAkpG,QAAA3qG,KAAAquG,eAWG,CACHxoG,IAAA,SACAwB,MAAA,SAAA0M,EAAA3R,GAeA,GAdApC,KAAA0uG,eACA1uG,KAAA0uG,aAAAG,UAAA,EACA7uG,KAAA0uG,aAAAxyE,OAAAnoB,EAAA3R,GACApC,KAAAmuG,WA5eA,SAAA1rG,EAAAsR,EAAA3R,EAAA2qG,GAMA,IALA,IAAA78F,EAAAvM,KAAAse,KAAA,KAAAlO,EAAAg5F,IACA38F,EAAAzM,KAAAse,KAAA,KAAA7f,EAAA2qG,IACAwC,EAAA9sG,EAAA/B,QACAI,EAAA2B,EAAA1B,OAEAD,OACA2B,EAAA3B,GAAAkM,KAAAoD,KAKA,QAAAtP,EAEA,OAAAyuG,EAKA,IAFA,IAAA18E,EAAA/xB,EAAA,EAEA+xB,OACApwB,EAAAowB,GAAA7lB,KAAAkD,KAQA,OAFA2iB,EAAAlvB,KAAAmgB,IAAA+O,EAAA,GACA08E,EAAA5uG,OAAAkyB,EAAA/xB,EAAA+xB,EAAA,GACA08E,EAgdAC,CAAAxvG,KAAAmuG,WAAAp6F,EAAA3R,EAAApC,KAAAouG,gBAGApuG,KAAAiuG,gBAAAjuG,KAAA2uG,eACA3uG,KAAA2uG,aAAAE,UAAA,EACA7uG,KAAA2uG,aAAAzyE,OAAAnoB,EAAA3R,IAIAwgF,GAAA7uE,EAAA3R,EAAApC,KAAA0jF,gBAEA1jF,KAAAojF,kBACA,QAAAr5E,KAAA/J,KAAAojF,kBACAR,GAAA7uE,EAAA3R,EAAApC,KAAAojF,kBAAAr5E,MAYG,CACHlE,IAAA,0BACAwB,MAAA,WACA,IAAAooG,EAAA,CACA7xD,MAAA,CACAhhC,SAAA,GACA9I,MAAA,GAEAkM,MAAA,CACApD,SAAA,GACA9I,MAAA,GAEAhE,SAAA,GACAvB,SAAA,IAIAkhG,EAAAzvG,KAAA4tG,gBAAA/qG,OAAA,SAAA6sG,EAAAtqF,GACA,IAAAhlB,EAAAglB,EAAAhlB,KACAqB,EAAA2jB,EAAA3jB,KACAkO,EAAAyV,EAAAzV,YAkBA,OAjBA+/F,EAAAtvG,GAAAwc,SAAAzb,KAAAM,GACAiuG,EAAAtvG,GAAA0T,OAAArS,EAAAc,WACAmtG,EAAAtvG,GAAAuP,cAEAyV,EAAAtV,WACA4/F,EAAA5/F,SAAA4/F,EAAA5/F,SAAAxP,OAAA8kB,EAAAtV,WAGAsV,EAAApV,OACA0/F,EAAAtvG,GAAA4P,KAAAoV,EAAApV,MAIAoV,EAAA7W,WACAmhG,EAAAnhG,SAAAmhG,EAAAnhG,SAAAjO,OAAA8kB,EAAA7W,WAGAmhG,GACOD,GAGPzvG,KAAA0uG,cAAA1uG,KAAA2uG,eAGA,IAAAc,EAAA7xD,MAAA9pC,QACA9T,KAAAguG,YAAA,MAGA,IAAAyB,EAAAzvF,MAAAlM,QACA9T,KAAA+tG,YAAA,MAGA/tG,KAAA2vG,4BAGAF,EAAAzvF,MAAAhQ,MACAhQ,KAAAujF,aAAA3iF,QAAA,CACAR,KAAA,YACA4P,KAAAy/F,EAAAzvF,MAAAhQ,OAIAy/F,EAAA7xD,MAAA5tC,MACAhQ,KAAAujF,aAAA3iF,QAAA,CACAR,KAAA,YACA4P,KAAAy/F,EAAA7xD,MAAA5tC,OAIAhQ,KAAAkuG,2BACAluG,KAAAiuG,gBAAAjuG,KAAA2uG,eACAc,EAAAzvF,MAAApD,SAAA9P,QAAA2iG,EAAAzvF,MAAArQ,aACA8/F,EAAAzvF,MAAAlM,OAAA27F,EAAAzvF,MAAArQ,YAAApN,YAGAvC,KAAAkuG,yBAAA,GAGA,IAAA0B,GAAA,EAEA5vG,KAAA0uG,cAAAe,EAAA7xD,MAAA9pC,OACA27F,EAAA7xD,MAAAhhC,SAAA9P,QAAA2iG,EAAA7xD,MAAAjuC,aACA8/F,EAAA7xD,MAAA9pC,OAAA27F,EAAA7xD,MAAAjuC,YAAApN,WACAvC,KAAA6vG,yBAAAJ,EAAA7xD,MAAA59C,KAAA0uG,cAEQ5rB,GAAgB9iF,KAAAyvG,EAAA3/F,SAAA2/F,EAAAlhG,YACjBvO,KAAA0uG,eAAA1uG,KAAAiuG,gBAAAjuG,KAAA2uG,eAOPiB,GAAA,IAGA5vG,KAAAiuG,gBAAAjuG,KAAA2uG,cACA3uG,KAAA6vG,yBAAAJ,EAAAzvF,MAAAhgB,KAAA2uG,cAGA3uG,KAAA4tG,gBAAA7sG,OAAA,EAEA6uG,GACA5vG,KAAAY,QAAA,aAIAZ,KAAA6tG,iBAAA,IAWG,CACHhoG,IAAA,2BACAwB,MAAA,SAAAqoG,EAAAI,GACA,IAAAlgG,EAAA,EACAmgG,OAAA,EAEA,GAAAL,EAAA57F,MAAA,CACAi8F,EAAA,IAAArkG,WAAAgkG,EAAA57F,OAEA47F,EAAA9yF,SAAA1Y,QAAA,SAAAkhB,GACA2qF,EAAApkG,IAAAyZ,EAAAxV,GACAA,GAAAwV,EAAA7iB,aAGA,IACAutG,EAAAjB,UAAA,EACAiB,EAAAE,aAAAD,GACS,MAAA73E,GACTl4B,KAAAujF,aAAA17C,SACA7nC,KAAAujF,aAAA17C,QAAA3P,MAAA,CACA1f,MAAA,EACApY,KAAA,oBACAovB,QAAA0I,EAAA1I,QACAygF,cAAA/3E,QAaG,CACHryB,IAAA,QACAwB,MAAA,WACArH,KAAA0uG,cACA1uG,KAAA0uG,aAAAn2F,SAGAvY,KAAAiuG,gBAAAjuG,KAAA2uG,cACA3uG,KAAA2uG,aAAAp2F,QAGAvY,KAAAsuG,aACAtuG,KAAAsuG,YAAA/oB,YAAA,CACAmlB,OAAA,UAIA1qG,KAAA4tG,gBAAA7sG,OAAA,EACAf,KAAA6tG,iBAAA,MAGAL,EApgBA,CAqgBC32B,GAAA/xC,aAeGorE,GAAe,SAAAzC,GAGnB,SAAA0C,IACIp3B,GAAc/4E,KAAAmwG,GAElB,IAAAljF,EAAgBisD,GAAyBl5E,MAAAmwG,EAAA9pG,WAAAV,OAAAS,eAAA+pG,IAAAjvG,KAAAlB,OAEzCowG,OAAA,EAGA,IAAAA,KAFAnjF,EAAAoiF,mBAAA,IAAmC53E,EAAA5tB,EAAQwmG,YAE3CpjF,EAAAoiF,mBACAe,KAAAD,EAAA7uG,WAAA,oBAAA2rB,EAAAoiF,mBAAAe,KACAnjF,EAAAmjF,GAAAnjF,EAAAoiF,mBAAAe,GAAAnoG,KAAAglB,EAAAoiF,qBA0OA,OAnOApiF,EAAAyyB,UAAA+kB,IACA9+D,OAAAC,eAAAqnB,EAAA,YACAmJ,IAAA,WACA,OAAAp2B,KAAA0/C,YAAA77C,IACA7D,KAAA0/C,UAGA1/C,KAAAqvG,mBAAAniG,UAEAvB,IAAA,SAAAuB,GACAlN,KAAA0/C,UAAAxyC,EAEAA,IAAArJ,MACA7D,KAAAqvG,mBAAAniG,eAKAvH,OAAAC,eAAAqnB,EAAA,YACAmJ,IAAA,WACA,OAAAp2B,KAAA0/C,YAAA77C,IACAgzE,GAAAzmC,iBAAA,IAAApwC,KAAAqvG,mBAAAniG,YAGAlN,KAAAqvG,mBAAAhqD,YAGA1/C,OAAAC,eAAAqnB,EAAA,cACAmJ,IAAA,WACA,OAAAp2B,KAAAqvG,mBAAA13F,cAGAhS,OAAAC,eAAAqnB,EAAA,uBACAmJ,IAAA,WACA,OAAAp2B,KAAAswG,wBAKArjF,EAAAsjF,cAAA,GACAtjF,EAAAqjF,qBAAA,GAQArjF,EAAAujF,2BAAA,WAKA,GAHAvjF,EAAAqjF,qBAAAvvG,OAAA,EAGA,IAAAksB,EAAAsjF,cAAAxvG,OAAA,CACA,IAAA+tG,EAAA7hF,EAAAsjF,cAAA,GAMA,OALAzB,EAAAZ,yBAAA,EACAY,EAAAb,gBAAAa,EAAAf,iBAEA9gF,EAAAqjF,qBAAAnvG,KAAA2tG,GAaA,IAJA,IAAA2B,GAAA,EACAC,GAAA,EAGA5vG,EAAA,EAAqBA,EAAAmsB,EAAA4a,QAAA2xB,cAAAz4D,OAAwCD,IAAA,CAC7D,IAAAiJ,EAAAkjB,EAAA4a,QAAA2xB,cAAA14D,GAEA,GAAAiJ,EAAAitC,SAAA,SAAAjtC,EAAAytC,KAAA,CAGAi5D,GAAA,EACAC,GAAA,EACA,OAIAzjF,EAAAsjF,cAAArsG,QAAA,SAAA4qG,EAAAtuG,GAQA,GAFAsuG,EAAAZ,yBAAA,EAEAY,EAAAd,aAAAc,EAAAf,YAEAe,EAAAb,eAAAwC,OACS,GAAA3B,EAAAd,cAAAc,EAAAf,YAITe,EAAAb,gBAAA,EACAyC,GAAA,OACS,IAAA5B,EAAAd,aAAAc,EAAAf,cAOTe,EAAAb,eAAAztG,EAAAkwG,KAEA5B,EAAAb,gBACA,OAIAhhF,EAAAqjF,qBAAAnvG,KAAA2tG,MAIA7hF,EAAA0jF,qBAAA,WACA1jF,EAAAsjF,cAAArsG,QAAA,SAAA4qG,GACAA,EAAAZ,yBAAA,KAIAjhF,EAAA2jF,YAAA,WACA3jF,EAAAsjF,cAAArsG,QAAA,SAAA4qG,GACAA,EAAAR,aACAQ,EAAAR,YAAA/oB,YAAA,CACAmlB,OAAA,qBAMAz9E,EAAA4jF,yBAAA,SAAAhhG,GACAod,EAAAsjF,cAAArsG,QAAA,SAAAzB,GACA,OAAAA,EAAA2rG,aAAAv+F,EAAAk9F,WAKA,2CAAA7oG,QAAA,SAAAi/D,GACAnjE,KAAAqvG,mBAAAntE,iBAAAihC,EAAAnjE,KAAAY,QAAAqH,KAAAjI,QACKitB,GAGLA,EAAA9sB,GAAA,sBAAA0P,GAEA,IAAA+tC,EAAkB/jB,EAAAhwB,EAAQwwB,cAAA,SAAApN,EAAA6jF,KAAA,MAE1BlzD,IAIA3wB,EAAA4a,QAAAgvC,GAAAj5B,EAAAxgB,YAEAnQ,EAAA4a,UAMA5a,EAAA4a,QAAA2T,MAAAr7C,GAAA,YAAA8sB,EAAA2jF,aAKA3jF,EAAA4a,QAAA2T,MAAAr7C,GAAA,2BAAA8sB,EAAA4jF,0BAEA5jF,EAAA4a,QAAA2xB,aAAAvsC,EAAA4a,QAAA2xB,gBACAvsC,EAAA4a,QAAA2xB,cAAAr5D,GAAA,SAAA8sB,EAAAujF,4BAEAvjF,EAAA4a,QAAA2xB,cAAAr5D,GAAA,WAAA8sB,EAAAujF,4BAEAvjF,EAAA4a,QAAA2xB,cAAAr5D,GAAA,cAAA8sB,EAAAujF,6BAGAvjF,EAAA4a,QAAA1nC,GAAA,cAAA8sB,EAAA0jF,0BAGA1jF,EAAA9sB,GAAA,uBAAA0P,GAGA,IAFA,IAAA3C,EAAA21E,GAAA51D,EAAA/f,UAEApM,EAAA,EAAqBA,EAAAmsB,EAAAsjF,cAAAxvG,OAAgCD,IAAA,CACrD,IAAAiwG,EAAA9jF,EAAAsjF,cAAAzvG,GACA6wC,EAAAo/D,EAAArtB,gBAAAqtB,EAAArtB,eAAA/xC,KAEAA,KAAA5wC,SACA4wC,IAAA5wC,OAAA,GAAAoP,QAAAjD,MAOA+f,EAAA9sB,GAAA,uBAAA0P,GACA7P,KAAAuwG,cAAArsG,QAAA,SAAA4qG,GACAA,EAAAR,aACAQ,EAAAR,YAAAnpB,cAGAnlF,KAAAuwG,cAAAxvG,OAAA,EAEAf,KAAA6nC,UAIA7nC,KAAA6nC,QAAA2xB,aAAAx5D,KAAA6nC,QAAA2xB,gBACAx5D,KAAA6nC,QAAA2xB,cAAAj5D,IAAA,SAAAP,KAAAwwG,4BACAxwG,KAAA6nC,QAAA2xB,cAAAj5D,IAAA,WAAAP,KAAAwwG,4BACAxwG,KAAA6nC,QAAA2xB,cAAAj5D,IAAA,cAAAP,KAAAwwG,6BAOAxwG,KAAA6nC,QAAAI,KACAjoC,KAAA6nC,QAAAtnC,IAAA,cAAAP,KAAA2wG,sBAGA3wG,KAAA6nC,QAAA2T,OAAAx7C,KAAA6nC,QAAA2T,MAAAvT,MACAjoC,KAAA6nC,QAAA2T,MAAAj7C,IAAA,YAAAP,KAAA4wG,aACA5wG,KAAA6nC,QAAA2T,MAAAj7C,IAAA,2BAAAP,KAAA6wG,8BAIA5jF,EAgFA,OAtUEgsD,GAAQk3B,EAAA1C,GAiQRz0B,GAAWm3B,EAAA,EACbtqG,IAAA,oBACAwB,MAAA,SAAA0M,EAAA3R,GACA,IAAA81B,OAAA,EAEA,GAAAl4B,KAAAkN,WAAArJ,IAIA,MAHAq0B,EAAA,IAAA9iB,MAAA,qFACAqH,KAAA,oBACAyb,EAAA1f,KAAA,GACA0f,GAGA91B,EAAApC,KAAAqvG,mBAAAniG,UAAA8a,MAAAhoB,KAAAqvG,mBAAAniG,aACAlN,KAAAqvG,mBAAAniG,SAAA9K,KAWG,CACHyD,IAAA,kBACAwB,MAAA,SAAAjH,GACA,IAAAqC,OAAA,EACAuuG,EApmCA,SAAA5wG,GACA,IAAA64B,EAAA,CACA74B,KAAA,GACA6wG,WAAA,IAEAA,EAAA7wG,EAAAuZ,OAAAmB,MAAA,KAYA,OAVAme,EAAA74B,KAAA6wG,EAAAzkG,QAAAmN,OACAs3F,EAAA/sG,QAAA,SAAAgtG,GACA,IAAArI,EAAAqI,EAAAv3F,OAAAmB,MAAA,KAEA,GAAA+tF,EAAA9nG,OAAA,GACA,IAAA0b,EAAAosF,EAAA,GAAA/gG,QAAA,SAAA6R,OACAtS,EAAAwhG,EAAA,GAAA/gG,QAAA,SAAA6R,OACAsf,EAAAg4E,WAAAx0F,GAAApV,KAGA4xB,EAmlCAk4E,CAAA/wG,GAGA,4BAAAmI,KAAAyoG,EAAA5wG,MAAA,CACA,IAAAod,EAAA,GAEAwzF,EAAAC,YAAAD,EAAAC,WAAAzzF,SACAA,EAAAwzF,EAAAC,WAAAzzF,OAAA1C,MAAA,KAEA0C,GADAA,EAAA0tF,GAAA1tF,IACA4B,OAAA,SAAA5N,GACA,OAAAo7F,GAAAp7F,IAAAq7F,GAAAr7F,MAIA,IAAAgM,EAAAzc,SACAyc,EAAA,6BAGA/a,EAAA,IAAA+qG,GAAAxtG,KAAAwd,GAEA,IAAAxd,KAAAuwG,cAAAxvG,SAMAf,KAAAuwG,cAAA,GAAAZ,2BACAltG,EAAAktG,2BAGA3vG,KAAAuwG,cAAA,GAAAtC,gBAAA,QAIAxrG,EAAAzC,KAAAqvG,mBAAAH,gBAAA9uG,GAIA,OADAJ,KAAAuwG,cAAApvG,KAAAsB,GACAA,MAGA0tG,EAvUmB,CAwUlBt5B,GAAA/xC,aAMDssE,GAAA,EAOAv6B,GAAAw6B,aAAA,GASA,IAAIC,GAAI,SAAAC,EAAAC,GACR,IAAA9D,EAAA72B,GAAAw6B,aAAAE,GAEA,IAAA7D,EAMA,UAAAt4F,MAAA,qCALAs4F,EAAA9sG,QAAA,CACAR,KAAA,aACAoxG,WAcIC,GAA0B,WAC9B,QAAWh6E,EAAA5tB,EAAQwmG,eAAkB54E,EAAA5tB,EAAQwmG,YAAAqB,iBAAgCj6E,EAAA5tB,EAAQwmG,YAAAqB,gBAAA,6CAWrFrB,GAAA,WAMA,GALArwG,KAAAqwG,YAAA,CACAn4F,KAAUo5F,GACVK,2BAAgCF,IAG1BA,KACN,WAAevB,GAGf,UAAA96F,MAAA,2DAGAi7F,GAAAn4F,KAAmBo5F,GACnBjB,GAAAsB,2BAAyCF,GAQzC,IAAAG,GAAA,CASAhsB,gBAAA,SAAA3sD,GACA,IACAhiB,OAAA,EAEA,OAAAgiB,aAA0Bi3E,IAC1Bj5F,EAAYwgB,EAAA5tB,EAAQ26E,IAAAoB,gBAAA3sD,EAAAo2E,oBACpBp2E,EAAA63E,KAAA75F,EACAA,GAKAgiB,aAA4Bi3E,IAQ5Bj5F,EAnBA,yBAmBAm6F,GACAA,KAEAv6B,GAAAw6B,aAAAp6F,GAAAgiB,EACAhiB,IAXAA,EAAYwgB,EAAA5tB,EAAQ26E,IAAAoB,gBAAA3sD,GACpBA,EAAA63E,KAAA75F,EACAA,KAYA4/D,GAAAw5B,eACAx5B,GAAA2N,IAAAotB,GACA,IAAAC,GAAAh7B,GAAA/xC,YACAgtE,GAAAj7B,GAAArvC,aAcAuqE,GAAA,SAAAC,EAAAC,GAOA,IANA,IAAAvqD,EAAAoqD,GAAAE,EAAA,CAEA9kG,SAAA+kG,EAAA/kG,SACAgS,oBAAA+yF,EAAA/yF,sBAGApe,EAAA,EAAiBA,EAAAmxG,EAAA51F,UAAAtb,OAAgCD,IAAA,CACjD,IAAAoxG,EAAA/3B,GAAAzyB,EAAAuqD,EAAA51F,UAAAvb,IAEAoxG,IACAxqD,EAAAwqD,GAkBA,OAbAp4B,GAAAm4B,EAAA,SAAAz3E,EAAAp6B,EAAA+xG,EAAAhyF,GACA,GAAAqa,EAAAne,WAAAme,EAAAne,UAAAtb,OAAA,CACA,IAAAgU,EAAAylB,EAAAne,UAAA,GAAAtH,IAEAq9F,EAAAj4B,GAAAzyB,EAAAltB,EAAAne,UAAA,IAEA+1F,KACA1qD,EAAA0qD,GAEAtyF,YAAA1f,GAAA+xG,GAAAhyF,GAAA9D,UAAA,GAAAqrC,EAAArrC,UAAAtH,OAIA2yC,GAGI2qD,GAAkB,SAAAh8D,GAKtB,SAAAi8D,EAAAC,EAAAx3B,EAAA1iE,EAAAm6F,GACIz5B,GAAc/4E,KAAAsyG,GAElB,IAAArlF,EAAgBisD,GAAyBl5E,MAAAsyG,EAAAjsG,WAAAV,OAAAS,eAAAksG,IAAApxG,KAAAlB,OAKzC,GAHAitB,EAAA+tD,KAAAD,EACA9tD,EAAA5U,mBAEAk6F,EACA,UAAAn9F,MAAA,oDAcA,OAVA6X,EAAA9sB,GAAA,iCACA8sB,EAAAwlF,gBAIAxlF,EAAA9sB,GAAA,gCACA8sB,EAAAylF,kBAIA,kBAAAH,GACAtlF,EAAA6tD,OAAAy3B,EACAtlF,EAAA4Z,MAAA,eACaqyC,GAAyBjsD,KAGtCA,EAAA0lF,sBAAAH,EACAvlF,EAAA4Z,MAAA,gBACA5Z,EAAA0uD,SAAA,EAEA1uD,EAAA1K,MAAAgwF,GAGI96E,EAAA5tB,EAAQ+N,WAAA,WACZqV,EAAArsB,QAAA,mBACK,GACLqsB,GAuXA,OAlaEgsD,GAAQq5B,EAmaTT,IArXC74B,GAAWs5B,EAAA,EACbzsG,IAAA,UACAwB,MAAA,WACArH,KAAAw7E,cACM/jD,EAAA5tB,EAAQ0M,aAAAvW,KAAAu7E,sBAEX,CACH11E,IAAA,cACAwB,MAAA,WACA,GAAArH,KAAAqvE,QAAA,CACA,IAAAoM,EAAAz7E,KAAAqvE,QACArvE,KAAAqvE,QAAA,KACAoM,EAAA/jE,mBAAA,KACA+jE,EAAAljE,WAGG,CACH1S,IAAA,QACAwB,MAAA,SAAAkV,GAEA,IAAAA,EACA,OAAAvc,KAAAs7E,OAIA,oBAAAt7E,KAAA6mC,MACA,UAAAzxB,MAAA,qCAAApV,KAAA6mC,OAGA,IAAAw0C,EAAAr7E,KAAA6mC,MAEA,qBAAAtqB,EAAA,CACA,IAAAvc,KAAA4f,OAAAvD,UAAAE,GACA,UAAAnH,MAAA,yBAAAmH,GAGAA,EAAAvc,KAAA4f,OAAAvD,UAAAE,GAGA,IAAAm/D,GAAA17E,KAAAs7E,QAAA/+D,EAAAxH,MAAA/U,KAAAs7E,OAAAvmE,IACA/U,KAAA6mC,MAAA,gBAEA60C,IAKA17E,KAAAs7E,QACAt7E,KAAAY,QAAA,iBAGAZ,KAAAs7E,OAAA/+D,EACAvc,KAAA0yG,gBAEA,gBAAAr3B,GACAr7E,KAAAY,QAAA,kBAGG,CACHiF,IAAA,QACAwB,MAAA,WACArH,KAAAw7E,cACM/jD,EAAA5tB,EAAQ0M,aAAAvW,KAAAu7E,oBAEd,iBAAAv7E,KAAA6mC,QAGA7mC,KAAA27E,SAAA,KAGG,CACH91E,IAAA,OACAwB,MAAA,SAAAu0E,GACA,IAAArtD,EAAAvuB,KAEMy3B,EAAA5tB,EAAQ0M,aAAAvW,KAAAu7E,oBACd,IAAAh5D,EAAAviB,KAAAuiB,QAEA,GAAAq5D,EAAA,CACA,IAAAnnD,EAAAlS,IAAA1E,eAAA,UACA7d,KAAAu7E,mBAAkC9jD,EAAA5tB,EAAQ+N,WAAA,WAC1C,OAAA2W,EAAA8uB,QACS5oB,QAMTz0B,KAAA27E,QAKA37E,KAAAY,QAAA,kBAJAZ,KAAA+T,UAaG,CACHlO,IAAA,iBACAwB,MAAA,WACA,IAAAuY,EAAmBja,OAAAitG,EAAA,EAAAjtG,CAAK3F,KAAA6yG,WAAA,CACxBtnF,YAAAvrB,KAAA86E,OACAn5D,aAAA3hB,KAAA8yG,gBAEAlzF,EAAA7K,IAAA/U,KAAA86E,OAIA,QAAAh6E,EAAA,EAAqBA,EAAA8e,EAAAvD,UAAAtb,OAA6BD,IAAA,CAClD,IAAAiyG,EAAA,mBAAAjyG,EACA8e,EAAAvD,UAAAvb,GAAAiU,IAAAg+F,EAEAnzF,EAAAvD,UAAA02F,GAAAnzF,EAAAvD,UAAAvb,GAgBA,OAXAg5E,GAAAl6D,EAAA,SAAA4a,EAAAu/C,EAAAC,EAAAC,GACA,GAAAz/C,EAAAne,WAAAme,EAAAne,UAAAtb,OAAA,CACA,IAAAiyG,EAAA,mBAAAj5B,EAAA,IAAAC,EAAA,IAAAC,EAEAz/C,EAAAne,UAAA,GAAAtH,IAAAi+F,EAEApzF,EAAAvD,UAAA22F,GAAAx4E,EAAAne,UAAA,MAGAm+D,GAAA56D,GACA66D,GAAA76D,GACAA,IAEG,CACH/Z,IAAA,QACAwB,MAAA,WACA,IAAA6lC,EAAAltC,KAEAA,KAAA27E,SAAA,EAEA37E,KAAAqvE,QAAArvE,KAAAg7E,KAAAtlE,IAAA,CACAX,IAAA/U,KAAA86E,OACAziE,gBAAArY,KAAAqY,iBACO,SAAA6f,EAAA+iD,GAEP,GAAA/tC,EAAAmiC,QAAA,CAOA,GAFAniC,EAAAmiC,QAAA,KAEAn3C,EAaA,OAZAgV,EAAAhV,MAAA,CACArhB,OAAAokE,EAAApkE,OACA2Y,QAAA,uCAAA0d,EAAA4tC,OACAnlE,aAAAslE,EAAAtlE,aAEA6C,KAAA,GAGA,iBAAA00B,EAAArG,QACAqG,EAAAyuC,SAAA,GAGAzuC,EAAAtsC,QAAA,SAGAssC,EAAA2lE,WAAA53B,EAAAtlE,aAEAslE,EAAAgE,iBAAAhE,EAAAgE,gBAAAg0B,KACA/lE,EAAAgmE,cAAAprF,KAAA1R,MAAA6kE,EAAAgE,gBAAAg0B,MAEA/lE,EAAAgmE,cAAAprF,KAAAtE,MAGA0pB,EAAAimE,uBAAAjmE,EAAAkmE,yBAAAnrG,KAAAilC,SAWG,CACHrnC,IAAA,yBACAwB,MAAA,SAAAyuB,GACA,IAAAuX,EAAArtC,KAEAqzG,EAAsB1tG,OAAAitG,EAAA,EAAAjtG,CAAc3F,KAAA6yG,YAGpC,cAAAQ,GACArzG,KAAA8yG,cAAA9yG,KAAAkzG,cAAAprF,KAAAtE,MACAsS,KAGA,WAAAu9E,EAAAt8F,QACA/W,KAAA8yG,cAAAO,EAAAhsG,MAAAygB,KAAAtE,MACAsS,UAGA91B,KAAAqvE,QAAArvE,KAAAg7E,KAAAtlE,IAAA,CACAX,IAAa8jE,GAAU74E,KAAA86E,OAAAu4B,EAAAhsG,OACvB0P,OAAAs8F,EAAAt8F,OACAsB,gBAAArY,KAAAqY,iBACO,SAAA6f,EAAA+iD,GAEP,GAAA5tC,EAAAgiC,QAAA,CAIA,GAAAn3C,EAIA,OADAmV,EAAAylE,cAAAzlE,EAAA6lE,cAAAprF,KAAAtE,MACAsS,IAGA,IAAAw9E,OAAA,EAQAA,EANA,SAAAD,EAAAt8F,OACAkkE,EAAAgE,iBAAAhE,EAAAgE,gBAAAg0B,KAKAnrF,KAAA1R,MAAA6kE,EAAAgE,gBAAAg0B,MAFA5lE,EAAA6lE,cAKAprF,KAAA1R,MAAA6kE,EAAAtlE,cAGA03B,EAAAylE,cAAAQ,EAAAxrF,KAAAtE,MACAsS,UAQG,CACHjwB,IAAA,2BACAwB,MAAA,WACA,IAAAo5C,EAAAzgD,KAEAA,KAAA4f,OAAA5f,KAAAuzG,iBACAvzG,KAAA6mC,MAAA,cACA7mC,KAAAY,QAAA,kBAEAZ,KAAAs7E,QAGAt7E,KAAAuiB,MAAAviB,KAAA4f,OAAAvD,UAAA,IAKMob,EAAA5tB,EAAQ+N,WAAA,WACd6oC,EAAA7/C,QAAA,mBACO,GAOPZ,KAAA4f,OAAAV,qBACQuY,EAAA5tB,EAAQ+N,WAAA,WAChB6oC,EAAA7/C,QAAA,wBACSZ,KAAA4f,OAAAV,uBAQN,CACHrZ,IAAA,cACAwB,MAAA,WACA,IAAAu5C,EAAA5gD,KAEAA,KAAAqvE,QAAArvE,KAAAg7E,KAAAtlE,IAAA,CACAX,IAAA/U,KAAA86E,OACAziE,gBAAArY,KAAAqY,iBACO,SAAA6f,EAAA+iD,GAEP,GAAAr6B,EAAAyuB,QAAA,CAOA,GAFAzuB,EAAAyuB,QAAA,KAEAn3C,EAaA,OAZA0oB,EAAA1oB,MAAA,CACArhB,OAAAokE,EAAApkE,OACA2Y,QAAA,uCAAAoxB,EAAAk6B,OACAnlE,aAAAslE,EAAAtlE,aAEA6C,KAAA,GAGA,iBAAAooC,EAAA/Z,QACA+Z,EAAA+6B,SAAA,GAGA/6B,EAAAhgD,QAAA,SAGAggD,EAAAiyD,WAAA53B,EAAAtlE,aAEA,IAAAs8F,EAAArxD,EAAA2yD,iBAEA3yD,EAAAhhC,OAAAmyF,GAAAnxD,EAAAhhC,OAAAqyF,GACQx6E,EAAA5tB,EAAQ+N,WAAA,WAChBgpC,EAAAhgD,QAAA,wBACSggD,EAAAhhC,OAAAV,0BASN,CACHrZ,IAAA,gBACAwB,MAAA,WACA,IAAAk6C,EAAAvhD,KAEAgyG,OAAA,EACAC,OAAA,EAEAjyG,KAAA2yG,uBACAX,EAAAhyG,KAAA2yG,sBAAA/yF,OACAqyF,EAAAjyG,KAAA2yG,sBAAAY,mBAEAvB,EAAAhyG,KAAA4f,OACAqyF,EAAAjyG,KAAAuzG,kBAGA,IAAAC,EAAAzB,GAAAC,EAAAC,GAEAuB,GACAxzG,KAAA2yG,sBACA3yG,KAAA2yG,sBAAA/yF,OAAA4zF,EAEAxzG,KAAA4f,OAAA4zF,EAGAxzG,KAAAs7E,OAAAk4B,EAAAn3F,UAAArc,KAAAs7E,OAAAvmE,MAEA/U,KAAAY,QAAA,qBAGAZ,KAAAuiB,QAAA9E,UACAzd,KAAAu7E,mBAAkC9jD,EAAA5tB,EAAQ+N,WAAA,WAC1C2pC,EAAA3gD,QAAA,uBACS85E,GAAA16E,KAAAuiB,UAAAixF,KAGTxzG,KAAAY,QAAA,sBAGA0xG,EAnasB,GAsatBmB,GAAA,SAAA93F,GACA,OAAAk7D,GAAAz/C,IAAAY,MACA6+C,GAAAz/C,IAAAY,MAAA/vB,KAAA4uE,GAAA,OAAAl7D,EAAA,MAGA,cAGA,SAAS+3F,MAqBT,IAAAC,GAAA,WACA,SAAAA,EAAAjG,EAAApuF,EAAAlf,EAAAwzG,GACI76B,GAAc/4E,KAAA2zG,GAClB3zG,KAAA6zG,WAAA,GACA7zG,KAAA8zG,iBAAA,KACA9zG,KAAA2tG,iBAAA,EACA3tG,KAAA0tG,cACA1tG,KAAA+zG,kBAAA,EACA/zG,KAAAk5F,MAAA94F,EACAJ,KAAAg0G,UAAA10F,EACAtf,KAAAi0G,QAAAR,GAAA,iBAAArzG,EAAA,KAAAkf,EAAA,KAEA,WAAAouF,EAAA/1F,WACA+1F,EAAAxrE,iBAAA,aAAAliC,KAAAk0G,oBAAAjsG,KAAAjI,KAAAsf,EAAAs0F,IAEA5zG,KAAAk0G,oBAAA50F,EAAAs0F,GAuMA,OAnME56B,GAAW26B,EAAA,EACb9tG,IAAA,sBACAwB,MAAA,SAAAiY,EAAAs0F,GACA,IAAA3mF,EAAAjtB,KAEAA,KAAAm0G,cAAAn0G,KAAA0tG,YAAAwB,gBAAA5vF,GACAtf,KAAAi0G,QAAA,wBAEAL,IACAA,EAAAhzG,QAAA,qBAEAZ,KAAA0tG,YAAA6C,cAAAxvG,OAAA,GAKA6yG,EAAAzzG,GAAA,+BACA8sB,EAAAmnF,WAMAp0G,KAAAo0G,WAEG,CACHvuG,IAAA,SACAwB,MAAA,WACA,IAAAknB,EAAAvuB,KAEAA,KAAAq0G,UAAA,EAGAr0G,KAAAs0G,qBAAA,WACA,IAAAC,EAAAhmF,EAAAulF,iBACAvlF,EAAAulF,iBAAA,KAEAvlF,EAAA0lF,QAAA,aAAAzxB,GAAAj0D,EAAA+hB,YAAA,KAEAikE,GACAA,IAGAhmF,EAAAimF,gBAGAx0G,KAAAm0G,cAAAjyE,iBAAA,YAAAliC,KAAAs0G,sBACAt0G,KAAAw0G,iBASG,CACH3uG,IAAA,QACAwB,MAAA,SAAAyuB,GACA,IAAAoX,EAAAltC,KAEAA,KAAA+zG,kBACA/zG,KAAAy0G,eAAA,WACAvnE,EAAAinE,cAAA57F,SACSud,KAWN,CACHjwB,IAAA,eACAwB,MAAA,SAAAyM,EAAAgiB,GACA,IAAAuX,EAAArtC,KAEAA,KAAA+zG,kBAAA,EACA/zG,KAAAy0G,eAAA,WACApnE,EAAA8mE,cAAAnE,aAAAl8F,IACOgiB,KAQJ,CACHjwB,IAAA,WACAwB,MAAA,WACA,OAAArH,KAAAm0G,cAIAn0G,KAAAm0G,cAAA7jE,SAHAumC,GAAAzmC,qBAeG,CACHvqC,IAAA,SACAwB,MAAA,SAAA0M,EAAA3R,GACA,IAAAq+C,EAAAzgD,KAEA81B,EAAA70B,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,GAAqFyyG,GAErF1zG,KAAA+zG,kBACA/zG,KAAAy0G,eAAA,WACAh0D,EAAAwzD,QAAA,WAAAlgG,EAAA,OAAA3R,EAAA,KAEAq+C,EAAA0zD,cAAAj4E,OAAAnoB,EAAA3R,IACS0zB,KASN,CACHjwB,IAAA,WACAwB,MAAA,WACA,OAAArH,KAAAm0G,eAAAn0G,KAAAm0G,cAAAtF,UAAA7uG,KAAA8zG,mBAQG,CACHjuG,IAAA,kBACAwB,MAAA,SAAAuI,GACA,IAAAgxC,EAAA5gD,KASA,MAPA,qBAAA4P,IACA5P,KAAAy0G,eAAA,WACA7zD,EAAAuzD,cAAA9wB,gBAAAzzE,IAEA5P,KAAA2tG,iBAAA/9F,GAGA5P,KAAA2tG,mBAMG,CACH9nG,IAAA,iBACAwB,MAAA,SAAA2N,EAAA8gB,GACA91B,KAAA6zG,WAAA1yG,KAAA,CAAA6T,EAAA/M,KAAAjI,MAAA81B,IACA91B,KAAAw0G,iBAMG,CACH3uG,IAAA,eACAwB,MAAA,WACA,IAAAxG,OAAA,GAEAb,KAAA6uG,YAAA7uG,KAAA6zG,WAAA9yG,QAAAf,KAAAq0G,WACAxzG,EAAAb,KAAA6zG,WAAArnG,QACAxM,KAAA8zG,iBAAAjzG,EAAA,GACAA,EAAA,QAOG,CACHgF,IAAA,UACAwB,MAAA,WACArH,KAAAm0G,cAAA9zE,oBAAA,YAAArgC,KAAAs0G,sBAEAt0G,KAAAm0G,eAAA,SAAAn0G,KAAA0tG,YAAA/1F,YACA3X,KAAAm0G,cAAA57F,YAIAo7F,EAtNA,GAyNAe,GAAA,CACAC,mBAAA,GACAC,uBAAA,GACAC,wBAAA,EAEAC,kBAAA,QAGAC,mBAAA,IAEAC,sBAAA,EACAC,0BAAA,GACAC,2BAAA,GAEAC,GACA,EADAA,IAEA,IAFAA,IAGA,IA2BAC,GAAA,SAAAhwF,GACA,IAAApO,EAAA,GAMA,OAJAoO,EAAA7D,YACAvK,EAAAq+F,MArBA,SAAA9zF,GACA,IACA+zF,EAKA,OAFAA,EAAA/zF,EAAA3R,OAAA2R,EAAAxgB,OAAA,EAEA,SADAwgB,EAAA3R,OACA,IAAA0lG,EAcAC,CAAAnwF,EAAA7D,YAGAvK,GASAw+F,GAAA,SAAAC,GACAA,EAAAvxG,QAAA,SAAAk3E,GACAA,EAAA7iE,WAiDAm9F,GAAA,SAAAx9E,EAAAm3C,GACA,OAAAA,EAAA6P,SACA,CACAroE,OAAAw4D,EAAAx4D,OACA2Y,QAAA,iCAAA6/C,EAAAt6D,IACAyD,KAAA28F,GACAz/F,IAAA25D,GAIAA,EAAAz4D,QACA,CACAC,OAAAw4D,EAAAx4D,OACA2Y,QAAA,+BAAA6/C,EAAAt6D,IACAyD,KAAA28F,GACAz/F,IAAA25D,GAIAn3C,EACA,CACArhB,OAAAw4D,EAAAx4D,OACA2Y,QAAA,+BAAA6/C,EAAAt6D,IACAyD,KAAA28F,GACAz/F,IAAA25D,GAIA,MAkLAsmC,GAAA,SAAAF,EAAAG,EAAAC,GACA,IAAA5yF,EAAA,EACA6yF,GAAA,EACA,gBAAA59E,EAAA9S,GACA,IAAA0wF,EAIA,OAAA59E,GACA49E,GAAA,EAEAN,GAAAC,GAYAI,EAAA39E,EAAA9S,KAGAnC,GAAA,KAEAwyF,EAAA10G,QAEAqkB,EAAA2wF,iBAAAjuF,KAAAtE,MAEA4B,EAAA4wF,eAjEA,SAAAJ,EAAAxwF,EAAAywF,GAUAD,EAAA1zE,iBAAA,UATA,SAAA+zE,EAAApmG,GACA,GAAAA,EAAApO,KAAAka,SAAAyJ,EAAA8wF,UAAA,CACAN,EAAAv1E,oBAAA,UAAA41E,GACA,IAAA5gF,EAAAxlB,EAAApO,KAAA4zB,UAEA,OADAjQ,EAAAtR,MAAA,IAAApI,WAAA2pB,EAAAvhB,MAAAuhB,EAAA3wB,WAAA2wB,EAAA9yB,YACAszG,EAAA,KAAAzwF,MAOAwwF,EAAArwB,YAAAhG,GAAA,CACA5jE,OAAAyJ,EAAA8wF,UACAlhF,UAAA5P,EAAA4wF,eACAnwG,IAAAuf,EAAAvf,IAAAiO,MACA+b,GAAAzK,EAAAvf,IAAAgqB,KACG,CAAAzK,EAAA4wF,eAAAvzG,OAAA2iB,EAAAvf,IAAAiO,MAAArR,SAgDH0zG,CAAAP,EAAAxwF,EAAAywF,GAIAA,EAAA,KAAAzwF,SATA,IAyBAgxF,GAAA,SAAAhxF,EAAAixF,GACA,gBAAAxmG,GAOA,OANAuV,EAAAkxF,MAAAz/B,GAAArvC,aAAApiB,EAAAkxF,MA7RA,SAAAC,GACA,IAAAlnC,EAAAknC,EAAAlxG,OAEAixG,EAAA,CACAh5F,UAAAzZ,IACAw6E,cAAA,EACAU,cAJAj3D,KAAAtE,MAAA6rD,EAAA2P,aAIA,GAOA,OALAs3B,EAAAj4B,cAAAk4B,EAAAC,OAIAF,EAAAh5F,UAAA3Z,KAAAigB,MAAA0yF,EAAAj4B,cAAAi4B,EAAAv3B,cAAA,OACAu3B,EAgRAG,CAAA5mG,KAEAuV,EAAAkxF,MAAAI,sBAAAtxF,EAAAkxF,MAAAj4B,gBACAj5D,EAAAkxF,MAAAI,qBAAA5uF,KAAAtE,OAGA6yF,EAAAxmG,EAAAuV,KAqDAuxF,GAAA,SAAAv7B,EAAAw7B,EAAAC,EAAAC,EAAA1xF,EAAAixF,EAAAR,GACA,IAAAJ,EAAA,GACAsB,EAAApB,GAAAF,EAAAoB,EAAAhB,GAEA,GAAAzwF,EAAAvf,IAAA,CACA,IAKAmxG,EAAA57B,EALAvE,GAAArvC,aAAAovE,EAAA,CACA7hG,IAAAqQ,EAAAvf,IAAA+X,YACAhI,aAAA,gBA9RA,SAAAwP,EAAA2xF,GACA,gBAAA7+E,EAAAm3C,GACA,IAAA95D,EAAA85D,EAAA95D,SACA0hG,EAAAvB,GAAAx9E,EAAAm3C,GAEA,GAAA4nC,EACA,OAAAF,EAAAE,EAAA7xF,GAGA,QAAA7P,EAAAhT,WACA,OAAAw0G,EAAA,CACAlgG,OAAAw4D,EAAAx4D,OACA2Y,QAAA,2BAAA6/C,EAAAt6D,IACAyD,KAAA28F,GACAz/F,IAAA25D,GACOjqD,GAGP,IAAA9gB,EAAA,IAAAG,SAAA8Q,GAEA,OADA6P,EAAAvf,IAAAiO,MAAA,IAAAsa,YAAA,CAAA9pB,EAAAM,UAAA,GAAAN,EAAAM,UAAA,GAAAN,EAAAM,UAAA,GAAAN,EAAAM,UAAA,MACAmyG,EAAA,KAAA3xF,IA4QA8xF,CAAA9xF,EAAA2xF,IAEAtB,EAAAt0G,KAAA61G,GAIA,GAAA5xF,EAAA9hB,MAAA8hB,EAAA9hB,IAAAwQ,MAAA,CACA,IAMAqjG,EAAA/7B,EANAvE,GAAArvC,aAAAovE,EAAA,CACA7hG,IAAAqQ,EAAA9hB,IAAAsa,YACAhI,aAAA,cACAoB,QAAAo+F,GAAAhwF,EAAA9hB,OAzQ6B,SAAA8hB,EAAA0xF,EAAAC,GAC7B,gBAAA7+E,EAAAm3C,GACA,IAAA95D,EAAA85D,EAAA95D,SACA0hG,EAAAvB,GAAAx9E,EAAAm3C,GAEA,OAAA4nC,EACAF,EAAAE,EAAA7xF,GAIA,IAAA7P,EAAAhT,WACAw0G,EAAA,CACAlgG,OAAAw4D,EAAAx4D,OACA2Y,QAAA,qCAAA6/C,EAAAt6D,IACAyD,KAAA28F,GACAz/F,IAAA25D,GACOjqD,IAGPA,EAAA9hB,IAAAwQ,MAAA,IAAApI,WAAA2jE,EAAA95D,UAEAuhG,EAAAlN,iBACAkN,EAAA72G,OAGAmlB,EAAA9hB,IAAAwmG,WAA6BsN,EAAAvtG,EAAQ/H,UAAAsjB,EAAA9hB,IAAAwQ,OACrCsR,EAAA9hB,IAAAW,cAAgCmzG,EAAAvtG,EAAQ5F,cAAAmhB,EAAA9hB,IAAAwQ,OACxCijG,EAAA,KAAA3xF,KAgPqCiyF,CAAyBjyF,EAAA0xF,EAAAC,IAE9DtB,EAAAt0G,KAAAg2G,GAGA,IAMAG,EAAAl8B,EANAvE,GAAArvC,aAAAovE,EAAA,CACA7hG,IAAAqQ,EAAAxH,YACAhI,aAAA,cACAoB,QAAAo+F,GAAAhwF,KAzOA,SAAAA,EAAA0xF,EAAAC,GACA,gBAAA7+E,EAAAm3C,GACA,IAAA95D,EAAA85D,EAAA95D,SACA0hG,EAAAvB,GAAAx9E,EAAAm3C,GACAk8B,OAAA,EAEA,OAAA0L,EACAF,EAAAE,EAAA7xF,GAIA,IAAA7P,EAAAhT,WACAw0G,EAAA,CACAlgG,OAAAw4D,EAAAx4D,OACA2Y,QAAA,qCAAA6/C,EAAAt6D,IACAyD,KAAA28F,GACAz/F,IAAA25D,GACOjqD,IAGPA,EAAAkxF,MA/KA,SAAAjnC,GACA,OACA/xD,UAAA+xD,EAAA/xD,UACA+gE,cAAAhP,EAAAgP,eAAA,EACAU,cAAA1P,EAAA0P,eAAA,GA2KAw4B,CAAAloC,GAEAjqD,EAAAvf,IACAuf,EAAA4wF,eAAA,IAAAtqG,WAAA2jE,EAAA95D,UAEA6P,EAAAtR,MAAA,IAAApI,WAAA2jE,EAAA95D,UAKA6P,EAAA9hB,KAAA8hB,EAAA9hB,IAAAwQ,QAEAgjG,EAAAlN,iBACAkN,EAAA72G,QAGAsrG,EAAAuL,EAAA1gG,MAAAgP,EAAAtR,MAAAsR,EAAA9hB,IAAAW,cAAAmhB,EAAA9hB,IAAAwmG,cAEAyB,EAAAz7F,WACAsV,EAAArV,eAAAw7F,EAAAx7F,eACAqV,EAAAoyF,aAAAjM,EAAAz7F,WAIAinG,EAAA,KAAA3xF,KA+LAqyF,CAAAryF,EAAA0xF,EAAAC,IAIA,OAFAO,EAAAp1E,iBAAA,WAAAk0E,GAAAhxF,EAAAixF,IACAZ,EAAAt0G,KAAAm2G,GACA,WACA,OAAA9B,GAAAC,KAgBIiC,GAAoB,SAAAvvF,EAAAioF,GACxB,IAAA1tG,EAEA,OAAAylB,IAIAzlB,EAAW+0B,EAAA5tB,EAAQ0vB,iBAAApR,IAMnBzlB,EAAA0tG,GATA,IAoBAuH,GAAA,SAAA7+F,EAAA8+F,GACA,IAAAC,EAAA/+F,EAAApY,QACAoY,EAAA+mD,KAAA,SAAAriC,EAAAszB,GACA,IAAAgnD,EAAAF,EAAAp6E,EAAAszB,GAEA,WAAAgnD,EACAD,EAAAp3G,QAAA+8B,GAAAq6E,EAAAp3G,QAAAqwD,GAGAgnD,KAeIC,GAAwB,SAAAv6E,EAAAszB,GAC5B,IAAAknD,OAAA,EACAC,OAAA,EAaA,OAXAz6E,EAAA9gB,WAAAW,YACA26F,EAAAx6E,EAAA9gB,WAAAW,WAGA26F,KAAmCvgF,EAAA5tB,EAAQwb,OAAAs4D,UAE3C7sB,EAAAp0C,WAAAW,YACA46F,EAAAnnD,EAAAp0C,WAAAW,WAIA26F,GADAC,KAAqCxgF,EAAA5tB,EAAQwb,OAAAs4D,YAiX7Cu6B,GAAA,SAAA37F,EAAAmxF,EAAAyK,GACA,IAAA57F,IAAAmxF,EACA,SAGA,IAGA0K,EAAAD,IAHA57F,EAAAK,SAGA7b,OAIA,OAAAwb,EAAAkB,SAAA,SAAAiwF,EAAA/1F,YAAAygG,GAGAC,GAAA,SAAAptE,GACA,wBAAAA,GAAAlnC,SAAAknC,IA8EIqtE,GAAa,SAAA7K,GAGjB,SAAA8K,EAAA18D,GACIk9B,GAAc/4E,KAAAu4G,GAElB,IAAAtrF,EAAgBisD,GAAyBl5E,MAAAu4G,EAAAlyG,WAAAV,OAAAS,eAAAmyG,IAAAr3G,KAAAlB,OAEzC,IAAA67C,EACA,UAAA52C,UAAA,wCAGA,uBAAA42C,EAAAU,YACA,UAAAt3C,UAAA,mCAGA,IAAA42C,EAAA6xD,YACA,UAAAzoG,UAAA,4BA0EA,OAtEAgoB,EAAA3P,UAAAu+B,EAAAv+B,UACA2P,EAAAurF,WAAA,CACA7+C,KAAA,EACA12C,MAAA,GAEAgK,EAAAwrF,UAAAh0C,IAEAx3C,EAAAyrF,cAEAzrF,EAAA8wD,WAAA,KAEA9wD,EAAA0rF,WAAA98D,EAAA+8D,UACA3rF,EAAA4rF,aAAAh9D,EAAAU,YACAtvB,EAAA6rF,UAAAj9D,EAAAwJ,SACAp4B,EAAA8rF,SAAAl9D,EAAAywB,QACAr/C,EAAAyyB,UAAA7D,EAAA3uC,SACA+f,EAAAs2D,aAAA1nC,EAAA6xD,YACAzgF,EAAA+tD,KAAAn/B,EAAAk/B,IACA9tD,EAAA+rF,YAAAn9D,EAAAo9D,WACAhsF,EAAAisF,oBAAA,EACAjsF,EAAAksF,sBAAAt9D,EAAAu9D,qBACAnsF,EAAAosF,kBAAAx9D,EAAAy9D,iBACArsF,EAAAssF,YAAA19D,EAAA29D,WACAvsF,EAAAm2D,kBAAAvnC,EAAA49D,iBACAxsF,EAAAysF,OAAA,OAEAzsF,EAAA0sF,oBAAA,KACA1sF,EAAAmzB,YAAA,EACAnzB,EAAA2sF,kBAAA,EACA3sF,EAAA4sF,gBAAA,KACA5sF,EAAA+mF,UAAA,KACA/mF,EAAA6sF,eAAA,KACA7sF,EAAA8sF,YAAA,KAEA9sF,EAAA+sF,qBAAA,KACA/sF,EAAAgtF,cAAA,GAEAhtF,EAAAitF,eAAA,IAA+BjxG,EAAA,cAC/BgkB,EAAAktF,WAAAt+D,EAAA+5D,UAIA3oF,EAAAmtF,gBAAAv+D,EAAAw+D,eACAptF,EAAAqtF,WAAA,CACAnC,aAAA,EACA12F,KAAA,GAGAwL,EAAAmtF,gBAAAj6G,GAAA,4BACA,OAAA8sB,EAAArsB,QAAA,oBAGAqsB,EAAAs2D,aAAArhD,iBAAA,wBACA,OAAAjV,EAAAstF,QAAA,IAIAttF,EAAAutF,gBAAA,EACAvtF,EAAAgnF,QAAAR,GAAA,iBAAAxmF,EAAA+rF,YAAA,KACArzG,OAAAC,eAAAqnB,EAAA,SACAmJ,IAAA,WACA,OAAAp2B,KAAA05G,QAEA/tG,IAAA,SAAA8uG,GACAA,IAAAz6G,KAAA05G,SACA15G,KAAAi0G,QAAAj0G,KAAA05G,OAAA,OAAAe,GACAz6G,KAAA05G,OAAAe,MAIAxtF,EAooCA,OA9tCEgsD,GAAQs/B,EAAA9K,GAmGRz0B,GAAWu/B,EAAA,EACb1yG,IAAA,cACAwB,MAAA,WACArH,KAAA06G,sBAAA,EACA16G,KAAA26G,cAAA,EACA36G,KAAA46G,qBAAA,EACA56G,KAAA66G,sBAAA,EACA76G,KAAA86G,qBAAA,EACA96G,KAAA+6G,sBAAA,EACA/6G,KAAAg7G,mBAAA,IAMG,CACHn1G,IAAA,UACAwB,MAAA,WACArH,KAAA6mC,MAAA,WACA7mC,KAAA+zC,QACA/zC,KAAAi7G,SAEAj7G,KAAA85G,gBACA95G,KAAA85G,eAAAz4G,UAGArB,KAAA04G,cACA14G,KAAAk6G,eAAA1nG,UAOG,CACH3M,IAAA,QACAwB,MAAA,WACA,YAAArH,KAAA6mC,OAQA7mC,KAAAi7G,SAKAj7G,KAAA6mC,MAAA,QAGA7mC,KAAA6zC,UACA7zC,KAAAk7G,kBAhBAl7G,KAAA65G,kBACA75G,KAAA65G,gBAAA,QAwBG,CACHh0G,IAAA,SACAwB,MAAA,WACArH,KAAA65G,iBACA75G,KAAA65G,gBAAAsB,gBAIAn7G,KAAA65G,gBAAA,OASG,CACHh0G,IAAA,QACAwB,MAAA,SAAA+zG,GAMA,MALA,qBAAAA,IACAp7G,KAAAogD,OAAAg7D,GAGAp7G,KAAA65G,gBAAA,KACA75G,KAAAogD,SAEG,CACHv6C,IAAA,cACAwB,MAAA,WACArH,KAAAu6G,QAAA,EACAv6G,KAAA+zC,QACA/zC,KAAAY,QAAA,WASG,CACHiF,IAAA,YACAwB,MAAA,WACA,OAAArH,KAAA85G,eAIA95G,KAAA85G,eAAAxpE,WAHAumC,GAAAzmC,qBAgBG,CACHvqC,IAAA,cACAwB,MAAA,SAAA/D,GACA,IAAA+3G,EAAAp6G,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,IAAAA,UAAA,GAEA,IAAAqC,EACA,YAGA,IAAAL,EAAA08E,GAAAr8E,GACAg4G,EAAAt7G,KAAAi6G,cAAAh3G,GAYA,OAVAo4G,IAAAC,GAAAh4G,EAAAwQ,QACA9T,KAAAi6G,cAAAh3G,GAAAq4G,EAAA,CACA19F,YAAAta,EAAAsa,YACA2D,UAAAje,EAAAie,UACAzN,MAAAxQ,EAAAwQ,MACAg2F,WAAAxmG,EAAAwmG,WACA7lG,cAAAX,EAAAW,gBAIAq3G,GAAAh4G,IASG,CACHuC,IAAA,qBACAwB,MAAA,WACA,OAAArH,KAAAu7G,YAGAv7G,KAAA85G,gBAAA95G,KAAAg0G,WAAA,SAAAh0G,KAAA6mC,SAAA7mC,KAAA6zC,WAMG,CACHhuC,IAAA,OACAwB,MAAA,WAKA,GAHArH,KAAAk7G,iBAGAl7G,KAAAu7G,UAAA,CAOA,GAFAv7G,KAAAo6G,gBAAAoB,mBAAAx7G,KAAAu7G,WAEA,SAAAv7G,KAAA6mC,OAAA7mC,KAAAy7G,qBACA,OAAAz7G,KAAA07G,SAKA17G,KAAAy7G,sBAAA,UAAAz7G,KAAA6mC,OAAA,SAAA7mC,KAAA6mC,QAIA7mC,KAAA6mC,MAAA,YAUG,CACHhhC,IAAA,QACAwB,MAAA,WAIA,OAHArH,KAAA6mC,MAAA,QACA7mC,KAAA85G,eAAA,IAAAnG,GAAA3zG,KAAAujF,aAAAvjF,KAAAg0G,UAAAh0G,KAAAg5G,YAAAh5G,KAAA27G,sBACA37G,KAAA47G,kBACA57G,KAAAk7G,mBAQG,CACHr1G,IAAA,WACAwB,MAAA,SAAAw0G,GACA,IAAA7xG,EAAA/I,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,MAEA,GAAA46G,EAAA,CAIA,IAAAC,EAAA97G,KAAAu7G,UACAh1F,EAAAvmB,KAAA65G,gBACA75G,KAAAu7G,UAAAM,EACA77G,KAAA+5G,YAAA/vG,EAIAhK,KAAA24G,eACAkD,EAAAE,SAAA,CACAj+F,cAAA+9F,EAAA/9F,cACA2D,KAAA,IAIA,IAAAu6F,EAAAF,IAAA74G,GAAA,KAOA,GANAjD,KAAAi0G,QAAA,oBAAA+H,EAAA,OAAAH,EAAA54G,GAAA,KAGAjD,KAAAY,QAAA,kBAGA,SAAAZ,KAAA6mC,OAAA7mC,KAAAy7G,qBACA,OAAAz7G,KAAA07G,QAGA,GAAAI,KAAA/mG,MAAA8mG,EAAA9mG,IAAA,CAaA,IAAAknG,EAAAJ,EAAA/9F,cAAAg+F,EAAAh+F,cACA9d,KAAAi0G,QAAA,sBAAAgI,EAAA,KAIA,OAAAj8G,KAAA+9E,aACA/9E,KAAA+9E,YAAAk+B,GAMA11F,IACAA,EAAAw3D,YAAAk+B,EAIA11F,EAAAw3D,YAAA,IACAx3D,EAAAnB,QAAAy2F,EAAAj/F,SAAA2J,EAAAw3D,cAIA/9E,KAAAo6G,gBAAA8B,uBAAAJ,EAAAD,QAlCA,OAAA77G,KAAA+9E,YAGA/9E,KAAAm8G,kBAwCG,CACHt2G,IAAA,QACAwB,MAAA,WACArH,KAAA25G,sBACQliF,EAAA5tB,EAAQ0M,aAAAvW,KAAA25G,qBAChB35G,KAAA25G,oBAAA,QASG,CACH9zG,IAAA,SACAwB,MAAA,WACA,cAAArH,KAAA25G,sBAWG,CACH9zG,IAAA,WACAwB,MAAA,SAAA+0G,EAAAxI,GACA5zG,KAAAg0G,YAIAh0G,KAAAg0G,UAAAoI,EACAp8G,KAAA27G,qBAAA/H,EAGA,SAAA5zG,KAAA6mC,OAAA7mC,KAAAy7G,sBACAz7G,KAAA07G,WASG,CACH71G,IAAA,kBACAwB,MAAA,SAAAyuB,GACA91B,KAAAu6G,QAAA,EACAv6G,KAAAq8G,cACAr8G,KAAAk8B,OAAA,EAAAl8B,KAAA0/C,YAAA5pB,GAEA91B,KAAAk6G,eAAA5P,mBACAtqG,KAAAY,QAAA,qBASG,CACHiF,IAAA,cACAwB,MAAA,WACArH,KAAAw6G,gBAAA,EACAx6G,KAAAm8G,iBAOG,CACHt2G,IAAA,eACAwB,MAAA,WACArH,KAAA+9E,WAAA,KACA/9E,KAAAs6G,WAAA,KACAt6G,KAAAuY,UAUG,CACH1S,IAAA,SACAwB,MAAA,SAAA0M,EAAA3R,EAAA0zB,GAOA,GANA91B,KAAA85G,gBACA95G,KAAA85G,eAAA59E,OAAAnoB,EAAA3R,EAAA0zB,GAGA8sD,GAAA7uE,EAAA3R,EAAApC,KAAAm5G,uBAEAn5G,KAAAojF,kBACA,QAAAngF,KAAAjD,KAAAojF,kBACAR,GAAA7uE,EAAA3R,EAAApC,KAAAojF,kBAAAngF,MAUG,CACH4C,IAAA,iBACAwB,MAAA,WACArH,KAAA25G,qBACQliF,EAAA5tB,EAAQ0M,aAAAvW,KAAA25G,qBAGhB35G,KAAA25G,oBAAiCliF,EAAA5tB,EAAQ+N,WAAA5X,KAAAs8G,mBAAAr0G,KAAAjI,MAAA,KAStC,CACH6F,IAAA,qBACAwB,MAAA,WACA,UAAArH,KAAA6mC,OACA7mC,KAAAu8G,cAGAv8G,KAAA25G,qBACQliF,EAAA5tB,EAAQ0M,aAAAvW,KAAA25G,qBAGhB35G,KAAA25G,oBAAiCliF,EAAA5tB,EAAQ+N,WAAA5X,KAAAs8G,mBAAAr0G,KAAAjI,MA/nBzC,OA2oBG,CACH6F,IAAA,cACAwB,MAAA,WACA,IAAArH,KAAA85G,eAAAjL,WAAA,CAIA7uG,KAAAs6G,aACAt6G,KAAAs6G,WAAAt6G,KAAAo6G,gBAAAoC,aAAAx8G,KAAAu7G,UAAAv7G,KAAA0/C,YAAA1/C,KAAA45G,iBAAA55G,KAAA64G,iBAIA,IAAAtyF,EAAAvmB,KAAAy8G,aAAAz8G,KAAA08G,YAAA18G,KAAAu7G,UAAAv7G,KAAA+9E,WAAA/9E,KAAA24G,aAAA34G,KAAA64G,eAAA74G,KAAAs6G,YAEA,GAAA/zF,EAIA2xF,GAAAl4G,KAAAu7G,UAAAv7G,KAAAujF,aAAAh9D,EAAAw3D,YAGA/9E,KAAA28G,eAIAp2F,EAAAw3D,aAAA/9E,KAAAu7G,UAAA3+F,SAAA7b,OAAA,aAAAf,KAAAujF,aAAA5rE,YAAA3X,KAAA+4G,eAWAxyF,EAAA7I,WAAA1d,KAAA45G,kBAAA,OAAArzF,EAAAq2F,gBAAAr2F,EAAAq2F,eAAA58G,KAAA85G,eAAAz2B,qBACArjF,KAAAo6G,gBAAA5nG,QACA+T,EAAA88D,gBAAA98D,EAAAq2F,eACA58G,KAAAk6G,eAAA5P,oBAGAtqG,KAAA68G,aAAAt2F,OAeG,CACH1gB,IAAA,eACAwB,MAAA,SAAAipC,EAAA/zB,EAAAwhE,EAAA66B,EAAAr8D,EAAAiiD,GACA,IAAAse,EAAA,EACAF,OAAA,EAEAtsE,EAAAvvC,SACA+7G,EAAAxsE,EAAAluC,IAAAkuC,EAAAvvC,OAAA,IAGA,IAAAg8G,EAAAp5G,KAAAmgB,IAAA,EAAAg5F,EAAAvgE,GAEA,IAAAhgC,EAAAK,SAAA7b,OACA,YAKA,GAAAg8G,GAAA/8G,KAAAq5G,oBACA,YAKA,IAAAT,GAAAmE,GAAA,EACA,YAOA,UAAAve,EAEA,OADAzgB,EAAA/9E,KAAAg9G,yBAAAzgG,GACAvc,KAAAi9G,qBAAA1gG,EAAAwhE,EAAA,SAIA,UAAAA,EAAA,CACA,IAAA34D,EAAA7I,EAAAK,SAAAmhE,GAQA,OALA6+B,EADAx3F,KAAAhjB,IACAgjB,EAAAhjB,IAEA06G,EAGA98G,KAAAi9G,qBAAA1gG,EAAAwhE,EAAA,EAAA6+B,GAAA,GAMA,GAAA58G,KAAAw6G,eAAA,CAEA,IAAA0C,EAAAt/B,GAAAC,oBAAAthE,EAAAugG,EAAAte,EAAA2Z,aAAA3Z,EAAA/8E,MACAs8D,EAAAm/B,EAAAn/B,WACA6+B,EAAAM,EAAAn7G,cACO,CAEP,IAAAo7G,EAAAv/B,GAAAC,oBAAAthE,EAAAggC,EAAAiiD,EAAA2Z,aAAA3Z,EAAA/8E,MAEAs8D,EAAAo/B,EAAAp/B,WACA6+B,EAAAO,EAAAp7G,UAGA,OAAA/B,KAAAi9G,qBAAA1gG,EAAAwhE,EAAA6+B,GAAA,KAYG,CACH/2G,IAAA,2BACAwB,MAAA,SAAAkV,GACA,IAAAgS,EAAAvuB,KAEA,QAAAA,KAAA45G,iBACA,SAGA,IAAAwD,EAAA7gG,EAAAK,SAAAtZ,IAAA,SAAAuE,EAAA/G,GACA,OACA4c,SAAA7V,EAAA6V,SACAy6F,aAAAr3G,KAEOse,OAAA,SAAAvX,GACP,OAAAA,EAAA6V,WAAA6Q,EAAAqrF,mBAGA,OAAAwD,EAAAr8G,OACAq8G,EAAAz5G,KAAAG,IAAAs5G,EAAAr8G,OAAA,MAAAo3G,aAGAx0G,KAAAmgB,IAAAvH,EAAAK,SAAA7b,OAAA,OAEG,CACH8E,IAAA,uBACAwB,MAAA,SAAAkV,EAAAwhE,EAAA6+B,EAAAS,GACA,GAAAt/B,EAAA,GAAAA,GAAAxhE,EAAAK,SAAA7b,OACA,YAGA,IAAAqkB,EAAA7I,EAAAK,SAAAmhE,GACA,OACAm4B,UAAA,kBAAAvyG,KAAA25G,SAEAvoG,IAAAqQ,EAAAxH,YAEAmgE,aAGAs/B,gBACAT,iBAEArgG,WAEAzI,MAAA,KAEAkiG,eAAA,KAGA3yB,gBAAA,KAEA3lE,SAAA0H,EAAA1H,SAEAxQ,SAAAkY,EAAAlY,SAEAkY,aAcG,CACHvf,IAAA,qBACAwB,MAAA,SAAAivG,GACA,GAAAt2G,KAAAg7E,KAAAx/B,MAAA3H,WAGA7zC,KAAA+5G,YAAAzhG,UACAtY,KAAAu7G,UAAA7+F,WAAAW,UACA,SAMA,GAAAyK,KAAAtE,OAAA8yF,EAAAI,sBAAA5uF,KAAAtE,OAAA,IACA,SAGA,IAAA+4B,EAAAv8C,KAAA64G,eACA0E,EAAAjH,EAAAh5F,UACA8gE,EAAAp+E,KAAA65G,gBAAA3sG,SACAswG,EAAA5/B,GAAAO,2BAAAC,EAAAm/B,EAAAv9G,KAAAu7G,UAAAjF,EAAAj4B,eAIAo/B,EA/3VA,SAAAntE,EAAAiM,GACA,IAAAqd,EAAA34D,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,KAEA,QADAqvC,EAAAvvC,OAAAuvC,EAAAluC,IAAAkuC,EAAAvvC,OAAA,MACAw7C,GAAAqd,EA43VA8jD,CAAA19G,KAAA08G,YAAAngE,EAAAv8C,KAAAg7E,KAAAx/B,MAAAoe,gBAAA,EAGA,GAAA4jD,GAAAC,EACA,SAGA,IAAAE,EAnhCA,SAAA9hE,GACA,IAAAj8B,EAAAi8B,EAAAj8B,OACA28B,EAAAV,EAAAU,YACAj/B,EAAAu+B,EAAAv+B,UACAsgG,EAAA/hE,EAAA3uC,SACAkxE,EAAAviC,EAAAuiC,gBACAs/B,EAAA7hE,EAAA6hE,kBACAxuF,EAAA2sB,EAAA3sB,gBACAmrF,EAAAx+D,EAAAw+D,eAGAwD,EAAAj+F,EAAAvD,UAAA+C,OAAA,SAAA7C,GACA,OAAAqhE,GAAAN,eAAA/gE,KAIAuhG,EAAAD,EAAAz+F,OAAAw+D,GAAAL,WAEAugC,EAAA/8G,SAIA+8G,EAAAD,EAAAz+F,OAAA,SAAA7C,GACA,OAAAqhE,GAAAI,WAAAzhE,MAIA,IACAwhG,EADAD,EAAA1+F,OAAAw+D,GAAAhoC,aAAA3tC,KAAA,mBACA3E,IAAA,SAAAiZ,GACA,IAGAyhG,EAHA3D,EAAAmC,aAAAjgG,EAAAqhG,EAAA1uF,EAAAqtB,GAGA,IAGA,OACAhgC,WACA0hG,kBAJArgC,GAAAO,2BAAAC,EAAA9gE,EAAAf,GACAyhG,EAAAN,KAMAQ,EAAAH,EAAA3+F,OAAA,SAAA++F,GACA,OAAAA,EAAAF,mBAAA,IAOA,OAJAtG,GAAAuG,EAAA,SAAAr0G,EAAAC,GACA,OAAWiuG,GAAwBjuG,EAAAyS,SAAA1S,EAAA0S,YAGnC2hG,EAAAn9G,OACAm9G,EAAA,IAGAvG,GAAAoG,EAAA,SAAAl0G,EAAAC,GACA,OAAAD,EAAAo0G,kBAAAn0G,EAAAm0G,oBAEAF,EAAA,UA49BAK,CAAA,CACAx+F,OAAA5f,KAAAg7E,KAAA3+D,UAAAuD,OACA28B,cACAj/B,UAAAigG,EACArwG,SAAAlN,KAAA0/C,YACA0+B,kBACAs/B,kBAAAD,EACAvuF,gBAAAlvB,KAAA45G,iBACAS,eAAAr6G,KAAAo6G,kBAGA,GAAAuD,EAAA,CAIA,IACAU,EADAb,EAAAC,EACAE,EAAAM,kBACAK,EAAA,GAQA,OAJAb,GAxgWA,OAygWAa,EAAA,IAGAX,EAAAphG,UAAAohG,EAAAphG,SAAAxH,MAAA/U,KAAAu7G,UAAAxmG,KAAAspG,EAAAC,GACA,GAMAt+G,KAAAsd,UAAAqgG,EAAAphG,SAAAG,WAAAW,UAAAq3F,GAAAK,mBAAA,EACA/0G,KAAAuY,QACAvY,KAAAY,QAAA,eACA,MAYG,CACHiF,IAAA,kBACAwB,MAAA,SAAAwI,EAAA0uG,GACAv+G,KAAA65G,iBAAA0E,EAAArI,YAAAl2G,KAAA65G,gBAAA3D,YAAAl2G,KAAAw+G,mBAAAD,EAAAjI,QAIAt2G,KAAAY,QAAA,cAQG,CACHiF,IAAA,eACAwB,MAAA,SAAAkf,GACAvmB,KAAA6mC,MAAA,UACA7mC,KAAA65G,gBAAAtzF,EACAvmB,KAAAy+G,gBAAAl4F,GACAA,EAAA40F,cAAAxE,GAAA32G,KAAAg7E,KAAAtlE,IAAA1V,KAAA+5G,YAAA/5G,KAAAm6G,WAAAn6G,KAAAk6G,eAAAl6G,KAAA0+G,4BAAAn4F,GACAvmB,KAAA2+G,gBAAA12G,KAAAjI,WAAA4+G,wBAAA32G,KAAAjI,SAWG,CACH6F,IAAA,kBACAwB,MAAA,SAAAkf,GACA,IAAAs4F,EAx4BA,SAAAC,EAAAviE,EAAA1+B,GACA,IAAAghG,OAAA,EAaA,OATAA,EAFAC,EAAA/9G,QAAA+9G,EAAA/qG,MAAA,MAAA+qG,EAAA/qG,MAAA,GAAAwoC,EAEAuiE,EAAA/qG,MAAA,GAGAwoC,EAAA,GAMA54C,KAAAG,IAAA+6G,EAAAtiE,EAAA1+B,GA03BAkhG,CAAA/+G,KAAA84G,YAAA94G,KAAA64G,eAAA74G,KAAAu7G,UAAA19F,gBAAA,IAMAghG,EAAA,GACA7+G,KAAAk8B,OAAA,EAAA2iF,KAaG,CACHh5G,IAAA,8BACAwB,MAAA,SAAAkf,GACA,IAAAnB,EAAAmB,EAAAnB,QACAm5F,EAAA,CACA3gG,YAAAwH,EAAAxH,YACA2D,UAAA6D,EAAA7D,UACA20F,UAAA3vF,EAAA2vF,WAGA,GAAA9wF,EAAAvf,IAAA,CAGA,IAAAgqB,EAAAzK,EAAAvf,IAAAgqB,IAAA,IAAAzB,YAAA,OAAA7H,EAAAw3D,WAAAx3D,EAAAhK,SAAAuB,gBACAygG,EAAA14G,IAAA,CACA+X,YAAAwH,EAAAvf,IAAA+X,YACAiS,MAQA,OAJAzK,EAAA9hB,MACAi7G,EAAAj7G,IAAAtD,KAAA2P,YAAAyV,EAAA9hB,MAGAi7G,IASG,CACH14G,IAAA,0BACAwB,MAAA,SAAA6wB,EAAAqmF,GAWA,GARAv+G,KAAA26G,eAAA,EAEA4D,EAAAjI,QACAt2G,KAAA06G,uBAAA6D,EAAAjI,MAAAj4B,cACAr+E,KAAA+6G,uBAAAwD,EAAAjI,MAAAv3B,eAIA/+E,KAAA65G,iBASA,GAAA0E,EAAArI,YAAAl2G,KAAA65G,gBAAA3D,UAAA,CAKA,GAAAh+E,EAMA,OALAl4B,KAAA65G,gBAAA,KACA75G,KAAA6mC,MAAA,QAIA3O,EAAA1f,OAAA28F,QACAn1G,KAAA46G,sBAAA,IAIA56G,KAAA+zC,QAIA7b,EAAA1f,OAAA28F,IACAn1G,KAAA66G,uBAAA,EACA76G,KAAAsd,UAAA,EACAtd,KAAAy4G,UAAAh0C,SACAzkE,KAAAY,QAAA,qBAMAZ,KAAA86G,sBAAA,EACA96G,KAAAk4B,cACAl4B,KAAAY,QAAA,WAMAZ,KAAAsd,UAAAihG,EAAAjI,MAAAh5F,UACAtd,KAAAy4G,UAAA8F,EAAAjI,MAAAv3B,cAGAw/B,EAAAj7G,MACAi7G,EAAAj7G,IAAAtD,KAAA2P,YAAA4uG,EAAAj7G,KAAA,IAGAtD,KAAAg/G,wBAAAT,SAtDAv+G,KAAA46G,sBAAA,IA+DG,CACH/0G,IAAA,0BACAwB,MAAA,SAAAk3G,GACA,IAAAh4F,EAAAvmB,KAAA65G,gBACAtzF,EAAAzS,MAAAyqG,EAAAzqG,MAEAyqG,EAAAj7G,MACAijB,EAAAnB,QAAA9hB,IAAAwQ,MAAAyqG,EAAAj7G,IAAAwQ,OAGAyS,EAAAwvF,iBAAAwI,EAAAxI,iBAEAwI,EAAA/G,gBAlpCA,SAAAiC,EAAA3nE,EAAA/hC,GACA,QAAAxL,KAAAwL,EACA,IAAA0pG,EAAAl1G,GAAA,CACAutC,EAAAlxC,QAAA,CACAR,KAAA,QACAqc,KAAA,YAEA,IAAA1S,EAAA+nC,EAAAK,aAAAuE,aAAAnyC,GAMAk1G,EAAAl1G,GAJAwF,GAQA+nC,EAAAO,mBAAA,CACAmF,KAAA,WACAv0C,GAAAsB,EACA4b,MAAA5b,IACS,GAAAwF,OA8nCTk1G,CAAAj/G,KAAAojF,kBAAApjF,KAAAg7E,KAAAx/B,MAAA+iE,EAAAxuG,gBAxnCA,SAAAmN,GACA,IAAAu8F,EAAAv8F,EAAAu8F,iBACAz2B,EAAA9lE,EAAA8lE,aACAK,EAAAnmE,EAAAmmE,gBAEA,GAAAL,EAAA,CAIA,IAAAE,EAAA5jF,OAAA6jF,eAAA7jF,OAAA6U,OACA6uE,EAAA9+E,QAAA,SAAAuL,GACA,IAAA1F,EAAA0F,EAAAY,OACAtO,EAAA0N,EAAA1N,UACAoO,EAAAV,EAAAU,QAEAspG,EAAA1vG,KAIAhI,GAAAshF,EACAlzE,GAAAkzE,EACAo2B,EAAA1vG,GAAAuoC,OAAA,IAAA4wC,EAAAnhF,EAAAoO,EAAAV,EAAAF,WAomCA2vG,CAAA,CACAzF,iBAAAz5G,KAAAojF,kBACAJ,aAAAu7B,EAAA/G,aAEAn0B,gBAAA,IAIArjF,KAAAk6G,eAAA9P,uBAGApqG,KAAAm/G,mBAQG,CACHt5G,IAAA,iBACAwB,MAAA,WACA,IAAA6lC,EAAAltC,KAEA,GAAAA,KAAA65G,gBAAA,CAKA,IAAAtzF,EAAAvmB,KAAA65G,gBACAz0F,EAAAmB,EAAAnB,QACAg6F,EAAAp/G,KAAAo6G,gBAAAiF,iBAAA94F,GAIA,qBAAAvmB,KAAAk5G,gBAAAkG,IAEAA,EAAAE,eAAAF,EAAAG,iBACAv/G,KAAAk5G,eAAA,CACAoG,cAAAF,EAAAE,cACAC,cAAAH,EAAAG,gBAIA,IAxmCAtG,EAAAuG,EAAAC,EAwmCAC,GAxmCAzG,EAwmCAj5G,KAAAg5G,YAxmCAwG,EAwmCAx/G,KAAAk5G,eAxmCAuG,EAwmCAL,EArmCA,SAAAnG,GAAAuG,GAAAC,EAIAA,EAAAH,eAAAG,EAAAF,cAIAC,EAAAD,gBAAAE,EAAAF,cACA,6LAGAC,EAAAD,eAAAE,EAAAF,cACA,kMAGA,KAXA,4CAJA,MAsmCA,GAAAG,EAMA,OALA1/G,KAAAk4B,MAAA,CACA1I,QAAAkwF,EACAC,kBAAA97G,WAEA7D,KAAAY,QAAA,SAIA,GAAA2lB,EAAA82F,cAIA,OAHAr9G,KAAAY,QAAA,kBACAZ,KAAA65G,gBAAA,UACA75G,KAAA6mC,MAAA,SAIA,OAAAtgB,EAAA88D,iBAAA98D,EAAA88D,kBAAArjF,KAAA85G,eAAAz2B,oBACArjF,KAAA85G,eAAAz2B,gBAAA98D,EAAA88D,iBAEArjF,KAAAY,QAAA,oBAGA,IAAAg/G,EAAA5/G,KAAAo6G,gBAAAyF,mBAAAt5F,EAAA7I,UAYA,GAVA,OAAAkiG,GACA5/G,KAAAY,QAAA,CACAR,KAAA,qBACA2sG,QAAA6S,IAIA5/G,KAAA6mC,MAAA,YAGAzhB,EAAA9hB,IAAA,CACA,IAAAw8G,EAAAngC,GAAAv6D,EAAA9hB,KAEA,IAAAtD,KAAAg6G,sBAAAh6G,KAAAg6G,uBAAA8F,EAAA,CACA,IAAAnwG,EAAA3P,KAAA2P,YAAAyV,EAAA9hB,KACAtD,KAAA85G,eAAA9J,aAAArgG,EAAAmE,MAAA,WACAo5B,EAAA8sE,qBAAA8F,KAKAv5F,EAAAhkB,WAAAgkB,EAAAzS,MAAAvR,WAEA,kBAAA6iB,EAAArR,OAAA,kBAAAqR,EAAAhjB,IACApC,KAAAg7G,oBAAA51F,EAAAhjB,IAAAgjB,EAAArR,MAEA/T,KAAAg7G,oBAAA51F,EAAAlY,SAGAlN,KAAAi0G,QA1mCA,SAAA1tF,GACA,IAAAw5F,EAAAx5F,EAAAnB,QACArR,EAAAgsG,EAAAhsG,MACA3R,EAAA29G,EAAA39G,IACA49G,EAAAz5F,EAAAhK,SACA0jG,EAAAD,EAAAliG,cACA7a,EAAA+8G,EAAA/8G,GACAi9G,EAAAF,EAAApjG,SACAA,OAAAjP,IAAAuyG,EAAA,GAAAA,EACA1/G,EAAA+lB,EAAAw3D,WACArgE,EAAA6I,EAAA7I,SACA,qBAAAld,EAAA,SAAAy/G,EAAA,MAAAA,EAAArjG,EAAA7b,QAAA,oBAAAkC,EAAA,QAAA8Q,EAAA,OAAA3R,EAAA,kBAAAsb,EAAA,KAAA1C,KAAA,KA+lCAmlG,CAAA55F,IACAvmB,KAAA85G,eAAA9J,aAAAzpF,EAAAzS,MAAA9T,KAAAogH,iBAAAn4G,KAAAjI,YA3EAA,KAAA6mC,MAAA,UAqFG,CACHhhC,IAAA,mBACAwB,MAAA,WACA,IAAArH,KAAA65G,gBAOA,OANA75G,KAAA6mC,MAAA,aAEA7mC,KAAA6zC,UACA7zC,KAAAk7G,kBAMA,IAAA30F,EAAAvmB,KAAA65G,gBACAz0F,EAAAmB,EAAAnB,QACAi7F,EAAA,OAAArgH,KAAA+9E,YACA/9E,KAAA65G,gBAAA,KACA75G,KAAAsgH,kBAAA/5F,GACAvmB,KAAAugH,uBAAAh6F,GACAvmB,KAAA6mC,MAAA,QACA7mC,KAAA+9E,WAAAx3D,EAAAw3D,WACA/9E,KAAAw6G,gBAAA,EACAx6G,KAAA45G,iBAAArzF,EAAA7I,SAKA1d,KAAAY,QAAA,kBAKAwkB,EAAAhjB,KAAApC,KAAA64G,eAAAzzF,EAAAhjB,IAAA,EAAAmkB,EAAAhK,SAAAsB,gBACA7d,KAAA47G,mBAMAyE,GACArgH,KAAAY,QAAA,mBAGAZ,KAAAY,QAAA,YAIAs3G,GAAA3xF,EAAAhK,SAAAvc,KAAAujF,aAAAh9D,EAAAw3D,WAAA,IAGA/9E,KAAA28G,cAGA38G,KAAA6zC,UACA7zC,KAAAk7G,oBAaG,CACHr1G,IAAA,oBACAwB,MAAA,SAAAkf,GACA,IAAAozC,EAAA35D,KAAAw4G,WAAA7+C,KAGA6mD,EAAA14F,KAAAtE,MAAA+C,EAAAwvF,iBAAA,EAEA0K,EAAA98G,KAAAigB,MAAA2C,EAAAhkB,WAAAi+G,EAAA,OAGAxgH,KAAAw4G,WAAA7+C,OAAA8mD,EAAA9mD,KAAA35D,KAAAw4G,WAAAv1F,QAYG,CACHpd,IAAA,yBACAwB,MAAA,SAAAkf,GACA,GAAAvmB,KAAAm5G,sBAAA,CAIA,IAAA/zF,EAAAmB,EAAAnB,QACArR,EAAAqR,EAAArR,MACA3R,EAAAgjB,EAAAhjB,IAEA,GAAAi2G,GAAAtkG,IAAAskG,GAAAj2G,GAAA,CAIAwgF,GAAA7uE,EAAA3R,EAAApC,KAAAm5G,uBACA,IAAAj2B,EAAgBzrD,EAAA5tB,EAAQs5E,eAAkB1rD,EAAA5tB,EAAQsK,OAClD9M,EAAA,CACA4mB,eAAA7I,EAAA6I,eACAD,eAAA5I,EAAA4I,eACA1Q,UAAAiJ,EAAAhK,SAAAG,WAAAW,UACA0Q,WAAAxH,EAAAhK,SAAAG,WAAAgC,WACAlB,OAAA+I,EAAAhK,SAAAG,WAAAa,OACAhb,WAAAgkB,EAAAhkB,WACAwS,IAAAwR,EAAAxR,IACA2I,SAAA6I,EAAA7I,SACAnB,SAAAgK,EAAAhK,SAAAxH,IACAhB,QACA3R,OAGAwvC,EAAA,IAAAsxC,EAAAnvE,EAAA3R,EADA+T,KAAAsB,UAAApQ,IAIAuqC,EAAAvqC,QACArH,KAAAm5G,sBAAA7mE,OAAAV,SAGA2mE,EA/tCiB,CAguChB1hC,GAAA/xC,aAED47E,GAAA,SAAAC,GACA,OAAArnB,mBAAAiK,OAAA5gG,OAAAC,aAAAxB,MAAA,KAAAu/G,MAOAC,GAAA,IAAAl1G,WAAA,OAAAoP,MAAA,IAAAxX,IAAA,SAAAi1F,GACA,OAAAA,EAAAvlF,WAAA,MAUI6tG,GAAgB,SAAAC,GAGpB,SAAAC,EAAAllE,GACA,IAAA7xC,EAAA/I,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,MACI83E,GAAc/4E,KAAA+gH,GAGlB,IAAA9zF,EAAgBisD,GAAyBl5E,MAAA+gH,EAAA16G,WAAAV,OAAAS,eAAA26G,IAAA7/G,KAAAlB,KAAA67C,EAAA7xC,IAIzC,OAFAijB,EAAAs2D,aAAA,KACAt2D,EAAA+zF,gBAAA,KACA/zF,EA0XA,OArYEgsD,GAAQ8nC,EAsYRzI,IAjXAt/B,GAAW+nC,EAAA,EACbl7G,IAAA,YACAwB,MAAA,WACA,IAAArH,KAAAghH,kBAAAhhH,KAAAghH,gBAAArvE,KAAA5wC,OACA,OAAA81E,GAAAzmC,mBAGA,IAAAuB,EAAA3xC,KAAAghH,gBAAArvE,KACA59B,EAAA49B,EAAA,GAAA5vC,UACAK,EAAAuvC,IAAA5wC,OAAA,GAAAgB,UACA,OAAA80E,GAAAzmC,iBAAA,EAAAr8B,EAAA3R,OAaG,CACHyD,IAAA,cACAwB,MAAA,SAAA/D,GACA,IAAA+3G,EAAAp6G,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,IAAAA,UAAA,GAEA,IAAAqC,EACA,YAGA,IAAAL,EAAA08E,GAAAr8E,GACAg4G,EAAAt7G,KAAAi6G,cAAAh3G,GAEA,GAAAo4G,IAAAC,GAAAh4G,EAAAwQ,MAAA,CAKA,IAAAmtG,EAAAL,GAAAr+G,WAAAe,EAAAwQ,MAAAvR,WACA2+G,EAAA,IAAAx1G,WAAAu1G,GACAC,EAAAv1G,IAAArI,EAAAwQ,OACAotG,EAAAv1G,IAAAi1G,GAAAt9G,EAAAwQ,MAAAvR,YACAvC,KAAAi6G,cAAAh3G,GAAAq4G,EAAA,CACA19F,YAAAta,EAAAsa,YACA2D,UAAAje,EAAAie,UACAzN,MAAAotG,GAIA,OAAA5F,GAAAh4G,IASG,CACHuC,IAAA,qBACAwB,MAAA,WACA,OAAArH,KAAAu7G,WAAAv7G,KAAAghH,kBAAAhhH,KAAA6zC,WAUG,CACHhuC,IAAA,QACAwB,MAAA,WAGA,OAFArH,KAAA6mC,MAAA,QACA7mC,KAAA47G,kBACA57G,KAAAk7G,mBAWG,CACHr1G,IAAA,QACAwB,MAAA,SAAA85G,GACA,2BAAAA,EACAnhH,KAAAghH,iBAGAhhH,KAAAghH,gBAAAG,EAGA,SAAAnhH,KAAA6mC,OAAA7mC,KAAAy7G,sBACAz7G,KAAA07G,QAGA17G,KAAAghH,mBAQG,CACHn7G,IAAA,SACAwB,MAAA,SAAA0M,EAAA3R,GACAwgF,GAAA7uE,EAAA3R,EAAApC,KAAAghH,mBAYG,CACHn7G,IAAA,cACAwB,MAAA,WACA,IAAAknB,EAAAvuB,KAEAA,KAAAs6G,aACAt6G,KAAAs6G,WAAAt6G,KAAAo6G,gBAAAoC,aAAAx8G,KAAAu7G,UAAAv7G,KAAA0/C,YAAA1/C,KAAA45G,iBAAA55G,KAAA64G,iBAIA,IAAAtyF,EAAAvmB,KAAAy8G,aAAAz8G,KAAA08G,YAAA18G,KAAAu7G,UAAAv7G,KAAA+9E,WAAA/9E,KAAA24G,aAAA34G,KAAA64G,eAAA74G,KAAAs6G,YAGA,GAFA/zF,EAAAvmB,KAAAohH,mBAAA76F,GAEA,CAIA,UAAAvmB,KAAAo6G,gBAAAiH,2BAAA96F,EAAA7I,UAAA,CAcA,OAFA1d,KAAAo6G,gBAAAr3E,IAAA,kBATA,WACAxU,EAAAsY,MAAA,QAEAtY,EAAAslB,UAEAtlB,EAAA2sF,wBAKAl7G,KAAA6mC,MAAA,uBAIA7mC,KAAA68G,aAAAt2F,MAaG,CACH1gB,IAAA,qBACAwB,MAAA,SAAAkf,GACA,KAAAA,KAAAnB,QAAAyvB,OACAtuB,EAAAvmB,KAAAi9G,qBAAA12F,EAAAhK,SAAAgK,EAAAw3D,WAAA,EAAAx3D,EAAAq2F,eAAAr2F,EAAArZ,SAAAqZ,EAAA82F,eAGA,OAAA92F,IAQG,CACH1gB,IAAA,iBACAwB,MAAA,WACA,IAAA6lC,EAAAltC,KAEA,GAAAA,KAAA65G,iBAAA75G,KAAAghH,gBAAA,CAKAhhH,KAAA6mC,MAAA,YACA,IAAAtgB,EAAAvmB,KAAA65G,gBACAz0F,EAAAmB,EAAAnB,QAEA,GAAyB,oBAARqS,EAAA5tB,EAAQqK,QAAAlU,KAAAghH,iBAAAhhH,KAAAghH,gBAAAxlE,MAAA,CACzB,IAAAC,EAAA,WACAvO,EAAAiyE,kBAkBA,OAfAn/G,KAAA6mC,MAAA,mBACA7mC,KAAAghH,gBAAAxlE,MAAAzY,IAAA,cAAA0Y,QACAz7C,KAAAghH,gBAAAxlE,MAAAzY,IAAA,wBACAmK,EAAA8zE,gBAAAxlE,MAAAj7C,IAAA,cAAAk7C,GAEAvO,EAAAhV,MAAA,CACA1I,QAAA,yBAGA0d,EAAArG,MAAA,QAEAqG,EAAA6G,QAEA7G,EAAAtsC,QAAA,WAKAwkB,EAAAk8F,WAAA,EAEA,IACAthH,KAAAuhH,cAAAh7F,GACO,MAAA5e,IAMP,OALA3H,KAAAk4B,MAAA,CACA1I,QAAA7nB,GAAA6nB,UAEAxvB,KAAA6mC,MAAA,QACA7mC,KAAA+zC,QACA/zC,KAAAY,QAAA,SAKA,GAFAZ,KAAAwhH,mBAAAj7F,EAAAvmB,KAAAo6G,gBAAAqH,UAAAl7F,EAAA7I,UAAA1d,KAAAu7G,WAEAh1F,EAAA82F,cAIA,OAHAr9G,KAAAY,QAAA,kBACAZ,KAAA65G,gBAAA,UACA75G,KAAA6mC,MAAA,SAIAtgB,EAAAhkB,WAAAgkB,EAAAzS,MAAAvR,WACAvC,KAAAg7G,oBAAA51F,EAAAlY,SAEAqZ,EAAAorB,KAAA5wC,QAEAf,KAAAk8B,OAAA3V,EAAAorB,KAAA,GAAAxhC,QAAAoW,EAAAorB,KAAAprB,EAAAorB,KAAA5wC,OAAA,GAAAoP,SAGAoW,EAAAorB,KAAAztC,QAAA,SAAA0tC,GACA1E,EAAA8zE,gBAAA1uE,OAAAV,KAEA5xC,KAAAogH,wBAhEApgH,KAAA6mC,MAAA,UA0EG,CACHhhC,IAAA,gBACAwB,MAAA,SAAAkf,GACA,IAAAm7F,OAAA,EACAC,GAAA,EAEyB,oBAARlqF,EAAA5tB,EAAQ+3G,YACzBF,EAAA,IAAsBjqF,EAAA5tB,EAAQ+3G,YAAA,SAE9BF,EAAkBjqF,EAAA5tB,EAAQqK,OAAA2mC,gBAC1B8mE,GAAA,GAGA,IAAA/mE,EAAA,IAAuBnjB,EAAA5tB,EAAQqK,OAAAya,OAAe8I,EAAA5tB,EAAU4tB,EAAA5tB,EAAQoK,MAAAytG,GAgBhE,GAfAn7F,EAAAorB,KAAA,GACAprB,EAAAs7F,aAAA,CACAC,OAAA,EACAC,MAAA,GAEAnnE,EAAAE,MAAAv0B,EAAAorB,KAAAxwC,KAAA8G,KAAAse,EAAAorB,MAEAiJ,EAAAonE,eAAA,SAAA1+G,GACA,OAAAijB,EAAAs7F,aAAAv+G,GAGAs3C,EAAAG,eAAA,SAAA7iB,GACA2+C,GAAAz/C,IAAAa,KAAA,wCAAAC,EAAA1I,UAGAjJ,EAAAnB,QAAA9hB,IAAA,CACA,IAAA2+G,EAAA17F,EAAAnB,QAAA9hB,IAAAwQ,MAEA6tG,IACAM,EAAAvB,GAAAuB,IAGArnE,EAAAxkC,MAAA6rG,GAGA,IAAAC,EAAA37F,EAAAzS,MAEA6tG,IACAO,EAAAxB,GAAAwB,IAGAtnE,EAAAxkC,MAAA8rG,GACAtnE,EAAAj5C,UAgBG,CACHkE,IAAA,qBACAwB,MAAA,SAAAkf,EAAA47F,EAAA5lG,GACA,IAAA6I,EAAAmB,EAAAnB,QAEA,GAAA+8F,EAOA,GAAA57F,EAAAorB,KAAA5wC,OAAA,CAQA,IAAA8gH,EAAAt7F,EAAAs7F,aACAO,EAAAP,EAAAC,OAAA,IAAAD,EAAAE,MAAAI,EAAApV,QAOA,GANAxmF,EAAAorB,KAAAztC,QAAA,SAAA0tC,GAEAA,EAAA7vC,WAAAqgH,EACAxwE,EAAAzhC,SAAAiyG,KAGA7lG,EAAAw/F,SAAA,CACA,IAAAsG,EAAA97F,EAAAorB,KAAA,GAAA5vC,UACAugH,EAAA/7F,EAAAorB,KAAAprB,EAAAorB,KAAA5wC,OAAA,GAAAgB,UACAwa,EAAAw/F,SAAA,CACAj+F,cAAAvB,EAAAuB,cAAAyI,EAAAw3D,WACAt8D,KAAA9d,KAAAG,IAAAu+G,EAAAC,EAAAl9F,EAAAlY,iBAjBAkY,EAAAyvB,OAAA,MAsBAksE,EAtYoB,GAiZpBwB,GAAA,SAAAx4G,EAAAy4G,GAGA,IAFA,IAAA7wE,EAAA5nC,EAAA4nC,KAEA7wC,EAAA,EAAiBA,EAAA6wC,EAAA5wC,OAAiBD,IAAA,CAClC,IAAA8wC,EAAAD,EAAA7wC,GAEA,GAAA0hH,GAAA5wE,EAAA6wE,aAAAD,GAAA5wE,EAAA8wE,UACA,OAAA9wE,EAIA,aA+EA+wE,GAAcC,EAAA/4G,EAAW09F,QACzBsb,GAAA,CAEA,CACApmG,KAAA,MACAqmG,IAAA,SAAAzI,EAAA99F,EAAAqhG,EAAA1uF,EAAAqtB,GACA,GAAAqhE,IAAA/5G,IAAA,CAKA,MAJA,CACA4d,KAAA,EACA02F,aAAA,GAKA,cAGA,CACA17F,KAAA,kBACAqmG,IAAA,SAAAzI,EAAA99F,EAAAqhG,EAAA1uF,EAAAqtB,GACA,IAAA89D,EAAA0I,sBACA,YAGA,IAAAnmG,EAAAL,EAAAK,UAAA,GACA4hF,EAAA,KACAwkB,EAAA,KACAzmE,KAAA,EAEA,QAAAz7C,EAAA,EAAmBA,EAAA8b,EAAA7b,OAAqBD,IAAA,CACxC,IAAAskB,EAAAxI,EAAA9b,GAEA,GAAAskB,EAAA6I,eAAA,CACA,IACAiyD,EADA96D,EAAA6I,eAAA6R,UAAA,IACAu6E,EAAA0I,sBACA9wD,EAAAtuD,KAAAw7D,IAAA5iB,EAAA2jC,GAGA,UAAA8iC,KAAA/wD,EACA,MAGA+wD,EAAA/wD,EACAusC,EAAA,CACA/8E,KAAAy+D,EACAi4B,aAAAr3G,IAKA,OAAA09F,IAIA,CACA/hF,KAAA,UACAqmG,IAAA,SAAAzI,EAAA99F,EAAAqhG,EAAA1uF,EAAAqtB,GACA,IAAA3/B,EAAAL,EAAAK,UAAA,GACA4hF,EAAA,KACAwkB,EAAA,KACAzmE,KAAA,EAEA,QAAAz7C,EAAA,EAAmBA,EAAA8b,EAAA7b,OAAqBD,IAAA,CACxC,IAAAskB,EAAAxI,EAAA9b,GAEA,GAAAskB,EAAA1H,WAAAwR,GAAA,qBAAA9J,EAAArR,MAAA,CACA,IAAAk+C,EAAAtuD,KAAAw7D,IAAA5iB,EAAAn3B,EAAArR,OAGA,UAAAivG,KAAA/wD,EACA,QAGAusC,GAAA,OAAAwkB,MAAA/wD,KACA+wD,EAAA/wD,EACAusC,EAAA,CACA/8E,KAAA2D,EAAArR,MACAokG,aAAAr3G,KAMA,OAAA09F,IAIA,CACA/hF,KAAA,gBACAqmG,IAAA,SAAAzI,EAAA99F,EAAAqhG,EAAA1uF,EAAAqtB,GACA,IAAAiiD,EAAA,KAGA,GAFAjiD,KAAA,EAEAhgC,EAAAS,qBAAAT,EAAAS,oBAAAjc,OAGA,IAFA,IAAAiiH,EAAA,KAEAliH,EAAA,EAAqBA,EAAAyb,EAAAS,oBAAAjc,OAAyCD,IAAA,CAC9D,IAAAq3G,EAAA57F,EAAAS,oBAAAlc,GACAyR,EAAAgK,EAAAoT,sBAAA7uB,EAAA,EACAmiH,EAAA5I,EAAA6I,gBAAA3wG,GAEA,GAAA0wG,EAAA,CACA,IAAAhxD,EAAAtuD,KAAAw7D,IAAA5iB,EAAA0mE,EAAAxhG,MAGA,UAAAuhG,KAAA/wD,EACA,QAGAusC,GAAA,OAAAwkB,MAAA/wD,KACA+wD,EAAA/wD,EACAusC,EAAA,CACA/8E,KAAAwhG,EAAAxhG,KACA02F,kBAOA,OAAA3Z,IAIA,CACA/hF,KAAA,WACAqmG,IAAA,SAAAzI,EAAA99F,EAAAqhG,EAAA1uF,EAAAqtB,GACA,OAAAhgC,EAAAw/F,SACA,CACAt6F,KAAAlF,EAAAw/F,SAAAt6F,KACA02F,aAAA57F,EAAAw/F,SAAAj+F,cAAAvB,EAAAuB,eAKA,QAIIqlG,GAAc,SAAA1V,GAGlB,SAAA2V,IACIrqC,GAAc/4E,KAAAojH,GAGlB,IAAAn2F,EAAgBisD,GAAyBl5E,MAAAojH,EAAA/8G,WAAAV,OAAAS,eAAAg9G,IAAAliH,KAAAlB,OAQzC,OANAitB,EAAAo2F,mBAAA11G,EAEAsf,EAAAw0F,UAAA,GACAx0F,EAAAi2F,gBAAA,GACAj2F,EAAA81F,sBAAA,KACA91F,EAAAgnF,QAAAR,GAAA,kBACAxmF,EAsZA,OApaEgsD,GAAQmqC,EAAA3V,GAiCRz0B,GAAWoqC,EAAA,EACbv9G,IAAA,eACAwB,MAAA,SAAAkV,EAAAqhG,EAAA1uF,EAAAqtB,GACA,IAAA+mE,EAAAtjH,KAAAujH,eAAAhnG,EAAAqhG,EAAA1uF,EAAAqtB,GAEA,OAAA+mE,EAAAviH,OAUAf,KAAAwjH,iBAAAF,EAAA,CACAz9G,IAAA,OACAwB,MAAAk1C,IARA,OAuBG,CACH12C,IAAA,iBACAwB,MAAA,SAAAkV,EAAAqhG,GACA,IAAArhG,MAAAK,SACA,YAGA,IAAA0mG,EAAAtjH,KAAAujH,eAAAhnG,EAAAqhG,EAAArhG,EAAAoT,sBAAA,GAEA,IAAA2zF,EAAAviH,OACA,YAGA,IAAAy9F,EAAAx+F,KAAAwjH,iBAAAF,EAAA,CACAz9G,IAAA,eACAwB,MAAA,IAQA,OAJAm3F,EAAA2Z,aAAA,IACA3Z,EAAA/8E,OAAA,GAGA9d,KAAAw7D,IAAAq/B,EAAA/8E,KAAA46D,GAAA9/D,EAAAiiF,EAAA2Z,aAAA,MAiBG,CACHtyG,IAAA,iBACAwB,MAAA,SAAAkV,EAAAqhG,EAAA1uF,EAAAqtB,GAGA,IAFA,IAAA+mE,EAAA,GAEAxiH,EAAA,EAAqBA,EAAA+hH,GAAA9hH,OAAgCD,IAAA,CACrD,IAAA2iH,EAAAZ,GAAA/hH,GACA09F,EAAAilB,EAAAX,IAAA9iH,KAAAuc,EAAAqhG,EAAA1uF,EAAAqtB,GAEAiiD,IACAA,EAAAilB,WAAAhnG,KACA6mG,EAAAniH,KAAA,CACAsiH,WAAAhnG,KACA+hF,eAKA,OAAA8kB,IAkBG,CACHz9G,IAAA,mBACAwB,MAAA,SAAAi8G,EAAAj+G,GAKA,IAJA,IAAAq+G,EAAAJ,EAAA,GAAA9kB,UACAmlB,EAAAhgH,KAAAw7D,IAAAmkD,EAAA,GAAA9kB,UAAAn5F,EAAAQ,KAAAR,EAAAgC,OACAu8G,EAAAN,EAAA,GAAAG,SAEA3iH,EAAA,EAAqBA,EAAAwiH,EAAAviH,OAAuBD,IAAA,CAC5C,IAAA+iH,EAAAlgH,KAAAw7D,IAAAmkD,EAAAxiH,GAAA09F,UAAAn5F,EAAAQ,KAAAR,EAAAgC,OAEAw8G,EAAAF,IACAA,EAAAE,EACAH,EAAAJ,EAAAxiH,GAAA09F,UACAolB,EAAAN,EAAAxiH,GAAA2iH,UAKA,OADAzjH,KAAAi0G,QAAA,kBAAA5uG,EAAAQ,IAAA,KAAAR,EAAAgC,MAAA,2BAAAu8G,EAAA,YAAAF,EAAAjiG,KAAA,kBAAAiiG,EAAAvL,aAAA,KACAuL,IAWG,CACH79G,IAAA,yBACAwB,MAAA,SAAAy0G,EAAAD,GAIA,IAHA,IAGA/6G,EAHA+6G,EAAA/9F,cAAAg+F,EAAAh+F,cAGA,EAAyChd,GAAA,EAAQA,IAAA,CACjD,IAAAgjH,EAAAhI,EAAAl/F,SAAA9b,GAEA,GAAAgjH,GAAA,qBAAAA,EAAA/vG,MAAA,CACA8nG,EAAAE,SAAA,CACAj+F,cAAAg+F,EAAAh+F,cAAAhd,EACA2gB,KAAAqiG,EAAA/vG,OAEA/T,KAAAi0G,QAAA,gCAAA4H,EAAAE,SAAAt6F,KAAA,oBAAAo6F,EAAAE,SAAAj+F,cAAA,KACA9d,KAAAY,QAAA,kBACA,UAWG,CACHiF,IAAA,qBACAwB,MAAA,SAAAkV,GACA,IAAAvc,KAAA+iH,uBAAAxmG,EAAAK,UAAAL,EAAAK,SAAA7b,QAAAwb,EAAAK,SAAA,GAAAqR,eAAA,CACA,IAAA81F,EAAAxnG,EAAAK,SAAA,GAAAqR,eAAA6R,UAAA,IACA9/B,KAAA+iH,uBAAAgB,KAQG,CACHl+G,IAAA,QACAwB,MAAA,WACArH,KAAAqjH,mBAAA11G,IAWG,CACH9H,IAAA,mBACAwB,MAAA,SAAAkf,GACA,IAAAnB,EAAAmB,EAAAnB,QACA7I,EAAAgK,EAAAhK,SACA6iG,OAAA,EAsBA,OAnBAA,EADAh6F,EAAA9hB,IACAtD,KAAAgkH,iBAAAz9F,GAEAvmB,KAAAikH,gBAAA19F,KAIAvmB,KAAAkkH,6BAAA39F,EAAA64F,KACAp/G,KAAAmkH,2BAAA59F,GAGAhK,EAAAw/F,WACAx/F,EAAAw/F,SAAA,CACAj+F,cAAAvB,EAAAuB,cAAAyI,EAAAw3D,WACAt8D,KAAA2D,EAAArR,SAMAqrG,IAWG,CACHv5G,IAAA,mBACAwB,MAAA,SAAAkf,GACA,IAAAnB,EAAAmB,EAAAnB,QACA0kF,EAAuBsN,EAAAvtG,EAAQ/H,UAAAsjB,EAAA9hB,IAAAwQ,OAC/B/R,EAAsBq1G,EAAAvtG,EAAQ9H,UAAA+nG,EAAAvjF,EAAAzS,OAM9B,OAJA,OAAAyS,EAAA88D,kBACA98D,EAAA88D,iBAAAthF,GAGA,CACAgS,MAAAhS,EACAK,IAAAL,EAAAqjB,EAAAlY,YAYG,CACHrH,IAAA,kBACAwB,MAAA,SAAAkf,GACA,IAAA69F,EAAAzB,GAAAp8F,EAAAzS,MAAA9T,KAAAqjH,eACAgB,OAAA,EACAC,OAAA,EAEA,OAAAF,GAIAA,EAAAxmE,OAAA,IAAAwmE,EAAAxmE,MAAA78C,QACAf,KAAAqjH,cAAAe,EAAAxmE,MAAA,GAAA3wC,IACAo3G,EAAAD,EAAAxmE,MAAA,GAAA2mE,QACAD,EAAAF,EAAAxmE,MAAA,GAAA2mE,SACOH,EAAApkG,OAAA,IAAAokG,EAAApkG,MAAAjf,SACPf,KAAAqjH,cAAAe,EAAApkG,MAAA,GAAA/S,IACAo3G,EAAAD,EAAApkG,MAAA,GAAAukG,QACAD,EAAAF,EAAApkG,MAAA,GAAAukG,SAGA,CACAxwG,MAAAswG,EACAjiH,IAAAkiH,EACA/E,cAAA6E,EAAAxmE,OAAA,IAAAwmE,EAAAxmE,MAAA78C,OACAu+G,cAAA8E,EAAApkG,OAAA,IAAAokG,EAAApkG,MAAAjf,SAjBA,OAoBG,CACH8E,IAAA,6BACAwB,MAAA,SAAAqW,GACA,2BAAA1d,KAAAyhH,UAAA/jG,GACA,KAGA1d,KAAAyhH,UAAA/jG,GAAA+D,OAEG,CACH5b,IAAA,qBACAwB,MAAA,SAAAqW,GACA,2BAAA1d,KAAAyhH,UAAA/jG,GACA,KAGA1d,KAAAyhH,UAAA/jG,GAAAqvF,UAeG,CACHlnG,IAAA,+BACAwB,MAAA,SAAAkf,EAAA64F,GACA,IAAAh6F,EAAAmB,EAAAnB,QACA+8F,EAAAniH,KAAAyhH,UAAAl7F,EAAA7I,UAEA,UAAA6I,EAAA88D,gBACA8+B,EAAA,CACA1gG,KAAA8E,EAAAq2F,eACA7P,QAAAxmF,EAAAq2F,eAAAwC,EAAArrG,OAEA/T,KAAAyhH,UAAAl7F,EAAA7I,UAAAykG,EACAniH,KAAAY,QAAA,mBACAZ,KAAAi0G,QAAA,6BAAA1tF,EAAA7I,SAAA,YAAAykG,EAAA1gG,KAAA,eAAA0gG,EAAApV,QAAA,KACA3nF,EAAArR,MAAAwS,EAAAq2F,eACAx3F,EAAAhjB,IAAAg9G,EAAAh9G,IAAA+/G,EAAApV,YACO,KAAAoV,EAIP,SAHA/8F,EAAArR,MAAAqrG,EAAArrG,MAAAouG,EAAApV,QACA3nF,EAAAhjB,IAAAg9G,EAAAh9G,IAAA+/G,EAAApV,QAKA,WAWG,CACHlnG,IAAA,6BACAwB,MAAA,SAAAkf,GACA,IAAAhK,EAAAgK,EAAAhK,SACA6I,EAAAmB,EAAAnB,QAIA,GAAAA,EAAA7S,cACAvS,KAAAkjH,gBAAA99F,EAAA1H,UAAA,CACA+D,KAAA2D,EAAArR,MACAywG,SAAA,QAEO,GAAAjoG,EAAAS,qBAAAT,EAAAS,oBAAAjc,OAGP,QAAAD,EAAA,EAAuBA,EAAAyb,EAAAS,oBAAAjc,OAAyCD,IAAA,CAChE,IAAAq3G,EAAA57F,EAAAS,oBAAAlc,GACAyR,EAAAgK,EAAAoT,sBAAA7uB,EAAA,EACA2jH,EAAAtM,EAAA5xF,EAAAw3D,WACAymC,EAAA7gH,KAAAw7D,IAAAslD,GAEA,IAAAzkH,KAAAkjH,gBAAA3wG,IAAAvS,KAAAkjH,gBAAA3wG,GAAAiyG,WAAA,CACA,IAAA/iG,OAAA,EAGAA,EADAgjG,EAAA,EACAr/F,EAAArR,MAAAsoE,GAAA9/D,EAAAgK,EAAAw3D,WAAAo6B,GAEA/yF,EAAAhjB,IAAAi6E,GAAA9/D,EAAAgK,EAAAw3D,WAAA,EAAAo6B,GAGAn4G,KAAAkjH,gBAAA3wG,GAAA,CACAkP,OACA+iG,kBAOApB,EArakB,CAsajBvsC,GAAA/xC,aAED4/E,GAAA,IAAA9/B,GAAA,wCAAAtlF,EAAA2mF,GACA,IAAA1mF,EAAAS,MAEA,WAmBA,IAAA0sB,EAAA,SAAA3nB,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAC,UAAA,sCAIA0sB,EAAA,WACA,SAAAC,EAAAvsB,EAAAC,GACA,QAAAxE,EAAA,EAAuBA,EAAAwE,EAAAvE,OAAkBD,IAAA,CACzC,IAAAyE,EAAAD,EAAAxE,GACAyE,EAAAC,WAAAD,EAAAC,aAAA,EACAD,EAAAE,cAAA,EACA,UAAAF,MAAAG,UAAA,GACAC,OAAAC,eAAAP,EAAAE,EAAAM,IAAAN,IAIA,gBAAAP,EAAAe,EAAAC,GAGA,OAFAD,GAAA6rB,EAAA5sB,EAAA1D,UAAAyE,GACAC,GAAA4rB,EAAA5sB,EAAAgB,GACAhB,GAdA,GAkCA8nB,EAAA,SAAAvtB,EAAA2B,GACA,IAAA3B,EACA,UAAAsH,eAAA,6DAGA,OAAA3F,GAAA,kBAAAA,GAAA,oBAAAA,EAAA3B,EAAA2B,GAgDA4wB,EAAA,WACA,IAAAC,EAAA,oCACAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAG,EAAAF,EAAA,GACAnxB,OAAA,EACAkb,OAAA,EACAoW,OAAA,EACAltB,EAAA,GACAmtB,EAAA,GACAC,OAAA,EACAC,OAAA,EAEA1qB,OAAA,EACA2qB,OAAA,EACAC,OAAA,EAEA,IAAA3xB,EAAA,EAAiBA,EAAA,IAASA,IAC1BuxB,GAAAntB,EAAApE,MAAA,OAAAA,GAAA,IAAAA,KAGA,IAAAkb,EAAAoW,EAAA,GAAwBF,EAAAlW,GAAUA,GAAAsW,GAAA,EAAAF,EAAAC,EAAAD,IAAA,EAWlC,IARAvqB,GADAA,EAAAuqB,KAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,IACA,MAAAvqB,EAAA,GACAqqB,EAAAlW,GAAAnU,EACAsqB,EAAAtqB,GAAAmU,EAGAyW,EAAA,SADAvtB,EAAAqtB,EAAArtB,EAAAotB,EAAAptB,EAAA8W,KACA,MAAAuW,EAAA,IAAAD,EAAA,SAAAtW,EACAwW,EAAA,IAAAttB,EAAA2C,GAAA,SAAAA,EAEA/G,EAAA,EAAmBA,EAAA,EAAOA,IAC1BkxB,EAAAlxB,GAAAkb,GAAAwW,KAAA,GAAAA,IAAA,EACAP,EAAAnxB,GAAA+G,GAAA4qB,KAAA,GAAAA,IAAA,EAKA,IAAA3xB,EAAA,EAAiBA,EAAA,EAAOA,IACxBkxB,EAAAlxB,GAAAkxB,EAAAlxB,GAAAJ,MAAA,GACAuxB,EAAAnxB,GAAAmxB,EAAAnxB,GAAAJ,MAAA,GAGA,OAAAqxB,GAGAW,EAAA,KASAC,EAAA,WACA,SAAAA,EAAA9sB,GACA6mB,EAAA1sB,KAAA2yB,GAgBAD,IACAA,EAAAZ,KAIA9xB,KAAA4yB,QAAA,EAAAF,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,SAAA,CAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,QAAAgyB,EAAA,MAAAhyB,UACA,IAAAI,OAAA,EACA+xB,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAd,EAAAlyB,KAAA4yB,QAAA,MACAX,EAAAjyB,KAAA4yB,QAAA,GACAK,EAAAptB,EAAA9E,OACAmyB,EAAA,EAEA,OAAAD,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAA7d,MAAA,wBAOA,IAJA2d,EAAAltB,EAAAnF,MAAA,GACAsyB,EAAA,GACAhzB,KAAA0b,KAAA,CAAAqX,EAAAC,GAEAlyB,EAAAmyB,EAAwBnyB,EAAA,EAAAmyB,EAAA,GAAqBnyB,IAC7CgyB,EAAAC,EAAAjyB,EAAA,IAEAA,EAAAmyB,IAAA,OAAAA,GAAAnyB,EAAAmyB,IAAA,KACAH,EAAAZ,EAAAY,IAAA,QAAAZ,EAAAY,GAAA,YAAAZ,EAAAY,GAAA,UAAAZ,EAAA,IAAAY,GAEAhyB,EAAAmyB,IAAA,IACAH,KAAA,EAAAA,IAAA,GAAAI,GAAA,GACAA,KAAA,OAAAA,GAAA,KAIAH,EAAAjyB,GAAAiyB,EAAAjyB,EAAAmyB,GAAAH,EAIA,IAAAD,EAAA,EAAmB/xB,EAAG+xB,IAAA/xB,IACtBgyB,EAAAC,EAAA,EAAAF,EAAA/xB,IAAA,GAGAkyB,EAAAH,GADA/xB,GAAA,GAAA+xB,EAAA,EACAC,EAEAb,EAAA,GAAAC,EAAAY,IAAA,KAAAb,EAAA,GAAAC,EAAAY,GAAA,SAAAb,EAAA,GAAAC,EAAAY,GAAA,QAAAb,EAAA,GAAAC,EAAA,IAAAY,IA+DA,OA5CAH,EAAArxB,UAAA6xB,QAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5jB,GACA,IAAA/J,EAAA7F,KAAA0b,KAAA,GAEA7R,EAAAupB,EAAAvtB,EAAA,GACAiE,EAAAypB,EAAA1tB,EAAA,GACA4tB,EAAAH,EAAAztB,EAAA,GACAX,EAAAmuB,EAAAxtB,EAAA,GACA6tB,OAAA,EACAC,OAAA,EACAC,OAAA,EAEAC,EAAAhuB,EAAA9E,OAAA,IACAD,OAAA,EACAgzB,EAAA,EACAC,EAAA/zB,KAAA4yB,QAAA,GAEAoB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACA7B,EAAA6B,EAAA,GAEA,IAAAjzB,EAAA,EAAmBA,EAAA+yB,EAAkB/yB,IACrC4yB,EAAAM,EAAAnqB,IAAA,IAAAoqB,EAAAnqB,GAAA,QAAAoqB,EAAAT,GAAA,OAAAU,EAAA,IAAAjvB,GAAAW,EAAAiuB,GACAH,EAAAK,EAAAlqB,IAAA,IAAAmqB,EAAAR,GAAA,QAAAS,EAAAhvB,GAAA,OAAAivB,EAAA,IAAAtqB,GAAAhE,EAAAiuB,EAAA,GACAF,EAAAI,EAAAP,IAAA,IAAAQ,EAAA/uB,GAAA,QAAAgvB,EAAArqB,GAAA,OAAAsqB,EAAA,IAAArqB,GAAAjE,EAAAiuB,EAAA,GACA5uB,EAAA8uB,EAAA9uB,IAAA,IAAA+uB,EAAApqB,GAAA,QAAAqqB,EAAApqB,GAAA,OAAAqqB,EAAA,IAAAV,GAAA5tB,EAAAiuB,EAAA,GACAA,GAAA,EACAjqB,EAAA6pB,EACA5pB,EAAA6pB,EACAF,EAAAG,EAIA,IAAA9yB,EAAA,EAAmBA,EAAA,EAAOA,IAC1B0yB,GAAA,GAAA1yB,GAAA8O,GAAAsiB,EAAAroB,IAAA,QAAAqoB,EAAApoB,GAAA,YAAAooB,EAAAuB,GAAA,UAAAvB,EAAA,IAAAhtB,GAAAW,EAAAiuB,KACAJ,EAAA7pB,EACAA,EAAAC,EACAA,EAAA2pB,EACAA,EAAAvuB,EACAA,EAAAwuB,GAIAf,EA/HA,GA4IA5yB,EAAA,WACA,SAAAA,IACA2sB,EAAA1sB,KAAAD,GACAC,KAAAE,UAAA,GA+FA,OApFAH,EAAAuB,UAAAnB,GAAA,SAAAC,EAAAC,GACAL,KAAAE,UAAAE,KACAJ,KAAAE,UAAAE,GAAA,IAGAJ,KAAAE,UAAAE,GAAAe,KAAAd,IAYAN,EAAAuB,UAAAf,IAAA,SAAAH,EAAAC,GACA,IAAAL,KAAAE,UAAAE,GACA,SAGA,IAAAI,EAAAR,KAAAE,UAAAE,GAAAK,QAAAJ,GAEA,OADAL,KAAAE,UAAAE,GAAAO,OAAAH,EAAA,GACAA,GAAA,GAUAT,EAAAuB,UAAAV,QAAA,SAAAR,GACA,IAAAS,EAAAb,KAAAE,UAAAE,GAEA,GAAAS,EAQA,OAAAI,UAAAF,OAGA,IAFA,IAAAA,EAAAF,EAAAE,OAEAD,EAAA,EAAyBA,EAAAC,IAAYD,EACrCD,EAAAC,GAAAI,KAAAlB,KAAAiB,UAAA,SAMA,IAHA,IAAAD,EAAAya,MAAAna,UAAAZ,MAAAQ,KAAAD,UAAA,GACAozB,EAAAxzB,EAAAE,OAEAuzB,EAAA,EAA0BA,EAAAD,IAAcC,EACxCzzB,EAAAyzB,GAAAlzB,MAAApB,KAAAgB,IASAjB,EAAAuB,UAAAD,QAAA,WACArB,KAAAE,UAAA,IAYAH,EAAAuB,UAAAC,KAAA,SAAAC,GACAxB,KAAAG,GAAA,gBAAAsB,GACAD,EAAAL,KAAAM,MAIA1B,EAlGA,GAiHA4kH,EAAA,SAAA33F,GAGA,SAAA23F,IACAj4F,EAAA1sB,KAAA2kH,GAEA,IAAA13F,EAAAH,EAAA9sB,KAAAgtB,EAAA9rB,KAAAlB,KAAAD,IAKA,OAHAktB,EAAAuH,KAAA,GACAvH,EAAAwH,MAAA,EACAxH,EAAAyH,SAAA,KACAzH,EAiCA,OAvaA,SAAA/lB,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAlC,UAAA,kEAAAkC,GAGAD,EAAA5F,UAAAqE,OAAAyB,OAAAD,KAAA7F,UAAA,CACAoF,YAAA,CACAW,MAAAH,EACA1B,YAAA,EACAE,UAAA,EACAD,cAAA,KAGA0B,IAAAxB,OAAAQ,eAAAR,OAAAQ,eAAAe,EAAAC,GAAAD,EAAAb,UAAAc,GA+WA0lB,CAAA83F,EAAA33F,GAmBA23F,EAAArjH,UAAAszB,YAAA,WACA50B,KAAAw0B,KAAAhoB,OAAAxM,GAEAA,KAAAw0B,KAAAzzB,OACAf,KAAA00B,SAAA9c,WAAA5X,KAAA40B,YAAA3sB,KAAAjI,WAAAy0B,OAEAz0B,KAAA00B,SAAA,MAUAiwF,EAAArjH,UAAAH,KAAA,SAAA0zB,GACA70B,KAAAw0B,KAAArzB,KAAA0zB,GAEA70B,KAAA00B,WACA10B,KAAA00B,SAAA9c,WAAA5X,KAAA40B,YAAA3sB,KAAAjI,WAAAy0B,SAIAkwF,EA5CA,CA6CK5kH,GAcL+0B,EAAA,SAAAC,GACA,OAAAA,GAAA,UAAAA,IAAA,YAAAA,IAAA,EAAAA,IAAA,IAiFA6vF,EAAA,WACA,SAAAA,EAAA5vF,EAAAnvB,EAAAovB,EAAAa,GACApJ,EAAA1sB,KAAA4kH,GACA,IAAA7uF,EAAA6uF,EAAA5uF,KACAd,EAAA,IAAAC,WAAAH,EAAAvyB,QACA4yB,EAAA,IAAA3pB,WAAAspB,EAAAzyB,YACAzB,EAAA,EAKA,IAJAd,KAAAi2B,aAAA,IAAA0uF,EAEA3kH,KAAAi2B,aAAA90B,KAAAnB,KAAAk2B,cAAAhB,EAAA1yB,SAAA1B,IAAAi1B,GAAAlwB,EAAAovB,EAAAI,IAEAv0B,EAAAi1B,EAAsBj1B,EAAAo0B,EAAAn0B,OAAwBD,GAAAi1B,EAC9Cd,EAAA,IAAA7G,YAAA,CAAA0G,EAAAI,EAAAp0B,EAAA,IAAAg0B,EAAAI,EAAAp0B,EAAA,IAAAg0B,EAAAI,EAAAp0B,EAAA,IAAAg0B,EAAAI,EAAAp0B,EAAA,MACAd,KAAAi2B,aAAA90B,KAAAnB,KAAAk2B,cAAAhB,EAAA1yB,SAAA1B,IAAAi1B,GAAAlwB,EAAAovB,EAAAI,IAIAr1B,KAAAi2B,aAAA90B,KAAA,WArjBA,IAAAg1B,EAujBAL,EAAA,MAvjBAK,EAujBAd,GAtjBA7yB,SAAA,EAAA2zB,EAAA5zB,WAAA4zB,IAAA5zB,WAAA,OAklBA,OAdAqiH,EAAAtjH,UAAA40B,cAAA,SAAAlB,EAAAnvB,EAAAovB,EAAAI,GACA,kBACA,IAAAvhB,EAnGA,SAAAkhB,EAAAnvB,EAAAovB,GAEA,IAAAC,EAAA,IAAAC,WAAAH,EAAAvyB,OAAAuyB,EAAAtwB,WAAAswB,EAAAzyB,YAAA,GACA6yB,EAAA,IAAAzC,EAAAlX,MAAAna,UAAAZ,MAAAQ,KAAA2E,IAEAwvB,EAAA,IAAA3pB,WAAAspB,EAAAzyB,YACA+yB,EAAA,IAAAH,WAAAE,EAAA5yB,QAGA8yB,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAtC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EAEAoC,OAAA,EASA,IANAJ,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,GAGAU,EAAA,EAAsBA,EAAAT,EAAAn0B,OAA6B40B,GAAA,EAGnDvC,EAAA0B,EAAAI,EAAAS,IACAtC,EAAAyB,EAAAI,EAAAS,EAAA,IACArC,EAAAwB,EAAAI,EAAAS,EAAA,IACApC,EAAAuB,EAAAI,EAAAS,EAAA,IAEAP,EAAAjC,QAAAC,EAAAC,EAAAC,EAAAC,EAAA+B,EAAAK,GAGAL,EAAAK,GAAAb,EAAAQ,EAAAK,GAAAJ,GACAD,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAH,GACAF,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAF,GACAH,EAAAK,EAAA,GAAAb,EAAAQ,EAAAK,EAAA,GAAAD,GAEAH,EAAAnC,EACAoC,EAAAnC,EACAoC,EAAAnC,EACAoC,EAAAnC,EAGA,OAAA8B,EAkDAwvF,CAAA7vF,EAAAnvB,EAAAovB,GACAI,EAAA1pB,IAAAmI,EAAAkhB,EAAAtwB,cAIAitB,EAAAizF,EAAA,OACA/+G,IAAA,OACAuwB,IAAA,WAEA,gBAGAwuF,EA/CA,GA8GA,IAlBA,SAAArlH,GACAA,EAAAimF,UAAA,SAAA31E,GACA,IAAApO,EAAAoO,EAAApO,KACAuzB,EAAA,IAAAtpB,WAAAjK,EAAAuzB,UAAAlhB,MAAArS,EAAAuzB,UAAAtwB,WAAAjD,EAAAuzB,UAAAzyB,YACAsD,EAAA,IAAAuoB,YAAA3sB,EAAAoE,IAAAiO,MAAArS,EAAAoE,IAAAnB,WAAAjD,EAAAoE,IAAAtD,WAAA,GACAstB,EAAA,IAAAzB,YAAA3sB,EAAAouB,GAAA/b,MAAArS,EAAAouB,GAAAnrB,WAAAjD,EAAAouB,GAAAttB,WAAA,GAGA,IAAAqiH,EAAA5vF,EAAAnvB,EAAAgqB,EAAA,SAAAva,EAAAxB,GACAvU,EAAAgmF,YApCA,SAAA/1D,GACA,IAAAgwD,EAAA,GAcA,OAbA75E,OAAAiW,KAAA4T,GAAAtrB,QAAA,SAAA2B,GACA,IAAAwB,EAAAmoB,EAAA3pB,GAEA45E,YAAAC,OAAAr4E,GACAm4E,EAAA35E,GAAA,CACAiO,MAAAzM,EAAA5E,OACAiC,WAAA2C,EAAA3C,WACAnC,WAAA8E,EAAA9E,YAGAi9E,EAAA35E,GAAAwB,IAGAm4E,EAqBAD,CAAA,CACA5jE,OAAAla,EAAAka,OACA0Z,UAAAvhB,IACW,CAAAA,EAAArR,YAMX,CAAAlD,GAjqBA,KA2qBAulH,GAAA,SAAAtqF,GACA,IAAAgd,EAAAhd,EAAAna,QAAA,qBAMA,OAJAma,EAAAhK,iBAAAgK,EAAAhK,gBAAA/vB,QAAA,6CACA+2C,EAAA,aAGAA,GAaAutE,GAAA,SAAAC,EAAAjrC,GACAirC,EAAAzsG,QACAysG,EAAAjxE,QAEAgmC,KAAAkrC,uBACAlrC,EAAAkrC,qBAAAlxE,QACAgmC,EAAAkrC,qBAAA,OAcAC,GAAA,SAAAC,EAAAprC,GAGAA,EAAAkrC,qBAAAE,EACAA,EAAA9nE,QA+GA+nE,GAAA,CAcA5mG,MAAA,SAAApe,EAAAy7C,GACA,kBACA,IAAAmpE,EAAAnpE,EAAAwpE,eAAAjlH,GACA25E,EAAAl+B,EAAAypE,WAAAllH,GACAmlH,EAAA1pE,EAAA0pE,yBACAR,GAAAC,EAAAjrC,GAEA,IAAAyrC,EAAAzrC,EAAAyrC,cACAC,EAAA1rC,EAAA0rC,cACAxiH,GAAAwiH,EAAArmG,OAAA,SAAA+yF,GACA,OAAAA,EAAA9xF,UACO,IAAAolG,EAAA,IAAAxiH,GACPyiH,EAAA3rC,EAAA3nE,OAAAnP,GAEA,GAAAuiH,IAAAE,EAAA,CAWA,QAAAnhH,KAFAsyE,GAAAz/C,IAAAa,KAAA,oFAEA8hD,EAAA3nE,OACA2nE,EAAA3nE,OAAA7N,GAAAyyC,QAAA+iC,EAAA3nE,OAAA7N,KAAAmhH,EAGA3rC,EAAA4rC,sBAZAJ,EAAA,CACA/1F,QAAA,2DA2BA/Q,UAAA,SAAAre,EAAAy7C,GACA,kBACA,IAAAmpE,EAAAnpE,EAAAwpE,eAAAjlH,GACA25E,EAAAl+B,EAAAypE,WAAAllH,GACAy2E,GAAAz/C,IAAAa,KAAA,4EACA8sF,GAAAC,EAAAjrC,GACA,IAAAhwE,EAAAgwE,EAAAyrC,cAEAz7G,IACAA,EAAAgyC,KAAA,YAGAg+B,EAAA4rC,oBAIAC,GAAA,CAYApnG,MAAA,SAAApe,EAAA+kH,EAAAtpE,GACA,GAAAspE,EAAA,CAKA,IAAArzE,EAAA+J,EAAA/J,KACA+zE,EAAAhqE,EAAAgqE,eACAb,EAAAnpE,EAAAwpE,eAAAjlH,GACA+kH,EAAAhlH,GAAA,4BACA,IAAAoiB,EAAA4iG,EAAA5iG,QACAyiG,EAAAzoG,SAAAgG,EAAAsjG,KAGA/zE,EAAA+B,UAAAtxB,EAAA9E,SAAA,SAAAq0B,EAAAmyB,YACA+gD,EAAA3nE,SAGA8nE,EAAAhlH,GAAA,4BACA6kH,EAAAzoG,SAAA4oG,EAAA5iG,QAAAsjG,GAEA/zE,EAAA+B,UACAmxE,EAAA3nE,SAGA8nE,EAAAhlH,GAAA,QAAAilH,GAAAhlH,KAAAy7C,MAcAp9B,UAAA,SAAAre,EAAA+kH,EAAAtpE,GACA,IAAA/J,EAAA+J,EAAA/J,KACA+zE,EAAAhqE,EAAAgqE,eACAb,EAAAnpE,EAAAwpE,eAAAjlH,GACA25E,EAAAl+B,EAAAypE,WAAAllH,GACA+kH,EAAAhlH,GAAA,4BACA,IAAAoiB,EAAA4iG,EAAA5iG,QACAyiG,EAAAzoG,SAAAgG,EAAAsjG,GACAb,EAAAj7G,MAAAgwE,EAAAyrC,iBAGA1zE,EAAA+B,UAAAtxB,EAAA9E,SAAA,SAAAq0B,EAAAmyB,YACA+gD,EAAA3nE,SAGA8nE,EAAAhlH,GAAA,4BACA6kH,EAAAzoG,SAAA4oG,EAAA5iG,QAAAsjG,GAEA/zE,EAAA+B,UACAmxE,EAAA3nE,SAGA8nE,EAAAhlH,GAAA,QAAAilH,GAAAhlH,KAAAy7C,MAIAiqE,GAAA,SAAA1lH,EAAAgsG,GACA,gBAAA7vF,GACA,OAAAA,EAAAG,WAAAtc,KAAAgsG,IAIA2Z,GAAA,SAAAnoG,GACA,gBAAArB,GACA,OAAAA,EAAAqB,kBAIAooG,GAAA,CAUAxnG,MAAA,SAAApe,EAAAy7C,GACA,IAAAk/B,EAAAl/B,EAAAk/B,IACAy+B,EAAA39D,EAAA29D,WACAwL,EAAAnpE,EAAAwpE,eAAAjlH,GACAiY,EAAAwjC,EAAAgqE,eAAAxtG,gBACA4tG,EAAApqE,EAAAj8B,OACAE,EAAAmmG,EAAAnmG,YACAzD,EAAA4pG,EAAA5pG,UACA6pG,EAAArqE,EAAAypE,WAAAllH,GACA+lH,EAAAD,EAAAC,OACA/zG,EAAA8zG,EAAA9zG,OACAogG,EAAA32D,EAAA22D,qBAYA,QAAApG,KAVAtsF,EAAA1f,IAAA,IAAAuF,OAAAiW,KAAAkE,EAAA1f,IAAAW,SACA+e,EAAA1f,GAAA,CACAs4C,KAAA,CACAr4B,QAAA,CACAA,SAAA,MAMAP,EAAA1f,GAAA,CACA+lH,EAAA/Z,KACA+Z,EAAA/Z,GAAA,IAKA,IAAAga,EAAA/pG,EAAA+C,OAAA0mG,GAAA1lH,EAAAgsG,IAEA,QAAAia,KAAAvmG,EAAA1f,GAAAgsG,GAAA,CACA,IAAA5xE,EAAA1a,EAAA1f,GAAAgsG,GAAAia,GAGAD,EAAAhnG,OAAA2mG,GAAAvrF,EAAA5c,cAEA7c,eAMAy5B,EAAA5c,YAGA,IAAAunG,OAAA,EAmBA,GAhBAA,EADA3qF,EAAA5c,YACA,IAA+Bg9D,GAAcpgD,EAAA5c,YAAAm9D,EAAA1iE,GACpCmiB,EAAAne,WAAA,SAAAm9F,EACT,IAA+BnH,GAAkB73E,EAAAne,UAAA,GAAA0+D,EAAA1iE,EAAAm6F,GAIjD,KAGAh4E,EAAAq8C,GAAArvC,aAAA,CACAvkC,GAAAojH,EACAlB,kBACS3qF,GACTorF,GAAAxlH,KAAAo6B,EAAA2qF,eAAAtpE,GACAsqE,EAAA/Z,GAAAjrG,KAAAq5B,GAEA,qBAAApoB,EAAAi0G,GAAA,CACA,IAAAt8G,EAAA,IAAA8sE,GAAA/5B,WAAA,CACA75C,GAAAojH,EACA7uE,KAAAstE,GAAAtqF,GACAwc,SAAA,EACA92B,SAAAsa,EAAAta,SACAG,QAAAma,EAAAna,QACAF,MAAAkmG,IAEAj0G,EAAAi0G,GAAAt8G,IAMAi7G,EAAA7kH,GAAA,QAAAilH,GAAAhlH,KAAAy7C,KAYAp9B,UAAA,SAAAre,EAAAy7C,GACA,IAAA/J,EAAA+J,EAAA/J,KACAipC,EAAAl/B,EAAAk/B,IACAy+B,EAAA39D,EAAA29D,WACAwL,EAAAnpE,EAAAwpE,eAAAjlH,GACAiY,EAAAwjC,EAAAgqE,eAAAxtG,gBACAyH,EAAA+7B,EAAAj8B,OAAAE,YACAwmG,EAAAzqE,EAAAypE,WAAAllH,GACA+lH,EAAAG,EAAAH,OACA/zG,EAAAk0G,EAAAl0G,OACAogG,EAAA32D,EAAA22D,qBAEA,QAAApG,KAAAtsF,EAAA1f,GAKA,QAAAimH,KAJAF,EAAA/Z,KACA+Z,EAAA/Z,GAAA,IAGAtsF,EAAA1f,GAAAgsG,GACA,IAAAtsF,EAAA1f,GAAAgsG,GAAAia,GAAA31F,OAAA,CAYA,IAAA8J,EAAA1a,EAAA1f,GAAAgsG,GAAAia,GACAlB,OAAA,EAeA,GAbA,QAAA3L,EACA2L,EAAA,IAA+BvqC,GAAcpgD,EAAA5c,YAAAm9D,EAAA1iE,GACpC,SAAAmhG,IACT2L,EAAA,IAA+B9S,GAAkB73E,EAAAne,UAAA,GAAA0+D,EAAA1iE,EAAAm6F,IAGjDh4E,EAAAq8C,GAAArvC,aAAA,CACAvkC,GAAAojH,EACAlB,kBACS3qF,GACTorF,GAAAxlH,KAAAo6B,EAAA2qF,eAAAtpE,GACAsqE,EAAA/Z,GAAAjrG,KAAAq5B,GAEA,qBAAApoB,EAAAi0G,GAAA,CACA,IAAAt8G,EAAA+nC,EAAAO,mBAAA,CACApvC,GAAAojH,EACA7uE,KAAA,YACAn3B,QAAAma,EAAAna,SAAAma,EAAApa,WACAF,SAAAsa,EAAAta,SACAC,MAAAkmG,IACW,GAAAt8G,MACXqI,EAAAi0G,GAAAt8G,GAMAi7G,EAAA7kH,GAAA,QAAAilH,GAAAhlH,KAAAy7C,KAYA5sB,kBAAA,SAAA7uB,EAAAy7C,GACA,IAAA/J,EAAA+J,EAAA/J,KACAhyB,EAAA+7B,EAAAj8B,OAAAE,YACAymG,EAAA1qE,EAAAypE,WAAAllH,GACA+lH,EAAAI,EAAAJ,OACA/zG,EAAAm0G,EAAAn0G,OAEA,QAAAg6F,KAAAtsF,EAAA1f,GAKA,QAAAimH,KAJAF,EAAA/Z,KACA+Z,EAAA/Z,GAAA,IAGAtsF,EAAA1f,GAAAgsG,GAAA,CACA,IAAA5xE,EAAA1a,EAAA1f,GAAAgsG,GAAAia,GAGA,GAAA7rF,EAAAlK,WAAA/L,MAAA,UAMA4hG,EAAA/Z,GAAAjrG,KAAA01E,GAAArvC,aAAA,CACAvkC,GAAAojH,GACS7rF,IAET,qBAAApoB,EAAAi0G,IAAA,CACA,IAAAt8G,EAAA+nC,EAAAO,mBAAA,CACApvC,GAAAu3B,EAAAlK,WACAknB,KAAA,WACAn3B,QAAAma,EAAAna,SAAAma,EAAApa,WACAF,SAAAsa,EAAAta,SACAC,MAAAkmG,IACW,GAAAt8G,MACXqI,EAAAi0G,GAAAt8G,MAuDAy7G,GAAA,CAaAhnG,MAAA,SAAApe,EAAAy7C,GACA,kBACA,IAAAzpC,EAAAypC,EAAAypE,WAAAllH,GAAAgS,OAEA,QAAAnP,KAAAmP,EACA,GAAAA,EAAAnP,GAAA+zC,QACA,OAAA5kC,EAAAnP,GAIA,cAgBAwb,UAAA,SAAAre,EAAAy7C,GACA,kBACA,IAAAzpC,EAAAypC,EAAAypE,WAAAllH,GAAAgS,OAEA,QAAAnP,KAAAmP,EACA,eAAAA,EAAAnP,GAAA84C,KACA,OAAA3pC,EAAAnP,GAIA,eAiCAujH,GAAA,SAAA3qE,GACA,wCAAA33C,QAAA,SAAA9D,GACA4lH,GAAA5lH,KAAAy7C,KAEA,IAAAypE,EAAAzpE,EAAAypE,WACA9S,EAAA32D,EAAA22D,qBACA1gE,EAAA+J,EAAA/J,KACAipC,EAAAl/B,EAAAk/B,IAEA,sBAAA72E,QAAA,SAAA9D,GACAklH,EAAAllH,GAAAqlH,YA9HA,SAAArlH,EAAAy7C,GACA,gBAAA9xC,GACA,IAAAyoG,EAAA32D,EAAA22D,qBACA2T,EAAAtqE,EAAAypE,WAAAllH,GAAA+lH,OACA5jG,EAAAiwF,EAAAjwF,QAEA,IAAAA,EACA,YAGA,IAAAkkG,EAAA,KAQA,OANAlkG,EAAA7F,WAAAtc,KACAqmH,EAAAN,EAAA5jG,EAAA7F,WAAAtc,KAGAqmH,KAAAN,EAAAztE,KAEA,qBAAA3uC,EACA08G,EAGA,OAAA18G,EAGA,KAGA08G,EAAArnG,OAAA,SAAA9Z,GACA,OAAAA,EAAArC,KAAA8G,EAAA9G,KACK,UAgGLwiH,CAAArlH,EAAAy7C,GACAypE,EAAAllH,GAAAolH,eAAAplH,KAAAy7C,GACAypE,EAAAllH,GAAAsmH,eAtmBA,SAAAtmH,EAAAy7C,GACA,kBACA,IAAA8qE,EAAA9qE,EAAAwpE,eACAL,EAAA2B,EAAAvmH,GACAwmH,EAAAD,EAAAjuE,KACAqhC,EAAAl+B,EAAAypE,WAAAllH,GACAolH,EAAAzrC,EAAAyrC,cACAC,EAAA1rC,EAAA0rC,YAAAD,GACAqB,EAAA9sC,EAAAkrC,qBACAF,GAAAC,EAAAjrC,GAEA0rC,IAKAA,EAAAN,gBAaAH,EAAA7I,eACA+I,GAAAO,EAAAN,eAAAprC,IAbA8sC,GAKAD,EAAAhL,oBAglBA8K,CAAAtmH,EAAAy7C,GACAypE,EAAAllH,GAAAulH,eAtjBA,SAAAvlH,EAAAy7C,GACA,kBACA,IAAAirE,EAAAjrE,EAAAwpE,eACAL,EAAA8B,EAAA1mH,GACAwmH,EAAAE,EAAApuE,KACAqhC,EAAAl+B,EAAAypE,WAAAllH,GACAolH,EAAAzrC,EAAAyrC,cACAC,EAAA1rC,EAAA0rC,YAAAD,GACAqB,EAAA9sC,EAAAkrC,qBACAF,GAAAC,EAAAjrC,GAEA0rC,IAKAA,EAAAN,eAQA0B,IAAApB,EAAAN,gBAQAH,EAAAj7G,OAEAi7G,EAAAj7G,MAAAy7G,GAIAR,EAAApJ,kBACAsJ,GAAAO,EAAAN,eAAAprC,IAXAmrC,GAAAO,EAAAN,eAAAprC,GARA6sC,EAAAhL,oBAkiBA+J,CAAAvlH,EAAAy7C,KAIA,IAAAswD,EAAAmZ,EAAA9mG,MAAAinG,cACArZ,GAAAD,EAAA/sF,OAAA,SAAA+yF,GACA,OAAAA,EAAA9xF,UACG,IAAA8rF,EAAA,IAAAlpG,GACHqiH,EAAA9mG,MAAApM,OAAAg6F,GAAAp1D,SAAA,EACAsuE,EAAA9mG,MAAAmnG,iBACAnT,EAAAryG,GAAA,yBACA,sBAAA+D,QAAA,SAAA9D,GACA,OAAAklH,EAAAllH,GAAAsmH,qBAIA,IAAAK,EAAA,WACAzB,EAAA9mG,MAAAmnG,iBACA7zE,EAAAlxC,QAAA,CACAR,KAAA,QACAqc,KAAA,sBAaA,QAAAxZ,KATA6uC,EAAA0nB,cAAAt3B,iBAAA,SAAA6kF,GACAj1E,EAAAgP,mBAAA5e,iBAAA,SAAAojF,EAAA7mG,UAAAknG,gBACA5qC,EAAA56E,GAAA,qBACA2xC,EAAA0nB,cAAAn5B,oBAAA,SAAA0mF,GACAj1E,EAAAgP,mBAAAzgB,oBAAA,SAAAilF,EAAA7mG,UAAAknG,kBAGA7zE,EAAAmO,YAAA,SAEAqlE,EAAA9mG,MAAApM,OACA0/B,EAAA0nB,cAAAjjB,SAAA+uE,EAAA9mG,MAAApM,OAAAnP,KAaA+jH,GAAA,WACA,IAAA1B,EAAA,GAYA,MAXA,wCAAAphH,QAAA,SAAA9D,GACAklH,EAAAllH,GAAA,CACA+lH,OAAA,GACA/zG,OAAA,GACA6yG,qBAAA,KACAQ,YAAmB/R,GACnB8R,YAAmB9R,GACnBgT,eAAsBhT,GACtBiS,eAAsBjS,MAGtB4R,GAQA3mC,QAAA,EAGAsoC,GAAA,wIAEAC,GAAA,SAAAC,GACA,OAAAnnH,KAAAonH,oBAAAD,GAAAnnH,KAAAqnH,mBAAAF,IAaIG,GAAwB,SAAA7Z,GAG5B,SAAA8Z,EAAAv9G,GACI+uE,GAAc/4E,KAAAunH,GAElB,IAAAt6F,EAAgBisD,GAAyBl5E,MAAAunH,EAAAlhH,WAAAV,OAAAS,eAAAmhH,IAAArmH,KAAAlB,OAEzCiX,EAAAjN,EAAAiN,IACAoB,EAAArO,EAAAqO,gBACAy5B,EAAA9nC,EAAA8nC,KACAx0B,EAAAtT,EAAAsT,UACAkqG,EAAAx9G,EAAAw9G,UACAC,EAAAz9G,EAAAy9G,WACA9H,EAAA31G,EAAA21G,kBACA+H,EAAA19G,EAAA09G,yBACAlO,EAAAxvG,EAAAwvG,WACAh4B,EAAAx3E,EAAAw3E,OAEA,IAAAvqE,EACA,UAAA7B,MAAA,wCAGAupE,GAAA6oC,EACAv6F,EAAA5U,kBACA4U,EAAAuuB,MAAA1J,EACA7kB,EAAA+tD,KAAAlpC,EAAAipC,IACA9tD,EAAA06F,QAAAnmC,EACAv0D,EAAAssF,YAAAC,EACAvsF,EAAA26F,YAAAH,EACAx6F,EAAA0yF,oBACA1yF,EAAAy6F,2BAEAz6F,EAAA26F,cACA36F,EAAA46F,cAAA56F,EAAAuuB,MAAA2F,aAAA,sBACAl0B,EAAA46F,cAAA9Y,gCAAA,IAGA9hF,EAAA66F,gBAAA,CACAzvG,gBAAA4U,EAAA5U,gBACAC,QAAA,MAEA2U,EAAA86F,YAAAf,KACA/5F,EAAAygF,YAAA,IAAA72B,GAAAw5B,YAEApjF,EAAAygF,YAAAxrE,iBAAA,aAAAjV,EAAA+6F,kBAAA//G,KAAAglB,IAEAA,EAAA6rF,UAAAjiC,GAAAzmC,mBAEAnjB,EAAA0rF,WAAA,WACA,UAGA1rF,EAAAmtF,gBAAA,IAAgC+I,GAAcn5G,GAC9CijB,EAAAksF,sBAAArnE,EAAAO,mBAAA,CACAmF,KAAA,WACAr3B,MAAA,qBACK,GAAApW,MACLkjB,EAAAktF,WAAA,IAAAuK,GACAz3F,EAAAm2D,kBAAA,GACA,IAAA6kC,EAAA,CACAltC,IAAA9tD,EAAA+tD,KACA0yB,YAAAzgF,EAAAygF,YACAnxD,YAAAtvB,EAAAuuB,MAAAe,YAAAt0C,KAAAglB,EAAAuuB,OACA6J,SAAA,WACA,OAAAp4B,EAAAo4B,YAEAinB,QAAA,WACA,OAAAr/C,EAAAuuB,MAAA8wB,WAEAp/D,SAAA,WACA,OAAA+f,EAAAygF,YAAAxgG,UAEA0rG,UAAA,WACA,OAAA3rF,EAAA0rF,cAEAW,iBAAA,WACA,OAAArsF,EAAAqsF,oBAEAh8F,YACA+8F,eAAAptF,EAAAmtF,gBACAxE,UAAA3oF,EAAAktF,WACAX,WAAAvsF,EAAAssF,YACAE,iBAAAxsF,EAAAm2D,mBA8BA,OA5BAn2D,EAAA0lF,sBAAA,SAAA1lF,EAAAssF,YAAA,IAAqElH,GAAkBp7F,EAAAgW,EAAA+tD,KAAA/tD,EAAA5U,iBAAA,IAA+CuiE,GAAc3jE,EAAAgW,EAAA+tD,KAAA/tD,EAAA5U,iBAEpJ4U,EAAAi7F,sCAIAj7F,EAAAo6F,mBAAA,IAAmC/O,GAAazhC,GAAArvC,aAAAygF,EAAA,CAChD7O,qBAAAnsF,EAAAksF,sBACAF,WAAA,SACKjvG,GAELijB,EAAAm6F,oBAAA,IAAoC9O,GAAazhC,GAAArvC,aAAAygF,EAAA,CACjDhP,WAAA,UACKjvG,GACLijB,EAAAk7F,uBAAA,IAAuCtH,GAAgBhqC,GAAArvC,aAAAygF,EAAA,CACvDhP,WAAA,QACKjvG,GAELijB,EAAAm7F,+BAGAnB,GAAA/iH,QAAA,SAAAijH,GACAl6F,EAAAk6F,EAAA,KAAAD,GAAAj/G,KAAAglB,EAAAk6F,KAEAl6F,EAAAgnF,QAAAR,GAAA,OAEAxmF,EAAA0lF,sBAAAt1D,OAEApwB,EAyiCA,OAzpCEgsD,GAAQsuC,EAAA9Z,GA0HRz0B,GAAWuuC,EAAA,EACb1hH,IAAA,sCACAwB,MAAA,WACA,IAAAknB,EAAAvuB,KAEAA,KAAA2yG,sBAAAxyG,GAAA,4BACA,IAAAoiB,EAAAgM,EAAAokF,sBAAApwF,QAEA8lG,EAAA,IAAA95F,EAAAokF,sBAAA90F,eAAA,IAGA4/D,GAAAlvD,EAAAokF,sBAAA/yF,OAAA2O,EAAAokF,sBAAApwF,SACAgM,EAAAu5F,gBAAAxvG,QAAA,EAEAiW,EAAAu5F,gBAAAxvG,QAAA+vG,EAKA9lG,EAAA9E,SAAA,SAAA8Q,EAAAitB,MAAAyoB,YACA11C,EAAA84F,mBAAA9qG,SAAAgG,EAAAgM,EAAAu5F,iBAEAv5F,EAAA84F,mBAAAhqE,QAGAmpE,GAAA,CACAhN,WAAAjrF,EAAAgrF,YACA8L,eAAA,CACA7mG,MAAA+P,EAAA64F,oBACA3oG,UAAA8P,EAAA45F,uBACAzvE,KAAAnqB,EAAA84F,oBAEAv1E,KAAAvjB,EAAAitB,MACAqqE,eAAAt3F,EAAAu5F,gBACAtV,qBAAAjkF,EAAAokF,sBACA53B,IAAAxsD,EAAAysD,KACAp7D,OAAA2O,EAAA3O,SACA0lG,WAAA/2F,EAAAw5F,YACAxC,yBAAAh3F,EAAAg3F,yBAAAt9G,KAAAsmB,KAGAA,EAAA+5F,sBAAA/5F,EAAA3O,SAAA2C,GAEA,IACAgM,EAAAg6F,sBACS,MAAA5gH,IAET,OADAkvE,GAAAz/C,IAAAa,KAAA,iCAAAtwB,IACA4mB,EAAAm/E,YAAAiP,YAAA,UAGApuF,EAAAi6F,iBAEAj6F,EAAA3tB,QAAA,0BAEAZ,KAAA2yG,sBAAAxyG,GAAA,4BACA,IAAAsoH,EAAAl6F,EAAAokF,sBAAApwF,QAEA,IAAAkmG,EAAA,CAGAl6F,EAAAm6F,8BAEA,IAAAC,OAAA,EAcA,OAZAp6F,EAAAm5F,2BACAiB,EAAAp6F,EAAAq6F,yBAGAD,IACAA,EAAAp6F,EAAAs6F,kBAGAt6F,EAAAu6F,cAAAH,OAEAp6F,EAAAokF,sBAAApwF,MAAAgM,EAAAu6F,eA4BA,GAvBAv6F,EAAAq5F,aACAr5F,EAAAw6F,cAAAN,GAOAl6F,EAAA84F,mBAAA9qG,SAAAksG,EAAAl6F,EAAAu5F,iBAEAv5F,EAAAy6F,iBAKAz6F,EAAAitB,MAAA3H,WACAtlB,EAAA84F,mBAAAhqE,OAEA9uB,EAAA64F,qBACA74F,EAAA64F,oBAAA/pE,SAIAorE,EAAAhrG,QAAA,CACA,IAAAwrG,EAAA,WACA,IAAAnK,EAAAvwF,EAAA82B,WAEA,IAAAy5D,EAAA/9G,QACAwtB,EAAAm/E,YAAAwb,kBAAApK,EAAA/qG,MAAA,GAAA+qG,EAAA18G,IAAA,KAIA,GAAAmsB,EAAArhB,aAAArJ,IAAA,CASA0qB,EAAAitB,MAAAzY,IAAA,iBARA,SAAAomF,IACA56F,EAAArhB,aAAArJ,IACAolH,IAEA16F,EAAAitB,MAAAzY,IAAA,iBAAAomF,UAMAF,OAIAjpH,KAAA2yG,sBAAAxyG,GAAA,mBACAouB,EAAAg3F,yBAAAh3F,EAAAokF,sBAAAz6E,SAEAl4B,KAAA2yG,sBAAAxyG,GAAA,2BACAouB,EAAA84F,mBAAA9uG,QAEAgW,EAAA84F,mBAAAtzE,UAEA/zC,KAAA2yG,sBAAAxyG,GAAA,yBACA,IAAAoiB,EAAAgM,EAAAokF,sBAAApwF,QAEA8lG,EAAA,IAAA95F,EAAAokF,sBAAA90F,eAAA,IAGA4/D,GAAAlvD,EAAAokF,sBAAA/yF,OAAA2O,EAAAokF,sBAAApwF,SACAgM,EAAAu5F,gBAAAxvG,QAAA,EAEAiW,EAAAu5F,gBAAAxvG,QAAA+vG,EAOA95F,EAAA84F,mBAAA9qG,SAAAgG,EAAAgM,EAAAu5F,iBAEAv5F,EAAA84F,mBAAAhqE,OAEA9uB,EAAAitB,MAAA56C,QAAA,CACAR,KAAA,cACAyiC,SAAA,MAGA7iC,KAAA2yG,sBAAAxyG,GAAA,+BACA,IAAAsoH,EAAAl6F,EAAAokF,sBAAApwF,QAEAgM,EAAA66F,oBAAAX,KAOAl6F,EAAAg3F,yBAAA,CACA/1F,QAAA,iCAIAjB,EAAAitB,MAAA56C,QAAA,oBAGAZ,KAAA2yG,sBAAAxyG,GAAA,+BACAouB,EAAAitB,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,6BAGAzc,KAAA2yG,sBAAAxyG,GAAA,8BACAouB,EAAAitB,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,8BAUG,CACH5W,IAAA,wBACAwB,MAAA,SAAAuY,EAAA2C,GACA,IAAAzC,EAAAF,EAAAE,aAAA,GACAupG,GAAA,EACAC,EAAA3jH,OAAAiW,KAAAkE,EAAAtB,OAEA,QAAA6Q,KAAAvP,EAAAtB,MACA,QAAA2B,KAAAL,EAAAtB,MAAA6Q,GAAA,CACAvP,EAAAtB,MAAA6Q,GAAAlP,GAEApL,MACAs0G,GAAA,GAKAA,GACArpH,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,gBAIA9W,OAAAiW,KAAAkE,EAAArB,WAAA1d,QACAf,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,eAIAkiE,GAAAf,SAAAK,MAAA17D,IACAviB,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,YAIAkiE,GAAAf,SAAAM,OAAA37D,IACAviB,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,aAIA6sG,EAAAvoH,QAAA4E,OAAAiW,KAAAkE,EAAAtB,MAAA8qG,EAAA,KAAAvoH,OAAA,GACAf,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,wBAIAzc,KAAA4nH,aACA5nH,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,4BAWG,CACH5W,IAAA,+BACAwB,MAAA,WACA,IAAA6lC,EAAAltC,KAEAA,KAAAqnH,mBAAAlnH,GAAA,6BACA,IAAAopH,EAAAr8E,EAAA27E,iBAEAW,EAAAt8E,EAAAylE,sBAAApwF,QAEA+tB,EAAApD,EAAAsO,MAAAlL,WAEAm5E,EAAAn5E,EAAAvvC,OAAAuvC,EAAAluC,IAAAkuC,EAAAvvC,OAAA,GAAAmsC,EAAAsO,MAAAe,cAAA,EAEAmtE,EAAAx8E,EAAAw8E,uBAMAF,EAAA/rG,SAEAyvB,EAAAhgC,WAAAwnG,GAAAO,2BACAsU,EAAA7sG,WAAAW,UAAAmsG,EAAA9sG,WAAAW,WAEAosG,GAAAC,IACAx8E,EAAAylE,sBAAApwF,MAAAgnG,GAGAr8E,EAAAsO,MAAA56C,QAAA,qBAEAZ,KAAAqnH,mBAAAlnH,GAAA,sBACA+sC,EAAAtsC,QAAA,cAEAZ,KAAAqnH,mBAAAlnH,GAAA,mBACA+sC,EAAAq4E,yBAAAr4E,EAAAm6E,mBAAAnvF,WAEAl4B,KAAAqnH,mBAAAlnH,GAAA,4BACA+sC,EAAAy8E,sBAEA3pH,KAAAqnH,mBAAAlnH,GAAA,6BACA+sC,EAAAsO,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,2BAGAzc,KAAAonH,oBAAAjnH,GAAA,4BACA+sC,EAAAy8E,sBAEA3pH,KAAAqnH,mBAAAlnH,GAAA,mBACA+sC,EAAA08E,kBAEA5pH,KAAAqnH,mBAAAlnH,GAAA,wBACA+sC,EAAAq4E,yBAAA,CACA/1F,QAAA,mGA3cA,OA8cAxvB,KAAAqnH,mBAAAlnH,GAAA,6BAGA+sC,EAAAsO,MAAA56C,QAAA,eAEAZ,KAAAqnH,mBAAAlnH,GAAA,8BAAA0P,GAGAq9B,EAAAsO,MAAA56C,QAAA,CACAR,KAAA,2BACA2sG,QAAAl9F,EAAAk9F,YAGA/sG,KAAAonH,oBAAAjnH,GAAA,mBACA+sC,EAAA08E,oBAGG,CACH/jH,IAAA,sBACAwB,MAAA,WACA,OAAA1D,KAAAmgB,IAAA9jB,KAAAonH,oBAAApM,mBAAAh7G,KAAAqnH,mBAAArM,sBAMG,CACHn1G,IAAA,OACAwB,MAAA,WACArH,KAAAqnH,mBAAAhqE,OAEAr9C,KAAA+nH,YAAAvpG,MAAAymG,sBACAjlH,KAAAonH,oBAAA/pE,OAGAr9C,KAAA+nH,YAAAtpG,UAAAwmG,sBACAjlH,KAAAmoH,uBAAA9qE,SAWG,CACHx3C,IAAA,uBACAwB,MAAA,WACA,IAAAkb,EAAAviB,KAAA6oH,iBAEAtmG,IAAAviB,KAAA2yG,sBAAApwF,UACAviB,KAAA2yG,sBAAApwF,SACAviB,KAAAqnH,mBAAAhL,iBAYG,CACHx2G,IAAA,qBACAwB,MAAA,WACA,IAAAgmC,EAAArtC,KAEAuiB,EAAAviB,KAAA6oH,iBAEAtmG,IAAAviB,KAAA2yG,sBAAApwF,UAIAviB,KAAA2yG,sBAAApwF,SAOAviB,KAAAqnH,mBAAAzL,gBAAA,WAGA/kC,GAAAjnC,QAAAN,YAAAunC,GAAAjnC,QAAAT,QACA9B,EAAAmO,MAAA8E,eAAAjT,EAAAmO,MAAAe,cAAA,KAEAlP,EAAAmO,MAAA8E,eAAAjT,EAAAmO,MAAAe,oBAQG,CACH12C,IAAA,OACAwB,MAAA,WACA,IAAArH,KAAAwoH,iBAAA,CAIAxoH,KAAAw7C,MAAAquE,SACA7pH,KAAA2nH,QAAA,GAGA3nH,KAAA24G,cACA34G,KAAAq9C,OAGA,IAAAyhE,EAAA9+G,KAAAw7C,MAAA6J,WAGA,OAAArlD,KAAAw7C,MAAAtuC,aAAArJ,KACA7D,KAAAw7C,MAAAe,cAAAuiE,EAAA/qG,MAAA,GACA/T,KAAA2nH,QAAA7I,EAAA18G,IAAA08G,EAAA/9G,OAAA,SAFA,KAWG,CACH8E,IAAA,iBACAwB,MAAA,WACA,IAAAo5C,EAAAzgD,KAEAuiB,EAAAviB,KAAA2yG,sBAAApwF,QAMA,IAAAA,GAAAviB,KAAAw7C,MAAA3H,UAAA7zC,KAAA24G,aACA,SAIA,IAAAp2F,EAAA9E,QAAA,CACA,IAAAqhG,EAAA9+G,KAAAqlD,WAEA,IAAAy5D,EAAA/9G,OAGA,SAGA,GAAA81E,GAAAjnC,QAAAN,YAAA,IAAAtvC,KAAAw7C,MAAA7jC,aAYA,OATA3X,KAAAw7C,MAAAzY,IAAA,4BACA0d,EAAA7/C,QAAA,aAEA6/C,EAAAknE,QAAA7I,EAAA18G,IAAA,IAEAq+C,EAAAk4D,WAAA,WACA,aAGA,EAIA34G,KAAAY,QAAA,aAEAZ,KAAA2nH,QAAA7I,EAAA18G,IAAA,IASA,OANApC,KAAA24G,WAAA,WACA,UAIA34G,KAAAq9C,QACA,IAQG,CACHx3C,IAAA,oBACAwB,MAAA,WAIA,IACArH,KAAAuoH,sBACO,MAAA5gH,IAEP,OADAkvE,GAAAz/C,IAAAa,KAAA,kCAAAtwB,IACA3H,KAAA0tG,YAAAiP,YAAA,UAMA,GAAA38G,KAAAw7C,MAAAktB,WAAA,CACA,IAAAhd,EAAA1rD,KAAAw7C,MAAA5T,OAGA,qBAAA8jB,GAAA,oBAAAA,EAAAla,MACAka,EAAAla,KAAA,cAAA7pC,MAIA3H,KAAAY,QAAA,gBAWG,CACHiF,IAAA,gBACAwB,MAAA,WACA,IAAAyiH,EAAA9pH,KAAAqnH,mBAAA9M,OAEAv6G,KAAA+nH,YAAAvpG,MAAAymG,uBAMA6E,GAJA9pH,KAAAqnH,mBAAAnO,gBAAAl5G,KAAAqnH,mBAAAnO,eAAAqG,cAIAuK,GAAA9pH,KAAAonH,oBAAA7M,OAGAv6G,KAAAonH,oBAAA7M,QAIAuP,GACA9pH,KAAA0tG,YAAAiP,gBASG,CACH92G,IAAA,sBACAwB,MAAA,SAAAkV,GAGA,IAFAvc,KAAAqlD,WAEAtkD,OAEA,SAGA,IAAAg7E,EAAA/7E,KAAAo6G,gBAAA2P,eAAAxtG,EAAAvc,KAAA0tG,YAAAxgG,UAEA,UAAA6uE,EACA,SAKA,IAAAiuC,EAAArrC,GAAAf,SAAAhB,YAAArgE,EAAAw/D,GACAx/B,EAAAv8C,KAAAw7C,MAAAe,cACAjM,EAAAtwC,KAAAw7C,MAAAlL,WAEA,IAAAA,EAAAvvC,OAEA,OAAAipH,EAAAztE,GA1mdA0tE,GA6mdA,IAAAj6D,EAAA1f,EAAAluC,IAAAkuC,EAAAvvC,OAAA,GAGA,OAAAivD,EAAAzT,GAhndA0tE,IAgndAD,EAAAh6D,GAhndAi6D,KA6ndG,CACHpkH,IAAA,2BACAwB,MAAA,WACA,IAGAkiH,EAHArxF,EAAAj3B,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,MACA0+G,EAAA1+G,UAAA,GACAuoH,OAAA,EAUA,GAJAA,EAAAtxF,EAAA3b,UAAAvc,KAAA2yG,sBAAApwF,QACAo9F,KAAAznF,EAAAynF,mBAAA3/G,KAAA2/G,mBAGA6J,EAAA,CACAxpH,KAAAk4B,QAEA,IACA,OAAAl4B,KAAA0tG,YAAAiP,YAAA,WACS,MAAAh1G,IACT,OAAA3H,KAAAY,QAAA,UAIA,IAAAg7E,EAAA,IAAA57E,KAAA2yG,sBAAA/yF,OAAAvD,UAAA+C,OAAAm+D,IAAAx8E,OAEA,OAAA66E,GAEA/E,GAAAz/C,IAAAa,KAAA,mGACAj4B,KAAAw7C,MAAA56C,QAAA,iBACAZ,KAAA2yG,sBAAAt1D,KAAAu+B,KAIA4tC,EAAAnsC,aAAAv1D,KAAAtE,MAAA,IAAAm8F,EACA3/G,KAAAw7C,MAAA56C,QAAA,qBACAZ,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,8BAGA8sG,EAAAvpH,KAAA6oH,iBACAhyC,GAAAz/C,IAAAa,KAAA,sDAAAC,EAAA1I,QAAA,IAAA0I,EAAA1I,QAAA,uCACAxvB,KAAA2yG,sBAAApwF,MAAAgnG,MAMG,CACH1jH,IAAA,eACAwB,MAAA,WACArH,KAAAqnH,mBAAAtzE,QAEA/zC,KAAA+nH,YAAAvpG,MAAAymG,sBACAjlH,KAAAonH,oBAAArzE,QAGA/zC,KAAA+nH,YAAAtpG,UAAAwmG,sBACAjlH,KAAAmoH,uBAAAp0E,UAUG,CACHluC,IAAA,iBACAwB,MAAA,SAAAk1C,GACA,IAAAjM,EAAAgyC,GAAAtiF,KAAAw7C,MAAAlL,WAAAiM,GAEA,OAAAv8C,KAAA2yG,uBAAA3yG,KAAA2yG,sBAAApwF,SAOAviB,KAAA2yG,sBAAApwF,QAAA3F,SAQA0zB,KAAAvvC,OACAw7C,GAKAv8C,KAAAqnH,mBAAAzL,kBACA57G,KAAAqnH,mBAAA9uG,QAEAvY,KAAA+nH,YAAAvpG,MAAAymG,uBACAjlH,KAAAonH,oBAAAxL,kBACA57G,KAAAonH,oBAAA7uG,SAGAvY,KAAA+nH,YAAAtpG,UAAAwmG,uBACAjlH,KAAAmoH,uBAAAvM,kBACA57G,KAAAmoH,uBAAA5vG,cAIAvY,KAAAq9C,QAjCA,IAyCG,CACHx3C,IAAA,WACAwB,MAAA,WACA,OAAArH,KAAA2yG,sBAIA3yG,KAAA0tG,YACA1tG,KAAA0tG,YAAAxgG,SAGAyxE,GAAAf,SAAA1wE,SAAAlN,KAAA2yG,sBAAApwF,SAPA,IAeG,CACH1c,IAAA,WACAwB,MAAA,WACA,OAAArH,KAAA84G,YAEG,CACHjzG,IAAA,oBACAwB,MAAA,WACA,IAAA6iH,OAAA,EACAC,OAAA,EAEA,GAAAnqH,KAAA2yG,sBAAA,CAIA,IAAApwF,EAAAviB,KAAA2yG,sBAAApwF,QAEA,GAAAA,EAAA,CAIA,IAAAw5D,EAAA/7E,KAAAo6G,gBAAA2P,eAAAxnG,EAAAviB,KAAA0tG,YAAAxgG,UAEA,UAAA6uE,GAOA,KAFAmuC,EAAAvrC,GAAAf,SAAAv4B,SAAA9iC,EAAAw5D,IAEAh7E,OAAA,CAIA,GAAAf,KAAA+nH,YAAAvpG,MAAAymG,qBAAA,CAIA,GAHA1iG,EAAAviB,KAAA+nH,YAAAvpG,MAAAymG,qBAAA1iG,QAGA,QAFAw5D,EAAA/7E,KAAAo6G,gBAAA2P,eAAAxnG,EAAAviB,KAAA0tG,YAAAxgG,WAGA,OAKA,QAFAi9G,EAAAxrC,GAAAf,SAAAv4B,SAAA9iC,EAAAw5D,IAEAh7E,OACA,OAIAopH,EAIOA,EAAAp2G,MAAA,GAAAm2G,EAAA9nH,IAAA,IAAA8nH,EAAAn2G,MAAA,GAAAo2G,EAAA/nH,IAAA,GAEPpC,KAAA84G,UAAAoR,EAEAlqH,KAAA84G,UAAAjiC,GAAAzmC,iBAAA,EAAA+5E,EAAAp2G,MAAA,GAAAm2G,EAAAn2G,MAAA,GAAAo2G,EAAAp2G,MAAA,GAAAm2G,EAAAn2G,MAAA,GAAAo2G,EAAA/nH,IAAA,GAAA8nH,EAAA9nH,IAAA,GAAA+nH,EAAA/nH,IAAA,GAAA8nH,EAAA9nH,IAAA,MALApC,KAAA84G,UAAAoR,EAQAlqH,KAAAi0G,QAAA,qBAAAzxB,GAAAxiF,KAAA84G,WAAA,KACA94G,KAAAw7C,MAAA56C,QAAA,wBAMG,CACHiF,IAAA,iBACAwB,MAAA,WACA,IAAAu5C,EAAA5gD,KAEAoqH,EAAApqH,KAAA0tG,YAAAxgG,SACAm9G,EAAA1rC,GAAAf,SAAA1wE,SAAAlN,KAAA2yG,sBAAApwF,SACA+tB,EAAAtwC,KAAAw7C,MAAAlL,WAEAg6E,EAAA,SAAAA,IACA1pE,EAAA8sD,YAAAxgG,SAAAm9G,EAEAzpE,EAAApF,MAAA56C,QAAA,kBAEAggD,EAAA8sD,YAAArtE,oBAAA,aAAAiqF,IAGAh6E,EAAAvvC,OAAA,IACAspH,EAAA1mH,KAAAmgB,IAAAumG,EAAA/5E,EAAAluC,IAAAkuC,EAAAvvC,OAAA,KAIAqpH,IAAAC,IAEA,SAAArqH,KAAA0tG,YAAA/1F,WACA3X,KAAA0tG,YAAAxrE,iBAAA,aAAAooF,GAEAA,OASG,CACHzkH,IAAA,UACAwB,MAAA,WACA,IAAAk6C,EAAAvhD,KAEAA,KAAAm6G,WAAAh1B,YACAnlF,KAAA2yG,sBAAAtxG,UACArB,KAAAqnH,mBAAAhmH,UACA,sBAAA6C,QAAA,SAAA9D,GACA,IAAA+lH,EAAA5kE,EAAAwmE,YAAA3nH,GAAA+lH,OAEA,QAAAljH,KAAAkjH,EACAA,EAAAljH,GAAAiB,QAAA,SAAAiuG,GACAA,EAAAgT,gBACAhT,EAAAgT,eAAA9jH,cAKArB,KAAAonH,oBAAA/lH,UACArB,KAAAmoH,uBAAA9mH,YAQG,CACHwE,IAAA,SACAwB,MAAA,WACA,OAAArH,KAAA2yG,sBAAA/yF,SAQG,CACH/Z,IAAA,QACAwB,MAAA,WAEA,OAAArH,KAAA2yG,sBAAApwF,SAAAviB,KAAA8oH,gBAQG,CACHjjH,IAAA,sBACAwB,MAAA,WACA,IACAkjH,EADAhoG,EAAAviB,KAAA2yG,sBAAApwF,QAIA,GAAAA,GAAA,SAAAviB,KAAA0tG,YAAA/1F,WAAA,CAMA,IAFA4yG,EAAA5e,GAAA3rG,KAAA2yG,sBAAA/yF,OAAA2C,IAEAxhB,OAAA,EAEA,OADAf,KAAAk4B,MAAA,mEAAA3V,EAAA3E,YACA5d,KAAA0tG,YAAAiP,YAAA,UAGA38G,KAAAwqH,0BAAAD,GAGAvqH,KAAAyqH,6BAAAloG,MAEG,CACH1c,IAAA,4BACAwB,MAAA,SAAAkjH,GAKA,IAAA3W,EACA2W,EAAAxpH,OAAA,IACA,IAAAwpH,EAAA,GAAA9pH,QAAA,MAEA8pH,EAAA,KAAAA,EAAA,GACA,IAAA1zC,GAAA/xC,YAEA,KACA9kC,KAAAqnH,mBAAA/nG,SAAAirG,EAAA,GAAA3W,GAEA2W,EAAA,IACAvqH,KAAAonH,oBAAA9nG,SAAAirG,EAAA,GAAA3W,KAOG,CACH/tG,IAAA,8BACAwB,MAAA,WACArH,KAAA4f,SAAAvD,UAAAnY,QAAA,SAAAwmH,GAx3PA,IAAAC,EAy3PAD,EAAAhuG,WAAAa,QAAyCka,EAAA5tB,EAAQwmG,aAAgB54E,EAAA5tB,EAAQwmG,YAAAqB,kBAAiCj6E,EAAA5tB,EAAQwmG,YAAAqB,gBAAA,uBAz3PlHiZ,EAy3P0JD,EAAAhuG,WAAAa,OAx3P1JotG,EAAA7iH,QAAA,+BAAAyc,GACA,OAAA2mF,GAAA,CAAA3mF,IAAA,MAu3P0J,OAC1JmmG,EAAArtC,aAAAx5E,SAmBG,CACHgC,IAAA,+BACAwB,MAAA,SAAAkb,GACA,IAAAipF,EAAA,EACAT,EAAA,KACAvtF,OAAA,EAEA+E,EAAA7F,WAAAa,SACAC,EAAA8tF,GAAA/oF,EAAA7F,WAAAa,QACAwtF,EAAAvtF,EAAAutF,WACAS,EAAAhuF,EAAAguF,YAGAxrG,KAAA4f,SAAAvD,UAAAnY,QAAA,SAAAwmH,GACA,IAAAE,EAAA,CACApf,WAAA,EACAT,WAAA,MAGA2f,EAAAhuG,WAAAa,SACAqtG,EAAAtf,GAAAof,EAAAhuG,WAAAa,SAKAqtG,EAAApf,iBACAkf,EAAArtC,aAAAx5E,KAKA+mH,EAAA7f,iBACA2f,EAAArtC,aAAAx5E,SAIG,CACHgC,IAAA,gBACAwB,MAAA,SAAAkb,GACA,IAAA3S,EAAA,EACAkvG,EAAA9+G,KAAAqlD,WAEAy5D,EAAA/9G,SACA6O,EAAAkvG,EAAA/qG,MAAA,IAhqGgB,SAAAwO,EAAAxY,GAChB,IAAA6F,EAAA3O,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,KAEA,GAAAshB,EAAA3F,SAOA,IAHA,IAAA4lG,EAAA5yG,EACAgiC,OAAA,EAEA9wC,EAAA,EAAiBA,EAAAyhB,EAAA3F,SAAA7b,OAA2BD,IAAA,CAC5C,IAAAskB,EAAA7C,EAAA3F,SAAA9b,GAUA,GARA8wC,IAKAA,EAAA2wE,GAAAx4G,EAAAy4G,EAAAp9F,EAAAlY,SAAA,IAGA0kC,EAAA,CACA,aAAAxsB,EAAA,CAEAwsB,EAAAzhC,QAAAqyG,EACA5wE,EAAA8wE,UAAAF,EACAA,GAAAp9F,EAAAlY,SACA0kC,EAAA,KACA,SAGA,GAAA4wE,EAAA5wE,EAAAzhC,QAAA,CAEAqyG,GAAAp9F,EAAAlY,SACA,SAIA0kC,EAAAzhC,SAAAiV,EAAAlY,cAWA,GATA,WAAAkY,KACAwsB,EAAA,IAAkBna,EAAA5tB,EAAQsK,OAAAquG,IAAAp9F,EAAAlY,SAAAkY,EAAA8L,SAC1BuxF,YAAAD,EAGA5wE,EAAA8wE,UAAAF,EAAA76F,WAAAvC,EAAA8L,QACAnnB,EAAAuoC,OAAAV,IAGA,eAAAxsB,EAAA,CAEA,IAAAylG,EACAC,EAGAC,EAAA3lG,EAAAgM,WAAAtW,MAAA,KAAAxX,IAAAqkB,YAEAqjG,EAAA7xC,GAAA4xC,EAAA,GAEAF,EAAAG,EAAA,GACAF,EAAAE,EAAA,IACAp5E,EAAA,IAAkBna,EAAA5tB,EAAQsK,OAAAquG,IAAAp9F,EAAAlY,SAAA,KAC1Bu1G,YAAAD,EAAAqI,EACAj5E,EAAA8wE,UAAA9wE,EAAA6wE,YAAAqI,EACA/gH,EAAAuoC,OAAAV,GAIA4wE,GAAAp9F,EAAAlY,UA+lGM+9G,CAAY1oG,EAAAviB,KAAA6nH,cAAAj4G,KAQf,CACH/J,IAAA,mBACAwB,MAAA,WACA,IAAAk1C,EAAAv8C,KAAAw7C,MAAAe,cACAqgB,EAAA83C,GAAAC,mBACAh7C,EAAA+6C,GAAAG,wBACA/wF,EAAAngB,KAAAmgB,IAAA84C,EAAA83C,GAAAE,wBACA,OAAAjxG,KAAAG,IAAA84D,EAAArgB,EAAAod,EAAA71C,KAQG,CACHje,IAAA,qBACAwB,MAAA,WACA,IAAAk1C,EAAAv8C,KAAAw7C,MAAAe,cACAqgB,EAAA83C,GAAAM,sBACAr7C,EAAA+6C,GAAAQ,2BACApxF,EAAAngB,KAAAmgB,IAAA84C,EAAA83C,GAAAO,2BACA,OAAAtxG,KAAAG,IAAA84D,EAAArgB,EAAAod,EAAA71C,OAGAyjG,EA1pC4B,CA2pC3B1wC,GAAA/xC,aAsDDomF,GAAA,SAAAA,EAAAC,EAAA5uG,EAAAtZ,GACE81E,GAAc/4E,KAAAkrH,GAChB,IAzCAE,EAAAC,EAAAC,EAyCAC,EAAAJ,EAAAK,0BAIAC,EAAAF,GAHAJ,EAAArjF,SAAA4jF,oBAEA,iBACA,kBAAAzjH,KAAAsjH,GAEA,GAAAhvG,EAAAG,WAAAgC,WAAA,CACA,IAAAqP,EAAAxR,EAAAG,WAAAgC,WACA1e,KAAA2e,MAAAoP,EAAApP,MACA3e,KAAA4e,OAAAmP,EAAAnP,OAGA5e,KAAAsd,UAAAf,EAAAG,WAAAW,UAGArd,KAAAiD,KAGAjD,KAAAg3C,SA3DAo0E,EA2DAD,EAAA9uG,UA3DAgvG,EA2DA9uG,EAAAxH,IA3DAu2G,EA2DAG,EA1DA,SAAAjzF,GACA,IAAAjc,EAAA6uG,EAAAxrG,OAAAvD,UAAAgvG,GACAM,EAAAruC,GAAA/gE,GACAqvG,EAAAruC,GAAAhhE,GAEA,2BAAAic,EACAozF,GAGApzF,SACAjc,EAAAikB,SAEAjkB,EAAAikB,UAAA,EAGAhI,IAAAozF,GAAAD,IAEAL,IAEA9yF,EACA4yF,EAAAxqH,QAAA,oBAEAwqH,EAAAxqH,QAAA,sBAIA43B,MAiEAqzF,GAAA,+CAKIC,GAAe,WAMnB,SAAAC,EAAA/hH,GACA,IAAAijB,EAAAjtB,KAEI+4E,GAAc/4E,KAAA+rH,GAClB/rH,KAAAw7C,MAAAxxC,EAAA8nC,KACA9xC,KAAAqlD,SAAAr7C,EAAAq7C,SACArlD,KAAAwhF,OAAAx3E,EAAAw3E,OACAxhF,KAAAgsH,mBAAA,EACAhsH,KAAAisH,iBAAA,KACAjsH,KAAAksH,OAAA,KACAlsH,KAAAmsH,yBAAA,KACAnsH,KAAAi0G,QAAAR,GAAA,mBACAzzG,KAAAi0G,QAAA,cAEA,IAAAmY,EAAA,WACA,OAAAn/F,EAAAo/F,uBAGAC,EAAA,WACA,OAAAr/F,EAAAs/F,gBAGAC,EAAA,WACA,OAAAv/F,EAAAw/F,gBAGAC,EAAA,WACA,OAAAz/F,EAAA0/F,kBAGA3sH,KAAAw7C,MAAAr7C,GAAA,kBAAAusH,GACA1sH,KAAAw7C,MAAAr7C,GAAA,UAAAmsH,GACAtsH,KAAAw7C,MAAAr7C,GAAA0rH,GAAAW,GACAxsH,KAAAw7C,MAAAr7C,GAAA,UAAAisH,GAEApsH,KAAAqB,QAAA,WACA4rB,EAAAgnF,QAAA,WAEAhnF,EAAAuuB,MAAAj7C,IAAA,kBAAAmsH,GAEAz/F,EAAAuuB,MAAAj7C,IAAA,UAAA+rH,GAEAr/F,EAAAuuB,MAAAj7C,IAAAsrH,GAAAW,GAEAv/F,EAAAuuB,MAAAj7C,IAAA,UAAA6rH,GAEAn/F,EAAAk/F,0BACQ10F,EAAA5tB,EAAQ0M,aAAA0W,EAAAk/F,0BAGhBl/F,EAAAw/F,gBA6UA,OAnUEzzC,GAAW+yC,EAAA,EACblmH,IAAA,sBACAwB,MAAA,WACArH,KAAA4sH,oBAEA5sH,KAAAmsH,0BACQ10F,EAAA5tB,EAAQ0M,aAAAvW,KAAAmsH,0BAIhBnsH,KAAAmsH,yBAAsC10F,EAAA5tB,EAAQ+N,WAAA5X,KAAAqsH,oBAAApkH,KAAAjI,MAAA,OAU3C,CACH6F,IAAA,oBACAwB,MAAA,WACA,GAAArH,KAAAw7C,MAAA8wB,WAAAtsE,KAAA2sH,iBAGA,OAFA3sH,KAAAgsH,mBAAA,OACAhsH,KAAAisH,iBAAAjsH,KAAAw7C,MAAAe,eAIA,IAAAv8C,KAAAw7C,MAAA3H,WAAA7zC,KAAAw7C,MAAA8wB,UAAA,CAIA,IAAA/vB,EAAAv8C,KAAAw7C,MAAAe,cACAjM,EAAAtwC,KAAAw7C,MAAAlL,WAEA,GAAAtwC,KAAAisH,mBAAA1vE,KAAAjM,EAAAvvC,QAAAw7C,EA9weA0tE,IA8weA35E,EAAAluC,IAAAkuC,EAAAvvC,OAAA,IAMA,OAAAf,KAAAusH,eAGAvsH,KAAAgsH,oBAAA,GAAAzvE,IAAAv8C,KAAAisH,kBACAjsH,KAAAgsH,qBACAhsH,KAAA6sH,YACOtwE,IAAAv8C,KAAAisH,iBACPjsH,KAAAgsH,sBAEAhsH,KAAAgsH,mBAAA,EACAhsH,KAAAisH,iBAAA1vE,MAUG,CACH12C,IAAA,eACAwB,MAAA,WACArH,KAAAgsH,mBAAA,EAEAhsH,KAAAksH,SACAlsH,KAAAi0G,QAAA,gBACA19F,aAAAvW,KAAAksH,SAGAlsH,KAAAksH,OAAA,OASG,CACHrmH,IAAA,iBACAwB,MAAA,WACA,IAAAilE,EAAAtsE,KAAAw7C,MAAA8wB,UACAjnB,EAAArlD,KAAAqlD,WACA9I,EAAAv8C,KAAAw7C,MAAAe,cACAilC,OAAA,EAEAlV,GAAAtsE,KAAA8sH,qBAAAznE,EAAA9I,KAGAilC,EAFAn8B,EAAAjjD,IAAAijD,EAAAtkD,OAAA,IAKAurE,GAAAtsE,KAAA+sH,sBAAA1nE,EAAA9I,KAIAilC,EAHAn8B,EAAAtxC,MAAA,GA10eAk2G,IAg1eA,2BAAAzoC,IACAxhF,KAAAi0G,QAAA,8CAAA13D,EAAA,wBAAAimC,GAAAn9B,GAAA,gBAAAm8B,EAAA,KACAxhF,KAAAwhF,WACA,KAWG,CACH37E,IAAA,WACAwB,MAAA,WACA,IAAArH,KAAAusH,eAAA,CAKA,IAAAhwE,EAAAv8C,KAAAw7C,MAAAe,cACAjM,EAAAtwC,KAAAw7C,MAAAlL,WACA08E,EAAA1qC,GAAAhyC,EAAAiM,GASA,OAAAywE,EAAAjsH,QAAAw7C,EAAA,GAAAywE,EAAA5qH,IAAA,IACApC,KAAAysH,eACAzsH,KAAAwhF,OAAAjlC,GACAv8C,KAAAi0G,QAAA,cAAA13D,EAAA,oCAAAywE,EAAAj5G,MAAA,UAAAi5G,EAAA5qH,IAAA,4EAEApC,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,8BAPA,KAqBG,CACH5W,IAAA,eACAwB,MAAA,WACA,IAAAg+C,EAAArlD,KAAAqlD,WACA9I,EAAAv8C,KAAAw7C,MAAAe,cAEA,GAAAv8C,KAAAw7C,MAAA8wB,WAAAtsE,KAAA2sH,iBAEA,SAGA,GAAA3sH,KAAAw7C,MAAA8wB,WAAA,OAAAtsE,KAAAksH,OAEA,SAGA,GAAAlsH,KAAA+sH,sBAAA1nE,EAAA9I,GAAA,CACA,IAAA0wE,EAAA5nE,EAAAjjD,IAAAijD,EAAAtkD,OAAA,GASA,OARAf,KAAAi0G,QAAA,mCAAA13D,EAAA,0CAAA0wE,GACAjtH,KAAAysH,eACAzsH,KAAAwhF,OAAAyrC,GAEAjtH,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,qBAEA,EAGA,IAAA6zB,EAAAtwC,KAAAw7C,MAAAlL,WACA48E,EAAA3qC,GAAAjyC,EAAAiM,GAEA,GAAAv8C,KAAAmtH,gBAAAD,EAAA58E,EAAAiM,GAYA,OAPAv8C,KAAAysH,eACAzsH,KAAAwhF,OAAAjlC,GAEAv8C,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,yBAEA,EAIA,GAAAywG,EAAAnsH,OAAA,GACA,IAAAqsH,EAAAF,EAAAn5G,MAAA,GAAAwoC,EAGA,OAFAv8C,KAAAi0G,QAAA,cAAA13D,EAAA,uBAAA6wE,EAAA,gBAAAF,EAAAn5G,MAAA,IACA/T,KAAAksH,OAAAt0G,WAAA5X,KAAAqtH,YAAAplH,KAAAjI,MAAA,IAAAotH,EAAA7wE,IACA,EAIA,WAEG,CACH12C,IAAA,uBACAwB,MAAA,SAAAg+C,EAAA9I,GACA,QAAA8I,EAAAtkD,QAKAw7C,EAAA8I,EAAAjjD,IAAAijD,EAAAtkD,OAAA,GAx8eAkpH,KA88eG,CACHpkH,IAAA,wBACAwB,MAAA,SAAAg+C,EAAA9I,GACA,SAAA8I,EAAAtkD,QACAskD,EAAAtxC,MAAA,MAAAwoC,EAAA8I,EAAAtxC,MAAA,GAl9eAk2G,MAw9eG,CACHpkH,IAAA,kBACAwB,MAAA,SAAA6lH,EAAA58E,EAAAiM,GACA,OAAA2wE,EAAAnsH,OAAA,CAGA,IAAAusH,EAAAttH,KAAAutH,uBAAAj9E,EAAAiM,GAEA,GAAA+wE,EAEA,OADAttH,KAAAi0G,QAAA,mCAAAqZ,EAAAv5G,MAAA,OAAAu5G,EAAAlrH,IAAA,6BAAAm6C,IACA,EAIA,WASG,CACH12C,IAAA,cACAwB,MAAA,SAAAmmH,GACA,IAAAl9E,EAAAtwC,KAAAw7C,MAAAlL,WACAiM,EAAAv8C,KAAAw7C,MAAAe,cACA2wE,EAAA3qC,GAAAjyC,EAAAiM,GACAv8C,KAAAysH,eAEA,IAAAS,EAAAnsH,QAAAw7C,IAAAixE,IAIAxtH,KAAAi0G,QAAA,8BAAA13D,EAAA,yBAAAixE,EAAA,mBAAAN,EAAAn5G,MAAA,IAEA/T,KAAAwhF,OAAA0rC,EAAAn5G,MAAA,GAngfA,MAogfA/T,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,oBAGG,CACH5W,IAAA,yBACAwB,MAAA,SAAAipC,EAAAiM,GAyBA,IAFA,IAAAkxE,EAz+eA,SAAAn9E,GACA,GAAAA,EAAAvvC,OAAA,EACA,OAAA81E,GAAAzmC,mBAKA,IAFA,IAAAjvB,EAAA,GAEArgB,EAAA,EAAiBA,EAAAwvC,EAAAvvC,OAAqBD,IAAA,CACtC,IAAAiT,EAAAu8B,EAAAluC,IAAAtB,EAAA,GACAsB,EAAAkuC,EAAAv8B,MAAAjT,GACAqgB,EAAAhgB,KAAA,CAAA4S,EAAA3R,IAGA,OAAAy0E,GAAAzmC,iBAAAjvB,GA49eAusG,CAAAp9E,GAEAxvC,EAAA,EAAqBA,EAAA2sH,EAAA1sH,OAAiBD,IAAA,CACtC,IAAAiT,EAAA05G,EAAA15G,MAAAjT,GACAsB,EAAAqrH,EAAArrH,IAAAtB,GAEA,GAAAy7C,EAAAxoC,EAAA,GAAAwoC,EAAAxoC,EAAA,EACA,OACAA,QACA3R,OAKA,gBAGA2pH,EArYmB,GAwYnB4B,GAAA,CACAC,cAAA,GACAC,UAAA,SAAA9pE,GAKA,OAAAA,EAJA/jD,KAAA8xC,KAAA,CACAg8E,0BAAA,IAEApqE,kBA0HAqqE,GAAA,SAAA/jH,IA9GA,SAAAgkH,EAAApqF,EAAA55B,GACA,IAAAikH,EAAA,EACAzsC,EAAA,EACA0sC,EAAAr3C,GAAArvC,aAAAmmF,GAAA3jH,GACA45B,EAAA+D,MAAA,WACA/D,EAAAhjC,QAAA,CACAR,KAAA,QACAqc,KAAA,mCAUA,IAAA0xG,EAAA,WACA3sC,GACA59C,EAAA2Y,YAAAilC,IAWAj+B,EAAA,SAAAqrB,GACA,OAAAA,QAAAjhE,IAAAihE,IAIA4S,EAAA59C,EAAA12B,aAAArJ,KAAA+/B,EAAA2Y,eAAA,EACA3Y,EAAAb,IAAA,iBAAAorF,GACAvqF,EAAAsO,IAAA08B,GACAhrC,EAAAhjC,QAAA,CACAR,KAAA,QACAqc,KAAA,qBAEAmnB,EAAAgE,SAUAwmF,EAAA,WAGA,GAAAtmG,KAAAtE,MAAAyqG,EAAA,IAAAC,EAAAN,cACAhqF,EAAAhjC,QAAA,CACAR,KAAA,QACAqc,KAAA,kCAHA,CAQA,GAAAyxG,EAAAL,WAAA,oBAAAK,EAAAL,UAMA,OADAI,EAAAnmG,KAAAtE,MACA0qG,EAAAL,UAAA3sH,KAAA0iC,EAAA2f,GALAszB,GAAAz/C,IAAAc,MAAA,2EAcAm2F,EAAA,SAAAA,IACAzqF,EAAArjC,IAAA,iBAAA4tH,GACAvqF,EAAArjC,IAAA,QAAA6tH,GACAxqF,EAAArjC,IAAA,UAAA8tH,IAeAzqF,EAAAzjC,GAAA,QAAAiuH,GACAxqF,EAAAzjC,GAAA,UAAAkuH,GAGAzqF,EAAAmqF,oBATA,SAAAnvC,GACAyvC,IACAL,EAAApqF,EAAAg7C,IAkBAovC,CAAAhuH,KAAAgK,IAKA6sE,GAAAkB,IAAA,aAAAn0C,GACA,OACA2f,UAAA,SAAArB,EAAA6B,GAEAA,EAAA,KAAA7B,IAMA5B,eAAA,SAAA7+B,GAKA,OAJAmiB,EAAA0qF,KAAA1qF,EAAAmrC,gBAAA78B,MAAAtO,EAAA0qF,IAAAC,QAAAr8E,KACAtO,EAAA0qF,IAAAhuE,eAAA7+B,GAGAA,GAMAmmB,KAAA,WACAhE,EAAA0qF,KAAA1qF,EAAAmrC,gBAAA78B,MAAAtO,EAAA0qF,IAAAC,QAAAr8E,KACAtO,EAAA0qF,IAAAhuE,eAAA1c,EAAA2Y,mBAYA,IAAAiyE,GAAA,CACA3zC,eAAkBD,GAClBgD,YACA/nD,UAAaD,EACbrB,YAAeA,EACfpB,QAAWA,EACX0sD,SACA4uC,2BAvyLA,WACA,OAlHkB,SAAA7uG,EAAA8uG,EAAAC,EAAAC,EAAAC,GAElB,IAAAC,EAAAlvG,EAAAvD,UAAA/Y,IAAA,SAAAiZ,GACA,IAAAoC,EACAC,EAMA,OAJAD,EAAApC,EAAAG,WAAAgC,YAAAnC,EAAAG,WAAAgC,WAAAC,MACAC,EAAArC,EAAAG,WAAAgC,YAAAnC,EAAAG,WAAAgC,WAAAE,OAGA,CACAtB,UAHAf,EAAAG,WAAAW,WAC6Boa,EAAA5tB,EAAQwb,OAAAs4D,UAGrCh/D,QACAC,SACArC,cAGAo7F,GAAAmX,EAAA,SAAAtxF,EAAAszB,GACA,OAAAtzB,EAAAlgB,UAAAwzC,EAAAxzC,YASA,IAAAyxG,GALAD,IAAA1vG,OAAA,SAAA4vG,GACA,OAAApxC,GAAAN,eAAA0xC,EAAAzyG,aAIA6C,OAAA,SAAA4vG,GACA,OAAApxC,GAAAL,UAAAyxC,EAAAzyG,YAGAwyG,EAAAhuH,SAIAguH,EAAAD,EAAA1vG,OAAA,SAAA4vG,GACA,OAAApxC,GAAAI,WAAAgxC,EAAAzyG,aAMA,IAAA0yG,EAAAF,EAAA3vG,OAAA,SAAA4vG,GACA,OAAAA,EAAA1xG,UAAAo3F,GAAAK,mBAAA2Z,IAEAQ,EAAAD,IAAAluH,OAAA,GAGAouH,EAAAF,EAAA7vG,OAAA,SAAA4vG,GACA,OAAAA,EAAA1xG,YAAA4xG,EAAA5xG,YACG,GAEH,QAAAuxG,EAAA,CACA,IAAAO,EAAAD,GAAAJ,EAAA,IAAAD,EAAA,GAEA,OAAAM,IAAA7yG,SAAA,KAIA,IAAA8yG,EAAAJ,EAAA7vG,OAAA,SAAA4vG,GACA,OAAAA,EAAArwG,OAAAqwG,EAAApwG,SAGA+4F,GAAA0X,EAAA,SAAA7xF,EAAAszB,GACA,OAAAtzB,EAAA7e,MAAAmyC,EAAAnyC,QAGA,IAAA2wG,EAAAD,EAAAjwG,OAAA,SAAA4vG,GACA,OAAAA,EAAArwG,QAAAgwG,GAAAK,EAAApwG,SAAAgwG,IAEAM,EAAAI,IAAAvuH,OAAA,GAEA,IAAAwuH,EAAAD,EAAAlwG,OAAA,SAAA4vG,GACA,OAAAA,EAAA1xG,YAAA4xG,EAAA5xG,YACG,GACHkyG,OAAA,EACAC,OAAA,EACAC,OAAA,EAGAH,IAKAE,GAJAD,EAAAH,EAAAjwG,OAAA,SAAA4vG,GACA,OAAAA,EAAArwG,MAAAgwG,GAAAK,EAAApwG,OAAAgwG,KAGAxvG,OAAA,SAAA4vG,GACA,OAAAA,EAAArwG,QAAA6wG,EAAA,GAAA7wG,OAAAqwG,EAAApwG,SAAA4wG,EAAA,GAAA5wG,SAIAswG,EAAAO,IAAA1uH,OAAA,GACA2uH,EAAAD,EAAArwG,OAAA,SAAA4vG,GACA,OAAAA,EAAA1xG,YAAA4xG,EAAA5xG,YACK,IAIL,IAAAqyG,EAAAD,GAAAH,GAAAJ,GAAAJ,EAAA,IAAAD,EAAA,GACA,OAAAa,IAAApzG,SAAA,KAgBSqzG,CAAc5vH,KAAAqc,UAAAuD,OAAA5f,KAAA6vH,gBAAAxuG,SAAuDq2F,GAAoB13G,KAAAw7C,MAAArzB,KAAA,aAAA9G,SAA0Cq2F,GAAoB13G,KAAAw7C,MAAArzB,KAAA,cAAAnoB,KAAA6uH,mCAuyLhKiB,0BAjsLA,WAGA,IAAAzzG,EAAArc,KAAAqc,UAAAuD,OAAAvD,UAAA+C,OAAAw+D,GAAAL,WAaA,OAXAo6B,GAAAt7F,EAAA,SAAAxS,EAAAC,GACA,OAAWiuG,GAAwBluG,EAAAC,KAOnCuS,EAAA+C,OAAA,SAAA7C,GACA,OAAA+uF,GAAA/uF,EAAAG,WAAAa,QAAAwtF,aAEA,UAkrLAglB,yBAA4BhY,GAC5BiY,0BAr8L6B,SAAAxyF,EAAAszB,GAC7B,IAAAm/D,OAAA,EACAC,OAAA,EAeA,OAbA1yF,EAAA9gB,WAAAgC,YAAA8e,EAAA9gB,WAAAgC,WAAAC,QACAsxG,EAAAzyF,EAAA9gB,WAAAgC,WAAAC,OAGAsxG,KAA2Bx4F,EAAA5tB,EAAQwb,OAAAs4D,UAEnC7sB,EAAAp0C,WAAAgC,YAAAoyC,EAAAp0C,WAAAgC,WAAAC,QACAuxG,EAAAp/D,EAAAp0C,WAAAgC,WAAAC,OAMAsxG,KAHAC,KAA6Bz4F,EAAA5tB,EAAQwb,OAAAs4D,YAGrCngD,EAAA9gB,WAAAW,WAAAyzC,EAAAp0C,WAAAW,UACAmgB,EAAA9gB,WAAAW,UAAAyzC,EAAAp0C,WAAAW,UAGA4yG,EAAAC,GAi7LAx6G,IAAA8oE,MAGA,gLAAAt6E,QAAA,SAAAqG,GACA5E,OAAAC,eAAA4oH,GAAAjkH,EAAA,CACA6rB,IAAA,WAEA,OADAygD,GAAAz/C,IAAAa,KAAA,aAAA1tB,EAAA,kDACAmqG,GAAAnqG,IAEAoB,IAAA,SAAAtE,GACAwvE,GAAAz/C,IAAAa,KAAA,aAAA1tB,EAAA,kDAEA,kBAAAlD,KAAA,EACAwvE,GAAAz/C,IAAAa,KAAA,gBAAA1tB,EAAA,uCAIAmqG,GAAAnqG,GAAAlD,OAIA,IAEA8oH,GAAA,SAAA/vH,GAGA,GAFA,yDAEAmI,KAAAnI,GACA,YAKA,MAFA,2BAEAmI,KAAAnI,GACA,OAGA,MAWAgwH,GAAA,SAAAC,EAAAlL,GAIA,IAHA,IAAAtJ,EAAAsJ,EAAA5iG,QACAu6C,GAAA,EAEAh8D,EAAA,EAAiBA,EAAAuvH,EAAAtvH,OAA0BD,IAC3C,GAAAuvH,EAAAvvH,GAAAmC,KAAA44G,EAAA9mG,IAAA,CACA+nD,EAAAh8D,EACA,MAIAuvH,EAAAC,eAAAxzD,EACAuzD,EAAAzvH,QAAA,CACAk8D,gBACA18D,KAAA,YAqBAouH,GAAAvsE,cAAA,WACA,OAAA40B,GAAAz/C,IAAAa,KAAA,4EAGA,IA4BAs4F,GAAA,SAAApF,GACA,YAAAA,EAAArjF,SAAA0xE,WAAA,CAIA,IAAA51E,EAAAizC,GAAA9oC,QAAAo9E,EAAA3vE,MAAA1T,SAAAk8B,UAEA,GAAApgC,EAAA4sF,IAAA,CACA,IAAAC,EApCA,SAAAC,EAAAC,EAAAC,GACA,IAAAF,EACA,OAAAA,EAIA,IAAAG,EAAA,GAEA,QAAAlnG,KAAA+mG,EACAG,EAAAlnG,GAAA,CACAmnG,iBAAA,sBAAmCF,EAAAl0G,WAAAa,OAAA,IACnCwzG,iBAAA,sBAAmCJ,EAAAj0G,WAAAa,OAAA,KAGnCozG,EAAA9zG,mBAAA8zG,EAAA9zG,kBAAA8M,IAAAgnG,EAAA9zG,kBAAA8M,GAAAG,OACA+mG,EAAAlnG,GAAAG,KAAA6mG,EAAA9zG,kBAAA8M,GAAAG,MAKA,kBAAA4mG,EAAA/mG,KACAknG,EAAAlnG,GAAA1S,IAAAy5G,EAAA/mG,IAIA,OAAAktD,GAAArvC,aAAAkpF,EAAAG,GAWAG,CAAA7F,EAAAoD,QAAA0C,WAAA9F,EAAA9uG,UAAAkG,QAAA4oG,EAAAK,0BAAAzD,YAAAvpG,MAAAymG,qBAAA1iG,SAEAkuG,IACA7sF,EAAAmrC,gBAAAkiD,WAAAR,EAEA7sF,EAAA4sF,IAAAU,qBACAttF,EAAA4sF,IAAAU,0BAMAC,GAAA,WACA,IAAA7xH,OAAA29D,aACA,YAGA,IAAAm0D,EAAA9xH,OAAA29D,aAAAC,QAtHA,eAwHA,IAAAk0D,EACA,YAGA,IACA,OAAAj7G,KAAAC,MAAAg7G,GACG,MAAAzpH,IAEH,cA6BA6mH,GAAA6C,kBAAA,WACA,IAAAzzE,EAAc/jB,EAAAhwB,EAAQ6wB,cAAA,SAEtB,IAAAm8C,GAAAv0B,QAAA,SAAAmE,cACA,SAUA,MANA,CACA,gCACA,gBACA,kBACA,wBACA,yDACAtc,KAAA,SAAAmnF,GACA,wBAAA/oH,KAAAq1C,EAAAoE,YAAAsvE,MAfA,GAmBA9C,GAAA+C,qBACA16C,GAAAv0B,QAAA,SAAAmE,eAIA,kBAAAl+C,KAAgCsxB,EAAAhwB,EAAQ6wB,cAAA,SAAAsnB,YAAA,yBAGxCwsE,GAAAgD,qBAAA,SAAApxH,GACA,cAAAA,EACAouH,GAAA6C,kBAGA,SAAAjxH,GACAouH,GAAA+C,oBAWA/C,GAAA/nE,YAAA,WACA,OAAAowB,GAAAz/C,IAAAa,KAAA,4EAGA,IAAAw5F,GAAA56C,GAAAjtC,aAAA,aAYI8nF,GAAU,SAAAj/E,GAGd,SAAAk/E,EAAAh2G,EAAAm2B,EAAA9nC,GACI+uE,GAAc/4E,KAAA2xH,GAGlB,IAAA1kG,EAAgBisD,GAAyBl5E,MAAA2xH,EAAAtrH,WAAAV,OAAAS,eAAAurH,IAAAzwH,KAAAlB,KAAA8xC,EAAA9nC,EAAA+wE,MAEzC,GAAAjpC,EAAAhK,UAAAgK,EAAAhK,SAAAk8B,SAAA,CACA,IAAA4T,EAAAf,GAAA/kC,EAAAhK,SAAAk8B,UAEA4T,EAAAl/D,eAAA,QACA/S,OAAAC,eAAAgyE,EAAA,OACAxhD,IAAA,WAMA,OALAygD,GAAAz/C,IAAAa,KAAA,4DACA6Z,EAAAlxC,QAAA,CACAR,KAAA,QACAqc,KAAA,sBAEAwQ,GAEAxnB,cAAA,IASAmyE,EAAA02C,IAAArhG,EAEA2qD,EAAAg6C,KAAA3kG,EACAA,EAAA4a,QAAA+vC,EASA,GANA3qD,EAAAuuB,MAAA1J,EACA7kB,EAAAshG,QAAA5yG,EACAsR,EAAAqpF,MAAA,GAEArpF,EAAA4kG,cAEA5kG,EAAA6a,SAAAgqF,gBAAAhgF,EAAAgQ,2BAAAhQ,EAAAiQ,0BACAjQ,EAAAgQ,2BAAA,GACAhQ,EAAAiQ,2BAAA,QACK,GAAA90B,EAAA6a,SAAAgqF,iBAAAhgF,EAAA00B,2BAAA10B,EAAA20B,2BAGL,UAAArxD,MAAA,4EA4BA,OAvBA6X,EAAA9sB,GAAa05B,EAAAhwB,EAAQ,kGAAAgG,GACrB,IAAAqhE,EAA8Br3C,EAAAhwB,EAAQqnE,mBAAsBr3C,EAAAhwB,EAAQkoH,yBAA4Bl4F,EAAAhwB,EAAQmoH,sBAAyBn4F,EAAAhwB,EAAQooH,oBAEzI/gD,KAAAv1C,SAAA1O,EAAAuuB,MAAArzB,OACA8E,EAAAu+F,0BAAA0G,yBAKAjlG,EAAA9sB,GAAA8sB,EAAAuuB,MAAA,qBACAx7C,KAAAw7C,MAAA8wB,WAAA,IAAAtsE,KAAAw7C,MAAAe,eAAAv8C,KAAAw7C,MAAA3T,QAAAikC,QACA9rE,KAAAsgD,eAAA,KAIArzB,EAAA9sB,GAAA8sB,EAAAuuB,MAAA,mBACAx7C,KAAAwrH,2BACAxrH,KAAAwrH,0BAAA2G,iBAIAllG,EAAA9sB,GAAA8sB,EAAAuuB,MAAA,OAAAvuB,EAAA2a,MAEA3a,EAsbA,OAlgBEgsD,GAAQ04C,EAmgBTF,IApbCz4C,GAAW24C,EAAA,EACb9rH,IAAA,cACAwB,MAAA,WACA,IAAAknB,EAAAvuB,KAYA,GATAA,KAAA8nC,SAAAzvB,gBAAArY,KAAA8nC,SAAAzvB,kBAAA,EACArY,KAAA8nC,SAAA+mF,kCAAA,IAAA7uH,KAAA8nC,SAAA+mF,iCACA7uH,KAAA8nC,SAAA4jF,oBAAA1rH,KAAA8nC,SAAA4jF,sBAAA,EACA1rH,KAAA8nC,SAAAsqF,6BAAA,qBAAApyH,KAAAuuH,QAAA6D,6BAAApyH,KAAAuuH,QAAA6D,6BAAApyH,KAAA8nC,SAAAsqF,+BAAA,EAEA,kBAAApyH,KAAA8nC,SAAA63E,oBACA3/G,KAAA8nC,SAAA63E,kBAAA,KAGA,kBAAA3/G,KAAA8nC,SAAAxqB,WACAtd,KAAA8nC,SAAAsqF,6BAAA,CACA,IAAAhB,EAAAD,KAEAC,KAAA9zG,YACAtd,KAAA8nC,SAAAxqB,UAAA8zG,EAAA9zG,UACAtd,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,sCAIA20G,KAAA5Y,aACAx4G,KAAA8nC,SAAA0wE,WAAA4Y,EAAA5Y,WACAx4G,KAAAw7C,MAAA56C,QAAA,CACAR,KAAA,QACAqc,KAAA,uCAQA,kBAAAzc,KAAA8nC,SAAAxqB,YACAtd,KAAA8nC,SAAAxqB,UAAAo3F,GAAAI,mBAKA90G,KAAA8nC,SAAA4/E,yBAAA1nH,KAAA8nC,SAAA4/E,0BAAA1nH,KAAA8nC,SAAAxqB,YAAAo3F,GAAAI,kBAEA,yFAAA5wG,QAAA,SAAAmuH,GACA,qBAAA9jG,EAAAggG,QAAA8D,KACA9jG,EAAAuZ,SAAAuqF,GAAA9jG,EAAAggG,QAAA8D,MAGAryH,KAAA6uH,iCAAA7uH,KAAA8nC,SAAA+mF,mCAQG,CACHhpH,IAAA,MACAwB,MAAA,SAAAu9C,EAAAxkD,GACA,IAAA8sC,EAAAltC,KAGA4kD,IAIA5kD,KAAA6xH,cAEA7xH,KAAA8nC,SAAA7wB,IAAAjX,KAAAuuH,QAAAr8E,IACAlyC,KAAA8nC,SAAAgK,KAAA9xC,KAAAw7C,MACAx7C,KAAA8nC,SAAA0/E,UAAAgH,GACAxuH,KAAA8nC,SAAA0xE,WAAA2W,GAAA/vH,GAIAJ,KAAA8nC,SAAA05C,OAAA,SAAA//D,GACAyrB,EAAAsO,MAAA8E,eAAA7+B,GAEAyrB,EAAAoT,eAAA7+B,IAGAzhB,KAAAwrH,0BAAA,IAA2ClE,GAAwBtnH,KAAA8nC,UACnE9nC,KAAAsyH,iBAAA,IAAkCxG,GAAej1C,GAAArvC,aAAAxnC,KAAA8nC,SAAA,CACjDud,SAAA,WACA,OAAAnY,EAAAmY,eAGArlD,KAAAwrH,0BAAArrH,GAAA,mBACA02E,GAAA9oC,QAAAb,EAAAsO,MAAA1T,SAAAk8B,UACA9rC,MAAAgV,EAAAs+E,0BAAAtzF,SAIAl4B,KAAAwrH,0BAAA3C,eAAA7oH,KAAA6oH,eAAA7oH,KAAA6oH,eAAA5gH,KAAAjI,MAAAwuH,GAAAC,2BAAAxmH,KAAAjI,MACAA,KAAAwrH,0BAAA5C,sBAAA4F,GAAAsB,0BAAA7nH,KAAAjI,MAEAA,KAAAqc,UAAArc,KAAAwrH,0BAAA7Y,sBACA3yG,KAAA0tG,YAAA1tG,KAAAwrH,0BAAA9d,YAIA/nG,OAAAisB,iBAAA5xB,KAAA,CACA6oH,eAAA,CACAzyF,IAAA,WACA,OAAAp2B,KAAAwrH,0BAAA3C,gBAEAl9G,IAAA,SAAAk9G,GACA7oH,KAAAwrH,0BAAA3C,iBAAA5gH,KAAAjI,QAGAw4G,WAAA,CACApiF,IAAA,WACA,OAAAp2B,KAAAwrH,0BAAAnE,mBAAA7O,WAAA7+C,MAEAhuD,IAAA,SAAA6sG,GACAx4G,KAAAwrH,0BAAAnE,mBAAA7O,WAAA7+C,KAAA6+C,EAGAx4G,KAAAwrH,0BAAAnE,mBAAA7O,WAAAv1F,MAAA,IAGA3F,UAAA,CACA8Y,IAAA,WACA,OAAAp2B,KAAAwrH,0BAAAnE,mBAAA/pG,WAEA3R,IAAA,SAAA2R,GACAtd,KAAAwrH,0BAAAnE,mBAAA/pG,YAIAtd,KAAAwrH,0BAAAnE,mBAAA7O,WAAA,CACA7+C,KAAA,EACA12C,MAAA,KAcA4sG,gBAAA,CACAz5F,IAAA,WACA,IAAAm8F,EAAA,GAAAvyH,KAAAsd,WAAA,GACAk1G,OAAA,EASA,OANAA,EADAxyH,KAAAw4G,WAAA,EACA,EAAAx4G,KAAAw4G,WAEA,EAGA70G,KAAAigB,MAAA,GAAA2uG,EAAAC,KAGA7mH,IAAA,WACAkrE,GAAAz/C,IAAAc,MAAA,mDAKAl4B,KAAA8nC,SAAAxqB,YACAtd,KAAAsd,UAAAtd,KAAA8nC,SAAAxqB,WAGAtd,KAAA8nC,SAAA0wE,aACAx4G,KAAAw4G,WAAAx4G,KAAA8nC,SAAA0wE,YAGA7yG,OAAAisB,iBAAA5xB,KAAAs2G,MAAA,CACAh5F,UAAA,CACA8Y,IAAA,WACA,OAAA8W,EAAA5vB,WAAA,GAEA9X,YAAA,GAEAm1G,cAAA,CACAvkF,IAAA,WACA,OAAA8W,EAAAs+E,0BAAAiH,kBAAA,GAEAjtH,YAAA,GAEAo1G,qBAAA,CACAxkF,IAAA,WACA,OAAA8W,EAAAs+E,0BAAAkH,yBAAA,GAEAltH,YAAA,GAEAq1G,sBAAA,CACAzkF,IAAA,WACA,OAAA8W,EAAAs+E,0BAAAmH,0BAAA,GAEAntH,YAAA,GAEAs1G,qBAAA,CACA1kF,IAAA,WACA,OAAA8W,EAAAs+E,0BAAAoH,yBAAA,GAEAptH,YAAA,GAEAu1G,sBAAA,CACA3kF,IAAA,WACA,OAAA8W,EAAAs+E,0BAAAqH,0BAAA,GAEArtH,YAAA,GAEAk1G,sBAAA,CACAtkF,IAAA,WACA,OAAA8W,EAAAs+E,0BAAAsH,0BAAA,GAEAttH,YAAA,GAEAw1G,mBAAA,CACA5kF,IAAA,WACA,OAAA8W,EAAAs+E,0BAAAuH,uBAAA,GAEAvtH,YAAA,GAEA8qC,SAAA,CACAla,IAAA,WACA,OAAAssD,GAAAx1C,EAAAsO,MAAAlL,aAEA9qC,YAAA,GAEA+2C,YAAA,CACAnmB,IAAA,WACA,OAAA8W,EAAAsO,MAAAe,eAEA/2C,YAAA,GAEAupE,cAAA,CACA34C,IAAA,WACA,OAAA8W,EAAAsO,MAAAkI,gBAEAl+C,YAAA,GAEAwtH,YAAA,CACA58F,IAAA,WACA,OAAA8W,EAAAsO,MAAAxT,OAEAxiC,YAAA,GAEA0H,SAAA,CACAkpB,IAAA,WACA,OAAA8W,EAAAsO,MAAAtuC,YAEA1H,YAAA,GAEAoa,OAAA,CACAwW,IAAA,WACA,OAAA8W,EAAA7wB,UAAAuD,QAEApa,YAAA,GAEAytH,iBAAA,CACA78F,IAAA,WACA,OAAA8W,EAAAsO,MAAA5P,qBAEApmC,YAAA,GAEA6/C,SAAA,CACAjvB,IAAA,WACA,OAAAssD,GAAAx1C,EAAAsO,MAAA6J,aAEA7/C,YAAA,GAEAsF,UAAA,CACAsrB,IAAA,WACA,OAAAtO,KAAAtE,OAEAhe,YAAA,GAEA4/D,qBAAA,CACAhvC,IAAA,WACA,OAAA8W,EAAAsO,MAAAkG,2BAEAl8C,YAAA,KAGAxF,KAAAw7C,MAAAzY,IAAA,UAAA/iC,KAAAwrH,0BAAAhD,eAAAvgH,KAAAjI,KAAAwrH,4BACAxrH,KAAAw7C,MAAAr7C,GAAA,6BACA+sC,EAAApF,SAAAsqF,8BAvcA,SAAApoH,GACA,IAAA1K,OAAA29D,aACA,SAGA,IAAAi2D,EAAA/B,KACA+B,IAAAr8C,GAAArvC,aAAA0rF,EAAAlpH,KAEA,IACA1K,OAAA29D,aAAAE,QA7IA,cA6IAhnD,KAAAsB,UAAAy7G,IACG,MAAAvrH,IAKH,UAybAwrH,CAAA,CACA71G,UAAA4vB,EAAA5vB,UACAk7F,WAAA70G,KAAAs6B,MAAAiP,EAAAsrE,gBAIAx4G,KAAAwrH,0BAAArrH,GAAA,mCA/rCA,SAAAgrH,GACA,IAAA9uG,EAAA8uG,EAAA9uG,UAEA8uG,EAAAvgG,gBAAA,WACA,OAAAvO,EAAAuD,OAAAvD,UAAA+C,OAAA,SAAAmD,GACA,OAAA+6D,GAAA/6D,KACKjf,IAAA,SAAAqE,EAAA7G,GACL,WAAAoqH,GAAAC,EAAAxjH,IAAAoN,QA0rCAq+G,CAAAlmF,GACAqjF,GAAArjF,KAIAltC,KAAAG,GAAAH,KAAAwrH,0BAAA,sBACAxrH,KAAAw7C,MAAA56C,QAAA,cAEAZ,KAAAw7C,MAAA7T,MAAA,WACA,OAAAuF,EAAAmmF,wBAIArzH,KAAAw7C,MAAArzB,MAIAnoB,KAAAw7C,MAAAtJ,IAAA2kC,GAAA2N,IAAAoB,gBAAA5lF,KAAAwrH,0BAAA9d,iBASG,CACH7nG,IAAA,sBACAwB,MAAA,WACA,IAAAgmC,EAAArtC,KAEA4jC,EAAAizC,GAAA9oC,QAAA/tC,KAAAw7C,MAAA1T,SAAAk8B,UAEApgC,KAAAysF,gBACArwH,KAAAszH,eAAA1vF,EAAAysF,gBACArwH,KAAAwrH,0BAAArrH,GAAA,kCAnkBA,IAAAkwH,EAAAt1C,EAAAs1C,EAokBAhjF,EAAAimF,gBApkBAv4C,EAokBA1tC,GAnkBAziB,kBAAA1mB,QAAA,SAAA8qH,GACAqB,EAAAkD,gBAAAvE,KAEAoB,GAAAC,EAAAt1C,EAAA1+D,aAkkBArc,KAAAqc,UAAAlc,GAAA,yBACAiwH,GAAA/iF,EAAAimF,eAAAjmF,EAAAhxB,gBAQG,CACHxW,IAAA,OACAwB,MAAA,WACArH,KAAAwrH,0BAAA5jF,SAMG,CACH/hC,IAAA,iBACAwB,MAAA,SAAAk1C,GACAv8C,KAAAwrH,0BAAAlrE,eAAA/D,KAMG,CACH12C,IAAA,WACAwB,MAAA,WACA,OAAArH,KAAAwrH,0BAAAt+G,aAMG,CACHrH,IAAA,WACAwB,MAAA,WACA,OAAArH,KAAAwrH,0BAAAnmE,aAMG,CACHx/C,IAAA,UACAwB,MAAA,WACArH,KAAAsyH,kBACAtyH,KAAAsyH,iBAAAjxH,UAGArB,KAAAwrH,2BACAxrH,KAAAwrH,0BAAAnqH,UAGArB,KAAAszH,gBACAtzH,KAAAszH,eAAAjyH,UAGArB,KAAA6nC,iBACA7nC,KAAA6nC,QAAAymF,WACAtuH,KAAA6nC,QAAA+pF,YACA5xH,KAAA6nC,QAAAkzC,KAGA/6E,KAAAw7C,OAAAx7C,KAAAw7C,MAAAu/B,YACA/6E,KAAAw7C,MAAAu/B,IA7rkBA,SAAA3kD,EAAA6C,EAAAm3E,EAAAojB,GACA,OAAAv6F,MAAAvxB,SAAApG,WACA,IAAAmyC,EAAA9tC,OAAA86D,yBAAAxnC,EAAAm3E,GAEA,QAAAziG,IAAA8lC,EAAA,CACA,IAAAxZ,EAAAt0B,OAAAS,eAAA6yB,GAEA,cAAAgB,OACA,EAEA7D,EAAA6D,EAAAm2E,EAAAojB,GAEG,aAAA//E,EACH,OAAAA,EAAApsC,MAEA,IAAAosH,EAAAhgF,EAAArd,IAEA,YAAAzoB,IAAA8lH,EAIAA,EAAAvyH,KAAAsyH,QAJA,EA+qkBAE,CAAA/B,EAAArwH,UAAA+E,WAAAV,OAAAS,eAAAurH,EAAArwH,WAAA,UAAAtB,MAAAkB,KAAAlB,QAEG,CACH6F,IAAA,sBACAwB,MAAA,SAAAoa,EAAAzM,GACA,OAAA6rE,GAAA,CACAtkE,SAAAvc,KAAAwrH,0BAAAjpG,QACAd,OACAzM,eAIG,CACHnP,IAAA,mBACAwB,MAAA,SAAA65E,EAAAlsE,GACA,IAAA0sE,IAAAzgF,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,KAAAA,UAAA,GACAsgF,EAAAtgF,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,KACA,OAAAogF,GAAA,CACAH,aACA3kE,SAAAvc,KAAAwrH,0BAAAjpG,QACAg/D,aACAG,iBACAF,OAAAxhF,KAAA8nC,SAAA05C,OACA1vC,KAAA9xC,KAAA8nC,SAAAgK,KACA98B,iBAIA28G,EAngBc,GA8gBdgC,GAAA,CACAl3G,KAAA,yBACAw5D,QA9yBA,QA+yBA9yB,gBAAA,SAAAjB,GACA,IAAAl4C,EAAA/I,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,MACAitH,EAAAr3C,GAAArvC,aAAAqvC,GAAA7sE,WACA,OAAA2pH,GAAA3xE,YAAAE,EAAA9hD,KAAA8tH,IAEAvqE,aAAA,SAAAhoC,EAAAm2B,GACA,IAAA9nC,EAAA/I,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,MACAitH,EAAAr3C,GAAArvC,aAAAqvC,GAAA7sE,WAIA,OAHA8nC,EAAAipC,IAAA,IAAmB22C,GAAU/1G,EAAAm2B,EAAAo8E,GAC7Bp8E,EAAAipC,IAAArlE,IAAA8oE,KACA1sC,EAAAipC,IAAA7oC,IAAAv2B,EAAAu2B,IAAAv2B,EAAAvb,MACA0xC,EAAAipC,KAEA/4B,YAAA,SAAA5hD,GACA,IAAA4J,EAAA/I,UAAAF,OAAA,QAAA4M,IAAA1M,UAAA,GAAAA,UAAA,MAGA6wH,EADAj7C,GAAArvC,aAAAqvC,GAAA7sE,WACA+wE,IAAA+2C,eAEA8B,EAAAzD,GAAA/vH,GAEA,OADAwzH,KAAApF,GAAAgD,qBAAAoC,IAAA9B,GACA,aAIA,qBAAAj7C,GAAAw5B,aAAA,qBAAAx5B,GAAA2N,MACA3N,GAAAw5B,eACAx5B,GAAA2N,IAAAotB,IAIAvB,GAAAsB,8BACA96B,GAAAv0B,QAAA,SAAAQ,sBAAA6wE,GAAA,GAGA98C,GAAA86C,WAAuBD,GACvB76C,GAAA88C,oBACA98C,GAAA8H,IAAA6vC,GAEA33C,GAAAkB,KACAlB,GAAArpC,kBAAA,MAAAghF,IAGA33C,GAAA7sE,QAAA+wE,IAAAlE,GAAA7sE,QAAA+wE,KAAA,GAEAlE,GAAAV,eACAU,GAAAV,eAAA,sBAAA43C,IAEAl3C,GAAAf,OAAA,sBAAAi4C,IAGe5oH,EAAA,mCC9/1Cf,IAAA0uH,EAAAluH,OAAAkuH,sBACAn7G,EAAA/S,OAAArE,UAAAoX,eACAo7G,EAAAnuH,OAAArE,UAAAyyH,qBA0DAv0H,EAAAC,QAhDA,WACA,IACA,IAAAkG,OAAAinB,OACA,SAKA,IAAAonG,EAAA,IAAArxH,OAAA,OAIA,GAFAqxH,EAAA,QAEA,MAAAruH,OAAAg1B,oBAAAq5F,GAAA,GACA,SAMA,IAFA,IAAAC,EAAA,GAEAnzH,EAAA,EAAmBA,EAAA,GAAQA,IAC3BmzH,EAAA,IAAAtxH,OAAAC,aAAA9B,MAOA,kBAJA6E,OAAAg1B,oBAAAs5F,GAAA3wH,IAAA,SAAA8X,GACA,OAAA64G,EAAA74G,KAGAJ,KAAA,IACA,SAIA,IAAAk5G,EAAA,GAKA,MAJA,uBAAAp5G,MAAA,IAAA5W,QAAA,SAAAiwH,GACAD,EAAAC,OAGoC,yBAApCxuH,OAAAiW,KAAAjW,OAAAinB,OAAA,GAAoCsnG,IAAAl5G,KAAA,IAKjC,MAAA1F,GAEH,UAIA8+G,GAAAzuH,OAAAinB,OAAA,SAAAvnB,EAAAsW,GAKA,IAJA,IAAAO,EAEAm4G,EADAptF,EA1DA,SAAApM,GACA,UAAAA,QAAAltB,IAAAktB,EACA,UAAA51B,UAAA,yDAGA,OAAAU,OAAAk1B,GAqDAy5F,CAAAjvH,GAGAwC,EAAA,EAAiBA,EAAA5G,UAAAF,OAAsB8G,IAAA,CAGvC,QAAAhC,KAFAqW,EAAAvW,OAAA1E,UAAA4G,IAGA6Q,EAAAxX,KAAAgb,EAAArW,KACAohC,EAAAphC,GAAAqW,EAAArW,IAIA,GAAAguH,EAAA,CACAQ,EAAAR,EAAA33G,GAEA,QAAApb,EAAA,EAAqBA,EAAAuzH,EAAAtzH,OAAoBD,IACzCgzH,EAAA5yH,KAAAgb,EAAAm4G,EAAAvzH,MACAmmC,EAAAotF,EAAAvzH,IAAAob,EAAAm4G,EAAAvzH,MAMA,OAAAmmC,iCC3FA,IAAArrB,EAAW/b,EAAQ,IAEnB00H,EAAA,oBAAA/tH,QAAA,kBAAAA,OAAA,OACAgC,EAAA7C,OAAArE,UAAA6G,SACA7H,EAAAmb,MAAAna,UAAAhB,OACAk0H,EAAA7uH,OAAAC,eA2BA6uH,EAAAD,GArBA,WACA,IAAAjuH,EAAA,GAEA,IAMA,QAAAmuH,KALAF,EAAAjuH,EAAA,KACAf,YAAA,EACA6B,MAAAd,IAGAA,EAEA,SAGA,OAAAA,EAAAyV,IAAAzV,EACG,MAAAoB,GAEH,UAIAgtH,GAEA/uH,EAAA,SAAAqzB,EAAAxc,EAAApV,EAAAg1B,GA3BA,IAAA5b,EA4BAhE,KAAAwc,IA3BA,oBADAxY,EA4BA4b,IA3BA,sBAAA7zB,EAAAtH,KAAAuf,KA2BA4b,OAIAo4F,EACAD,EAAAv7F,EAAAxc,EAAA,CACAhX,cAAA,EACAD,YAAA,EACA6B,QACA3B,UAAA,IAGAuzB,EAAAxc,GAAApV,IAIAuqB,EAAA,SAAAqH,EAAA31B,GACA,IAAAsxH,EAAA3zH,UAAAF,OAAA,EAAAE,UAAA,MACAqE,EAAAsW,EAAAtY,GAEAixH,IACAjvH,EAAAhF,EAAAY,KAAAoE,EAAAK,OAAAkuH,sBAAAvwH,KAGA,QAAAxC,EAAA,EAAiBA,EAAAwE,EAAAvE,OAAkBD,GAAA,EACnC8E,EAAAqzB,EAAA3zB,EAAAxE,GAAAwC,EAAAgC,EAAAxE,IAAA8zH,EAAAtvH,EAAAxE,MAIA8wB,EAAA6iG,wBACAj1H,EAAAC,QAAAmyB,gCCjEA,IAAAppB,EAAA7C,OAAArE,UAAA6G,SAEA3I,EAAAC,QAAA,SAAA4H,GACA,IAAA8f,EAAA3e,EAAAtH,KAAAmG,GACAwtH,EAAA,uBAAA1tG,EAMA,OAJA0tG,IACAA,EAAA,mBAAA1tG,GAAA,OAAA9f,GAAA,kBAAAA,GAAA,kBAAAA,EAAAtG,QAAAsG,EAAAtG,QAAA,yBAAAyH,EAAAtH,KAAAmG,EAAAytH,SAGAD,iCCVA,IAAA5sH,EAAWpI,EAAQ,IAEnBk1H,EAASl1H,EAAQ,IAEjBiI,EAAAG,EAAA/G,KAAAwG,SAAAxG,KAAAyB,OAAArB,UAAAwG,SACAktH,EAAA,qJACAC,EAAA,qJAEAz1H,EAAAC,QAAA,WACA,IAAAmjB,EAAAmyG,EAAAG,SAAAH,EAAAI,qBAAAn1H,OACA,OAAA8H,IAAA8a,EAAAoyG,EAAA,IAAAC,EAAA,mCCgBA,IAEAG,EAAAzvH,OAAA86D,yBAAA,WACA,OAAA96D,OAAA86D,yBAAAx/D,UAAA,UAAAm1B,IADA,GAEC,WACD,UAAAnxB,WAEAsvH,EAAA,oBAAA/tH,QAAA,kBAAAA,OAAAC,SAEA4uH,EAAA1vH,OAAAS,gBAAA,SAAA4V,GACA,OAAAA,EAAA3V,WAaAivH,OAvBA3nH,EAwBA4nH,EAAA,qBAAA7pH,gBAxBAiC,EAwBA0nH,EAAA3pH,YACA8pH,EAAA,CACAC,YAAAh6G,MACAi6G,kBAAA,qBAAAj2C,iBA3BA9xE,EA2BA8xE,YACAk2C,2BAAA,qBAAAl2C,iBA5BA9xE,EA4BA8xE,YAAAn+E,UACAs0H,6BAAArB,EAAAc,EAAA,GAAA7uH,OAAAC,kBA7BAkH,EA8BAkoH,qBAAAp6G,MAAAna,UACAw0H,yBAAAr6G,MAAAna,UAAA8jG,QACA2wB,yBAAAt6G,MAAAna,UAAA4C,QACA8xH,sBAAAv6G,MAAAna,UAAAsa,KACAq6G,wBAAAx6G,MAAAna,UAAAgjB,OACA4xG,0CAnCAvoH,EAoCAwoH,yBApCAxoH,EAqCAyoH,kCArCAzoH,EAsCA0oH,0BAtCA1oH,EAuCA2oH,kCAvCA3oH,EAwCA4oH,mCAxCA5oH,EAyCA6oH,6BAAAlB,GAAAf,GAAA/tH,OAAAiwH,cAAAnB,EAAA9uH,OAAAiwH,sBAzCA9oH,EA0CA+oH,cAAA,qBAAAC,aA1CAhpH,EA0CAgpH,QACAC,cAAA1oF,QACA2oF,uBAAA3oF,QAAA5sC,UACAw1H,eAAA,qBAAAryH,cA7CAkJ,EA6CAlJ,SACAsyH,wBAAA,qBAAAtyH,cA9CAkJ,EA8CAlJ,SAAAnD,UACA01H,WAAAlvG,KACAmvG,oBAAAnvG,KAAAxmB,UACA41H,gBAAAC,UACAC,yBAAA99B,mBACA+9B,gBAAAC,UACAC,yBAAAC,mBACAC,YAAAriH,MACAsiH,qBAAAtiH,MAAA9T,UACAq2H,WAAAC,KAEAC,gBAAAC,UACAC,yBAAAD,UAAAx2H,UACA02H,mBAAA,qBAAAC,kBA3DAtqH,EA2DAsqH,aACAC,4BAAA,qBAAAD,kBA5DAtqH,EA4DAsqH,aAAA32H,UACA62H,mBAAA,qBAAAC,kBA7DAzqH,EA6DAyqH,aACAC,4BAAA,qBAAAD,kBA9DAzqH,EA8DAyqH,aAAA92H,UACAg3H,eAAA5wH,SACA6wH,wBAAA7wH,SAAApG,UACAk3H,qBAjEA7qH,EAkEA8qH,6BAlEA9qH,EAmEA+qH,8BAnEA/qH,EAoEAgrH,gBAAA,qBAAAC,eApEAjrH,EAoEAirH,UACAC,yBAAA,qBAAAD,eArEAjrH,EAqEAirH,UAAAt3H,UACAw3H,iBAAA,qBAAAC,gBAtEAprH,EAsEAorH,WACAC,0BAAA,qBAAAD,gBAvEAprH,EAuEAirH,UAAAt3H,UACA23H,iBAAA,qBAAA9jG,gBAxEAxnB,EAwEAwnB,WACA+jG,0BAAA,qBAAA/jG,gBAzEAxnB,EAyEAwnB,WAAA7zB,UACA63H,eAAAp1H,SACAq1H,YAAApxG,MACAqxG,wBAAA9E,EAAAc,IAAA,GAAA7uH,OAAAC,mBA5EAkH,EA6EA2rH,WAAAnjH,KACAojH,gBAAApjH,KAAAC,MACAojH,UAAA,qBAAAr0F,SA/EAx3B,EA+EAw3B,IACAs0F,2BAAA,qBAAAt0F,KAAAovF,EAAAc,GAAA,IAAAlwF,KAAA3+B,OAAAC,kBAhFAkH,EAiFA+rH,mBAAA,qBAAAv0F,SAjFAx3B,EAiFAw3B,IAAA7jC,UACAq4H,WAAAh2H,KACAi2H,aAAAv0G,OACAw0G,sBAAAx0G,OAAA/jB,UACAw4H,aAAAn0H,OACAo0H,sBAAAp0H,OAAArE,UACA04H,wBAAAr0H,OAAArE,UAAA6G,SACA8xH,uBAAAt0H,OAAArE,UAAA44H,QACAC,iBAAAxyG,WACAyyG,eAAA/4G,SACAg5G,cAAA,qBAAAlqD,aA3FAxiE,EA2FAwiE,QACAmqD,uBAAA,qBAAAnqD,aA5FAxiE,EA4FAwiE,QAAA7uE,UACAi5H,wBAAA,qBAAApqD,aA7FAxiE,EA6FAwiE,QAAA7uE,UAAAkwC,KACAgpF,kBAAA,qBAAArqD,aA9FAxiE,EA8FAwiE,QAAAp4C,IACA0iG,qBAAA,qBAAAtqD,aA/FAxiE,EA+FAwiE,QAAAuqD,OACAC,sBAAA,qBAAAxqD,aAhGAxiE,EAgGAwiE,QAAAC,QACAwqD,YAAA,qBAAA/jG,WAjGAlpB,EAiGAkpB,MACAgkG,iBAAAC,WACAC,0BAAAD,WAAAx5H,UACA05H,qBAAAn0H,eACAo0H,8BAAAp0H,eAAAvF,UACA45H,cAAA,qBAAAxkG,aAtGA/oB,EAsGA+oB,QACAykG,aAAAhuG,OACAiuG,sBAAAjuG,OAAA7rB,UACA+5H,UAAA,qBAAAC,SAzGA3tH,EAyGA2tH,IACAC,2BAAA,qBAAAD,KAAA/G,EAAAc,GAAA,IAAAiG,KAAA90H,OAAAC,kBA1GAkH,EA2GA6tH,mBAAA,qBAAAF,SA3GA3tH,EA2GA2tH,IAAAh6H,UACAm6H,wBAAA,qBAAAC,uBA5GA/tH,EA4GA+tH,kBACAC,iCAAA,qBAAAD,uBA7GA/tH,EA6GA+tH,kBAAAp6H,UACAs6H,aAAAj5H,OACAk5H,8BAAAtH,EAAAc,EAAA,GAAA7uH,OAAAC,kBA/GAkH,EAgHAmuH,sBAAAn5H,OAAArB,UACAy6H,aAAAxH,EAAA/tH,YAjHAmH,EAkHAquH,sBAAAzH,EAAA/tH,OAAAlF,eAlHAqM,EAmHAsuH,kBAAAC,YACAC,2BAAAD,YAAA56H,UACA86H,qBAAAhH,EACAiH,iBAAA9G,EACA+G,0BAAA/G,IAAAj0H,eAvHAqM,EAwHA4uH,gBAAAt3H,UACAu3H,yBAAAv3H,UAAA3D,UACAm7H,iBAAA,qBAAA/wH,gBA1HAiC,EA0HAjC,WACAgxH,0BAAA,qBAAAhxH,gBA3HAiC,EA2HAjC,WAAApK,UACAq7H,wBAAA,qBAAAC,uBA5HAjvH,EA4HAivH,kBACAC,iCAAA,qBAAAD,uBA7HAjvH,EA6HAivH,kBAAAt7H,UACAw7H,kBAAA,qBAAAz1B,iBA9HA15F,EA8HA05F,YACA01B,2BAAA,qBAAA11B,iBA/HA15F,EA+HA05F,YAAA/lG,UACA07H,kBAAA,qBAAA5uG,iBAhIAzgB,EAgIAygB,YACA6uG,2BAAA,qBAAA7uG,iBAjIAzgB,EAiIAygB,YAAA9sB,UACA47H,eAAAC,SACAC,wBAAAD,SAAA77H,UACA+7H,cAAA,qBAAAC,aApIA3vH,EAoIA2vH,QACAC,uBAAA,qBAAAD,aArIA3vH,EAqIA2vH,QAAAh8H,UACAk8H,cAAA,qBAAAC,aAtIA9vH,EAsIA8vH,QACAC,uBAAA,qBAAAD,aAvIA9vH,EAuIA8vH,QAAAn8H,WAGA9B,EAAAC,QAAA,SAAAgd,EAAAkhH,GACA,GAAA18H,UAAAF,OAAA,sBAAA48H,EACA,UAAA14H,UAAA,6CAGA,IAAAY,EAAA,KAAA4W,EAEA,KAAA5W,KAAA2vH,GACA,UAAA0G,YAAA,aAAAz/G,EAAA,oBAIA,wBAAA+4G,EAAA3vH,KAAA83H,EACA,UAAA14H,UAAA,aAAAwX,EAAA,wDAGA,OAAA+4G,EAAA3vH,kCCpLA,IAAAoC,EAAWpI,EAAQ,IAEnBL,EAAAC,QAAAwI,EAAA/G,KAAAwG,SAAAxG,KAAAyE,OAAArE,UAAAoX,8CCFA,IAAA1Q,EAAqBnI,EAAQ,IAI7BL,EAAAC,QAAA,WACA,OAAAkD,OAAArB,UAAAqY,MAHA,oBAGAA,OACAhX,OAAArB,UAAAqY,KAGA3R,iCCAA,IACAu1B,EAAA2oD,EAAAC,EAAAC,EAAAn7E,EAAAo7E,EAAAC,EAAAt7E,EAAAu7E,EAAAC,EAAAC,EAAA3jF,EAAAC,EAAA2jF,EAAAxjF,EAAAmB,EAAAsiF,EAAAC,EAAAC,EAAAtjF,EAAAujF,EAAAC,EAAArmD,EAAAsmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EADAC,EAAAlkF,KAAAC,IAAA,SAGA,WACA,IAAA9C,EA0CA,GAzCA4/B,EAAA,CACAonD,KAAA,GAEAC,KAAA,GACAC,KAAA,GACA9B,KAAA,GACA+B,KAAA,GACA9B,KAAA,GACAC,KAAA,GACA/hF,KAAA,GACA4G,KAAA,GACA/H,KAAA,GACAwjF,KAAA,GACAL,KAAA,GACAC,KAAA,GACAt7E,KAAA,GACAu7E,KAAA,GACA2B,KAAA,GAEA1B,KAAA,GACAC,KAAA,GACAE,KAAA,GACAwB,KAAA,GACAvB,KAAA,GACAwB,KAAA,GACAC,KAAA,GACAxB,KAAA,GACAyB,KAAA,GACAC,KAAA,GACAC,KAAA,GACA9kF,KAAA,GACAF,KAAA,GACAD,KAAA,GACAT,KAAA,GACAikF,KAAA,GACAD,KAAA,GACA/jF,KAAA,GACA0lF,KAAA,IAIA,qBAAA/8E,WAAA,CAIA,IAAA5K,KAAA4/B,EACAA,EAAAhoB,eAAA5X,KACA4/B,EAAA5/B,GAAA,CAAAA,EAAAkS,WAAA,GAAAlS,EAAAkS,WAAA,GAAAlS,EAAAkS,WAAA,GAAAlS,EAAAkS,WAAA,KAIAg0E,EAAA,IAAAt7E,WAAA,KAAAsH,WAAA,OAAAA,WAAA,OAAAA,WAAA,OAAAA,WAAA,KACAk0E,EAAA,IAAAx7E,WAAA,KAAAsH,WAAA,OAAAA,WAAA,OAAAA,WAAA,OAAAA,WAAA,KACAi0E,EAAA,IAAAv7E,WAAA,WACAy7E,EAAA,IAAAz7E,WAAA,GACA,MACA,QACA,gBACA,QACA,QACA,QACA,iDAEA07E,EAAA,IAAA17E,WAAA,GACA,MACA,QACA,gBACA,QACA,QACA,QACA,iDAEA27E,EAAA,CACAzpC,MAAAupC,EACAnnE,MAAAonE,GAEAI,EAAA,IAAA97E,WAAA,GACA,MACA,QACA,SACA,eACA,EACA,QAEA67E,EAAA,IAAA77E,WAAA,GACA,MACA,IACA,MAEA+7E,EAAA,IAAA/7E,WAAA,GACA,MACA,UAEAg8E,EAAAD,EACAE,EAAA,IAAAj8E,WAAA,GACA,MACA,QACA,UAEAk8E,EAAAH,EACAH,EAAA,IAAA57E,WAAA,GACA,MACA,IACA,eAzGA,GA6GA6xB,EAAA,SAAAn9B,GACA,IAEAU,EACA4B,EAHAgmF,EAAA,GACAvmF,EAAA,EAKA,IAAArB,EAAA,EAAaA,EAAAG,UAAAF,OAAsBD,IACnC4nF,EAAAvnF,KAAAF,UAAAH,IAKA,IAFAA,EAAA4nF,EAAA3nF,OAEAD,KACAqB,GAAAumF,EAAA5nF,GAAAyB,WAQA,IALAG,EAAA,IAAAgJ,WAAAvJ,EAAA,GACA,IAAAsC,SAAA/B,EAAAD,OAAAC,EAAAgC,WAAAhC,EAAAH,YACAomF,UAAA,EAAAjmF,EAAAH,YACAG,EAAAiJ,IAAAvL,EAAA,GAEAU,EAAA,EAAAqB,EAAA,EAAuBrB,EAAA4nF,EAAA3nF,OAAoBD,IAC3C4B,EAAAiJ,IAAA+8E,EAAA5nF,GAAAqB,GACAA,GAAAumF,EAAA5nF,GAAAyB,WAGA,OAAAG,GAGAwjF,EAAA,WACA,OAAA3oD,EAAAmD,EAAAwlD,KAAA3oD,EAAAmD,EAAAunD,KAAAT,KAGArB,EAAA,SAAAp8E,GACA,OAAAwzB,EAAAmD,EAAAylD,KAAA,IAAAz6E,WAAA,GACA,MAEA,EACA,GACA,IACA,EAEA,EACA,GACA,GACA,GACA,MACA,YACA,YAEA,EACA,EAGA3B,EAAA6+E,iBAAA,EAAA7+E,EAAA8+E,yBAAA,EAAA9+E,EAAA8+E,wBAAA,EAAA9+E,EAAA++E,cAAA,YAIA1C,EAAA,WACA,OAAA7oD,EAAAmD,EAAA0lD,KAAAY,EAAAC,EAAAD,EAAAE,IAGA7iF,EAAA,SAAAjE,GACA,OAAAm9B,EAAAmD,EAAAr8B,KAAAgjF,EAAAjnF,KAGA6K,EAAA,SAAAxJ,GACA,OAAA87B,EAAAmD,EAAAz1B,KAAAxJ,IAGAyB,EAAA,SAAA6G,GACA,IAAArH,EAAA,IAAAgJ,WAAA,GACA,MACA,QACA,QACA,WACA3B,EAAAmD,WAAA,OAAAnD,EAAAmD,WAAA,OAAAnD,EAAAmD,WAAA,UAAAnD,EAAAmD,SACA,OACA,MAWA,OAPAnD,EAAAg/E,aACArmF,EAAA,IAAAqH,EAAAg/E,aAAA,OACArmF,EAAA,IAAAqH,EAAAg/E,aAAA,OACArmF,EAAA,IAAAqH,EAAAg/E,aAAA,MACArmF,EAAA,QAAAqH,EAAAg/E,YAGAxrD,EAAAmD,EAAAx9B,KAAAR,IAGAgkF,EAAA,SAAA38E,GACA,OAAAwzB,EAAAmD,EAAAgmD,KAAAxjF,EAAA6G,GAAA1F,EAAA0F,EAAA3J,MAAAkmF,EAAAv8E,KAGAs8E,EAAA,SAAAn8E,GACA,OAAAqzB,EAAAmD,EAAA2lD,KAAA,IAAA36E,WAAA,UACA,WAAAxB,IAAA,aAAAA,IAAA,UAAAA,IAAA,MAAAA,MAIAo8E,EAAA,SAAAv8E,GACA,OAAAwzB,EAAAmD,EAAA4lD,KAAA,UAAAv8E,EAAA3J,KAAAm9B,EAAAmD,EAAA+nD,KAAAnB,GAAA/pD,EAAAmD,EAAAynD,KAAAZ,GAAArB,IAAAU,EAAA78E,KAGAiB,EAAA,SAAAd,EAAAkI,GAIA,IAHA,IAAA42E,EAAA,GACAloF,EAAAsR,EAAArR,OAEAD,KACAkoF,EAAAloF,GAAAyC,EAAA6O,EAAAtR,IAGA,OAAAy8B,EAAAn8B,MAAA,MAAAs/B,EAAA11B,KAAAq7E,EAAAn8E,IAAA5J,OAAA0oF,KASAzC,EAAA,SAAAn0E,GAIA,IAHA,IAAAtR,EAAAsR,EAAArR,OACAmK,EAAA,GAEApK,KACAoK,EAAApK,GAAAgC,EAAAsP,EAAAtR,IAGA,OAAAy8B,EAAAn8B,MAAA,MAAAs/B,EAAA6lD,KAAAE,EAAA,aAAAnmF,OAAA4K,GAAA5K,OAAAkmF,EAAAp0E,MAGAo0E,EAAA,SAAAp0E,GAIA,IAHA,IAAAtR,EAAAsR,EAAArR,OACAmK,EAAA,GAEApK,KACAoK,EAAApK,GAAAgmF,EAAA10E,EAAAtR,IAGA,OAAAy8B,EAAAn8B,MAAA,MAAAs/B,EAAA8lD,MAAAlmF,OAAA4K,KAGAu7E,EAAA,SAAAv5E,GACA,IAAA4G,EAAA,IAAApI,WAAA,GACA,MACA,QACA,QACA,YACA,WAAAwB,IAAA,aAAAA,IAAA,UAAAA,IAAA,MAAAA,EACA,QACA,IACA,IACA,QACA,QACA,yEACA,gDACA,kBAEA,OAAAqwB,EAAAmD,EAAA+lD,KAAA3yE,IAGA6yE,EAAA,SAAA58E,GACA,IAEAk/E,EACAnoF,EAHAyK,EAAAxB,EAAAwB,SAAA,GACAuI,EAAA,IAAApI,WAAA,EAAAH,EAAAxK,QAKA,IAAAD,EAAA,EAAaA,EAAAyK,EAAAxK,OAAoBD,IACjCmoF,EAAA19E,EAAAzK,GAAAmoF,MACAn1E,EAAAhT,EAAA,GAAAmoF,EAAAC,WAAA,EAAAD,EAAAE,cAAA,EAAAF,EAAAG,cAGA,OAAA7rD,EAAAmD,EAAAimD,KAAA7yE,IAGA8yE,EAAA,SAAA78E,GACA,OAAAwzB,EAAAmD,EAAAkmD,KAAAC,EAAA98E,GAAAwzB,EAAAmD,EAAA6nD,KAAAX,GAAArqD,EAAAmD,EAAA2nD,KAAAX,GAAAnqD,EAAAmD,EAAA4nD,KAAAX,GAAApqD,EAAAmD,EAAA0nD,KAAAX,KAGA,WACA,IAAA4B,EAAAC,EAEAzC,EAAA,SAAA98E,GACA,OAAAwzB,EAAAmD,EAAAmmD,KAAA,IAAAn7E,WAAA,GACA,MACA,oBAAA3B,EAAA3J,KAAAipF,EAAAt/E,GAAAu/E,EAAAv/E,KAGAs/E,EAAA,SAAAt/E,GACA,IAIAjJ,EAJAuL,EAAAtC,EAAAsC,KAAA,GACAP,EAAA/B,EAAA+B,KAAA,GACAy9E,EAAA,GACAC,EAAA,GAGA,IAAA1oF,EAAA,EAAeA,EAAAuL,EAAAtL,OAAgBD,IAC/ByoF,EAAApoF,MAAA,MAAAkL,EAAAvL,GAAAyB,cAAA,GACAgnF,EAAApoF,KAAA,IAAAkL,EAAAvL,GAAAyB,YAEAgnF,IAAAjpF,OAAAmb,MAAAna,UAAAZ,MAAAQ,KAAAmL,EAAAvL,KAIA,IAAAA,EAAA,EAAeA,EAAAgL,EAAA/K,OAAgBD,IAC/B0oF,EAAAroF,MAAA,MAAA2K,EAAAhL,GAAAyB,cAAA,GACAinF,EAAAroF,KAAA,IAAA2K,EAAAhL,GAAAyB,YACAinF,IAAAlpF,OAAAmb,MAAAna,UAAAZ,MAAAQ,KAAA4K,EAAAhL,KAGA,OAAAy8B,EAAAmD,EAAAonD,KAAA,IAAAp8E,WAAA,aACA,IACA,IACA,IACA,yBACA,MAAA3B,EAAA4U,QAAA,MAAA5U,EAAA4U,OACA,MAAA5U,EAAA6U,SAAA,MAAA7U,EAAA6U,OACA,SACA,SACA,QACA,IACA,mGACA,KACA,QACA2e,EAAAmD,EAAAqnD,KAAA,IAAAr8E,WAAA,GACA3B,EAAA0/E,WACA1/E,EAAA2/E,qBACA3/E,EAAA4/E,SACA,KACArpF,OAAA,CAAA+L,EAAAtL,SACAT,OAAAipF,GAAAjpF,OAAA,CAAAwL,EAAA/K,SACAT,OAAAkpF,KACAjsD,EAAAmD,EAAAsnD,KAAA,IAAAt8E,WAAA,cACA,aACA,kBAIA49E,EAAA,SAAAv/E,GACA,OAAAwzB,EAAAmD,EAAAwnD,KAAA,IAAAx8E,WAAA,CACA,YACA,IAEA,QACA,SACA,MAAA3B,EAAA++E,eAAA,MAAA/+E,EAAA++E,cACA,MAAA/+E,EAAA6/E,aAAA,MAAA7/E,EAAA6/E,WACA,IACA,KACA,MAAA7/E,EAAAg/E,aAAA,MAAAh/E,EAAAg/E,WAAA,MAEA5C,EAAAp8E,KAvEA,GA2EAhH,EAAA,SAAAgH,GACA,IAAArH,EAAA,IAAAgJ,WAAA,GACA,MACA,QACA,SACA,WAAA3B,EAAA9G,KAAA,aAAA8G,EAAA9G,KAAA,UAAA8G,EAAA9G,KAAA,MAAA8G,EAAA9G,GACA,SACA,WAAA8G,EAAAmD,WAAA,aAAAnD,EAAAmD,WAAA,UAAAnD,EAAAmD,WAAA,MAAAnD,EAAAmD,SACA,gBACA,IACA,IACA,IACA,IACA,0EACA,MAAAnD,EAAA4U,QAAA,MAAA5U,EAAA4U,MAAA,KACA,MAAA5U,EAAA6U,SAAA,MAAA7U,EAAA6U,OAAA,MAEA,OAAA2e,EAAAmD,EAAA39B,KAAAL,IAQAa,EAAA,SAAAwG,GACA,IAAA8/E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA0BA,OAzBAL,EAAAtsD,EAAAmD,EAAAl9B,KAAA,IAAAkI,WAAA,GACA,QACA,WAAA3B,EAAA9G,KAAA,aAAA8G,EAAA9G,KAAA,UAAA8G,EAAA9G,KAAA,MAAA8G,EAAA9G,GACA,QACA,QACA,QACA,WAEAgnF,EAAAtmF,KAAAigB,MAAA7Z,EAAAY,qBAAAk9E,EAAA,IACAqC,EAAAvmF,KAAAigB,MAAA7Z,EAAAY,qBAAAk9E,EAAA,IACAiC,EAAAvsD,EAAAmD,EAAAh9B,KAAA,IAAAgI,WAAA,GACA,MAEAu+E,IAAA,OAAAA,IAAA,OAAAA,IAAA,UAAAA,EAAAC,IAAA,OAAAA,IAAA,OAAAA,IAAA,UAAAA,KAIA,GAQA,UAAAngF,EAAA3J,MACA2pF,EAAAhD,EAAAh9E,EATA,IAUAwzB,EAAAmD,EAAAn9B,KAAAsmF,EAAAC,EAAAC,KAMAC,EAAArD,EAAA58E,GACAggF,EAAAhD,EAAAh9E,EAAAigF,EAAAjpF,OAjBA,IAkBAw8B,EAAAmD,EAAAn9B,KAAAsmF,EAAAC,EAAAC,EAAAC,KASAlnF,EAAA,SAAAiH,GAEA,OADAA,EAAAmD,SAAAnD,EAAAmD,UAAA,WACAqwB,EAAAmD,EAAA59B,KAAAC,EAAAgH,GAAA28E,EAAA38E,KAGA+8E,EAAA,SAAA/8E,GACA,IAAArH,EAAA,IAAAgJ,WAAA,GACA,OACA,WAAA3B,EAAA9G,KAAA,aAAA8G,EAAA9G,KAAA,UAAA8G,EAAA9G,KAAA,MAAA8G,EAAA9G,GACA,QACA,QACA,QACA,UAUA,MAJA,UAAA8G,EAAA3J,OACAsC,IAAA3B,OAAA,MAGAw8B,EAAAmD,EAAAomD,KAAApkF,IAGA,WACA,IAAAynF,EAAAC,EAAAC,EAKAA,EAAA,SAAA9+E,EAAAqE,GACA,IAAA06E,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAoBA,OAlBAl/E,EAAAxK,cACA4M,IAAApC,EAAA,GAAA2B,WACAo9E,EAAA,QAGA38E,IAAApC,EAAA,GAAApJ,OACAooF,EAAA,QAGA58E,IAAApC,EAAA,GAAA09E,QACAuB,EAAA,QAGA78E,IAAApC,EAAA,GAAAk/E,wBACAA,EAAA,IAIA,GACA,EAAAH,EAAAC,EAAAC,EAAAC,EAAA,GACA,WAAAl/E,EAAAxK,UAAA,aAAAwK,EAAAxK,UAAA,UAAAwK,EAAAxK,UAAA,MAAAwK,EAAAxK,QACA,WAAA6O,KAAA,aAAAA,KAAA,UAAAA,KAAA,MAAAA,IAIAw6E,EAAA,SAAArgF,EAAA6F,GACA,IAAAkE,EAAAvI,EAAAm/E,EAAA5pF,EAKA,IAHA8O,GAAA,OADArE,EAAAxB,EAAAwB,SAAA,IACAxK,OACA+S,EAAAu2E,EAAA9+E,EAAAqE,GAEA9O,EAAA,EAAeA,EAAAyK,EAAAxK,OAAoBD,IACnC4pF,EAAAn/E,EAAAzK,GACAgT,IAAAxT,OAAA,aAAAoqF,EAAAx9E,YAAA,aAAAw9E,EAAAx9E,YAAA,UAAAw9E,EAAAx9E,YAAA,MAAAw9E,EAAAx9E,UACA,WAAAw9E,EAAAvoF,QAAA,aAAAuoF,EAAAvoF,QAAA,UAAAuoF,EAAAvoF,QAAA,MAAAuoF,EAAAvoF,KACAuoF,EAAAzB,MAAA0B,WAAA,EAAAD,EAAAzB,MAAAC,UAAAwB,EAAAzB,MAAAE,cAAA,EAAAuB,EAAAzB,MAAAG,eAAA,EAAAsB,EAAAzB,MAAA2B,cAAA,EAAAF,EAAAzB,MAAA4B,gBAAA,MAAAH,EAAAzB,MAAA6B,oBAAA,GAAAJ,EAAAzB,MAAA6B,qBACA,WAAAJ,EAAAD,yBAAA,aAAAC,EAAAD,yBAAA,UAAAC,EAAAD,yBAAA,MAAAC,EAAAD,wBAIA,OAAAltD,EAAAmD,EAAAqmD,KAAA,IAAAr7E,WAAAoI,KAGAq2E,EAAA,SAAApgF,EAAA6F,GACA,IAAAkE,EAAAvI,EAAAm/E,EAAA5pF,EAKA,IAHA8O,GAAA,MADArE,EAAAxB,EAAAwB,SAAA,IACAxK,OACA+S,EAAAu2E,EAAA9+E,EAAAqE,GAEA9O,EAAA,EAAeA,EAAAyK,EAAAxK,OAAoBD,IACnC4pF,EAAAn/E,EAAAzK,GACAgT,IAAAxT,OAAA,aAAAoqF,EAAAx9E,YAAA,aAAAw9E,EAAAx9E,YAAA,UAAAw9E,EAAAx9E,YAAA,MAAAw9E,EAAAx9E,UACA,WAAAw9E,EAAAvoF,QAAA,aAAAuoF,EAAAvoF,QAAA,UAAAuoF,EAAAvoF,QAAA,MAAAuoF,EAAAvoF,OAGA,OAAAo7B,EAAAmD,EAAAqmD,KAAA,IAAAr7E,WAAAoI,KAGAizE,EAAA,SAAAh9E,EAAA6F,GACA,gBAAA7F,EAAA3J,KACA+pF,EAAApgF,EAAA6F,GAGAw6E,EAAArgF,EAAA6F,IA3EA,GA+EApQ,EAAAC,QAAA,CACA2mF,OACAn7E,OACAD,OACAu7E,OACA52E,YAAA,SAAAyC,GACA,IAEA1P,EAFAsoF,EAAA5E,IACA6E,EAAA1E,EAAAn0E,GAKA,OAHA1P,EAAA,IAAAgJ,WAAAs/E,EAAAzoF,WAAA0oF,EAAA1oF,aACAoJ,IAAAq/E,GACAtoF,EAAAiJ,IAAAs/E,EAAAD,EAAAzoF,YACAG,kCCziBA,IAAA3C,EAAaF,EAAQ,GAErB+9H,EAAmB/9H,EAAQ,IAE3BsS,EAAA,SAAAA,IACAA,EAAA7Q,UAAArB,KAAAiB,KAAAlB,MACAA,KAAA2uF,gBAAA,GACA3uF,KAAA4uF,WAAA,KAAAC,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,KACA,IAAAA,EAAA,MAEA7uF,KAAAwS,QAEAxS,KAAA4uF,WAAA1qF,QAAA,SAAA4qF,GACAA,EAAA3uF,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,SACA8uF,EAAA3uF,GAAA,OAAAH,KAAAY,QAAAqH,KAAAjI,KAAA,UACGA,QAGHmS,EAAA7Q,UAAA,IAAAvB,GAEAoB,KAAA,SAAA0O,GACA,IAAAu+E,EAAAC,EAAAU,EAEA,gBAAAl/E,EAAAzD,cAKAgiF,EAAAwvC,EAAAC,SAAAhuH,EAAAm/E,cAEAd,cAAA0vC,EAAAE,iCAKAzvC,EAAAuvC,EAAAG,cAAA3vC,IAcA,GAAAv+E,EAAA5C,IAAAjN,KAAAivF,WAEAjvF,KAAAkvF,qBAAA,MAFA,CAIG,GAAAr/E,EAAA5C,MAAAjN,KAAAivF,YAAAjvF,KAAAkvF,oBAQH,OAPAlvF,KAAAmvF,mBAEAnvF,KAAAmvF,cAEAnvF,KAAAkvF,qBAAA,IAOAH,EAAA6uC,EAAAI,oBAAAnuH,EAAA7C,IAAAqhF,GACAruF,KAAA2uF,gBAAA3uF,KAAA2uF,gBAAAruF,OAAAyuF,GAEA/uF,KAAAivF,aAAAp/E,EAAA5C,MACAjN,KAAAmvF,YAAA,GAGAnvF,KAAAmvF,cACAnvF,KAAAivF,WAAAp/E,EAAA5C,MAGAkF,EAAA7Q,UAAAK,MAAA,WAEA3B,KAAA2uF,gBAAA5tF,QASAf,KAAA2uF,gBAAAzqF,QAAA,SAAAi8B,EAAA4jD,GACA5jD,EAAAivD,aAAArL,IAGA/jF,KAAA2uF,gBAAA9uB,KAAA,SAAAh2D,EAAAC,GACA,OAAAD,EAAAmD,MAAAlD,EAAAkD,IACAnD,EAAAulF,aAAAtlF,EAAAslF,aAGAvlF,EAAAmD,IAAAlD,EAAAkD,MAEAhN,KAAA2uF,gBAAAzqF,QAAA,SAAAuP,GACAA,EAAArT,KAAA,GAEAJ,KAAAqvF,qBAAA57E,IAIGzT,MACHA,KAAA2uF,gBAAA5tF,OAAA,EACAf,KAAA4uF,WAAA1qF,QAAA,SAAA4qF,GACAA,EAAAntF,SACG3B,OA9BHA,KAAA4uF,WAAA1qF,QAAA,SAAA4qF,GACAA,EAAAntF,SACK3B,OAgCLmS,EAAA7Q,UAAAkR,MAAA,WACAxS,KAAAivF,WAAA,KACAjvF,KAAAkvF,qBAAA,EACAlvF,KAAAmvF,YAAA,EACAnvF,KAAAsvF,qBAAA,YACAtvF,KAAA4uF,WAAA1qF,QAAA,SAAAqrF,GACAA,EAAA/8E,WAIAL,EAAA7Q,UAAA+tF,qBAAA,SAAA57E,GAEAzT,KAAAwvF,mBAAA/7E,GACAzT,KAAAsvF,qBAAA77E,EAAArT,MAAA,EACGJ,KAAAyvF,mBAAAh8E,KACHzT,KAAAsvF,qBAAA77E,EAAArT,MAAA,GAGA,OAAAJ,KAAAsvF,qBAAA77E,EAAArT,OAMAJ,KAAA4uF,YAAAn7E,EAAArT,MAAA,GAAAJ,KAAAsvF,qBAAA77E,EAAArT,OAAAe,KAAAsS,IAGAtB,EAAA7Q,UAAAkuF,mBAAA,SAAA/7E,GACA,qBAAAA,EAAA66E,SAGAn8E,EAAA7Q,UAAAmuF,mBAAA,SAAAh8E,GACA,qBAAAA,EAAA66E,SAaA,IAAAoB,EAAA,CACAC,GAAA,IAEAC,GAAA,IAEAC,GAAA,IAEAC,GAAA,IAEAC,GAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,GAEAC,IAAA,GAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,GAEAC,IAAA,GAEAC,IAAA,GAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,IAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,KAEAC,IAAA,MAIAC,EAAA,SAAA78E,GACA,cAAAA,EACA,IAGAA,EAAAk3E,EAAAl3E,MACA7V,OAAAC,aAAA4V,KAOA88E,EAAA,6EAGAC,EAAA,WAIA,IAHA,IAAA7yF,EAAA,GACA5B,EAAA00F,GAEA10F,KACA4B,EAAAvB,KAAA,IAGA,OAAAuB,GAGAmsF,EAAA,SAAAA,EAAA4G,EAAAC,GACA7G,EAAAvtF,UAAArB,KAAAiB,KAAAlB,MACAA,KAAA21F,OAAAF,GAAA,EACAz1F,KAAA41F,aAAAF,GAAA,EACA11F,KAAAgoC,MAAA,SAAAhoC,KAAA21F,QAAA,EAAA31F,KAAA41F,eACA51F,KAAA61F,eACA71F,KAAAwS,QAEAxS,KAAAmB,KAAA,SAAAsS,GACA,IAAAhS,EAAAq0F,EAAAC,EAAAC,EAAAzmF,EAIA,IAFA9N,EAAA,MAAAgS,EAAA66E,UAEAtuF,KAAAi2F,kBAeA,GATA,cAAAx0F,GACAzB,KAAAi2F,iBAAAx0F,EACKA,IAAAzB,KAAAk2F,WACLl2F,KAAAi2F,iBAAA,MAGAF,EAAAt0F,IAAA,EACAu0F,EAAA,IAAAv0F,EAEAA,IAAAzB,KAAAk2F,SAEK,GAAAz0F,IAAAzB,KAAAm2F,wBACLn2F,KAAAo2F,MAAA,aACK,GAAA30F,IAAAzB,KAAAq2F,gBAKLr2F,KAAAo2F,MAAA,QACAp2F,KAAAs2F,gBAAA7iF,EAAAzG,KAEAhN,KAAAu2F,eAAA9iF,EAAAzG,KAEA8oF,EAAA91F,KAAAw2F,WACAx2F,KAAAw2F,WAAAx2F,KAAAy2F,cACAz2F,KAAAy2F,cAAAX,EAEA91F,KAAA02F,UAAAjjF,EAAAzG,SACK,GAAAvL,IAAAzB,KAAA22F,gBACL32F,KAAA42F,YAAA,EACA52F,KAAA62F,UAAApjF,EAAAzG,UACK,GAAAvL,IAAAzB,KAAA82F,gBACL92F,KAAA42F,YAAA,EACA52F,KAAA62F,UAAApjF,EAAAzG,UACK,GAAAvL,IAAAzB,KAAA+2F,gBACL/2F,KAAA42F,YAAA,EACA52F,KAAA62F,UAAApjF,EAAAzG,UACK,GAAAvL,IAAAzB,KAAAg3F,iBACLh3F,KAAAs2F,gBAAA7iF,EAAAzG,KACAhN,KAAAu2F,eAAA9iF,EAAAzG,KACAhN,KAAAi3F,eACAj3F,KAAA02F,UAAAjjF,EAAAzG,SACK,GAAAvL,IAAAzB,KAAAk3F,WACL,UAAAl3F,KAAAo2F,MACAp2F,KAAAy2F,cAAAz2F,KAAAm3F,MAAAn3F,KAAAy2F,cAAAz2F,KAAAm3F,MAAAz2F,MAAA,MAEAV,KAAAw2F,WAAAx2F,KAAAm3F,MAAAn3F,KAAAw2F,WAAAx2F,KAAAm3F,MAAAz2F,MAAA,WAEK,GAAAe,IAAAzB,KAAAo3F,wBACLp3F,KAAAu2F,eAAA9iF,EAAAzG,KACAhN,KAAAw2F,WAAAjB,SACK,GAAA9zF,IAAAzB,KAAAq3F,4BACLr3F,KAAAy2F,cAAAlB,SACK,GAAA9zF,IAAAzB,KAAAs3F,0BACL,YAAAt3F,KAAAo2F,QAGAp2F,KAAAu2F,eAAA9iF,EAAAzG,KACAhN,KAAAw2F,WAAAjB,KAGAv1F,KAAAo2F,MAAA,UACAp2F,KAAA02F,UAAAjjF,EAAAzG,SACK,GAAAhN,KAAAu3F,mBAAAxB,EAAAC,GAMLzmF,EAAA8lF,GADAU,GAAA,EAAAA,IAAA,GACAC,GACAh2F,UAAAo2F,OAAA3iF,EAAAzG,IAAAuC,GACAvP,KAAAw3F,eACK,GAAAx3F,KAAAy3F,eAAA1B,EAAAC,GAML,UAAAh2F,KAAAo2F,MACAp2F,KAAAy2F,cAAAz2F,KAAAm3F,MAAAn3F,KAAAy2F,cAAAz2F,KAAAm3F,MAAAz2F,MAAA,MAEAV,KAAAw2F,WAAAx2F,KAAAm3F,MAAAn3F,KAAAw2F,WAAAx2F,KAAAm3F,MAAAz2F,MAAA,MAQA6O,EAAA8lF,GADAU,GAAA,EAAAA,IAAA,GACAC,GACAh2F,UAAAo2F,OAAA3iF,EAAAzG,IAAAuC,GACAvP,KAAAw3F,eACK,GAAAx3F,KAAA03F,aAAA3B,EAAAC,GAELh2F,KAAAs2F,gBAAA7iF,EAAAzG,KAGAhN,UAAAo2F,OAAA3iF,EAAAzG,IAAA,KACAhN,KAAAw3F,UAEA,SAAAxB,IACAh2F,KAAA23F,cAAAlkF,EAAAzG,IAAA,OAGA,OAAAgpF,IACAh2F,KAAA23F,cAAAlkF,EAAAzG,IAAA,YAGK,GAAAhN,KAAA43F,oBAAA7B,EAAAC,GAKLh2F,KAAAw3F,SAAA,EAAAxB,OACK,GAAAh2F,KAAA63F,MAAA9B,EAAAC,GAAA,CAGL,IAAA8B,EAAAxC,EAAA70F,QAAA,KAAAgB,GAEA,WAAAzB,KAAAo2F,QAIA0B,EAAA93F,KAAA42F,YAAA,MACAkB,EAAA93F,KAAA42F,YAAA,GAGA52F,KAAA62F,UAAApjF,EAAAzG,IAAA8qF,IAGAA,IAAA93F,KAAAm3F,OAEAn3F,KAAAs2F,gBAAA7iF,EAAAzG,KACAhN,KAAAm3F,KAAAW,GAKA,EAAA9B,IAAA,IAAAh2F,KAAA+3F,YAAAt3F,QAAA,MACAT,KAAA23F,cAAAlkF,EAAAzG,IAAA,OAGA,SAAAvL,KAKAzB,KAAAw3F,QAAA,OAAA/1F,IAAA,IAGAzB,KAAAg4F,WAAAhC,IAKA,SAAAA,IACAh2F,KAAA23F,cAAAlkF,EAAAzG,IAAA,YAIKhN,KAAAi4F,aAAAlC,KACL,IAAAC,IACAA,EAAA,MAGAzmF,EAAA8lF,EAAAU,GACAxmF,GAAA8lF,EAAAW,GACAh2F,UAAAo2F,OAAA3iF,EAAAzG,IAAAuC,GACAvP,KAAAw3F,SAAAjoF,EAAAxO,aA7KAf,KAAAi2F,iBAAA,OAmLApH,EAAAvtF,UAAA,IAAAvB,EAGA8uF,EAAAvtF,UAAAi1F,eAAA,SAAAvpF,GACA,IAAAytB,EAAAz6B,KAAAw2F,WACAlzF,IAAA,SAAAw0F,GACA,IACA,OAAAA,EAAAn+E,OACK,MAAAhS,GAML,OADA+vB,QAAAQ,MAAA,+BACA,MAGAld,KAAA,MACAlT,QAAA,iBAEA2yB,EAAA15B,QACAf,KAAAY,QAAA,QACAsP,SAAAlQ,KAAA02F,UACAtmF,OAAApD,EACAuC,KAAAkrB,EACApqB,OAAArQ,KAAAgoC,SASA6mD,EAAAvtF,UAAAkR,MAAA,WACAxS,KAAAo2F,MAAA,QAKAp2F,KAAAk4F,QAAA,EACAl4F,KAAA02F,UAAA,EACA12F,KAAAw2F,WAAAjB,IACAv1F,KAAAy2F,cAAAlB,IACAv1F,KAAAi2F,iBAAA,KAEAj2F,KAAAw3F,QAAA,EACAx3F,KAAAm3F,KAjQA,GAkQAn3F,KAAA42F,YAAA,EAEA52F,KAAA+3F,YAAA,IAOAlJ,EAAAvtF,UAAAu0F,aAAA,WAaA,IAAA71F,KAAA41F,cACA51F,KAAAm4F,MAAA,GACAn4F,KAAAo4F,KAAA,GACAp4F,KAAAq4F,UAAA,GAAAr4F,KAAA21F,SAAA,EACA31F,KAAAs4F,QAAA,IACG,IAAAt4F,KAAA41F,eACH51F,KAAAm4F,MAAA,GACAn4F,KAAAo4F,KAAA,GACAp4F,KAAAq4F,UAAA,GAAAr4F,KAAA21F,SAAA,EACA31F,KAAAs4F,QAAA,IAOAt4F,KAAAk2F,SAAA,EAEAl2F,KAAAm2F,wBAAA,GAAAn2F,KAAAq4F,SACAr4F,KAAAq2F,gBAAA,GAAAr2F,KAAAq4F,SAEAr4F,KAAA22F,gBAAA,GAAA32F,KAAAq4F,SACAr4F,KAAA82F,gBAAA,GAAA92F,KAAAq4F,SACAr4F,KAAA+2F,gBAAA,GAAA/2F,KAAAq4F,SACAr4F,KAAAg3F,iBAAA,GAAAh3F,KAAAq4F,SAEAr4F,KAAAs3F,0BAAA,GAAAt3F,KAAAq4F,SAEAr4F,KAAAk3F,WAAA,GAAAl3F,KAAAq4F,SACAr4F,KAAAo3F,wBAAA,GAAAp3F,KAAAq4F,SACAr4F,KAAAq3F,4BAAA,GAAAr3F,KAAAq4F,UAeAxJ,EAAAvtF,UAAAi2F,mBAAA,SAAAxB,EAAAC,GACA,OAAAD,IAAA/1F,KAAAo4F,MAAApC,GAAA,IAAAA,GAAA,IAeAnH,EAAAvtF,UAAAm2F,eAAA,SAAA1B,EAAAC,GACA,OAAAD,IAAA/1F,KAAAo4F,KAAA,GAAArC,IAAA/1F,KAAAo4F,KAAA,IAAApC,GAAA,IAAAA,GAAA,IAeAnH,EAAAvtF,UAAAo2F,aAAA,SAAA3B,EAAAC,GACA,OAAAD,IAAA/1F,KAAAo4F,MAAApC,GAAA,IAAAA,GAAA,IAeAnH,EAAAvtF,UAAAs2F,oBAAA,SAAA7B,EAAAC,GACA,OAAAD,IAAA/1F,KAAAs4F,SAAAtC,GAAA,IAAAA,GAAA,IAeAnH,EAAAvtF,UAAAu2F,MAAA,SAAA9B,EAAAC,GACA,OAAAD,GAAA/1F,KAAAm4F,OAAApC,EAAA/1F,KAAAm4F,MAAA,GAAAnC,GAAA,IAAAA,GAAA,KAaAnH,EAAAvtF,UAAA02F,WAAA,SAAAhC,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,KAYAnH,EAAAvtF,UAAA22F,aAAA,SAAAM,GACA,OAAAA,GAAA,IAAAA,GAAA,KAWA1J,EAAAvtF,UAAAu1F,UAAA,SAAA7pF,EAAAwrF,GAWA,GATA,WAAAx4F,KAAAo2F,QACAp2F,KAAAm3F,KA/aA,GAgbAn3F,KAAAo2F,MAAA,SAEAp2F,KAAAu2F,eAAAvpF,GACAhN,KAAAy2F,cAAAlB,IACAv1F,KAAAw2F,WAAAjB,UAGA5nF,IAAA6qF,OAAAx4F,KAAAm3F,KAEA,QAAAr2F,EAAA,EAAmBA,EAAAd,KAAA42F,YAAsB91F,IACzCd,KAAAw2F,WAAAgC,EAAA13F,GAAAd,KAAAw2F,WAAAx2F,KAAAm3F,KAAAr2F,GACAd,KAAAw2F,WAAAx2F,KAAAm3F,KAAAr2F,GAAA,QAIA6M,IAAA6qF,IACAA,EAAAx4F,KAAAm3F,MAGAn3F,KAAAk4F,QAAAM,EAAAx4F,KAAA42F,YAAA,GAKA/H,EAAAvtF,UAAAq2F,cAAA,SAAA3qF,EAAAyX,GACAzkB,KAAA+3F,YAAA/3F,KAAA+3F,YAAAz3F,OAAAmkB,GACA,IAAAlV,EAAAkV,EAAA5hB,OAAA,SAAA0M,EAAAkV,GACA,OAAAlV,EAAA,IAAAkV,EAAA,KACG,IACHzkB,UAAAo2F,OAAAppF,EAAAuC,IAKAs/E,EAAAvtF,UAAAg1F,gBAAA,SAAAtpF,GACA,GAAAhN,KAAA+3F,YAAAh3F,OAAA,CAIA,IAAAwO,EAAAvP,KAAA+3F,YAAAh9E,UAAAlY,OAAA,SAAA0M,EAAAkV,GACA,OAAAlV,EAAA,KAAAkV,EAAA,KACG,IACHzkB,KAAA+3F,YAAA,GACA/3F,UAAAo2F,OAAAppF,EAAAuC,KAIAs/E,EAAAvtF,UAAAm3F,MAAA,SAAAzrF,EAAAuC,GACA,IAAAmpF,EAAA14F,KAAAy2F,cAAAz2F,KAAAm3F,MAEAuB,GAAAnpF,EACAvP,KAAAy2F,cAAAz2F,KAAAm3F,MAAAuB,GAGA7J,EAAAvtF,UAAAq3F,OAAA,SAAA3rF,EAAAuC,GACA,IAAAmpF,EAAA14F,KAAAw2F,WAAAx2F,KAAAm3F,MACAuB,GAAAnpF,EACAvP,KAAAw2F,WAAAx2F,KAAAm3F,MAAAuB,GAGA7J,EAAAvtF,UAAA21F,aAAA,WACA,IAAAn2F,EAEA,IAAAA,EAAA,EAAaA,EAAAd,KAAAk4F,QAAkBp3F,IAC/Bd,KAAAw2F,WAAA11F,GAAA,GAGA,IAAAA,EAAAd,KAAAm3F,KAAA,EAAyBr2F,EAAA00F,GAAoB10F,IAC7Cd,KAAAw2F,WAAA11F,GAAA,GAIA,IAAAA,EAAAd,KAAAk4F,QAAwBp3F,EAAAd,KAAAm3F,KAAer2F,IACvCd,KAAAw2F,WAAA11F,GAAAd,KAAAw2F,WAAA11F,EAAA,GAIAd,KAAAw2F,WAAAx2F,KAAAm3F,MAAA,IAGAtI,EAAAvtF,UAAAs3F,QAAA,SAAA5rF,EAAAuC,GACA,IAAAmpF,EAAA14F,KAAAw2F,WAAAx2F,KAAAm3F,MACAuB,GAAAnpF,EACAvP,KAAAw2F,WAAAx2F,KAAAm3F,MAAAuB,GAIAl5F,EAAAC,QAAA,CACA0S,gBACA08E,8CC1sBArvF,EAAAC,QAAA,CACAo+H,SArJA,SAAA/pH,GASA,IARA,IAAAhT,EAAA,EACA4B,EAAA,CACAwrF,aAAA,EACAC,YAAA,GAEAD,EAAA,EACAC,EAAA,EAEArtF,EAAAgT,EAAAvR,YAnBA,MAqBAuR,EAAAhT,IAFA,CAOA,WAAAgT,EAAAhT,IACAotF,GAAA,IACAptF,IAKA,IAFAotF,GAAAp6E,EAAAhT,KAEA,MAAAgT,EAAAhT,IACAqtF,GAAA,IACArtF,IAMA,GAHAqtF,GAAAr6E,EAAAhT,MAGA4B,EAAAgmF,SA1CA,IA0CAwF,EAAA,CACAxrF,EAAAwrF,cACAxrF,EAAAyrF,cACAzrF,EAAAgmF,QAAA50E,EAAAtR,SAAA1B,IAAAqtF,GACA,MAIArtF,GAAAqtF,EACAD,EAAA,EACAC,EAAA,EAGA,OAAAzrF,GA0GAq7H,cAtGA,SAAA3vC,GAGA,aAAAA,EAAA1F,QAAA,GACA,KAIA,MAAA0F,EAAA1F,QAAA,MAAA0F,EAAA1F,QAAA,IACA,KAIA,SAAA/lF,OAAAC,aAAAwrF,EAAA1F,QAAA,GAAA0F,EAAA1F,QAAA,GAAA0F,EAAA1F,QAAA,GAAA0F,EAAA1F,QAAA,IACA,KAIA,IAAA0F,EAAA1F,QAAA,GACA,KAKA0F,EAAA1F,QAAAlmF,SAAA,EAAA4rF,EAAA1F,QAAA3nF,OAAA,IA+EAi9H,oBA3EA,SAAAhxH,EAAAqhF,GACA,IACAvtF,EACAmiB,EACArT,EACAnO,EAJAa,EAAA,GAMA,QAAA+rF,EAAA,IACA,OAAA/rF,EAMA,IAFA2gB,EAAA,GAAAorE,EAAA,GAEAvtF,EAAA,EAAaA,EAAAmiB,EAAWniB,IAExBW,EAAA,CACArB,KAAA,EAAAiuF,EAAA,GAFAz+E,EAAA,EAAA9O,IAGAkM,OAGA,EAAAqhF,EAAAz+E,EAAA,KACAnO,EAAA6sF,OAAAD,EAAAz+E,EAAA,MAAAy+E,EAAAz+E,EAAA,GACAtN,EAAAnB,KAAAM,IAIA,OAAAa,GAiDAk9F,gCA9CA,SAAA/9F,GAOA,IANA,IAGA8sF,EACAC,EAJAztF,EAAAU,EAAAc,WACAksF,EAAA,GACA3tF,EAAA,EAIAA,EAAAC,EAAA,GACA,IAAAU,EAAAX,IAAA,IAAAW,EAAAX,EAAA,QAAAW,EAAAX,EAAA,IACA2tF,EAAAttF,KAAAL,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAA2tF,EAAA1tF,OACA,OAAAU,EAIA8sF,EAAAxtF,EAAA0tF,EAAA1tF,OACAytF,EAAA,IAAA9iF,WAAA6iF,GACA,IAAAG,EAAA,EAEA,IAAA5tF,EAAA,EAAaA,EAAAytF,EAAeG,IAAA5tF,IAC5B4tF,IAAAD,EAAA,KAEAC,IAEAD,EAAAjiF,SAGAgiF,EAAA1tF,GAAAW,EAAAitF,GAGA,OAAAF,GASAsvC,+BApKA,iCCLA,IAAA/9H,EAAaF,EAAQ,GAKrBi5F,EAAA,SAAAzxF,EAAAwhB,GACA,IAAAkwE,EAAA,EAeA,IAbA1xF,EAAAwhB,IAQAkwE,GAAA,GAKAp1F,KAAAw7D,IAAAt2C,EAAAxhB,GAlBA,YAmBAA,GApBA,WAoBA0xF,EAGA,OAAA1xF,GAGA0J,EAAA,SAAAA,EAAA3Q,GACA,IAAA44F,EAAAC,EACAloF,EAAAzP,UAAArB,KAAAiB,KAAAlB,MACAA,KAAAk5F,MAAA94F,EAEAJ,KAAAmB,KAAA,SAAAM,GACAA,EAAArB,OAAAJ,KAAAk5F,aAIAvrF,IAAAsrF,IACAA,EAAAx3F,EAAAwL,KAGAxL,EAAAwL,IAAA6rF,EAAAr3F,EAAAwL,IAAAgsF,GACAx3F,EAAAuL,IAAA8rF,EAAAr3F,EAAAuL,IAAAisF,GACAD,EAAAv3F,EAAAwL,IACAjN,KAAAY,QAAA,OAAAa,KAGAzB,KAAA2B,MAAA,WACAs3F,EAAAD,EACAh5F,KAAAY,QAAA,SAGAZ,KAAAuS,cAAA,WACA0mF,OAAA,EACAD,OAAA,IAIAjoF,EAAAzP,UAAA,IAAAvB,EACAP,EAAAC,QAAA,CACAsR,0BACA+nF,iDCxEA,SAAAmlC,IAEA,wBAAAC,gCAAA,oBAAAA,+BAAAD,SAeA,IAEAC,+BAAAD,YACG,MAAA3oH,GAGHoiB,QAAAQ,MAAA5iB,IAOA2oH,GACAz+H,EAAAC,QAAmBI,EAAQ,mBCjC3BL,EAAAC,QAEA,SAAA8G,EAAA43H,GACA,IAAA3mH,EACA0gB,EAAA,KAEA,IACA1gB,EAAArB,KAAAC,MAAA7P,EAAA43H,GACG,MAAA7oH,GACH4iB,EAAA5iB,EAGA,OAAA4iB,EAAA1gB,qBCZAhY,EAAAC,QAAA,CACA8pG,UAAa1pG,EAAQ,IACrBsrF,MAAStrF,EAAQ,GACjB8S,WAAc9S,EAAQ,IAAc8S,WACpCE,mBAAsBhT,EAAQ,IAAcgT,mBAC5CD,mBAAsB/S,EAAQ,IAAc+S,mBAC5C42F,cAAiB3pG,EAAQ,mCCIzB,IAAAu+H,EAAkBv+H,EAAQ,IAE1Bi5F,EAAqBj5F,EAAQ,IAAsCi5F,eAEnE3N,EAAA,GACAA,EAAAkzC,GAAWx+H,EAAQ,IACnBsrF,EAAAplC,IAAYlmD,EAAQ,IACpB,IAgEAy+H,EAAA,SAAAxqH,EAAAknF,EAAAt4F,GAUA,IATA,IAEA+Q,EAEA8qH,EACAC,EACAjzB,EANAjvB,EAAA,EACAC,EAjEA,IAuEAkiD,GAAA,EAEAliD,GAAAzoE,EAAAvR,YAEA,GAzEA,KAyEAuR,EAAAwoE,IAzEA,KAyEAxoE,EAAAyoE,QAAAzoE,EAAAvR,WAsCA+5E,IACAC,QAvCA,CAKA,OAHA9oE,EAAAK,EAAAtR,SAAA85E,EAAAC,GACA4O,EAAAkzC,GAAAx8H,UAAA4R,EAAAunF,EAAAI,MAGA,UACAmjC,EAAApzC,EAAAkzC,GAAAK,aAAAjrH,EAAAunF,EAAAjnE,OACAyqG,EAAArzC,EAAAkzC,GAAAM,+BAAAlrH,GAEA,UAAA8qH,GAAAC,IACAjzB,EAAApgB,EAAAkzC,GAAAO,aAAAnrH,MAGA83F,EAAAnrG,KAAA,QACAsC,EAAAsd,MAAA7e,KAAAoqG,GACAkzB,GAAA,GAUA,GAAAA,EACA,MAGAniD,GAzGA,IA0GAC,GA1GA,IA0HA,IAHAD,GADAC,EAAAzoE,EAAAvR,YAtHA,IAwHAk8H,GAAA,EAEAniD,GAAA,GAEA,GA1HA,KA0HAxoE,EAAAwoE,IA1HA,KA0HAxoE,EAAAyoE,QAAAzoE,EAAAvR,WAsCA+5E,IACAC,QAvCA,CAKA,OAHA9oE,EAAAK,EAAAtR,SAAA85E,EAAAC,GACA4O,EAAAkzC,GAAAx8H,UAAA4R,EAAAunF,EAAAI,MAGA,UACAmjC,EAAApzC,EAAAkzC,GAAAK,aAAAjrH,EAAAunF,EAAAjnE,OACAyqG,EAAArzC,EAAAkzC,GAAAM,+BAAAlrH,GAEA,UAAA8qH,GAAAC,IACAjzB,EAAApgB,EAAAkzC,GAAAO,aAAAnrH,MAGA83F,EAAAnrG,KAAA,QACAsC,EAAAsd,MAAA7e,KAAAoqG,GACAkzB,GAAA,GAUA,GAAAA,EACA,MAGAniD,GA1JA,IA2JAC,GA3JA,MA6KAsiD,EAAA,SAAA/qH,EAAAknF,EAAAt4F,GAiBA,IAhBA,IAEA+Q,EAEA8qH,EACAC,EACAjzB,EACAn6F,EACAtQ,EACAi7F,EATAzf,EAAA,EACAC,EA/KA,IAwLAkiD,GAAA,EACA3yC,EAAA,CACArqF,KAAA,GACAU,KAAA,GAGAo6E,EAAAzoE,EAAAvR,YAEA,GA9LA,KA8LAuR,EAAAwoE,IA9LA,KA8LAxoE,EAAAyoE,GAiEAD,IACAC,QAlEA,CAKA,OAHA9oE,EAAAK,EAAAtR,SAAA85E,EAAAC,GACA4O,EAAAkzC,GAAAx8H,UAAA4R,EAAAunF,EAAAI,MAGA,UAIA,GAHAmjC,EAAApzC,EAAAkzC,GAAAK,aAAAjrH,EAAAunF,EAAAjnE,OACAyqG,EAAArzC,EAAAkzC,GAAAM,+BAAAlrH,GAEA,UAAA8qH,IACAC,IAAAC,IACAlzB,EAAApgB,EAAAkzC,GAAAO,aAAAnrH,MAGA83F,EAAAnrG,KAAA,QACAsC,EAAAk7C,MAAAz8C,KAAAoqG,GACAkzB,GAAA,IAIA/7H,EAAAo8H,eAAA,CACA,GAAAN,GACA,IAAA1yC,EAAA3pF,KAAA,CAIA,IAHAiP,EAAA,IAAA1F,WAAAogF,EAAA3pF,MACArB,EAAA,EAEAgrF,EAAArqF,KAAAV,QACAg7F,EAAAjQ,EAAArqF,KAAA+K,QACA4E,EAAAzF,IAAAowF,EAAAj7F,GACAA,GAAAi7F,EAAAx5F,WAGA4oF,EAAAkzC,GAAAU,4BAAA3tH,KACA1O,EAAAo8H,cAAA3zC,EAAAkzC,GAAAO,aAAAxtH,GACA1O,EAAAo8H,cAAA1+H,KAAA,SAGA0rF,EAAA3pF,KAAA,EAIA2pF,EAAArqF,KAAAN,KAAAsS,GACAq4E,EAAA3pF,MAAAsR,EAAAlR,YAUA,GAAAk8H,GAAA/7H,EAAAo8H,cACA,MAGAxiD,GAzPA,IA0PAC,GA1PA,IA0QA,IAHAD,GADAC,EAAAzoE,EAAAvR,YAtQA,IAwQAk8H,GAAA,EAEAniD,GAAA,GAEA,GA1QA,KA0QAxoE,EAAAwoE,IA1QA,KA0QAxoE,EAAAyoE,GAsCAD,IACAC,QAvCA,CAKA,OAHA9oE,EAAAK,EAAAtR,SAAA85E,EAAAC,GACA4O,EAAAkzC,GAAAx8H,UAAA4R,EAAAunF,EAAAI,MAGA,UACAmjC,EAAApzC,EAAAkzC,GAAAK,aAAAjrH,EAAAunF,EAAAjnE,OACAyqG,EAAArzC,EAAAkzC,GAAAM,+BAAAlrH,GAEA,UAAA8qH,GAAAC,IACAjzB,EAAApgB,EAAAkzC,GAAAO,aAAAnrH,MAGA83F,EAAAnrG,KAAA,QACAsC,EAAAk7C,MAAAz8C,KAAAoqG,GACAkzB,GAAA,GAUA,GAAAA,EACA,MAGAniD,GA1SA,IA2SAC,GA3SA,MA4cAyiD,EAAA,SAAAlrH,GACA,IAAAknF,EAAA,CACAI,IAAA,KACArnE,MAAA,MAEArxB,EAAA,GAGA,QAAA04F,KA5cA,SAAAtnF,EAAAknF,GAMA,IALA,IAEAvnF,EAFA6oE,EAAA,EACAC,EAVA,IAcAA,EAAAzoE,EAAAvR,YAEA,GAdA,KAcAuR,EAAAwoE,IAdA,KAcAxoE,EAAAyoE,GAqCAD,IACAC,QAtCA,CAKA,OAHA9oE,EAAAK,EAAAtR,SAAA85E,EAAAC,GACA4O,EAAAkzC,GAAAx8H,UAAA4R,EAAAunF,EAAAI,MAGA,UACAJ,EAAAI,MACAJ,EAAAI,IAAAjQ,EAAAkzC,GAAA/jC,SAAA7mF,IAGA,MAEA,UACAunF,EAAAjnE,QACAinE,EAAAjnE,MAAAo3D,EAAAkzC,GAAA9jC,SAAA9mF,IAUA,GAAAunF,EAAAI,KAAAJ,EAAAjnE,MACA,OAGAuoD,GA7CA,IA8CAC,GA9CA,KAkdA0iD,CAAAnrH,EAAAknF,GAEAA,EAAAjnE,MAAA,CACA,GAAAinE,EAAAjnE,MAAArb,eAAA0iF,GAGA,OAFAJ,EAAAjnE,MAAAqnE,IAGA,KAAAgjC,EAAA92H,iBACA5E,EAAAk7C,MAAA,GACAihF,EAAA/qH,EAAAknF,EAAAt4F,GAEA,IAAAA,EAAAk7C,MAAA78C,eACA2B,EAAAk7C,MAGA,MAEA,KAAAwgF,EAAA72H,iBACA7E,EAAAsd,MAAA,GACAs+G,EAAAxqH,EAAAknF,EAAAt4F,GAEA,IAAAA,EAAAsd,MAAAjf,eACA2B,EAAAsd,OAWA,OAAAtd,GA8BAlD,EAAAC,QAAA,CACA8nG,QAnBA,SAAAzzF,EAAAorH,GACA,IACAx8H,EAQA,OALAA,EAJAyoF,EAAAplC,IAAAt8C,gBAAAqK,GArJA,SAAAA,GASA,IARA,IAMAL,EANAgrH,GAAA,EACAU,EAAA,EACAjyC,EAAA,KACApiF,EAAA,KACA8I,EAAA,EACAT,EAAA,EAGAW,EAAA/S,OAAAoS,GAAA,IAGA,OAFAg4E,EAAAplC,IAAAlkD,UAAAiS,EAAAX,IAGA,qBAGA,GAAAW,EAAA/S,OAAAoS,EAAA,IACAsrH,GAAA,EACA,MAMA,IAHA7qH,EAAAu3E,EAAAplC,IAAA9yC,gBAAAa,EAAAX,IAGAW,EAAA/S,OAAA,CACA09H,GAAA,EACA,MAGA,OAAA3zH,IACA2I,EAAAK,EAAAtR,SAAA2Q,IAAAS,GACA9I,EAAAqgF,EAAAplC,IAAAryC,kBAAAD,IAGAN,GAAAS,EACA,MAEA,YAGA,GAAAE,EAAA/S,OAAAoS,EAAA,GACAsrH,GAAA,EACA,MAMA,IAHA7qH,EAAAu3E,EAAAplC,IAAA1yC,cAAAS,EAAAX,IAGAW,EAAA/S,OAAA,CACA09H,GAAA,EACA,MAGA,OAAAvxC,IACAz5E,EAAAK,EAAAtR,SAAA2Q,IAAAS,GACAs5E,EAAA/B,EAAAplC,IAAAvyC,gBAAAC,IAGA0rH,IACAhsH,GAAAS,EACA,MAEA,QACAT,IAIA,GAAAsrH,EACA,YAIA,UAAAvxC,GAAA,OAAApiF,EACA,YAGA,IAAAs0H,EAxbA,IAwbAlyC,EAYA,MAXA,CACAltE,MAAA,EACA5f,KAAA,QACA6M,IAAAnC,EACAkC,IAAAlC,GACK,CACL1K,KAAA,QACA6M,IAAAnC,EAAA,KAAAq0H,EAAAC,EACApyH,IAAAlC,EAAA,KAAAq0H,EAAAC,KAoEAC,CAAAvrH,GAEAkrH,EAAAlrH,MAGApR,EAAAsd,OAAAtd,EAAAk7C,QA7MA,SAAAr3B,EAAA24G,GACA,GAAA34G,EAAAvG,OAAAuG,EAAAvG,MAAAjf,OAAA,CACA,IAAAu+H,EAAAJ,EAEA,qBAAAI,IACAA,EAAA/4G,EAAAvG,MAAA,GAAA/S,KAGAsZ,EAAAvG,MAAA9b,QAAA,SAAA8L,GACAA,EAAA/C,IAAA6rF,EAAA9oF,EAAA/C,IAAAqyH,GACAtvH,EAAAhD,IAAA8rF,EAAA9oF,EAAAhD,IAAAsyH,GAEAtvH,EAAAu0G,QAAAv0G,EAAA/C,IAzUA,IA0UA+C,EAAAuvH,QAAAvvH,EAAAhD,IA1UA,MA8UA,GAAAuZ,EAAAq3B,OAAAr3B,EAAAq3B,MAAA78C,OAAA,CACA,IAAAy+H,EAAAN,EAcA,GAZA,qBAAAM,IACAA,EAAAj5G,EAAAq3B,MAAA,GAAA3wC,KAGAsZ,EAAAq3B,MAAA15C,QAAA,SAAA8L,GACAA,EAAA/C,IAAA6rF,EAAA9oF,EAAA/C,IAAAuyH,GACAxvH,EAAAhD,IAAA8rF,EAAA9oF,EAAAhD,IAAAwyH,GAEAxvH,EAAAu0G,QAAAv0G,EAAA/C,IAzVA,IA0VA+C,EAAAuvH,QAAAvvH,EAAAhD,IA1VA,MA6VAuZ,EAAAu4G,cAAA,CACA,IAAA1tH,EAAAmV,EAAAu4G,cACA1tH,EAAAnE,IAAA6rF,EAAA1nF,EAAAnE,IAAAuyH,GACApuH,EAAApE,IAAA8rF,EAAA1nF,EAAApE,IAAAwyH,GAEApuH,EAAAmzG,QAAAnzG,EAAAnE,IAlWA,IAmWAmE,EAAAmuH,QAAAnuH,EAAAnE,IAnWA,MA8gBAwyH,CAAA/8H,EAAAw8H,GACAx8H,GAJA,MASA47H,iDC3hBA,IAAAxhH,EAAQjd,EAAQ,IAChBub,EAAA,oBAAA5U,eAAAk5H,IACA14H,EAAAoU,EAAA5U,OAAAk5H,IAAA,uBACAC,EAAAvkH,EAAA5U,OAAAk5H,IAAA,sBACA58G,EAAA1H,EAAA5U,OAAAk5H,IAAA,wBACA18G,EAAA5H,EAAA5U,OAAAk5H,IAAA,2BACAE,EAAAxkH,EAAA5U,OAAAk5H,IAAA,wBACAlkE,EAAApgD,EAAA5U,OAAAk5H,IAAA,wBACAG,EAAAzkH,EAAA5U,OAAAk5H,IAAA,uBACA1jH,EAAAZ,EAAA5U,OAAAk5H,IAAA,+BACAzjH,EAAAb,EAAA5U,OAAAk5H,IAAA,2BACAj4B,EAAArsF,EAAA5U,OAAAk5H,IAAA,wBACAI,EAAA1kH,EAAA5U,OAAAk5H,IAAA,oBACAK,EAAA3kH,EAAA5U,OAAAk5H,IAAA,oBACAM,EAAA,oBAAAx5H,eAAAC,SAkBA,SAAAw5H,EAAAp2H,GACA,QAAAC,EAAA7I,UAAAF,OAAA,EAAAmE,EAAA,yDAAA2E,EAAA4pB,EAAA,EAA6GA,EAAA3pB,EAAO2pB,IACpHvuB,GAAA,WAAAsyH,mBAAAv2H,UAAAwyB,EAAA,KAlBA,SAAA5pB,EAAAC,EAAA5E,EAAAuuB,EAAA9rB,EAAAF,EAAA+kD,EAAA0zE,GACA,IAAAr2H,EAAA,CAEA,GADAA,OAAA,OACA,IAAAC,EAAAD,EAAAuL,MAAA,qIAAiK,CACjK,IAAA2H,EAAA,CAAA7X,EAAAuuB,EAAA9rB,EAAAF,EAAA+kD,EAAA0zE,GACA39F,EAAA,GACA14B,EAAAuL,MAAAtL,EAAAhC,QAAA,iBACA,OAAAiV,EAAAwlB,SAEA9lB,KAAA,sBAGA,MADA5S,EAAAs2H,YAAA,EACAt2H,GASAu2H,EAAA,2BAAAv2H,EAAA,4HAA0C3E,GAG1C,IAAAm7H,EAAA,CACAC,UAAA,WACA,UAEAC,mBAAA,aACAC,oBAAA,aACAC,gBAAA,cAEAC,EAAA,GAEA,SAAAC,EAAA92H,EAAAC,EAAA5E,GACAlF,KAAAsF,MAAAuE,EACA7J,KAAAo6B,QAAAtwB,EACA9J,KAAA4gI,KAAAF,EACA1gI,KAAA6gI,QAAA37H,GAAAm7H,EAcA,SAAAS,KAIA,SAAAC,EAAAl3H,EAAAC,EAAA5E,GACAlF,KAAAsF,MAAAuE,EACA7J,KAAAo6B,QAAAtwB,EACA9J,KAAA4gI,KAAAF,EACA1gI,KAAA6gI,QAAA37H,GAAAm7H,EAnBAM,EAAAr/H,UAAA0/H,iBAAA,GAEAL,EAAAr/H,UAAAwlC,SAAA,SAAAj9B,EAAAC,GACA,kBAAAD,GAAA,oBAAAA,GAAA,MAAAA,GAAAo2H,EAAA,MACAjgI,KAAA6gI,QAAAJ,gBAAAzgI,KAAA6J,EAAAC,EAAA,aAGA62H,EAAAr/H,UAAA2/H,YAAA,SAAAp3H,GACA7J,KAAA6gI,QAAAN,mBAAAvgI,KAAA6J,EAAA,gBAKAi3H,EAAAx/H,UAAAq/H,EAAAr/H,UASA,IAAA4/H,EAAAH,EAAAz/H,UAAA,IAAAw/H,EACAI,EAAAx6H,YAAAq6H,EACAjkH,EAAAokH,EAAAP,EAAAr/H,WACA4/H,EAAAC,sBAAA,EACA,IAAAC,EAAA,CACAC,QAAA,MAEAC,EAAA,CACAD,QAAA,MAEAE,EAAA57H,OAAArE,UAAAoX,eACA8oH,EAAA,CACA37H,KAAA,EACA47H,KAAA,EACAC,QAAA,EACAC,UAAA,GAGA,SAAAC,EAAA/3H,EAAAC,EAAA5E,GACA,IAAAuuB,OAAA,EACA9rB,EAAA,GACAF,EAAA,KACA+kD,EAAA,KACA,SAAA1iD,EAAA,IAAA2pB,UAAA,IAAA3pB,EAAA23H,MAAAj1E,EAAA1iD,EAAA23H,UAAA,IAAA33H,EAAAjE,MAAA4B,EAAA,GAAAqC,EAAAjE,KAAAiE,EACAy3H,EAAArgI,KAAA4I,EAAA2pB,KAAA+tG,EAAA9oH,eAAA+a,KAAA9rB,EAAA8rB,GAAA3pB,EAAA2pB,IAEA,IAAAysG,EAAAj/H,UAAAF,OAAA,EACA,OAAAm/H,EAAAv4H,EAAAwhC,SAAAjkC,OAA8B,KAAAg7H,EAAA,CAC9B,QAAAnjH,EAAAtB,MAAAykH,GAAA39F,EAAA,EAAiCA,EAAA29F,EAAO39F,IACxCxlB,EAAAwlB,GAAAthC,UAAAshC,EAAA,GAGA56B,EAAAwhC,SAAApsB,EAEA,GAAAlT,KAAAg4H,aAAA,IAAApuG,KAAAysG,EAAAr2H,EAAAg4H,kBACA,IAAAl6H,EAAA8rB,KAAA9rB,EAAA8rB,GAAAysG,EAAAzsG,IAEA,OACAquG,SAAA96H,EACA5G,KAAAyJ,EACAhE,IAAA4B,EACAg6H,IAAAj1E,EACAlnD,MAAAqC,EACAo6H,OAAAT,EAAAD,SAeA,SAAAW,EAAAn4H,GACA,wBAAAA,GAAA,OAAAA,KAAAi4H,WAAA96H,EAaA,IAAAi7H,EAAA,OACAC,EAAA,GAEA,SAAAC,EAAAt4H,EAAAC,EAAA5E,EAAAuuB,GACA,GAAAyuG,EAAAnhI,OAAA,CACA,IAAA4G,EAAAu6H,EAAAz0H,MAMA,OALA9F,EAAAjF,OAAAmH,EACAlC,EAAAy6H,UAAAt4H,EACAnC,EAAAq7B,KAAA99B,EACAyC,EAAAyyB,QAAA3G,EACA9rB,EAAAsb,MAAA,EACAtb,EAGA,OACAjF,OAAAmH,EACAu4H,UAAAt4H,EACAk5B,KAAA99B,EACAk1B,QAAA3G,EACAxQ,MAAA,GAIA,SAAAo/G,EAAAx4H,GACAA,EAAAnH,OAAA,KACAmH,EAAAu4H,UAAA,KACAv4H,EAAAm5B,KAAA,KACAn5B,EAAAuwB,QAAA,KACAvwB,EAAAoZ,MAAA,EACA,GAAAi/G,EAAAnhI,QAAAmhI,EAAA/gI,KAAA0I,GAkCA,SAAAy4H,EAAAz4H,EAAAC,EAAA5E,GACA,aAAA2E,EAAA,EAhCA,SAAA+Y,EAAA/Y,EAAAC,EAAA5E,EAAAuuB,GACA,IAAA9rB,SAAAkC,EACA,cAAAlC,GAAA,YAAAA,IAAAkC,EAAA,MACA,IAAApC,GAAA,EACA,UAAAoC,EAAApC,GAAA,OAAyB,OAAAE,GACzB,aACA,aACAF,GAAA,EACA,MAEA,aACA,OAAAoC,EAAAi4H,UACA,KAAA96H,EACA,KAAA24H,EACAl4H,GAAA,GAIA,GAAAA,EAAA,OAAAvC,EAAAuuB,EAAA5pB,EAAA,KAAAC,EAAA,IAAAy4H,EAAA14H,EAAA,GAAAC,GAAA,EAGA,GAFArC,EAAA,EACAqC,EAAA,KAAAA,EAAA,IAAAA,EAAA,IACA2R,MAAAI,QAAAhS,GAAA,QAAA2iD,EAAA,EAAuCA,EAAA3iD,EAAA9I,OAAcyrD,IAAA,CAErD,IAAA0zE,EAAAp2H,EAAAy4H,EADA56H,EAAAkC,EAAA2iD,GACAA,GACA/kD,GAAAmb,EAAAjb,EAAAu4H,EAAAh7H,EAAAuuB,QACG,GAAAysG,EAAA,OAAAr2H,GAAA,kBAAAA,EAAA,yBAAAq2H,EAAAF,GAAAn2H,EAAAm2H,IAAAn2H,EAAA,eAAAq2H,EAAA,yBAAAA,EAAA,IAAAr2H,EAAAq2H,EAAAh/H,KAAA2I,GAAA2iD,EAAA,IAA0L7kD,EAAAkC,EAAAk6C,QAAAjuB,MAC7LruB,GAAAmb,EAAAjb,IAAAN,MAAA64H,EAAAp2H,EAAAy4H,EAAA56H,EAAA6kD,KAAAtnD,EAAAuuB,OACG,WAAA9rB,GAAAs4H,EAAA,0BAAA/6H,EAAA,GAAA2E,GAAA,qBAA0FlE,OAAAiW,KAAA/R,GAAAmR,KAAA,UAAkC9V,EAAA,IAC/H,OAAAuC,EAIAmb,CAAA/Y,EAAA,GAAAC,EAAA5E,GAGA,SAAAq9H,EAAA14H,EAAAC,GACA,wBAAAD,GAAA,OAAAA,GAAA,MAAAA,EAAAhE,IA9EA,SAAAgE,GACA,IAAAC,EAAA,CACA04H,IAAA,KACAC,IAAA,MAEA,cAAA54H,GAAA/B,QAAA,iBAAA+B,GACA,OAAAC,EAAAD,KAwEA05F,CAAA15F,EAAAhE,KAAAiE,EAAA3B,SAAA,IAGA,SAAAu6H,EAAA74H,EAAAC,GACAD,EAAAm5B,KAAA9hC,KAAA2I,EAAAuwB,QAAAtwB,EAAAD,EAAAoZ,SAGA,SAAA0/G,EAAA94H,EAAAC,EAAA5E,GACA,IAAAuuB,EAAA5pB,EAAAnH,OACAiF,EAAAkC,EAAAu4H,UACAv4H,IAAAm5B,KAAA9hC,KAAA2I,EAAAuwB,QAAAtwB,EAAAD,EAAAoZ,SACAxH,MAAAI,QAAAhS,GAAA+4H,EAAA/4H,EAAA4pB,EAAAvuB,EAAA,SAAA2E,GACA,OAAAA,IACG,MAAAA,IAAAm4H,EAAAn4H,OA1GH,SAAAA,EAAAC,GACA,OACAg4H,SAAA96H,EACA5G,KAAAyJ,EAAAzJ,KACAyF,IAAAiE,EACA23H,IAAA53H,EAAA43H,IACAn8H,MAAAuE,EAAAvE,MACAy8H,OAAAl4H,EAAAk4H,QAmGGc,CAAAh5H,EAAAlC,IAAAkC,EAAAhE,KAAAiE,KAAAjE,MAAAgE,EAAAhE,IAAA,OAAAgE,EAAAhE,KAAAiC,QAAAm6H,EAAA,YAAA/8H,IAAAuuB,EAAAtyB,KAAA0I,IAGH,SAAA+4H,EAAA/4H,EAAAC,EAAA5E,EAAAuuB,EAAA9rB,GACA,IAAAF,EAAA,GACA,MAAAvC,IAAAuC,GAAA,GAAAvC,GAAA4C,QAAAm6H,EAAA,YAEAK,EAAAz4H,EAAA84H,EADA74H,EAAAq4H,EAAAr4H,EAAArC,EAAAgsB,EAAA9rB,IAEA06H,EAAAv4H,GAGA,SAAAg5H,IACA,IAAAj5H,EAAAu3H,EAAAC,QAEA,OADA,OAAAx3H,GAAAo2H,EAAA,OACAp2H,EAGA,IAAAk5H,EAAA,CACAC,SAAA,CACA1/H,IAAA,SAAAuG,EAAAC,EAAA5E,GACA,SAAA2E,EAAA,OAAAA,EACA,IAAA4pB,EAAA,GAEA,OADAmvG,EAAA/4H,EAAA4pB,EAAA,KAAA3pB,EAAA5E,GACAuuB,GAEAvvB,QAAA,SAAA2F,EAAAC,EAAA5E,GACA,SAAA2E,EAAA,OAAAA,EAEAy4H,EAAAz4H,EAAA64H,EADA54H,EAAAq4H,EAAA,UAAAr4H,EAAA5E,IAEAm9H,EAAAv4H,IAEAmZ,MAAA,SAAApZ,GACA,OAAAy4H,EAAAz4H,EAAA,WACA,aACO,OAEPo5H,QAAA,SAAAp5H,GACA,IAAAC,EAAA,GAIA,OAHA84H,EAAA/4H,EAAAC,EAAA,cAAAD,GACA,OAAAA,IAEAC,GAEAo5H,KAAA,SAAAr5H,GAEA,OADAm4H,EAAAn4H,IAAAo2H,EAAA,OACAp2H,IAGAs5H,UAAA,WACA,OACA9B,QAAA,OAGA35F,UAAAi5F,EACAyC,cAAArC,EACAsC,cAAA,SAAAx5H,EAAAC,GAeA,YAdA,IAAAA,MAAA,OACAD,EAAA,CACAi4H,SAAAjC,EACAyD,sBAAAx5H,EACAy5H,cAAA15H,EACA25H,eAAA35H,EACA45H,aAAA,EACAC,SAAA,KACAC,SAAA,OAEAD,SAAA,CACA5B,SAAAtmE,EACAooE,SAAA/5H,GAEAA,EAAA85H,SAAA95H,GAEAg6H,WAAA,SAAAh6H,GACA,OACAi4H,SAAA7lH,EACA6nH,OAAAj6H,IAGAk6H,KAAA,SAAAl6H,GACA,OACAi4H,SAAA/B,EACAiE,MAAAn6H,EACAo6H,SAAA,EACAC,QAAA,OAGAC,KAAA,SAAAt6H,EAAAC,GACA,OACAg4H,SAAAhC,EACA1/H,KAAAyJ,EACAu6H,aAAA,IAAAt6H,EAAA,KAAAA,IAGAu6H,YAAA,SAAAx6H,EAAAC,GACA,OAAAg5H,IAAAuB,YAAAx6H,EAAAC,IAEAw6H,WAAA,SAAAz6H,EAAAC,GACA,OAAAg5H,IAAAwB,WAAAz6H,EAAAC,IAEAy6H,UAAA,SAAA16H,EAAAC,GACA,OAAAg5H,IAAAyB,UAAA16H,EAAAC,IAEA06H,oBAAA,SAAA36H,EAAAC,EAAA5E,GACA,OAAA49H,IAAA0B,oBAAA36H,EAAAC,EAAA5E,IAEAu/H,cAAA,aACAC,gBAAA,SAAA76H,EAAAC,GACA,OAAAg5H,IAAA4B,gBAAA76H,EAAAC,IAEA66H,QAAA,SAAA96H,EAAAC,GACA,OAAAg5H,IAAA6B,QAAA96H,EAAAC,IAEA86H,WAAA,SAAA/6H,EAAAC,EAAA5E,GACA,OAAA49H,IAAA8B,WAAA/6H,EAAAC,EAAA5E,IAEA2/H,OAAA,SAAAh7H,GACA,OAAAi5H,IAAA+B,OAAAh7H,IAEAi7H,SAAA,SAAAj7H,GACA,OAAAi5H,IAAAgC,SAAAj7H,IAEAk7H,SAAAjiH,EACAkiH,WAAAhiH,EACAiiH,SAAAx9B,EACA/sE,cAAAknG,EACAsD,aAAA,SAAAr7H,EAAAC,EAAA5E,IACA,OAAA2E,QAAA,IAAAA,IAAAo2H,EAAA,MAAAp2H,GACA,IAAA4pB,OAAA,EACA9rB,EAAAmV,EAAA,GAAgBjT,EAAAvE,OAChBmC,EAAAoC,EAAAhE,IACA2mD,EAAA3iD,EAAA43H,IACAvB,EAAAr2H,EAAAk4H,OAEA,SAAAj4H,EAAA,MACA,IAAAA,EAAA23H,MAAAj1E,EAAA1iD,EAAA23H,IAAAvB,EAAAoB,EAAAD,cACA,IAAAv3H,EAAAjE,MAAA4B,EAAA,GAAAqC,EAAAjE,KACA,IAAAkX,OAAA,EAGA,IAAA0W,KAFA5pB,EAAAzJ,MAAAyJ,EAAAzJ,KAAAyhI,eAAA9kH,EAAAlT,EAAAzJ,KAAAyhI,cAEA/3H,EACAy3H,EAAArgI,KAAA4I,EAAA2pB,KAAA+tG,EAAA9oH,eAAA+a,KAAA9rB,EAAA8rB,QAAA,IAAA3pB,EAAA2pB,SAAA,IAAA1W,IAAA0W,GAAA3pB,EAAA2pB,IAKA,QADAA,EAAAxyB,UAAAF,OAAA,GACA4G,EAAAwhC,SAAAjkC,OAAgC,KAAAuuB,EAAA,CAChC1W,EAAAtB,MAAAgY,GAEA,QAAA8O,EAAA,EAAqBA,EAAA9O,EAAO8O,IAC5BxlB,EAAAwlB,GAAAthC,UAAAshC,EAAA,GAGA56B,EAAAwhC,SAAApsB,EAEA,OACA+kH,SAAA96H,EACA5G,KAAAyJ,EAAAzJ,KACAyF,IAAA4B,EACAg6H,IAAAj1E,EACAlnD,MAAAqC,EACAo6H,OAAA7B,IAGAiF,cAAA,SAAAt7H,GACA,IAAAC,EAAA83H,EAAA35H,KAAA,KAAA4B,GAEA,OADAC,EAAA1J,KAAAyJ,EACAC,GAEAs7H,eAAApD,EACAh/H,QAAA,SACAqiI,wBAAArpH,EACAspH,kBAAA1F,EACA2F,mDAAA,CACAC,uBAAApE,EACAqE,kBAAAnE,EACA10G,OAAA9P,IAGA4oH,EAAA,CACArlH,QAAA0iH,GAEA4C,EAAAD,GAAA3C,GAAA2C,EACAlmI,EAAAC,QAAAkmI,EAAAtlH,SAAAslH,gCC1ZA,IAAA7F,EAASjgI,EAAQ,GACjBub,EAAQvb,EAAQ,IAChBijB,EAAQjjB,EAAQ,IAkBhB,SAAAmc,EAAAnS,GACA,QAAAC,EAAA7I,UAAAF,OAAA,EAAA0yB,EAAA,yDAAA5pB,EAAA3E,EAAA,EAA6GA,EAAA4E,EAAO5E,IACpHuuB,GAAA,WAAA+jG,mBAAAv2H,UAAAiE,EAAA,KAlBA,SAAA2E,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,EAAAz4H,EAAA+kD,GACA,IAAA3iD,EAAA,CAEA,GADAA,OAAA,OACA,IAAAC,EAAAD,EAAAuL,MAAA,qIAAiK,CACjK,IAAA2H,EAAA,CAAA0W,EAAAvuB,EAAAyC,EAAAu4H,EAAAz4H,EAAA+kD,GACA1vC,EAAA,GACAjT,EAAAuL,MAAAtL,EAAAhC,QAAA,iBACA,OAAAiV,EAAAD,SAEAL,KAAA,sBAGA,MADA5S,EAAAs2H,YAAA,EACAt2H,GASAk2H,EAAA,2BAAAl2H,EAAA,4HAA0C4pB,GAG1CqsG,GAAA9jH,EAAA,OAYA,IAAA6mH,GAAA,EACAH,EAAA,KACAC,GAAA,EACAiD,EAAA,KACAC,EAAA,CACAzgB,QAAA,SAAAv7G,GACAg5H,GAAA,EACAH,EAAA74H,IAIA,SAAAi8H,EAAAj8H,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,EAAAz4H,EAAA+kD,EAAAzvC,GACA8lH,GAAA,EACAH,EAAA,KAvBA,SAAA74H,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,EAAAz4H,EAAA+kD,EAAAzvC,GACA,IAAAD,EAAArB,MAAAna,UAAAZ,MAAAQ,KAAAD,UAAA,GAEA,IACA6I,EAAA1I,MAAAqyB,EAAA3W,GACG,MAAAylB,GACHviC,KAAAolH,QAAA7iF,KAkBAnhC,MAAAykI,EAAA5kI,WAiBA,IAAA8kI,EAAA,KACAC,EAAA,GAEA,SAAAC,IACA,GAAAF,EAAA,QAAAl8H,KAAAm8H,EAAA,CACA,IAAAl8H,EAAAk8H,EAAAn8H,GACA4pB,EAAAsyG,EAAAtlI,QAAAoJ,GAGA,IAFA,EAAA4pB,GAAAzX,EAAA,KAAAnS,IAEAq8H,EAAAzyG,GAKA,QAAAvuB,KAJA4E,EAAAq8H,eAAAnqH,EAAA,KAAAnS,GACAq8H,EAAAzyG,GAAA3pB,EACA2pB,EAAA3pB,EAAAs8H,WAEA,CACA,IAAAz+H,OAAA,EACAu4H,EAAAzsG,EAAAvuB,GACAuC,EAAAqC,EACA0iD,EAAAtnD,EACAmhI,EAAA3tH,eAAA8zC,IAAAxwC,EAAA,KAAAwwC,GACA65E,EAAA75E,GAAA0zE,EACA,IAAAnjH,EAAAmjH,EAAAoG,wBAEA,GAAAvpH,EAAA,CACA,IAAApV,KAAAoV,EACAA,EAAArE,eAAA/Q,IAAA4+H,EAAAxpH,EAAApV,GAAAF,EAAA+kD,GAGA7kD,GAAA,OACSu4H,EAAAsG,kBAAAD,EAAArG,EAAAsG,iBAAA/+H,EAAA+kD,GAAA7kD,GAAA,GAAAA,GAAA,EAETA,GAAAqU,EAAA,KAAA9W,EAAA2E,KAMA,SAAA08H,EAAA18H,EAAAC,EAAA2pB,GACAgzG,EAAA58H,IAAAmS,EAAA,MAAAnS,GACA48H,EAAA58H,GAAAC,EACA/B,EAAA8B,GAAAC,EAAAs8H,WAAA3yG,GAAAizG,aAGA,IAAAR,EAAA,GACAG,EAAA,GACAI,EAAA,GACA1+H,EAAA,GACA4+H,EAAA,KACAC,EAAA,KACAC,EAAA,KAEA,SAAAC,EAAAj9H,EAAAC,EAAA2pB,GACA,IAAAvuB,EAAA2E,EAAAzJ,MAAA,gBACAyJ,EAAA05D,cAAAsjE,EAAApzG,GAnEA,SAAA5pB,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,EAAAz4H,EAAA+kD,EAAAzvC,GAGA,GAFA+oH,EAAA1kI,MAAApB,KAAAiB,WAEA4hI,EAAA,CACA,GAAAA,EAAA,CACA,IAAA/lH,EAAA4lH,EACAG,GAAA,EACAH,EAAA,UACK1mH,EAAA,OAAAc,OAAA,EAEL6lH,OAAA,EAAAiD,EAAA9oH,IA0DAiqH,CAAA7hI,EAAA4E,OAAA,EAAAD,GACAA,EAAA05D,cAAA,KAGA,SAAAyjE,EAAAn9H,EAAAC,GAEA,OADA,MAAAA,GAAAkS,EAAA,MACA,MAAAnS,EAAAC,EAEA2R,MAAAI,QAAAhS,GACA4R,MAAAI,QAAA/R,IAAAD,EAAA1I,KAAAC,MAAAyI,EAAAC,GAAAD,IACAA,EAAA1I,KAAA2I,GACAD,GAGA4R,MAAAI,QAAA/R,GAAA,CAAAD,GAAAvJ,OAAAwJ,GAAA,CAAAD,EAAAC,GAGA,SAAAm9H,EAAAp9H,EAAAC,EAAA2pB,GACAhY,MAAAI,QAAAhS,KAAA3F,QAAA4F,EAAA2pB,GAAA5pB,GAAAC,EAAA5I,KAAAuyB,EAAA5pB,GAGA,IAAAq9H,EAAA,KAEA,SAAAC,EAAAt9H,GACA,GAAAA,EAAA,CACA,IAAAC,EAAAD,EAAAu9H,mBACA3zG,EAAA5pB,EAAAw9H,mBACA,GAAA5rH,MAAAI,QAAA/R,GAAA,QAAA5E,EAAA,EAAyCA,EAAA4E,EAAA/I,SAAA8I,EAAAi3B,uBAA2C57B,IACpF4hI,EAAAj9H,EAAAC,EAAA5E,GAAAuuB,EAAAvuB,SACK4E,GAAAg9H,EAAAj9H,EAAAC,EAAA2pB,GACL5pB,EAAAu9H,mBAAA,KACAv9H,EAAAw9H,mBAAA,KACAx9H,EAAAy9H,gBAAAz9H,EAAAnD,YAAA6gI,QAAA19H,IAIA,IAAA29H,EAAA,CACAC,uBAAA,SAAA59H,GACAk8H,GAAA/pH,EAAA,OACA+pH,EAAAtqH,MAAAna,UAAAZ,MAAAQ,KAAA2I,GACAo8H,KAEAyB,yBAAA,SAAA79H,GACA,IACA4pB,EADA3pB,GAAA,EAGA,IAAA2pB,KAAA5pB,EACA,GAAAA,EAAA6O,eAAA+a,GAAA,CACA,IAAAvuB,EAAA2E,EAAA4pB,GACAuyG,EAAAttH,eAAA+a,IAAAuyG,EAAAvyG,KAAAvuB,IAAA8gI,EAAAvyG,IAAAzX,EAAA,MAAAyX,GAAAuyG,EAAAvyG,GAAAvuB,EAAA4E,GAAA,GAIAA,GAAAm8H,MAIA,SAAA0B,EAAA99H,EAAAC,GACA,IAAA2pB,EAAA5pB,EAAA+9H,UACA,IAAAn0G,EAAA,YACA,IAAAvuB,EAAAyhI,EAAAlzG,GACA,IAAAvuB,EAAA,YACAuuB,EAAAvuB,EAAA4E,GAEAD,EAAA,OAAAC,GACA,cACA,qBACA,oBACA,2BACA,kBACA,yBACA,kBACA,yBACA,gBACA,wBACA5E,KAAAs7B,YAAAt7B,IAAA,YAAA2E,IAAAzJ,OAAA,UAAAyJ,GAAA,WAAAA,GAAA,aAAAA,IACAA,GAAA3E,EACA,MAAA2E,EAEA,QACAA,GAAA,EAGA,OAAAA,EAAA,MACA4pB,GAAA,oBAAAA,GAAAzX,EAAA,MAAAlS,SAAA2pB,GACAA,GAGA,SAAAo0G,EAAAh+H,GAIA,GAHA,OAAAA,IAAAq9H,EAAAF,EAAAE,EAAAr9H,IACAA,EAAAq9H,EACAA,EAAA,KACAr9H,IAAAo9H,EAAAp9H,EAAAs9H,GAAAD,GAAAlrH,EAAA,MAAA2mH,GAAA,MAAA94H,EAAA+7H,EAAAjD,GAAA,EAAAiD,EAAA,KAAA/7H,EAGA,IAAAi+H,EAAAnkI,KAAA25G,SAAAn1G,SAAA,IAAAzH,MAAA,GACAqnI,EAAA,2BAAAD,EACAE,EAAA,wBAAAF,EAEA,SAAAG,EAAAp+H,GACA,GAAAA,EAAAk+H,GAAA,OAAAl+H,EAAAk+H,GAEA,MAAQl+H,EAAAk+H,IAAQ,CAChB,IAAAl+H,EAAAuzB,WAAuC,YAAvCvzB,IAAAuzB,WAIA,YADAvzB,IAAAk+H,IACA5+G,KAAA,IAAAtf,EAAAsf,IAAAtf,EAAA,KAGA,SAAAq+H,EAAAr+H,GAEA,QADAA,IAAAk+H,KACA,IAAAl+H,EAAAsf,KAAA,IAAAtf,EAAAsf,IAAA,KAAAtf,EAGA,SAAAs+H,EAAAt+H,GACA,OAAAA,EAAAsf,KAAA,IAAAtf,EAAAsf,IAAA,OAAAtf,EAAA+9H,UACA5rH,EAAA,MAGA,SAAAosH,EAAAv+H,GACA,OAAAA,EAAAm+H,IAAA,KAGA,SAAAK,EAAAx+H,GACA,GACAA,IAAAy+H,aACGz+H,GAAA,IAAAA,EAAAsf,KAEH,OAAAtf,GAAA,KAGA,SAAA0+H,EAAA1+H,EAAAC,EAAA2pB,IACA3pB,EAAA69H,EAAA99H,EAAA4pB,EAAA+0G,eAAAlC,wBAAAx8H,OAAA2pB,EAAA2zG,mBAAAJ,EAAAvzG,EAAA2zG,mBAAAt9H,GAAA2pB,EAAA4zG,mBAAAL,EAAAvzG,EAAA4zG,mBAAAx9H,IAGA,SAAA4+H,EAAA5+H,GACA,GAAAA,KAAA2+H,eAAAlC,wBAAA,CACA,QAAAx8H,EAAAD,EAAA6+H,YAAAj1G,EAAA,GAAuC3pB,GACvC2pB,EAAAtyB,KAAA2I,KAAAu+H,EAAAv+H,GAGA,IAAAA,EAAA2pB,EAAA1yB,OAAsB,EAAA+I,KACtBy+H,EAAA90G,EAAA3pB,GAAA,WAAAD,GAGA,IAAAC,EAAA,EAAeA,EAAA2pB,EAAA1yB,OAAc+I,IAC7By+H,EAAA90G,EAAA3pB,GAAA,UAAAD,IAKA,SAAA8+H,EAAA9+H,EAAAC,EAAA2pB,GACA5pB,GAAA4pB,KAAA+0G,eAAAhC,mBAAA18H,EAAA69H,EAAA99H,EAAA4pB,EAAA+0G,eAAAhC,qBAAA/yG,EAAA2zG,mBAAAJ,EAAAvzG,EAAA2zG,mBAAAt9H,GAAA2pB,EAAA4zG,mBAAAL,EAAAvzG,EAAA4zG,mBAAAx9H,IAGA,SAAA++H,EAAA/+H,GACAA,KAAA2+H,eAAAhC,kBAAAmC,EAAA9+H,EAAA6+H,YAAA,KAAA7+H,GAGA,SAAAg/H,EAAAh/H,GACAo9H,EAAAp9H,EAAA4+H,GAGA,IAAAK,IAAA,qBAAAxpI,gBAAAQ,WAAAR,OAAAQ,SAAA46B,eAEA,SAAAquG,EAAAl/H,EAAAC,GACA,IAAA2pB,EAAA,GAIA,OAHAA,EAAA5pB,EAAAskB,eAAArkB,EAAAqkB,cACAsF,EAAA,SAAA5pB,GAAA,SAAAC,EACA2pB,EAAA,MAAA5pB,GAAA,MAAAC,EACA2pB,EAGA,IAAAu1G,EAAA,CACAC,aAAAF,EAAA,4BACAG,mBAAAH,EAAA,kCACAI,eAAAJ,EAAA,8BACAK,cAAAL,EAAA,+BAEAM,EAAA,GACAC,EAAA,GAGA,SAAAC,EAAA1/H,GACA,GAAAw/H,EAAAx/H,GAAA,OAAAw/H,EAAAx/H,GACA,IAAAm/H,EAAAn/H,GAAA,OAAAA,EACA,IACA4pB,EADA3pB,EAAAk/H,EAAAn/H,GAGA,IAAA4pB,KAAA3pB,EACA,GAAAA,EAAA4O,eAAA+a,SAAA61G,EAAA,OAAAD,EAAAx/H,GAAAC,EAAA2pB,GAGA,OAAA5pB,EAZAi/H,IAAAQ,EAAAxpI,SAAA46B,cAAA,OAAAuJ,MAAA,mBAAA3kC,gBAAA0pI,EAAAC,aAAAO,iBAAAR,EAAAE,mBAAAM,iBAAAR,EAAAG,eAAAK,WAAA,oBAAAlqI,eAAA0pI,EAAAI,cAAAK,YAeA,IAAAC,EAAAH,EAAA,gBACAI,EAAAJ,EAAA,sBACAK,EAAAL,EAAA,kBACAM,GAAAN,EAAA,iBACA/hC,GAAA,sNAAA1sF,MAAA,KACAgvH,GAAA,KACAn+E,GAAA,KACAo+E,GAAA,KAEA,SAAAC,KACA,GAAAD,GAAA,OAAAA,GACA,IAAAlgI,EAGA3E,EAFA4E,EAAA6hD,GACAl4B,EAAA3pB,EAAA/I,OAEA4G,EAAA,UAAAmiI,MAAAziI,MAAAyiI,GAAA7iH,YACAi5G,EAAAv4H,EAAA5G,OAEA,IAAA8I,EAAA,EAAaA,EAAA4pB,GAAA3pB,EAAAD,KAAAlC,EAAAkC,GAAwBA,KAIrC,IAAApC,EAAAgsB,EAAA5pB,EAEA,IAAA3E,EAAA,EAAaA,GAAAuC,GAAAqC,EAAA2pB,EAAAvuB,KAAAyC,EAAAu4H,EAAAh7H,GAAiCA,KAI9C,OAAA6kI,GAAApiI,EAAAjH,MAAAmJ,EAAA,EAAA3E,EAAA,EAAAA,OAAA,GAGA,SAAA+kI,KACA,SAGA,SAAAC,KACA,SAGA,SAAAjuH,GAAApS,EAAAC,EAAA2pB,EAAAvuB,GAMA,QAAAyC,KALA3H,KAAAwoI,eAAA3+H,EACA7J,KAAA0oI,YAAA5+H,EACA9J,KAAAmqI,YAAA12G,EACA5pB,EAAA7J,KAAA0G,YAAA0jI,UAGAvgI,EAAA6O,eAAA/Q,MAAAmC,EAAAD,EAAAlC,IAAA3H,KAAA2H,GAAAmC,EAAA2pB,GAAA,WAAA9rB,EAAA3H,KAAAqF,OAAAH,EAAAlF,KAAA2H,GAAA8rB,EAAA9rB,IAKA,OAFA3H,KAAAqqI,oBAAA,MAAA52G,EAAA6N,iBAAA7N,EAAA6N,kBAAA,IAAA7N,EAAA4N,aAAA4oG,GAAAC,GACAlqI,KAAA8gC,qBAAAopG,GACAlqI,KAmEA,SAAAsqI,GAAAzgI,EAAAC,EAAA2pB,EAAAvuB,GACA,GAAAlF,KAAAuqI,UAAAxpI,OAAA,CACA,IAAA4G,EAAA3H,KAAAuqI,UAAA98H,MAEA,OADAzN,KAAAkB,KAAAyG,EAAAkC,EAAAC,EAAA2pB,EAAAvuB,GACAyC,EAGA,WAAA3H,KAAA6J,EAAAC,EAAA2pB,EAAAvuB,GAGA,SAAAslI,GAAA3gI,GACAA,aAAA7J,MAAAgc,EAAA,OACAnS,EAAA4gI,aACA,GAAAzqI,KAAAuqI,UAAAxpI,QAAAf,KAAAuqI,UAAAppI,KAAA0I,GAGA,SAAA6gI,GAAA7gI,GACAA,EAAA0gI,UAAA,GACA1gI,EAAA8gI,UAAAL,GACAzgI,EAAA09H,QAAAiD,GAnFApvH,EAAAa,GAAA3a,UAAA,CACA0/B,eAAA,WACAhhC,KAAAshC,kBAAA,EACA,IAAAz3B,EAAA7J,KAAAmqI,YACAtgI,MAAAm3B,eAAAn3B,EAAAm3B,iBAAA,mBAAAn3B,EAAAw3B,cAAAx3B,EAAAw3B,aAAA,GAAArhC,KAAAqqI,mBAAAJ,KAEA1oG,gBAAA,WACA,IAAA13B,EAAA7J,KAAAmqI,YACAtgI,MAAA03B,gBAAA13B,EAAA03B,kBAAA,mBAAA13B,EAAA23B,eAAA33B,EAAA23B,cAAA,GAAAxhC,KAAA8gC,qBAAAmpG,KAEAW,QAAA,WACA5qI,KAAAsnI,aAAA2C,IAEA3C,aAAA4C,GACAO,WAAA,WACA,IACA3gI,EADAD,EAAA7J,KAAA0G,YAAA0jI,UAGA,IAAAtgI,KAAAD,EACA7J,KAAA8J,GAAA,KAGA9J,KAAAmqI,YAAAnqI,KAAA0oI,YAAA1oI,KAAAwoI,eAAA,KACAxoI,KAAA8gC,qBAAA9gC,KAAAqqI,mBAAAH,GACAlqI,KAAAqnI,mBAAArnI,KAAAonI,mBAAA,QAGAnrH,GAAAmuH,UAAA,CACAhqI,KAAA,KACAiF,OAAA,KACAk+D,cAAA,WACA,aAEAsnE,WAAA,KACAhoG,QAAA,KACAioG,WAAA,KACAx5H,UAAA,SAAAzH,GACA,OAAAA,EAAAyH,WAAAwW,KAAAtE,OAEA8d,iBAAA,KACAypG,UAAA,MAGA9uH,GAAAg8D,OAAA,SAAApuE,GACA,SAAAC,KAEA,SAAA2pB,IACA,OAAAvuB,EAAA9D,MAAApB,KAAAiB,WAGA,IAAAiE,EAAAlF,KACA8J,EAAAxI,UAAA4D,EAAA5D,UACA,IAAAqG,EAAA,IAAAmC,EAOA,OANAsR,EAAAzT,EAAA8rB,EAAAnyB,WACAmyB,EAAAnyB,UAAAqG,EACA8rB,EAAAnyB,UAAAoF,YAAA+sB,EACAA,EAAA22G,UAAAhvH,EAAA,GAAoBlW,EAAAklI,UAAAvgI,GACpB4pB,EAAAwkD,OAAA/yE,EAAA+yE,OACAyyD,GAAAj3G,GACAA,GAGAi3G,GAAAzuH,IAwBA,IAAA+uH,GAAA/uH,GAAAg8D,OAAA,CACAx2E,KAAA,OAEAwpI,GAAAhvH,GAAAg8D,OAAA,CACAx2E,KAAA,OAEAypI,GAAA,aACAC,GAAArC,GAAA,qBAAAxpI,OACA8rI,GAAA,KACAtC,GAAA,iBAAAhpI,WAAAsrI,GAAAtrI,SAAAurI,cACA,IAAAC,GAAAxC,GAAA,cAAAxpI,SAAA8rI,GACAG,GAAAzC,KAAAqC,IAAAC,IAAA,EAAAA,IAAA,IAAAA,IACAI,GAAA7oI,OAAAC,aAAA,IACA6oI,GAAA,CACAC,YAAA,CACApF,wBAAA,CACAqF,QAAA,gBACAC,SAAA,wBAEAlF,aAAA,mDAEAmF,eAAA,CACAvF,wBAAA,CACAqF,QAAA,mBACAC,SAAA,2BAEAlF,aAAA,uDAAA5rH,MAAA,MAEAgxH,iBAAA,CACAxF,wBAAA,CACAqF,QAAA,qBACAC,SAAA,6BAEAlF,aAAA,yDAAA5rH,MAAA,MAEAixH,kBAAA,CACAzF,wBAAA,CACAqF,QAAA,sBACAC,SAAA,8BAEAlF,aAAA,0DAAA5rH,MAAA,OAGAkxH,IAAA,EAEA,SAAAC,GAAApiI,EAAAC,GACA,OAAAD,GACA,YACA,WAAAqhI,GAAAzqI,QAAAqJ,EAAAk4B,SAEA,cACA,aAAAl4B,EAAAk4B,QAEA,eACA,gBACA,WACA,SAEA,QACA,UAIA,SAAAkqG,GAAAriI,GAEA,wBADAA,IAAAsiI,SACA,SAAAtiI,IAAApI,KAAA,KAGA,IAAA2qI,IAAA,EA2CA,IAAAC,GAAA,CACAjG,WAAAqF,GACAtF,cAAA,SAAAt8H,EAAAC,EAAA2pB,EAAAvuB,GACA,IAAAyC,OAAA,EACAu4H,OAAA,EACA,GAAAiL,GAAArhI,EAAA,CACA,OAAAD,GACA,uBACAlC,EAAA8jI,GAAAK,iBACA,MAAAhiI,EAEA,qBACAnC,EAAA8jI,GAAAI,eACA,MAAA/hI,EAEA,wBACAnC,EAAA8jI,GAAAM,kBACA,MAAAjiI,EAGAnC,OAAA,OACKykI,GAAAH,GAAApiI,EAAA4pB,KAAA9rB,EAAA8jI,GAAAI,gBAAA,YAAAhiI,GAAA,MAAA4pB,EAAAuO,UAAAr6B,EAAA8jI,GAAAK,kBAGL,OAFAnkI,GAAA4jI,IAAA,OAAA93G,EAAA64G,SAAAF,IAAAzkI,IAAA8jI,GAAAK,iBAAAnkI,IAAA8jI,GAAAI,gBAAAO,KAAAlM,EAAA8J,OAAAr+E,GAAA,UAAAm+E,GAAA5kI,GAAA4kI,GAAAziI,MAAAyiI,GAAA7iH,YAAAmlH,IAAA,IAAAzkI,EAAAqjI,GAAAL,UAAAhjI,EAAAmC,EAAA2pB,EAAAvuB,GAAAg7H,EAAAv4H,EAAAlG,KAAAy+H,EAAA,QAAAA,EAAAgM,GAAAz4G,MAAA9rB,EAAAlG,KAAAy+H,GAAA2I,EAAAlhI,GAAAu4H,EAAAv4H,GAAAu4H,EAAA,MACAr2H,EAAAyhI,GAhEA,SAAAzhI,EAAAC,GACA,OAAAD,GACA,qBACA,OAAAqiI,GAAApiI,GAEA,eACA,YAAAA,EAAAg4B,MAAA,MACAkqG,IAAA,EACAR,IAEA,gBACA,OAAA3hI,EAAAC,EAAArI,QAAA+pI,IAAAQ,GAAA,KAAAniI,EAEA,QACA,aAkDA0iI,CAAA1iI,EAAA4pB,GA9CA,SAAA5pB,EAAAC,GACA,GAAAsiI,GAAA,yBAAAviI,IAAAshI,IAAAc,GAAApiI,EAAAC,IAAAD,EAAAmgI,KAAAD,GAAAp+E,GAAAm+E,GAAA,KAAAsC,IAAA,EAAAviI,GAAA,KAEA,OAAAA,GACA,YACA,YAEA,eACA,KAAAC,EAAA0iI,SAAA1iI,EAAA2iI,QAAA3iI,EAAA4iI,UAAA5iI,EAAA0iI,SAAA1iI,EAAA2iI,OAAA,CACA,GAAA3iI,EAAAyuF,MAAA,EAAAzuF,EAAAyuF,KAAAx3F,OAAA,OAAA+I,EAAAyuF,KACA,GAAAzuF,EAAAg4B,MAAA,OAAAn/B,OAAAC,aAAAkH,EAAAg4B,OAGA,YAEA,qBACA,OAAAypG,IAAA,OAAAzhI,EAAAwiI,OAAA,KAAAxiI,EAAArI,KAEA,QACA,aA2BAkrI,CAAA9iI,EAAA4pB,MAAA3pB,EAAAmhI,GAAAN,UAAAc,GAAAC,YAAA5hI,EAAA2pB,EAAAvuB,IAAAzD,KAAAoI,EAAAg/H,EAAA/+H,MAAA,KACA,OAAAo2H,EAAAp2H,EAAA,OAAAA,EAAAo2H,EAAA,CAAAA,EAAAp2H,KAGA8iI,GAAA,KACAC,GAAA,KACAC,GAAA,KAEA,SAAAC,GAAAljI,GACA,GAAAA,EAAA+8H,EAAA/8H,GAAA,CACA,oBAAA+iI,IAAA5wH,EAAA,OACA,IAAAlS,EAAA68H,EAAA98H,EAAA+9H,WACAgF,GAAA/iI,EAAA+9H,UAAA/9H,EAAAzJ,KAAA0J,IAIA,SAAAkjI,GAAAnjI,GACAgjI,GAAAC,MAAA3rI,KAAA0I,GAAAijI,GAAA,CAAAjjI,GAAAgjI,GAAAhjI,EAGA,SAAAojI,KACA,GAAAJ,GAAA,CACA,IAAAhjI,EAAAgjI,GACA/iI,EAAAgjI,GAGA,GAFAA,GAAAD,GAAA,KACAE,GAAAljI,GACAC,EAAA,IAAAD,EAAA,EAAsBA,EAAAC,EAAA/I,OAAc8I,IACpCkjI,GAAAjjI,EAAAD,KAKA,SAAAqjI,GAAArjI,EAAAC,GACA,OAAAD,EAAAC,GAGA,SAAAqjI,GAAAtjI,EAAAC,EAAA2pB,GACA,OAAA5pB,EAAAC,EAAA2pB,GAGA,SAAA25G,MAEA,IAAAC,IAAA,EAEA,SAAAC,GAAAzjI,EAAAC,GACA,GAAAujI,GAAA,OAAAxjI,EAAAC,GACAujI,IAAA,EAEA,IACA,OAAAH,GAAArjI,EAAAC,GACG,QACHujI,IAAA,UAAAR,IAAA,OAAAC,MAAAM,KAAAH,OAIA,IAAAM,GAAA,CACA9kF,OAAA,EACAwqD,MAAA,EACAu6B,UAAA,EACAC,kBAAA,EACAC,OAAA,EACApmH,OAAA,EACAvJ,QAAA,EACA3F,UAAA,EACA8I,OAAA,EACAysH,QAAA,EACAC,KAAA,EACAr+H,MAAA,EACAkS,MAAA,EACAxK,KAAA,EACA42H,MAAA,GAGA,SAAAC,GAAAjkI,GACA,IAAAC,EAAAD,KAAAmM,UAAAnM,EAAAmM,SAAAmY,cACA,gBAAArkB,IAAAyjI,GAAA1jI,EAAAzJ,MAAA,aAAA0J,EAGA,SAAAikI,GAAAlkI,GAGA,OAFAA,IAAAxE,QAAAwE,EAAAo3B,YAAA3hC,QACA0uI,0BAAAnkI,IAAAmkI,yBACA,IAAAnkI,EAAAkwB,SAAAlwB,EAAAuzB,WAAAvzB,EAGA,SAAAokI,GAAApkI,GACA,IAAAi/H,EAAA,SAEA,IAAAh/H,GADAD,EAAA,KAAAA,KACA/J,SAEA,OADAgK,OAAAhK,SAAA46B,cAAA,QAAAK,aAAAlxB,EAAA,WAAqEC,EAAA,oBAAAA,EAAAD,IACrEC,EAGA,SAAAokI,GAAArkI,GACA,IAAAC,EAAAD,EAAAzJ,KACA,OAAAyJ,IAAAmM,WAAA,UAAAnM,EAAAskB,gBAAA,aAAArkB,GAAA,UAAAA,GAuCA,SAAAqkI,GAAAtkI,GACAA,EAAAukI,gBAAAvkI,EAAAukI,cArCA,SAAAvkI,GACA,IAAAC,EAAAokI,GAAArkI,GAAA,kBACA4pB,EAAA9tB,OAAA86D,yBAAA52D,EAAAnD,YAAApF,UAAAwI,GACA5E,EAAA,GAAA2E,EAAAC,GAEA,IAAAD,EAAA6O,eAAA5O,IAAA,qBAAA2pB,GAAA,oBAAAA,EAAA2C,KAAA,oBAAA3C,EAAA9nB,IAAA,CACA,IAAAhE,EAAA8rB,EAAA2C,IACA8pG,EAAAzsG,EAAA9nB,IAcA,OAbAhG,OAAAC,eAAAiE,EAAAC,EAAA,CACArE,cAAA,EACA2wB,IAAA,WACA,OAAAzuB,EAAAzG,KAAAlB,OAEA2L,IAAA,SAAA9B,GACA3E,EAAA,GAAA2E,EACAq2H,EAAAh/H,KAAAlB,KAAA6J,MAGAlE,OAAAC,eAAAiE,EAAAC,EAAA,CACAtE,WAAAiuB,EAAAjuB,aAEA,CACA6oI,SAAA,WACA,OAAAnpI,GAEAopI,SAAA,SAAAzkI,GACA3E,EAAA,GAAA2E,GAEA21D,aAAA,WACA31D,EAAAukI,cAAA,YACAvkI,EAAAC,MAOAykI,CAAA1kI,IAGA,SAAA2kI,GAAA3kI,GACA,IAAAA,EAAA,SACA,IAAAC,EAAAD,EAAAukI,cACA,IAAAtkI,EAAA,SACA,IAAA2pB,EAAA3pB,EAAAukI,WACAnpI,EAAA,GAGA,OAFA2E,IAAA3E,EAAAgpI,GAAArkI,KAAA4kI,QAAA,eAAA5kI,EAAAxC,QACAwC,EAAA3E,KACAuuB,IAAA3pB,EAAAwkI,SAAAzkI,IAAA,GAGA,IAAA6kI,GAAA5O,EAAAyF,mDACAmJ,GAAAh2H,eAAA,4BAAAg2H,GAAAlJ,uBAAA,CACAnE,QAAA,OAEA,IAAAsN,GAAA,cACAlnC,GAAA,oBAAAjhG,eAAAk5H,IACAkP,GAAAnnC,GAAAjhG,OAAAk5H,IAAA,uBACAmP,GAAApnC,GAAAjhG,OAAAk5H,IAAA,sBACAoP,GAAArnC,GAAAjhG,OAAAk5H,IAAA,wBACAqP,GAAAtnC,GAAAjhG,OAAAk5H,IAAA,2BACAsP,GAAAvnC,GAAAjhG,OAAAk5H,IAAA,wBACAuP,GAAAxnC,GAAAjhG,OAAAk5H,IAAA,wBACAwP,GAAAznC,GAAAjhG,OAAAk5H,IAAA,uBACAyP,GAAA1nC,GAAAjhG,OAAAk5H,IAAA,+BACA5wC,GAAA2Y,GAAAjhG,OAAAk5H,IAAA,2BACA0P,GAAA3nC,GAAAjhG,OAAAk5H,IAAA,wBACA2P,GAAA5nC,GAAAjhG,OAAAk5H,IAAA,oBACA4P,GAAA7nC,GAAAjhG,OAAAk5H,IAAA,oBACA6P,GAAA,oBAAA/oI,eAAAC,SAEA,SAAA+oI,GAAA3lI,GACA,cAAAA,GAAA,kBAAAA,EAAA,KAEA,oBADAA,EAAA0lI,IAAA1lI,EAAA0lI,KAAA1lI,EAAA,eACAA,EAAA,KAGA,SAAA4lI,GAAA5lI,GACA,SAAAA,EAAA,YACA,uBAAAA,EAAA,OAAAA,EAAA6lI,aAAA7lI,EAAA4S,MAAA,KACA,qBAAA5S,EAAA,OAAAA,EAEA,OAAAA,GACA,KAAAslI,GACA,uBAEA,KAAAL,GACA,iBAEA,KAAAD,GACA,eAEA,KAAAG,GACA,iBAEA,KAAAD,GACA,mBAEA,KAAAK,GACA,iBAGA,qBAAAvlI,EAAA,OAAAA,EAAAi4H,UACA,KAAAoN,GACA,yBAEA,KAAAD,GACA,yBAEA,KAAAngD,GACA,IAAAhlF,EAAAD,EAAAi6H,OAEA,OADAh6H,IAAA4lI,aAAA5lI,EAAA2S,MAAA,GACA5S,EAAA6lI,cAAA,KAAA5lI,EAAA,cAAAA,EAAA,kBAEA,KAAAulI,GACA,OAAAI,GAAA5lI,EAAAzJ,MAEA,KAAAkvI,GACA,GAAAzlI,EAAA,IAAAA,EAAAo6H,QAAAp6H,EAAAq6H,QAAA,YAAAuL,GAAA5lI,GAEA,YAGA,SAAA8lI,GAAA9lI,GACA,IAAAC,EAAA,GAEA,GACAD,EAAA,OAAAA,EAAAsf,KACA,OACA,OACA,OACA,OACA,QACA,OACA,IAAAsK,EAAA,GACA,MAAA5pB,EAEA,QACA,IAAA3E,EAAA2E,EAAA+lI,YACAjoI,EAAAkC,EAAAgmI,aACA3P,EAAAuP,GAAA5lI,EAAAzJ,MACAqzB,EAAA,KACAvuB,IAAAuuB,EAAAg8G,GAAAvqI,EAAA9E,OACA8E,EAAAg7H,EACAA,EAAA,GACAv4H,EAAAu4H,EAAA,QAAAv4H,EAAAmoI,SAAAhoI,QAAA6mI,GAAA,QAAAhnI,EAAAooI,WAAA,IAAAt8G,IAAAysG,EAAA,gBAAAzsG,EAAA,KACAA,EAAA,aAAAvuB,GAAA,WAAAg7H,EAGAp2H,GAAA2pB,EACA5pB,IAAAy+H,aACGz+H,GAEH,OAAAC,EAGA,IAAAkmI,GAAA,8VACAC,GAAAtqI,OAAArE,UAAAoX,eACAw3H,GAAA,GACAC,GAAA,GAgDA,SAAA9P,GAAAx2H,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACA3H,KAAAowI,gBAAA,IAAAtmI,GAAA,IAAAA,GAAA,IAAAA,EACA9J,KAAAqwI,cAAAnrI,EACAlF,KAAAswI,mBAAA3oI,EACA3H,KAAAuwI,gBAAA98G,EACAzzB,KAAAwwI,aAAA3mI,EACA7J,KAAAI,KAAA0J,EAGA,IAAA42H,GAAA,GACA,uIAAA5lH,MAAA,KAAA5W,QAAA,SAAA2F,GACA62H,GAAA72H,GAAA,IAAAw2H,GAAAx2H,EAAA,KAAAA,EAAA,QAEA,wGAAA3F,QAAA,SAAA2F,GACA,IAAAC,EAAAD,EAAA,GACA62H,GAAA52H,GAAA,IAAAu2H,GAAAv2H,EAAA,KAAAD,EAAA,WAEA,qDAAA3F,QAAA,SAAA2F,GACA62H,GAAA72H,GAAA,IAAAw2H,GAAAx2H,EAAA,KAAAA,EAAAskB,cAAA,QAEA,wEAAAjqB,QAAA,SAAA2F,GACA62H,GAAA72H,GAAA,IAAAw2H,GAAAx2H,EAAA,KAAAA,EAAA,QAEA,gMAAAiR,MAAA,KAAA5W,QAAA,SAAA2F,GACA62H,GAAA72H,GAAA,IAAAw2H,GAAAx2H,EAAA,KAAAA,EAAAskB,cAAA,QAEA,0CAAAjqB,QAAA,SAAA2F,GACA62H,GAAA72H,GAAA,IAAAw2H,GAAAx2H,EAAA,KAAAA,EAAA,QAEA,uBAAA3F,QAAA,SAAA2F,GACA62H,GAAA72H,GAAA,IAAAw2H,GAAAx2H,EAAA,KAAAA,EAAA,QAEA,8BAAA3F,QAAA,SAAA2F,GACA62H,GAAA72H,GAAA,IAAAw2H,GAAAx2H,EAAA,KAAAA,EAAA,QAEA,oBAAA3F,QAAA,SAAA2F,GACA62H,GAAA72H,GAAA,IAAAw2H,GAAAx2H,EAAA,KAAAA,EAAAskB,cAAA,QAEA,IAAAsiH,GAAA,gBAEA,SAAAC,GAAA7mI,GACA,OAAAA,EAAA,GAAAmP,cAmBA,SAAA23H,GAAA9mI,EAAAC,EAAA2pB,EAAAvuB,GACA,IAAAyC,EAAA+4H,GAAAhoH,eAAA5O,GAAA42H,GAAA52H,GAAA,MACA,OAAAnC,EAAA,IAAAA,EAAAvH,MAAA8E,IAAA,EAAA4E,EAAA/I,SAAA,MAAA+I,EAAA,UAAAA,EAAA,YAAAA,EAAA,UAAAA,EAAA,QAjFA,SAAAD,EAAAC,EAAA2pB,EAAAvuB,GACA,UAAA4E,GAAA,qBAAAA,GApBA,SAAAD,EAAAC,EAAA2pB,EAAAvuB,GACA,UAAAuuB,GAAA,IAAAA,EAAArzB,KAAA,SAEA,cAAA0J,GACA,eACA,aACA,SAEA,cACA,OAAA5E,IACA,OAAAuuB,KAAA28G,gBAEA,WADAvmI,IAAAskB,cAAAztB,MAAA,OACA,UAAAmJ,GAEA,QACA,UAKA+mI,CAAA/mI,EAAAC,EAAA2pB,EAAAvuB,GAAA,SACA,GAAAA,EAAA,SACA,UAAAuuB,EAAA,OAAAA,EAAArzB,MACA,OACA,OAAA0J,EAEA,OACA,WAAAA,EAEA,OACA,OAAAke,MAAAle,GAEA,OACA,OAAAke,MAAAle,IAAA,EAAAA,EAEA,SAkEA+mI,CAAA/mI,EAAA2pB,EAAA9rB,EAAAzC,KAAAuuB,EAAA,MAAAvuB,GAAA,OAAAyC,EA7GA,SAAAkC,GACA,QAAAomI,GAAA/uI,KAAAivI,GAAAtmI,KACAomI,GAAA/uI,KAAAgvI,GAAArmI,KACAmmI,GAAAznI,KAAAsB,GAAAsmI,GAAAtmI,IAAA,GACAqmI,GAAArmI,IAAA,GACA,IAwGAinI,CAAAhnI,KAAA,OAAA2pB,EAAA5pB,EAAA4yB,gBAAA3yB,GAAAD,EAAAkxB,aAAAjxB,EAAA,GAAA2pB,IAAA9rB,EAAA4oI,gBAAA1mI,EAAAlC,EAAA6oI,cAAA,OAAA/8G,EAAA,IAAA9rB,EAAAvH,MAAA,GAAAqzB,GAAA3pB,EAAAnC,EAAA0oI,cAAAnrI,EAAAyC,EAAA2oI,mBAAA,OAAA78G,EAAA5pB,EAAA4yB,gBAAA3yB,IAAA2pB,EAAA,KAAA9rB,IAAAvH,OAAA,IAAAuH,IAAA,IAAA8rB,EAAA,MAAAA,EAAAvuB,EAAA2E,EAAAknI,eAAA7rI,EAAA4E,EAAA2pB,GAAA5pB,EAAAkxB,aAAAjxB,EAAA2pB,MAGA,SAAAu9G,GAAAnnI,GACA,cAAAA,GACA,cACA,aACA,aACA,aACA,gBACA,OAAAA,EAEA,QACA,UAIA,SAAAonI,GAAApnI,EAAAC,GACA,IAAA2pB,EAAA3pB,EAAA2kI,QACA,OAAArzH,EAAA,GAAatR,EAAA,CACbonI,oBAAA,EACAvoG,kBAAA,EACAthC,WAAA,EACAonI,QAAA,MAAAh7G,IAAA5pB,EAAAsnI,cAAAC,iBAIA,SAAAC,GAAAxnI,EAAAC,GACA,IAAA2pB,EAAA,MAAA3pB,EAAA6+B,aAAA,GAAA7+B,EAAA6+B,aACAzjC,EAAA,MAAA4E,EAAA2kI,QAAA3kI,EAAA2kI,QAAA3kI,EAAAonI,eACAz9G,EAAAu9G,GAAA,MAAAlnI,EAAAzC,MAAAyC,EAAAzC,MAAAosB,GACA5pB,EAAAsnI,cAAA,CACAC,eAAAlsI,EACAosI,aAAA79G,EACA89G,WAAA,aAAAznI,EAAA1J,MAAA,UAAA0J,EAAA1J,KAAA,MAAA0J,EAAA2kI,QAAA,MAAA3kI,EAAAzC,OAIA,SAAAmqI,GAAA3nI,EAAAC,GAEA,OADAA,IAAA2kI,UACAkC,GAAA9mI,EAAA,UAAAC,GAAA,GAGA,SAAA2nI,GAAA5nI,EAAAC,GACA0nI,GAAA3nI,EAAAC,GACA,IAAA2pB,EAAAu9G,GAAAlnI,EAAAzC,OACAnC,EAAA4E,EAAA1J,KACA,SAAAqzB,EACA,WAAAvuB,GACA,IAAAuuB,GAAA,KAAA5pB,EAAAxC,OAAAwC,EAAAxC,OAAAosB,KAAA5pB,EAAAxC,MAAA,GAAAosB,GACK5pB,EAAAxC,QAAA,GAAAosB,IAAA5pB,EAAAxC,MAAA,GAAAosB,QACF,cAAAvuB,GAAA,UAAAA,EAEH,YADA2E,EAAA4yB,gBAAA,SAGA3yB,EAAA4O,eAAA,SAAAg5H,GAAA7nI,EAAAC,EAAA1J,KAAAqzB,GAAA3pB,EAAA4O,eAAA,iBAAAg5H,GAAA7nI,EAAAC,EAAA1J,KAAA4wI,GAAAlnI,EAAA6+B,eACA,MAAA7+B,EAAA2kI,SAAA,MAAA3kI,EAAAonI,iBAAArnI,EAAAqnI,iBAAApnI,EAAAonI,gBAGA,SAAAS,GAAA9nI,EAAAC,EAAA2pB,GACA,GAAA3pB,EAAA4O,eAAA,UAAA5O,EAAA4O,eAAA,iBACA,IAAAxT,EAAA4E,EAAA1J,KACA,gBAAA8E,GAAA,UAAAA,QAAA,IAAA4E,EAAAzC,OAAA,OAAAyC,EAAAzC,OAAA,OACAyC,EAAA,GAAAD,EAAAsnI,cAAAG,aACA79G,GAAA3pB,IAAAD,EAAAxC,QAAAwC,EAAAxC,MAAAyC,GACAD,EAAA8+B,aAAA7+B,EAIA,MADA2pB,EAAA5pB,EAAA4S,QACA5S,EAAA4S,KAAA,IACA5S,EAAAqnI,gBAAArnI,EAAAqnI,eACArnI,EAAAqnI,iBAAArnI,EAAAsnI,cAAAC,eACA,KAAA39G,IAAA5pB,EAAA4S,KAAAgX,GAGA,SAAAi+G,GAAA7nI,EAAAC,EAAA2pB,GACA,WAAA3pB,GAAAD,EAAA+4B,cAAAqS,gBAAAprC,IAAA,MAAA4pB,EAAA5pB,EAAA8+B,aAAA,GAAA9+B,EAAAsnI,cAAAG,aAAAznI,EAAA8+B,eAAA,GAAAlV,IAAA5pB,EAAA8+B,aAAA,GAAAlV,IA/FA,0jCAAA3Y,MAAA,KAAA5W,QAAA,SAAA2F,GACA,IAAAC,EAAAD,EAAA/B,QAAA2oI,GAAAC,IACAhQ,GAAA52H,GAAA,IAAAu2H,GAAAv2H,EAAA,KAAAD,EAAA,QAEA,sFAAAiR,MAAA,KAAA5W,QAAA,SAAA2F,GACA,IAAAC,EAAAD,EAAA/B,QAAA2oI,GAAAC,IACAhQ,GAAA52H,GAAA,IAAAu2H,GAAAv2H,EAAA,KAAAD,EAAA,kCAEA,oCAAA3F,QAAA,SAAA2F,GACA,IAAAC,EAAAD,EAAA/B,QAAA2oI,GAAAC,IACAhQ,GAAA52H,GAAA,IAAAu2H,GAAAv2H,EAAA,KAAAD,EAAA,0CAEA,2BAAA3F,QAAA,SAAA2F,GACA62H,GAAA72H,GAAA,IAAAw2H,GAAAx2H,EAAA,KAAAA,EAAAskB,cAAA,QAqFA,IAAAyjH,GAAA,CACAh7F,OAAA,CACA0vF,wBAAA,CACAqF,QAAA,WACAC,SAAA,mBAEAlF,aAAA,8DAAA5rH,MAAA,OAIA,SAAA+2H,GAAAhoI,EAAAC,EAAA2pB,GAKA,OAJA5pB,EAAAoS,GAAA0uH,UAAAiH,GAAAh7F,OAAA/sC,EAAAC,EAAA2pB,IACArzB,KAAA,SACA4sI,GAAAv5G,GACAo1G,EAAAh/H,GACAA,EAGA,IAAAioI,GAAA,KACAC,GAAA,KAEA,SAAAC,GAAAnoI,GACAg+H,EAAAh+H,GAGA,SAAAooI,GAAApoI,GAEA,GAAA2kI,GADArG,EAAAt+H,IACA,OAAAA,EAGA,SAAAqoI,GAAAroI,EAAAC,GACA,cAAAD,EAAA,OAAAC,EAGA,IAAAqoI,IAAA,EAGA,SAAAC,KACAN,QAAAvxG,YAAA,mBAAA8xG,IAAAN,GAAAD,GAAA,MAGA,SAAAO,GAAAxoI,GACA,UAAAA,EAAA2mI,cAAAyB,GAAAF,KAAAzE,GAAA0E,GAAAnoI,EAAAgoI,GAAAE,GAAAloI,EAAAkkI,GAAAlkI,KAGA,SAAAyoI,GAAAzoI,EAAAC,EAAA2pB,GACA,UAAA5pB,GAAAuoI,KAAAL,GAAAt+G,GAAAq+G,GAAAhoI,GAAA24B,YAAA,mBAAA4vG,KAAA,SAAAxoI,GAAAuoI,KAGA,SAAAG,GAAA1oI,GACA,uBAAAA,GAAA,UAAAA,GAAA,YAAAA,EAAA,OAAAooI,GAAAF,IAGA,SAAAS,GAAA3oI,EAAAC,GACA,aAAAD,EAAA,OAAAooI,GAAAnoI,GAGA,SAAA2oI,GAAA5oI,EAAAC,GACA,aAAAD,GAAA,WAAAA,EAAA,OAAAooI,GAAAnoI,GAvBAg/H,IAAAqJ,GAAAlE,GAAA,YAAAnuI,SAAAurI,cAAA,EAAAvrI,SAAAurI,eA0BA,IAAAqH,GAAA,CACAtM,WAAAwL,GACAe,uBAAAR,GACAhM,cAAA,SAAAt8H,EAAAC,EAAA2pB,EAAAvuB,GACA,IAAAyC,EAAAmC,EAAAq+H,EAAAr+H,GAAAxK,OACA4gI,OAAA,EACAz4H,OAAA,EACA+kD,EAAA7kD,EAAAqO,UAAArO,EAAAqO,SAAAmY,cAEA,GADA,WAAAq+B,GAAA,UAAAA,GAAA,SAAA7kD,EAAAvH,KAAA8/H,EAAAgS,GAAApE,GAAAnmI,GAAAwqI,GAAAjS,EAAAuS,IAAAvS,EAAAqS,GAAA9qI,EAAA6qI,KAAA9lF,EAAA7kD,EAAAqO,WAAA,UAAAw2C,EAAAr+B,gBAAA,aAAAxmB,EAAAvH,MAAA,UAAAuH,EAAAvH,QAAA8/H,EAAAsS,IACAtS,QAAAr2H,EAAAC,IAAA,OAAA+nI,GAAA3R,EAAAzsG,EAAAvuB,GACAuC,KAAAoC,EAAAlC,EAAAmC,GACA,SAAAD,MAAAlC,EAAAwpI,gBAAAtnI,EAAA0nI,YAAA,WAAA5pI,EAAAvH,MAAAsxI,GAAA/pI,EAAA,SAAAA,EAAAN,SAGAurI,GAAA32H,GAAAg8D,OAAA,CACA3zE,KAAA,KACA6nI,OAAA,OAEA0G,GAAA,CACAC,IAAA,SACAC,QAAA,UACAC,KAAA,UACAC,MAAA,YAGA,SAAAC,GAAArpI,GACA,IAAAC,EAAA9J,KAAAmqI,YACA,OAAArgI,EAAAqpI,iBAAArpI,EAAAqpI,iBAAAtpI,QAAAgpI,GAAAhpI,OAAAC,EAAAD,GAGA,SAAAupI,KACA,OAAAF,GAGA,IAAAG,GAAA,EACAC,GAAA,EACAC,IAAA,EACAC,IAAA,EACAC,GAAAb,GAAA36D,OAAA,CACArE,QAAA,KACAC,QAAA,KACAlyC,QAAA,KACAE,QAAA,KACAlD,MAAA,KACAD,MAAA,KACA8tG,QAAA,KACAj3F,SAAA,KACAk3F,OAAA,KACAC,QAAA,KACAyG,iBAAAC,GACAh0G,OAAA,KACAC,QAAA,KACA6B,cAAA,SAAAr3B,GACA,OAAAA,EAAAq3B,gBAAAr3B,EAAAs3B,cAAAt3B,EAAAo3B,WAAAp3B,EAAAu3B,UAAAv3B,EAAAs3B,cAEAuyG,UAAA,SAAA7pI,GACA,iBAAAA,EAAA,OAAAA,EAAA6pI,UACA,IAAA5pI,EAAAupI,GAEA,OADAA,GAAAxpI,EAAA+pE,QACA2/D,GAAA,cAAA1pI,EAAAzJ,KAAAyJ,EAAA+pE,QAAA9pE,EAAA,GAAAypI,IAAA,MAEAI,UAAA,SAAA9pI,GACA,iBAAAA,EAAA,OAAAA,EAAA8pI,UACA,IAAA7pI,EAAAwpI,GAEA,OADAA,GAAAzpI,EAAAgqE,QACA2/D,GAAA,cAAA3pI,EAAAzJ,KAAAyJ,EAAAgqE,QAAA/pE,EAAA,GAAA0pI,IAAA,QAGAI,GAAAH,GAAAx7D,OAAA,CACA47D,UAAA,KACAl1H,MAAA,KACAC,OAAA,KACAk1H,SAAA,KACAC,mBAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,YAAA,KACAC,UAAA,OAEAC,GAAA,CACAC,WAAA,CACA9N,iBAAA,eACAE,aAAA,0BAEA6N,WAAA,CACA/N,iBAAA,eACAE,aAAA,0BAEA8N,aAAA,CACAhO,iBAAA,iBACAE,aAAA,8BAEA+N,aAAA,CACAjO,iBAAA,iBACAE,aAAA,+BAGAgO,GAAA,CACAtO,WAAAiO,GACAlO,cAAA,SAAAt8H,EAAAC,EAAA2pB,EAAAvuB,GACA,IAAAyC,EAAA,cAAAkC,GAAA,gBAAAA,EACAq2H,EAAA,aAAAr2H,GAAA,eAAAA,EACA,GAAAlC,IAAA8rB,EAAAyN,eAAAzN,EAAA0N,eAAA++F,IAAAv4H,EAAA,YAGA,GAFAA,EAAAzC,EAAA5F,SAAA4F,KAAAyC,EAAAzC,EAAA09B,eAAAj7B,EAAAgtI,aAAAhtI,EAAAitI,aAAAt1I,OACA4gI,KAAAp2H,OAAA2pB,EAAAyN,eAAAzN,EAAA2N,WAAA6mG,EAAAn+H,GAAA,MAAAo2H,EAAA,KACAA,IAAAp2H,EAAA,YACA,IAAArC,OAAA,EACA+kD,OAAA,EACAzvC,OAAA,EACAD,OAAA,EACA,aAAAjT,GAAA,cAAAA,GAAApC,EAAAgsI,GAAAjnF,EAAA6nF,GAAAE,WAAAx3H,EAAAs3H,GAAAC,WAAAx3H,EAAA,SAAyG,eAAAjT,GAAA,gBAAAA,IAAApC,EAAAmsI,GAAApnF,EAAA6nF,GAAAI,aAAA13H,EAAAs3H,GAAAG,aAAA13H,EAAA,WACzG,IAAAylB,EAAA,MAAA29F,EAAAv4H,EAAAwgI,EAAAjI,GAWA,GAVAv4H,EAAA,MAAAmC,EAAAnC,EAAAwgI,EAAAr+H,IACAD,EAAApC,EAAAkjI,UAAAn+E,EAAA0zE,EAAAzsG,EAAAvuB,IACA9E,KAAA0c,EAAA,QACAjT,EAAAxE,OAAAk9B,EACA14B,EAAAq3B,cAAAv5B,GACA8rB,EAAAhsB,EAAAkjI,UAAA5tH,EAAAjT,EAAA2pB,EAAAvuB,IACA9E,KAAA0c,EAAA,QACA2W,EAAApuB,OAAAsC,EACA8rB,EAAAyN,cAAAqB,EACAr9B,EAAA4E,EACAo2H,GAAAh7H,EAAA2E,EAAA,CAKA,IAHAlC,EAAAzC,EACA4X,EAAA,EAEArV,EAJAqC,EAAAo2H,EAIiBz4H,EAAGA,EAAA4gI,EAAA5gI,GACpBqV,IAKA,IAFArV,EAAA,EAEAsV,EAAApV,EAAiBoV,EAAGA,EAAAsrH,EAAAtrH,GACpBtV,IAGA,KAAY,EAAAqV,EAAArV,GACZqC,EAAAu+H,EAAAv+H,GAAAgT,IAGA,KAAY,EAAArV,EAAAqV,GACZnV,EAAA0gI,EAAA1gI,GAAAF,IAGA,KAAYqV,KAAK,CACjB,GAAAhT,IAAAnC,GAAAmC,IAAAnC,EAAAktI,UAAA,MAAAhrI,EACAC,EAAAu+H,EAAAv+H,GACAnC,EAAA0gI,EAAA1gI,GAGAmC,EAAA,UACKA,EAAA,KAGL,IAFAnC,EAAAmC,EAEAA,EAAA,GAAgBo2H,OAAAv4H,IAEhB,QADAmV,EAAAojH,EAAA2U,YACA/3H,IAAAnV,IACAmC,EAAA3I,KAAA++H,GACAA,EAAAmI,EAAAnI,GAGA,IAAAA,EAAA,GAAgBh7H,OAAAyC,IAEhB,QADAmV,EAAA5X,EAAA2vI,YACA/3H,IAAAnV,IACAu4H,EAAA/+H,KAAA+D,GACAA,EAAAmjI,EAAAnjI,GAGA,IAAAA,EAAA,EAAeA,EAAA4E,EAAA/I,OAAcmE,IAC7ByjI,EAAA7+H,EAAA5E,GAAA,UAAA2E,GAGA,IAAA3E,EAAAg7H,EAAAn/H,OAAsB,EAAAmE,KACtByjI,EAAAzI,EAAAh7H,GAAA,WAAAuuB,GAGA,OAAA5pB,EAAA4pB,KAIA,SAAAqhH,GAAAjrI,EAAAC,GACA,OAAAD,IAAAC,IAAA,IAAAD,GAAA,EAAAA,IAAA,EAAAC,IAAAD,OAAAC,MAGA,IAAAirI,GAAApvI,OAAArE,UAAAoX,eAEA,SAAAs8H,GAAAnrI,EAAAC,GACA,GAAAgrI,GAAAjrI,EAAAC,GAAA,SACA,qBAAAD,GAAA,OAAAA,GAAA,kBAAAC,GAAA,OAAAA,EAAA,SACA,IAAA2pB,EAAA9tB,OAAAiW,KAAA/R,GACA3E,EAAAS,OAAAiW,KAAA9R,GACA,GAAA2pB,EAAA1yB,SAAAmE,EAAAnE,OAAA,SAEA,IAAAmE,EAAA,EAAaA,EAAAuuB,EAAA1yB,OAAcmE,IAC3B,IAAA6vI,GAAA7zI,KAAA4I,EAAA2pB,EAAAvuB,MAAA4vI,GAAAjrI,EAAA4pB,EAAAvuB,IAAA4E,EAAA2pB,EAAAvuB,KAAA,SAGA,SAGA,SAAA+vI,GAAAprI,GACA,IAAAC,EAAAD,EACA,GAAAA,EAAAgrI,UAAA,KAAyB/qI,EAAAw+H,QACzBx+H,IAAAw+H,WACG,CACH,UAAAx+H,EAAAorI,WAAA,SAEA,KAAUprI,EAAAw+H,QACV,WAAAx+H,IAAAw+H,QAAA4M,WAAA,SAGA,WAAAprI,EAAAqf,IAAA,IAGA,SAAAgsH,GAAAtrI,GACA,IAAAorI,GAAAprI,IAAAmS,EAAA,OAwEA,SAAAo5H,GAAAvrI,GAEA,KADAA,EAtEA,SAAAA,GACA,IAAAC,EAAAD,EAAAgrI,UACA,IAAA/qI,EAAA,YAAAA,EAAAmrI,GAAAprI,KAAAmS,EAAA,WAAAlS,EAAA,KAAAD,EAEA,QAAA4pB,EAAA5pB,EAAA3E,EAAA4E,IAAyB,CACzB,IAAAnC,EAAA8rB,EAAA60G,OACApI,EAAAv4H,IAAAktI,UAAA,KACA,IAAAltI,IAAAu4H,EAAA,MAEA,GAAAv4H,EAAAyzB,QAAA8kG,EAAA9kG,MAAA,CACA,QAAA3zB,EAAAE,EAAAyzB,MAA2B3zB,GAAG,CAC9B,GAAAA,IAAAgsB,EAAA,OAAA0hH,GAAAxtI,GAAAkC,EACA,GAAApC,IAAAvC,EAAA,OAAAiwI,GAAAxtI,GAAAmC,EACArC,IAAA4tI,QAGAr5H,EAAA,OAGA,GAAAyX,EAAA60G,SAAApjI,EAAAojI,OAAA70G,EAAA9rB,EAAAzC,EAAAg7H,MAA4C,CAC5Cz4H,GAAA,EAEA,QAAA+kD,EAAA7kD,EAAAyzB,MAA2BoxB,GAAG,CAC9B,GAAAA,IAAA/4B,EAAA,CACAhsB,GAAA,EACAgsB,EAAA9rB,EACAzC,EAAAg7H,EACA,MAGA,GAAA1zE,IAAAtnD,EAAA,CACAuC,GAAA,EACAvC,EAAAyC,EACA8rB,EAAAysG,EACA,MAGA1zE,IAAA6oF,QAGA,IAAA5tI,EAAA,CACA,IAAA+kD,EAAA0zE,EAAA9kG,MAAyBoxB,GAAG,CAC5B,GAAAA,IAAA/4B,EAAA,CACAhsB,GAAA,EACAgsB,EAAAysG,EACAh7H,EAAAyC,EACA,MAGA,GAAA6kD,IAAAtnD,EAAA,CACAuC,GAAA,EACAvC,EAAAg7H,EACAzsG,EAAA9rB,EACA,MAGA6kD,IAAA6oF,QAGA5tI,GAAAuU,EAAA,QAGAyX,EAAAohH,YAAA3vI,GAAA8W,EAAA,OAIA,OADA,IAAAyX,EAAAtK,KAAAnN,EAAA,OACAyX,EAAAm0G,UAAAvG,UAAA5tG,EAAA5pB,EAAAC,EAIAwrI,CAAAzrI,IACA,YAEA,QAAAC,EAAAD,IAAkB,CAClB,OAAAC,EAAAqf,KAAA,IAAArf,EAAAqf,IAAA,OAAArf,EACA,GAAAA,EAAAsxB,MAAAtxB,EAAAsxB,MAAAktG,OAAAx+H,MAAAsxB,UAAiD,CACjD,GAAAtxB,IAAAD,EAAA,MAEA,MAAYC,EAAAurI,SAAY,CACxB,IAAAvrI,EAAAw+H,QAAAx+H,EAAAw+H,SAAAz+H,EAAA,YACAC,IAAAw+H,OAGAx+H,EAAAurI,QAAA/M,OAAAx+H,EAAAw+H,OACAx+H,IAAAurI,SAIA,YAGA,IAAApyI,GAAAgZ,GAAAg8D,OAAA,CACAs9D,cAAA,KACAC,YAAA,KACAC,cAAA,OAEAC,GAAAz5H,GAAAg8D,OAAA,CACA09D,cAAA,SAAA9rI,GACA,wBAAAA,IAAA8rI,cAAAr2I,OAAAq2I,iBAGAC,GAAAhD,GAAA36D,OAAA,CACA/2C,cAAA,OAGA,SAAA20G,GAAAhsI,GACA,IAAAC,EAAAD,EAAAm4B,QAGA,MAFA,aAAAn4B,EAAA,KAAAA,IAAAk4B,WAAA,KAAAj4B,IAAAD,EAAA,IAAAA,EAAAC,EACA,KAAAD,MAAA,IACA,IAAAA,GAAA,KAAAA,IAAA,EAGA,IAAAisI,GAAA,CACAC,IAAA,SACAC,SAAA,IACAC,KAAA,YACAC,GAAA,UACAC,MAAA,aACAC,KAAA,YACAC,IAAA,SACAC,IAAA,KACAvhF,KAAA,cACAwhF,KAAA,cACAC,OAAA,aACAC,gBAAA,gBAEAC,GAAA,CACAC,EAAA,YACAC,EAAA,MACAC,GAAA,QACAC,GAAA,QACAC,GAAA,QACAC,GAAA,UACAC,GAAA,MACAC,GAAA,QACAC,GAAA,WACAC,GAAA,SACAC,GAAA,IACAC,GAAA,SACAC,GAAA,WACAC,GAAA,MACAC,GAAA,OACAC,GAAA,YACAC,GAAA,UACAC,GAAA,aACAC,GAAA,YACAC,GAAA,SACAC,GAAA,SACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAp5C,IAAA,KACAq5C,IAAA,KACAC,IAAA,KACAC,IAAA,MACA55C,IAAA,MACA5O,IAAA,MACAyoD,IAAA,UACAC,IAAA,aACAC,IAAA,QAEAC,GAAAhG,GAAA36D,OAAA,CACApyE,IAAA,SAAAgE,GACA,GAAAA,EAAAhE,IAAA,CACA,IAAAiE,EAAAgsI,GAAAjsI,EAAAhE,MAAAgE,EAAAhE,IACA,oBAAAiE,EAAA,OAAAA,EAGA,mBAAAD,EAAAzJ,KAAA,MAAAyJ,EAAAgsI,GAAAhsI,IAAA,QAAAlH,OAAAC,aAAAiH,GAAA,YAAAA,EAAAzJ,MAAA,UAAAyJ,EAAAzJ,KAAAs2I,GAAA7sI,EAAAm4B,UAAA,mBAEAphB,SAAA,KACA4rH,QAAA,KACAj3F,SAAA,KACAk3F,OAAA,KACAC,QAAA,KACA7pH,OAAA,KACAypH,OAAA,KACA6G,iBAAAC,GACArxG,SAAA,SAAAl4B,GACA,mBAAAA,EAAAzJ,KAAAy1I,GAAAhsI,GAAA,GAEAm4B,QAAA,SAAAn4B,GACA,kBAAAA,EAAAzJ,MAAA,UAAAyJ,EAAAzJ,KAAAyJ,EAAAm4B,QAAA,GAEAF,MAAA,SAAAj4B,GACA,mBAAAA,EAAAzJ,KAAAy1I,GAAAhsI,GAAA,YAAAA,EAAAzJ,MAAA,UAAAyJ,EAAAzJ,KAAAyJ,EAAAm4B,QAAA,KAGA62G,GAAApF,GAAAx7D,OAAA,CACA6gE,aAAA,OAEAC,GAAAnG,GAAA36D,OAAA,CACA7rC,QAAA,KACA4sG,cAAA,KACAp6G,eAAA,KACA6tG,OAAA,KACAC,QAAA,KACAF,QAAA,KACAj3F,SAAA,KACA49F,iBAAAC,KAEA6F,GAAAh9H,GAAAg8D,OAAA,CACAu4D,aAAA,KACAgF,YAAA,KACAC,cAAA,OAEAyD,GAAAzF,GAAAx7D,OAAA,CACAkhE,OAAA,SAAAtvI,GACA,iBAAAA,IAAAsvI,OAAA,gBAAAtvI,KAAAuvI,YAAA,GAEAC,OAAA,SAAAxvI,GACA,iBAAAA,IAAAwvI,OAAA,gBAAAxvI,KAAAyvI,YAAA,eAAAzvI,KAAA0vI,WAAA,GAEAC,OAAA,KACAC,UAAA,OAEAC,GAAA,oBAAAhQ,EAAA,iBAAAC,EAAA,uBAAAC,EAAA,22BAAAC,GAAA,0DACA8P,GAAA,GACAC,GAAA,GAEA,SAAAC,GAAAhwI,EAAAC,GACA,IAAA2pB,EAAA5pB,EAAA,GAEA3E,EAAA,OADA2E,IAAA,IACA,GAAAmP,cAAAnP,EAAAnJ,MAAA,IACAoJ,EAAA,CACAw8H,wBAAA,CACAqF,QAAAzmI,EACA0mI,SAAA1mI,EAAA,WAEAwhI,aAAA,CAAAjzG,GACAqmH,cAAAhwI,GAEA6vI,GAAA9vI,GAAAC,EACA8vI,GAAAnmH,GAAA3pB,EAGA,yvBAAA5F,QAAA,SAAA2F,GACAgwI,GAAAhwI,GAAA,KAEA6vI,GAAAx1I,QAAA,SAAA2F,GACAgwI,GAAAhwI,GAAA,KAEA,IAAAkwI,GAAA,CACA3T,WAAAuT,GACAK,+BAAA,SAAAnwI,GAEA,iBADAA,EAAA+vI,GAAA/vI,MACA,IAAAA,EAAAiwI,eAEA3T,cAAA,SAAAt8H,EAAAC,EAAA2pB,EAAAvuB,GACA,IAAAyC,EAAAiyI,GAAA/vI,GACA,IAAAlC,EAAA,YAEA,OAAAkC,GACA,eACA,OAAAgsI,GAAApiH,GAAA,YAEA,cACA,YACA5pB,EAAA+uI,GACA,MAEA,WACA,YACA/uI,EAAA+rI,GACA,MAEA,YACA,OAAAniH,EAAA2L,OAAA,YAEA,eACA,eACA,gBACA,gBACA,cACA,eACA,gBACA,kBACAv1B,EAAA4pI,GACA,MAEA,WACA,cACA,gBACA,eACA,gBACA,eACA,gBACA,WACA5pI,EAAAgvI,GACA,MAEA,kBACA,eACA,gBACA,iBACAhvI,EAAAkvI,GACA,MAEA,KAAArP,EACA,KAAAC,EACA,KAAAC,EACA//H,EAAA5G,GACA,MAEA,KAAA4mI,GACAhgI,EAAAovI,GACA,MAEA,aACApvI,EAAA+oI,GACA,MAEA,YACA/oI,EAAAqvI,GACA,MAEA,WACA,UACA,YACArvI,EAAA6rI,GACA,MAEA,wBACA,yBACA,oBACA,kBACA,kBACA,iBACA,kBACA,gBACA7rI,EAAA+pI,GACA,MAEA,QACA/pI,EAAAoS,GAKA,OADA4sH,EADA/+H,EAAAD,EAAA8gI,UAAAhjI,EAAAmC,EAAA2pB,EAAAvuB,IAEA4E,IAGAmwI,GAAAF,GAAAC,+BACAE,GAAA,GAEA,SAAAC,GAAAtwI,GACA,IAAAC,EAAAD,EAAAuwI,WACA3mH,EAAA3pB,EAEA,GACA,IAAA2pB,EAAA,CACA5pB,EAAAwwI,UAAAl5I,KAAAsyB,GACA,MAGA,IAAAvuB,EAEA,IAAAA,EAAAuuB,EAAevuB,EAAAojI,QACfpjI,IAAAojI,OAIA,KADApjI,EAAA,IAAAA,EAAAikB,IAAA,KAAAjkB,EAAA0iI,UAAA0S,eACA,MACAzwI,EAAAwwI,UAAAl5I,KAAAsyB,GACAA,EAAAw0G,EAAA/iI,SACGuuB,GAEH,IAAAA,EAAA,EAAaA,EAAA5pB,EAAAwwI,UAAAt5I,OAAwB0yB,IAAA,CACrC3pB,EAAAD,EAAAwwI,UAAA5mH,GACA,IAAA9rB,EAAAomI,GAAAlkI,EAAAsgI,aACAjlI,EAAA2E,EAAA0wI,aAEA,QAAAra,EAAAr2H,EAAAsgI,YAAA1iI,EAAA,KAAA+kD,EAAA,EAAgDA,EAAA05E,EAAAnlI,OAAeyrD,IAAA,CAC/D,IAAAzvC,EAAAmpH,EAAA15E,GACAzvC,QAAAopH,cAAAjhI,EAAA4E,EAAAo2H,EAAAv4H,MAAAF,EAAAu/H,EAAAv/H,EAAAsV,IAGA8qH,EAAApgI,IAIA,IAAA+yI,IAAA,EAEA,SAAA7Z,GAAA92H,EAAAC,GACA,IAAAA,EAAA,YACA,IAAA2pB,GAAAwmH,GAAApwI,GAAA4wI,GAAAC,IAAAzyI,KAAA,KAAA4B,GACAC,EAAAo4B,iBAAAr4B,EAAA4pB,GAAA,GAGA,SAAAknH,GAAA9wI,EAAAC,GACA,IAAAA,EAAA,YACA,IAAA2pB,GAAAwmH,GAAApwI,GAAA4wI,GAAAC,IAAAzyI,KAAA,KAAA4B,GACAC,EAAAo4B,iBAAAr4B,EAAA4pB,GAAA,GAGA,SAAAgnH,GAAA5wI,EAAAC,GACAqjI,GAAAuN,GAAA7wI,EAAAC,GAGA,SAAA4wI,GAAA7wI,EAAAC,GACA,GAAA0wI,GAAA,CACA,IAAA/mH,EAAAs6G,GAAAjkI,GAIA,GAFA,QADA2pB,EAAAw0G,EAAAx0G,KACA,kBAAAA,EAAAtK,KAAA,IAAA8rH,GAAAxhH,OAAA,MAEAymH,GAAAn5I,OAAA,CACA,IAAAmE,EAAAg1I,GAAAzsI,MACAvI,EAAAq1I,aAAA1wI,EACA3E,EAAAilI,YAAArgI,EACA5E,EAAAk1I,WAAA3mH,EACA5pB,EAAA3E,OACK2E,EAAA,CACL0wI,aAAA1wI,EACAsgI,YAAArgI,EACAswI,WAAA3mH,EACA4mH,UAAA,IAGA,IACA/M,GAAA6M,GAAAtwI,GACK,QACLA,EAAA0wI,aAAA,KAAA1wI,EAAAsgI,YAAA,KAAAtgI,EAAAuwI,WAAA,KAAAvwI,EAAAwwI,UAAAt5I,OAAA,KAAAm5I,GAAAn5I,QAAAm5I,GAAA/4I,KAAA0I,KAKA,IAAA+wI,GAAA,GACAC,GAAA,EACAC,GAAA,wBAAAn3I,KAAA25G,UAAA58G,MAAA,GAEA,SAAAq6I,GAAAlxI,GAEA,OADAlE,OAAArE,UAAAoX,eAAAxX,KAAA2I,EAAAixI,MAAAjxI,EAAAixI,IAAAD,KAAAD,GAAA/wI,EAAAixI,KAAA,IACAF,GAAA/wI,EAAAixI,KAGA,SAAAE,GAAAnxI,GAEA,wBADAA,MAAA,qBAAA/J,uBAAA,IACA,YAEA,IACA,OAAA+J,EAAAorC,eAAAprC,EAAA2L,KACG,MAAA1L,GACH,OAAAD,EAAA2L,MAIA,SAAAylI,GAAApxI,GACA,KAAQA,KAAAwxB,YACRxxB,IAAAwxB,WAGA,OAAAxxB,EAGA,SAAAqxI,GAAArxI,EAAAC,GACA,IAGA5E,EAHAuuB,EAAAwnH,GAAApxI,GAGA,IAFAA,EAAA,EAEa4pB,GAAG,CAChB,OAAAA,EAAAsG,SAAA,CAEA,GADA70B,EAAA2E,EAAA4pB,EAAAxM,YAAAlmB,OACA8I,GAAAC,GAAA5E,GAAA4E,EAAA,OACA4f,KAAA+J,EACA7jB,OAAA9F,EAAAD,GAEAA,EAAA3E,EAGA2E,EAAA,CACA,KAAY4pB,GAAG,CACf,GAAAA,EAAAmhB,YAAA,CACAnhB,IAAAmhB,YACA,MAAA/qC,EAGA4pB,IAAA2J,WAGA3J,OAAA,EAGAA,EAAAwnH,GAAAxnH,IAQA,SAAA0nH,KACA,QAAAtxI,EAAAvK,OAAAwK,EAAAkxI,KAAgClxI,aAAAD,EAAAosC,mBAAkC,CAClE,IACApsC,EAAAC,EAAAsxI,gBAAAzG,YACK,MAAAlhH,GACL,MAGA3pB,EAAAkxI,GAAAnxI,EAAA/J,UAGA,OAAAgK,EAGA,SAAAuxI,GAAAxxI,GACA,IAAAC,EAAAD,KAAAmM,UAAAnM,EAAAmM,SAAAmY,cACA,OAAArkB,IAAA,UAAAA,IAAA,SAAAD,EAAAzJ,MAAA,WAAAyJ,EAAAzJ,MAAA,QAAAyJ,EAAAzJ,MAAA,QAAAyJ,EAAAzJ,MAAA,aAAAyJ,EAAAzJ,OAAA,aAAA0J,GAAA,SAAAD,EAAAyxI,iBA2EA,SAAAC,GAAA1xI,GACA,IAAAC,EAAAqxI,KACA1nH,EAAA5pB,EAAA2xI,YACAt2I,EAAA2E,EAAA4xI,eAEA,GAAA3xI,IAAA2pB,QAAAmP,eApGA,SAAA84G,EAAA7xI,EAAAC,GACA,SAAAD,IAAAC,KAAAD,IAAAC,KAAAD,GAAA,IAAAA,EAAAkwB,YAAAjwB,GAAA,IAAAA,EAAAiwB,SAAA2hH,EAAA7xI,EAAAC,EAAAszB,YAAA,aAAAvzB,IAAA8xB,SAAA7xB,KAAAD,EAAA8xI,4BAAA,GAAA9xI,EAAA8xI,wBAAA7xI,MAmGA4xI,CAAAjoH,EAAAmP,cAAA7sB,gBAAA0d,GAAA,CACA,UAAAvuB,GAAAm2I,GAAA5nH,GAAA,GAAA3pB,EAAA5E,EAAA6O,WAAA,KAAAlK,EAAA3E,EAAA9C,OAAAyH,EAAAC,GAAA,mBAAA2pB,IAAAmoH,eAAA9xI,EAAA2pB,EAAAooH,aAAAl4I,KAAAG,IAAA+F,EAAA4pB,EAAApsB,MAAAtG,aAA4K,IAAA8I,GAAAC,EAAA2pB,EAAAmP,eAAA9iC,WAAAgK,EAAA6qI,aAAAr1I,QAAAw8I,aAAA,CAC5KjyI,IAAAiyI,eACA,IAAAn0I,EAAA8rB,EAAAxM,YAAAlmB,OACAm/H,EAAAv8H,KAAAG,IAAAoB,EAAA6O,MAAApM,GACAzC,OAAA,IAAAA,EAAA9C,IAAA89H,EAAAv8H,KAAAG,IAAAoB,EAAA9C,IAAAuF,IACAkC,EAAAouE,QAAAioD,EAAAh7H,IAAAyC,EAAAzC,IAAAg7H,IAAAv4H,GACAA,EAAAuzI,GAAAznH,EAAAysG,GACA,IAAAz4H,EAAAyzI,GAAAznH,EAAAvuB,GACAyC,GAAAF,IAAA,IAAAoC,EAAAkyI,YAAAlyI,EAAAmyI,aAAAr0I,EAAA+hB,MAAA7f,EAAAoyI,eAAAt0I,EAAAiI,QAAA/F,EAAAqyI,YAAAz0I,EAAAiiB,MAAA7f,EAAAsyI,cAAA10I,EAAAmI,WAAA9F,IAAAsyI,eAAAC,SAAA10I,EAAA+hB,KAAA/hB,EAAAiI,QAAA/F,EAAAyyI,kBAAApc,EAAAh7H,GAAA2E,EAAA0yI,SAAAzyI,GAAAD,EAAAouE,OAAAxwE,EAAAiiB,KAAAjiB,EAAAmI,UAAA9F,EAAA0yI,OAAA/0I,EAAAiiB,KAAAjiB,EAAAmI,QAAA/F,EAAA0yI,SAAAzyI,KAIA,IAFAA,EAAA,GAEAD,EAAA4pB,EAAe5pB,IAAAuzB,YACf,IAAAvzB,EAAAkwB,UAAAjwB,EAAA3I,KAAA,CACA0lB,QAAAhd,EACA2zB,KAAA3zB,EAAA+zB,WACAH,IAAA5zB,EAAAk0B,YAMA,IAFA,oBAAAtK,EAAAuJ,OAAAvJ,EAAAuJ,QAEAvJ,EAAA,EAAeA,EAAA3pB,EAAA/I,OAAc0yB,KAC7B5pB,EAAAC,EAAA2pB,IAAA5M,QAAA+W,WAAA/zB,EAAA2zB,KAAA3zB,EAAAgd,QAAAkX,UAAAl0B,EAAA4zB,KAKA,IAAAg/G,GAAA3T,GAAA,iBAAAhpI,UAAA,IAAAA,SAAAurI,aACAqR,GAAA,CACAC,OAAA,CACArW,wBAAA,CACAqF,QAAA,WACAC,SAAA,mBAEAlF,aAAA,iFAAA5rH,MAAA,OAGA8hI,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,IAAA,EAEA,SAAAC,GAAAnzI,EAAAC,GACA,IAAA2pB,EAAA3pB,EAAAxK,SAAAwK,IAAAhK,SAAA,IAAAgK,EAAAiwB,SAAAjwB,IAAA84B,cACA,OAAAm6G,IAAA,MAAAH,SAAA5B,GAAAvnH,GAAA,MAEA,mBADAA,EAAAmpH,KACAvB,GAAA5nH,KAAA,CACA1f,MAAA0f,EAAAmoH,eACAx5I,IAAAqxB,EAAAooH,cACGpoH,EAAA,CACHuoH,YADGvoH,KAAAmP,eAAAnP,EAAAmP,cAAA+xG,aAAAr1I,QAAAw8I,gBACHE,WACAC,aAAAxoH,EAAAwoH,aACAC,UAAAzoH,EAAAyoH,UACAC,YAAA1oH,EAAA0oH,aAEAW,IAAA9H,GAAA8H,GAAArpH,GAAA,MAAAqpH,GAAArpH,GAAA5pB,EAAAoS,GAAA0uH,UAAA+R,GAAAC,OAAAE,GAAAhzI,EAAAC,IAAA1J,KAAA,SAAAyJ,EAAAxE,OAAAu3I,GAAA/T,EAAAh/H,OAGA,IAAAozI,GAAA,CACA7W,WAAAsW,GACAvW,cAAA,SAAAt8H,EAAAC,EAAA2pB,EAAAvuB,GACA,IACAg7H,EADAv4H,EAAAzC,EAAA5F,SAAA4F,IAAApF,SAAA,IAAAoF,EAAA60B,SAAA70B,IAAA09B,cAGA,KAAAs9F,GAAAv4H,GAAA,CACAkC,EAAA,CACAlC,EAAAozI,GAAApzI,GACAu4H,EAAAn4H,EAAAm1I,SAEA,QAAAz1I,EAAA,EAAuBA,EAAAy4H,EAAAn/H,OAAc0G,IAAA,CACrC,IAAA+kD,EAAA0zE,EAAAz4H,GAEA,IAAAE,EAAA+Q,eAAA8zC,KAAA7kD,EAAA6kD,GAAA,CACA7kD,GAAA,EACA,MAAAkC,GAIAlC,GAAA,EAGAu4H,GAAAv4H,EAGA,GAAAu4H,EAAA,YAGA,OAFAv4H,EAAAmC,EAAAq+H,EAAAr+H,GAAAxK,OAEAuK,GACA,aACAikI,GAAAnmI,IAAA,SAAAA,EAAA2zI,mBAAAsB,GAAAj1I,EAAAk1I,GAAA/yI,EAAAgzI,GAAA,MACA,MAEA,WACAA,GAAAD,GAAAD,GAAA,KACA,MAEA,gBACAG,IAAA,EACA,MAEA,kBACA,cACA,cACA,OAAAA,IAAA,EAAAC,GAAAvpH,EAAAvuB,GAEA,sBACA,GAAAu3I,GAAA,MAEA,cACA,YACA,OAAAO,GAAAvpH,EAAAvuB,GAGA,cAuBA,SAAAi4I,GAAAtzI,EAAAC,GAKA,OAJAD,EAAAuR,EAAA,CACA+tB,cAAA,GACGr/B,IACHA,EAZA,SAAAD,GACA,IAAAC,EAAA,GAIA,OAHAg2H,EAAAkD,SAAA9+H,QAAA2F,EAAA,SAAAA,GACA,MAAAA,IAAAC,GAAAD,KAEAC,EAOAszI,CAAAtzI,EAAAq/B,aAAAt/B,EAAAs/B,SAAAr/B,GACAD,EAGA,SAAAwzI,GAAAxzI,EAAAC,EAAA2pB,EAAAvuB,GAGA,GAFA2E,IAAAG,QAEAF,EAAA,CACAA,EAAA,GAEA,QAAAnC,EAAA,EAAmBA,EAAA8rB,EAAA1yB,OAAc4G,IACjCmC,EAAA,IAAA2pB,EAAA9rB,KAAA,EAGA,IAAA8rB,EAAA,EAAeA,EAAA5pB,EAAA9I,OAAc0yB,IAC7B9rB,EAAAmC,EAAA4O,eAAA,IAAA7O,EAAA4pB,GAAApsB,OAAAwC,EAAA4pB,GAAA4jB,WAAA1vC,IAAAkC,EAAA4pB,GAAA4jB,SAAA1vC,MAAAzC,IAAA2E,EAAA4pB,GAAA6pH,iBAAA,OAEG,CAIH,IAHA7pH,EAAA,GAAAu9G,GAAAv9G,GACA3pB,EAAA,KAEAnC,EAAA,EAAeA,EAAAkC,EAAA9I,OAAc4G,IAAA,CAC7B,GAAAkC,EAAAlC,GAAAN,QAAAosB,EAGA,OAFA5pB,EAAAlC,GAAA0vC,UAAA,OACAnyC,IAAA2E,EAAAlC,GAAA21I,iBAAA,IAIA,OAAAxzI,GAAAD,EAAAlC,GAAA64B,WAAA12B,EAAAD,EAAAlC,IAGA,OAAAmC,MAAAutC,UAAA,IAIA,SAAAkmG,GAAA1zI,EAAAC,GAEA,OADA,MAAAA,EAAA0zI,yBAAAxhI,EAAA,MACAZ,EAAA,GAAatR,EAAA,CACbzC,WAAA,EACAshC,kBAAA,EACAQ,SAAA,GAAAt/B,EAAAsnI,cAAAG,eAIA,SAAAmM,GAAA5zI,EAAAC,GACA,IAAA2pB,EAAA3pB,EAAAzC,MACA,MAAAosB,MAAA3pB,EAAA6+B,aAAA,OAAA7+B,IAAAq/B,YAAA,MAAA1V,GAAAzX,EAAA,MAAAP,MAAAI,QAAA/R,KAAA,GAAAA,EAAA/I,QAAAib,EAAA,MAAAlS,IAAA,IAAA2pB,EAAA3pB,GAAA,MAAA2pB,MAAA,KACA5pB,EAAAsnI,cAAA,CACAG,aAAAN,GAAAv9G,IAIA,SAAAiqH,GAAA7zI,EAAAC,GACA,IAAA2pB,EAAAu9G,GAAAlnI,EAAAzC,OACAnC,EAAA8rI,GAAAlnI,EAAA6+B,cACA,MAAAlV,OAAA,GAAAA,KAAA5pB,EAAAxC,QAAAwC,EAAAxC,MAAAosB,GAAA,MAAA3pB,EAAA6+B,cAAA9+B,EAAA8+B,eAAAlV,IAAA5pB,EAAA8+B,aAAAlV,IACA,MAAAvuB,IAAA2E,EAAA8+B,aAAA,GAAAzjC,GAGA,SAAAy4I,GAAA9zI,GACA,IAAAC,EAAAD,EAAAod,YACAnd,IAAAD,EAAAsnI,cAAAG,eAAAznI,EAAAxC,MAAAyC,GArFA09H,EAAAC,uBAAA,0HAAA3sH,MAAA,MACA6rH,EAAAyB,EACAxB,EAAAsB,EACArB,EAAAsB,EACAX,EAAAE,yBAAA,CACAkW,kBAAA7D,GACA8D,sBAAAnJ,GACAoJ,kBAAApL,GACAqL,kBAAAd,GACAe,uBAAA3R,KA+EA,IAAA4R,GAAA,CACAC,KAAA,+BACAC,OAAA,qCACAC,IAAA,8BAGA,SAAAC,GAAAx0I,GACA,OAAAA,GACA,UACA,mCAEA,WACA,2CAEA,QACA,sCAIA,SAAAy0I,GAAAz0I,EAAAC,GACA,aAAAD,GAAA,iCAAAA,EAAAw0I,GAAAv0I,GAAA,+BAAAD,GAAA,kBAAAC,EAAA,+BAAAD,EAGA,IACAA,GADA00I,QAAA,EACAC,IAAA30I,GAMC,SAAAA,EAAAC,GACD,GAAAD,EAAA40I,eAAAR,GAAAG,KAAA,cAAAv0I,IAAAkwC,UAAAjwC,MAAqE,CAIrE,KAHAy0I,OAAAz+I,SAAA46B,cAAA,QACAqf,UAAA,QAAAjwC,EAAA,SAEAA,EAAAy0I,GAAAljH,WAA2BxxB,EAAAwxB,YAC3BxxB,EAAAk1B,YAAAl1B,EAAAwxB,YAGA,KAAUvxB,EAAAuxB,YACVxxB,EAAA0xB,YAAAzxB,EAAAuxB,cAfA,qBAAAqjH,aAAAC,wBAAA,SAAA70I,EAAA2pB,EAAAvuB,EAAAyC,GACA+2I,MAAAC,wBAAA,WACA,OAAA90I,GAAAC,EAAA2pB,MAEG5pB,IAgBH,SAAA+0I,GAAA/0I,EAAAC,GACA,GAAAA,EAAA,CACA,IAAA2pB,EAAA5pB,EAAAwxB,WAEA,GAAA5H,OAAA5pB,EAAAg1I,WAAA,IAAAprH,EAAAsG,SAEA,YADAtG,EAAAqrH,UAAAh1I,GAKAD,EAAAod,YAAAnd,EAGA,IAAAi1I,GAAA,CACAC,yBAAA,EACAC,mBAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,SAAA,EACAC,cAAA,EACAC,iBAAA,EACAC,aAAA,EACAC,SAAA,EACAC,MAAA,EACAC,UAAA,EACAC,cAAA,EACAC,YAAA,EACAC,cAAA,EACAC,WAAA,EACAC,UAAA,EACAC,SAAA,EACAC,YAAA,EACAC,aAAA,EACAC,cAAA,EACAC,YAAA,EACAC,eAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,YAAA,EACAC,WAAA,EACAC,YAAA,EACAh4F,SAAA,EACAi4F,OAAA,EACAC,SAAA,EACAC,SAAA,EACAC,QAAA,EACAC,QAAA,EACAC,MAAA,EACAC,aAAA,EACAC,cAAA,EACAC,aAAA,EACAC,iBAAA,EACAC,kBAAA,EACAC,kBAAA,EACAC,eAAA,EACAC,aAAA,GAEAC,GAAA,0BAQA,SAAAC,GAAA73I,EAAAC,EAAA2pB,GACA,aAAA3pB,GAAA,mBAAAA,GAAA,KAAAA,EAAA,GAAA2pB,GAAA,kBAAA3pB,GAAA,IAAAA,GAAAi1I,GAAArmI,eAAA7O,IAAAk1I,GAAAl1I,IAAA,GAAAC,GAAA6P,OAAA7P,EAAA,KAGA,SAAA63I,GAAA93I,EAAAC,GAGA,QAAA2pB,KAFA5pB,IAAAo6B,MAEAn6B,EACA,GAAAA,EAAA4O,eAAA+a,GAAA,CACA,IAAAvuB,EAAA,IAAAuuB,EAAAhzB,QAAA,MACAkH,EAAA+5I,GAAAjuH,EAAA3pB,EAAA2pB,GAAAvuB,GACA,UAAAuuB,MAAA,YACAvuB,EAAA2E,EAAA+3I,YAAAnuH,EAAA9rB,GAAAkC,EAAA4pB,GAAA9rB,GAnBAhC,OAAAiW,KAAAmjI,IAAA76I,QAAA,SAAA2F,GACA43I,GAAAv9I,QAAA,SAAA4F,GACAA,IAAAD,EAAA09B,OAAA,GAAAvuB,cAAAnP,EAAA8Q,UAAA,GACAokI,GAAAj1I,GAAAi1I,GAAAl1I,OAqBA,IAAAg4I,GAAAzmI,EAAA,CACA0mI,UAAA,GACC,CACDC,MAAA,EACAt7H,MAAA,EACAu7H,IAAA,EACAC,KAAA,EACAC,OAAA,EACAC,IAAA,EACAC,KAAA,EACAC,OAAA,EACAC,QAAA,EACAC,MAAA,EACAC,MAAA,EACAC,OAAA,EACA9mI,QAAA,EACA5R,OAAA,EACA24I,KAAA,IAGA,SAAAC,GAAA94I,EAAAC,GACAA,IAAA+3I,GAAAh4I,KAAA,MAAAC,EAAAq/B,UAAA,MAAAr/B,EAAA0zI,0BAAAxhI,EAAA,MAAAnS,EAAA,UAAAC,EAAA0zI,0BAAA,MAAA1zI,EAAAq/B,UAAAntB,EAAA,wBAAAlS,EAAA0zI,yBAAA,WAAA1zI,EAAA0zI,yBAAAxhI,EAAA,aAAAlS,EAAAm6B,OAAA,kBAAAn6B,EAAAm6B,OAAAjoB,EAAA,UAGA,SAAA4mI,GAAA/4I,EAAAC,GACA,QAAAD,EAAApJ,QAAA,6BAAAqJ,EAAA+4I,GAEA,OAAAh5I,GACA,qBACA,oBACA,gBACA,oBACA,oBACA,uBACA,qBACA,oBACA,SAEA,QACA,UAIA,SAAAi5I,GAAAj5I,EAAAC,GAEA,IAAA2pB,EAAAsnH,GADAlxI,EAAA,IAAAA,EAAAkwB,UAAA,KAAAlwB,EAAAkwB,SAAAlwB,IAAA+4B,eAEA94B,EAAA/B,EAAA+B,GAEA,QAAA5E,EAAA,EAAiBA,EAAA4E,EAAA/I,OAAcmE,IAAA,CAC/B,IAAAyC,EAAAmC,EAAA5E,GAEA,IAAAuuB,EAAA/a,eAAA/Q,KAAA8rB,EAAA9rB,GAAA,CACA,OAAAA,GACA,aACAgzI,GAAA,SAAA9wI,GACA,MAEA,YACA,WACA8wI,GAAA,QAAA9wI,GACA8wI,GAAA,OAAA9wI,GACA4pB,EAAAsY,MAAA,EACAtY,EAAAuJ,OAAA,EACA,MAEA,aACA,YACAixG,GAAAtmI,IAAAgzI,GAAAhzI,EAAAkC,GACA,MAEA,cACA,aACA,YACA,MAEA,SACA,IAAA29F,GAAA/mG,QAAAkH,IAAAg5H,GAAAh5H,EAAAkC,GAGA4pB,EAAA9rB,IAAA,IAKA,SAAAo7I,MAEA,IAAAC,GAAA,KACAC,GAAA,KAEA,SAAAC,GAAAr5I,EAAAC,GACA,OAAAD,GACA,aACA,YACA,aACA,eACA,QAAAC,EAAAq5I,UAGA,SAGA,SAAAC,GAAAv5I,EAAAC,GACA,mBAAAD,GAAA,WAAAA,GAAA,aAAAA,GAAA,kBAAAC,EAAAq/B,UAAA,kBAAAr/B,EAAAq/B,UAAA,kBAAAr/B,EAAA0zI,yBAAA,OAAA1zI,EAAA0zI,yBAAA,MAAA1zI,EAAA0zI,wBAAA6F,OAGA,IAAAC,GAAA,oBAAA1rI,2BAAA,EACA2rI,GAAA,oBAAAhtI,+BAAA,EACAitI,GAAA1gI,EAAA2gI,0BACAC,GAAA5gI,EAAA6gI,wBA4BA,SAAAC,GAAA/5I,GACA,IAAAA,IAAA+qC,YAAyB/qC,GAAA,IAAAA,EAAAkwB,UAAA,IAAAlwB,EAAAkwB,UACzBlwB,IAAA+qC,YAGA,OAAA/qC,EAGA,SAAAg6I,GAAAh6I,GACA,IAAAA,IAAAwxB,WAAwBxxB,GAAA,IAAAA,EAAAkwB,UAAA,IAAAlwB,EAAAkwB,UACxBlwB,IAAA+qC,YAGA,OAAA/qC,EAGA,IAAAyxH,IACA,IAAAwoB,GAAA,GACAC,IAAA,EAEA,SAAAjjB,GAAAj3H,GACA,EAAAk6I,KAAAl6I,EAAAw3H,QAAAyiB,GAAAC,IAAAD,GAAAC,IAAA,KAAAA,MAGA,SAAAhjB,GAAAl3H,EAAAC,GAEAg6I,KADAC,IACAl6I,EAAAw3H,QACAx3H,EAAAw3H,QAAAv3H,EAGA,IAAAk6I,GAAA,GACA9iB,GAAA,CACAG,QAAA2iB,IAEA5iB,GAAA,CACAC,SAAA,GAEA4iB,GAAAD,GAEA,SAAAE,GAAAr6I,EAAAC,GACA,IAAA2pB,EAAA5pB,EAAAzJ,KAAA+jJ,aACA,IAAA1wH,EAAA,OAAAuwH,GACA,IAAA9+I,EAAA2E,EAAA+9H,UACA,GAAA1iI,KAAAk/I,8CAAAt6I,EAAA,OAAA5E,EAAAm/I,0CACA,IACAnkB,EADAv4H,EAAA,GAGA,IAAAu4H,KAAAzsG,EACA9rB,EAAAu4H,GAAAp2H,EAAAo2H,GAIA,OADAh7H,KAAA2E,IAAA+9H,WAAAwc,4CAAAt6I,EAAAD,EAAAw6I,0CAAA18I,GACAA,EAGA,SAAA25H,GAAAz3H,GAEA,eADAA,IAAAy6I,yBACA,IAAAz6I,EAGA,SAAA06I,GAAA16I,GACAi3H,GAAAM,IACAN,GAAAI,IAGA,SAAAsjB,GAAA36I,GACAi3H,GAAAM,IACAN,GAAAI,IAGA,SAAAujB,GAAA56I,EAAAC,EAAA2pB,GACAytG,GAAAG,UAAA2iB,IAAAhoI,EAAA,OACA+kH,GAAAG,GAAAp3H,GACAi3H,GAAAK,GAAA3tG,GAGA,SAAAixH,GAAA76I,EAAAC,EAAA2pB,GACA,IAAAvuB,EAAA2E,EAAA+9H,UAEA,GADA/9H,EAAAC,EAAAw6I,kBACA,oBAAAp/I,EAAAy/I,gBAAA,OAAAlxH,EAGA,QAAA9rB,KAFAzC,IAAAy/I,kBAGAh9I,KAAAkC,GAAAmS,EAAA,MAAAyzH,GAAA3lI,IAAA,UAAAnC,GAGA,OAAAyT,EAAA,GAAaqY,EAAAvuB,GAGb,SAAA0/I,GAAA/6I,GACA,IAAAC,EAAAD,EAAA+9H,UAKA,OAJA99H,OAAA+6I,2CAAAb,GACAC,GAAA/iB,GAAAG,QACAN,GAAAG,GAAAp3H,GACAi3H,GAAAK,MAAAC,UACA,EAGA,SAAAyjB,GAAAj7I,EAAAC,EAAA2pB,GACA,IAAAvuB,EAAA2E,EAAA+9H,UACA1iI,GAAA8W,EAAA,OACAyX,GAAA3pB,EAAA46I,GAAA76I,EAAAC,EAAAm6I,IAAA/+I,EAAA2/I,0CAAA/6I,EAAAg3H,GAAAM,IAAAN,GAAAI,IAAAH,GAAAG,GAAAp3H,IAAAg3H,GAAAM,IACAL,GAAAK,GAAA3tG,GAGA,IAAAsxH,GAAA,KACAC,GAAA,KAEA,SAAAC,GAAAp7I,GACA,gBAAAC,GACA,IACA,OAAAD,EAAAC,GACK,MAAA2pB,MAsBL,SAAAyxH,GAAAr7I,EAAAC,EAAA2pB,EAAAvuB,GACAlF,KAAAmpB,IAAAtf,EACA7J,KAAA6F,IAAA4tB,EACAzzB,KAAAq1I,QAAAr1I,KAAAo7B,MAAAp7B,KAAAsoI,OAAAtoI,KAAA4nI,UAAA5nI,KAAAI,KAAAJ,KAAAmlJ,YAAA,KACAnlJ,KAAAQ,MAAA,EACAR,KAAAyhI,IAAA,KACAzhI,KAAAolJ,aAAAt7I,EACA9J,KAAAqlJ,oBAAArlJ,KAAAslJ,cAAAtlJ,KAAAulJ,YAAAvlJ,KAAAwlJ,cAAA,KACAxlJ,KAAA+7C,KAAA72C,EACAlF,KAAAk1I,UAAA,EACAl1I,KAAAylJ,WAAAzlJ,KAAA0lJ,YAAA1lJ,KAAA2lJ,WAAA,KACA3lJ,KAAA4lJ,oBAAA5lJ,KAAA6lJ,eAAA,EACA7lJ,KAAA60I,UAAA,KAGA,SAAAtT,GAAA13H,EAAAC,EAAA2pB,EAAAvuB,GACA,WAAAggJ,GAAAr7I,EAAAC,EAAA2pB,EAAAvuB,GAGA,SAAA4gJ,GAAAj8I,GAEA,UADAA,IAAAvI,aACAuI,EAAAm3H,kBAeA,SAAA+kB,GAAAl8I,EAAAC,GACA,IAAA2pB,EAAA5pB,EAAAgrI,UAYA,OAXA,OAAAphH,MAAA8tG,GAAA13H,EAAAsf,IAAArf,EAAAD,EAAAhE,IAAAgE,EAAAkyC,OAAAopG,YAAAt7I,EAAAs7I,YAAA1xH,EAAArzB,KAAAyJ,EAAAzJ,KAAAqzB,EAAAm0G,UAAA/9H,EAAA+9H,UAAAn0G,EAAAohH,UAAAhrI,IAAAgrI,UAAAphH,MAAA2xH,aAAAt7I,EAAA2pB,EAAAyhH,UAAA,EAAAzhH,EAAAkyH,WAAA,KAAAlyH,EAAAiyH,YAAA,KAAAjyH,EAAAgyH,WAAA,MACAhyH,EAAAmyH,oBAAA/7I,EAAA+7I,oBACAnyH,EAAAoyH,eAAAh8I,EAAAg8I,eACApyH,EAAA2H,MAAAvxB,EAAAuxB,MACA3H,EAAA+xH,cAAA37I,EAAA27I,cACA/xH,EAAA6xH,cAAAz7I,EAAAy7I,cACA7xH,EAAA8xH,YAAA17I,EAAA07I,YACA9xH,EAAA4xH,oBAAAx7I,EAAAw7I,oBACA5xH,EAAA4hH,QAAAxrI,EAAAwrI,QACA5hH,EAAAjzB,MAAAqJ,EAAArJ,MACAizB,EAAAguG,IAAA53H,EAAA43H,IACAhuG,EAGA,SAAAuyH,GAAAn8I,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,GACA,IAAAz4H,EAAA,EAEA,GADAvC,EAAA2E,EACA,oBAAAA,EAAAi8I,GAAAj8I,KAAApC,EAAA,QAAgD,qBAAAoC,EAAApC,EAAA,OAAsCoC,EAAA,OAAAA,GACtF,KAAAilI,GACA,OAAAmX,GAAAxyH,EAAA0V,SAAAxhC,EAAAu4H,EAAAp2H,GAEA,KAAAqlI,GACA,OAAA+W,GAAAzyH,EAAA,EAAA9rB,EAAAu4H,EAAAp2H,GAEA,KAAAilI,GACA,OAAAmX,GAAAzyH,EAAA,EAAA9rB,EAAAu4H,EAAAp2H,GAEA,KAAAklI,GACA,OAAAnlI,EAAA03H,GAAA,GAAA9tG,EAAA3pB,EAAA,EAAAnC,IAAAw9I,YAAAnW,GAAAnlI,EAAAzJ,KAAA4uI,GAAAnlI,EAAAg8I,eAAA3lB,EAAAr2H,EAEA,KAAAulI,GACA,OAAAvlI,EAAA03H,GAAA,GAAA9tG,EAAA3pB,EAAAnC,IAAAw9I,YAAA/V,GAAAvlI,EAAAzJ,KAAAgvI,GAAAvlI,EAAAg8I,eAAA3lB,EAAAr2H,EAEA,QACA,qBAAAA,GAAA,OAAAA,EAAA,OAAAA,EAAAi4H,UACA,KAAAmN,GACAxnI,EAAA,GACA,MAAAoC,EAEA,KAAAqlI,GACAznI,EAAA,EACA,MAAAoC,EAEA,KAAAilF,GACArnF,EAAA,GACA,MAAAoC,EAEA,KAAAwlI,GACA5nI,EAAA,GACA,MAAAoC,EAEA,KAAAylI,GACA7nI,EAAA,GACAvC,EAAA,KACA,MAAA2E,EAEAmS,EAAA,YAAAnS,aAAA,IAMA,OAJAC,EAAAy3H,GAAA95H,EAAAgsB,EAAA3pB,EAAAnC,IACAw9I,YAAAt7I,EACAC,EAAA1J,KAAA8E,EACA4E,EAAA+7I,eAAA3lB,EACAp2H,EAGA,SAAAm8I,GAAAp8I,EAAAC,EAAA2pB,EAAAvuB,GAGA,OAFA2E,EAAA03H,GAAA,EAAA13H,EAAA3E,EAAA4E,IACA+7I,eAAApyH,EACA5pB,EAGA,SAAAq8I,GAAAr8I,EAAAC,EAAA2pB,EAAAvuB,GAMA,OALA2E,EAAA03H,GAAA,EAAA13H,EAAA3E,EAAA4E,GACAA,EAAA,OAAAA,GAAAilI,GAAAI,GACAtlI,EAAAs7I,YAAAr7I,EACAD,EAAAzJ,KAAA0J,EACAD,EAAAg8I,eAAApyH,EACA5pB,EAGA,SAAAs8I,GAAAt8I,EAAAC,EAAA2pB,GAGA,OAFA5pB,EAAA03H,GAAA,EAAA13H,EAAA,KAAAC,IACA+7I,eAAApyH,EACA5pB,EAGA,SAAAu8I,GAAAv8I,EAAAC,EAAA2pB,GAQA,OAPA3pB,EAAAy3H,GAAA,SAAA13H,EAAAs/B,SAAAt/B,EAAAs/B,SAAA,GAAAt/B,EAAAhE,IAAAiE,IACA+7I,eAAApyH,EACA3pB,EAAA89H,UAAA,CACA0S,cAAAzwI,EAAAywI,cACA+L,gBAAA,KACAr+I,eAAA6B,EAAA7B,gBAEA8B,EAGA,SAAAw8I,GAAAz8I,EAAAC,GACAD,EAAAisG,UAAA,EACA,IAAAriF,EAAA5pB,EAAA08I,oBACA,IAAA9yH,EAAA5pB,EAAA08I,oBAAA18I,EAAA28I,kBAAA18I,EAAA2pB,EAAA3pB,EAAAD,EAAA08I,oBAAAz8I,EAAAD,EAAA28I,kBAAA18I,IAAAD,EAAA28I,kBAAA18I,GACA28I,GAAA38I,EAAAD,GAeA,SAAA68I,GAAA78I,EAAAC,GACAD,EAAAisG,UAAA,EACAjsG,EAAA88I,kBAAA78I,IAAAD,EAAA88I,iBAAA,GACA,IAAAlzH,EAAA5pB,EAAA08I,oBACArhJ,EAAA2E,EAAA28I,kBACA/yH,IAAA3pB,EAAAD,EAAA08I,oBAAArhJ,IAAA4E,EAAAD,EAAA28I,kBAAA,EAAAthJ,MAAA4E,IAAAD,EAAA28I,kBAAA/yH,GACAA,EAAA5pB,EAAA+8I,sBACA1hJ,EAAA2E,EAAAg9I,oBACA,IAAApzH,EAAA5pB,EAAA+8I,sBAAA/8I,EAAAg9I,oBAAA/8I,EAAA2pB,EAAA3pB,EAAAD,EAAA+8I,sBAAA98I,EAAA5E,EAAA4E,IAAAD,EAAAg9I,oBAAA/8I,GACA28I,GAAA38I,EAAAD,GAGA,SAAAi9I,GAAAj9I,EAAAC,GACA,IAAA2pB,EAAA5pB,EAAA08I,oBAIA,OAFA9yH,EAAA3pB,MAAA2pB,IADA5pB,IAAA+8I,uBAEA98I,MAAAD,GACAC,EAGA,SAAA28I,GAAA58I,EAAAC,GACA,IAAA2pB,EAAA3pB,EAAA88I,sBACA1hJ,EAAA4E,EAAA+8I,oBACAl/I,EAAAmC,EAAAy8I,oBACArmB,EAAAp2H,EAAA68I,iBAEA,KADAh/I,EAAA,IAAAA,IAAAu4H,KACA,IAAAr2H,GAAA3E,EAAA2E,KAAAlC,EAAAzC,GAEA,KADA2E,EAAAlC,IACA8rB,EAAA5pB,MAAA4pB,GACA3pB,EAAAi9I,2BAAAp/I,EACAmC,EAAA+7I,eAAAh8I,EAGA,SAAA23H,GAAA33H,EAAAC,GACA,GAAAD,KAAAg4H,aAIA,QAAApuG,KAHA3pB,EAAAsR,EAAA,GAAYtR,GACZD,IAAAg4H,kBAGA,IAAA/3H,EAAA2pB,KAAA3pB,EAAA2pB,GAAA5pB,EAAA4pB,IAIA,OAAA3pB,EAuCA,IAAAk9I,IAAA,IAAAlnB,EAAAp4F,WAAAk5F,KAEA,SAAAqmB,GAAAp9I,EAAAC,EAAA2pB,EAAAvuB,GAGAuuB,EAAA,QADAA,IAAAvuB,EADA4E,EAAAD,EAAAy7I,sBAEA,IAAA7xH,EAAA3pB,EAAAsR,EAAA,GAA2CtR,EAAA2pB,GAC3C5pB,EAAAy7I,cAAA7xH,EAEA,QADAvuB,EAAA2E,EAAA07I,cACA,IAAA17I,EAAAg8I,iBAAA3gJ,EAAAgiJ,UAAAzzH,GAGA,IAAA0zH,GAAA,CACA7mB,UAAA,SAAAz2H,GACA,SAAAA,IAAAu9I,sBAAA,IAAAnS,GAAAprI,IAEA42H,gBAAA,SAAA52H,EAAAC,EAAA2pB,GACA5pB,IAAAu9I,oBACA,IAAAliJ,EAAAmiJ,KAEA1/I,EAAA2/I,GADApiJ,EAAAqiJ,GAAAriJ,EAAA2E,IAEAlC,EAAA+gF,QAAA5+E,OACA,IAAA2pB,GAAA,OAAAA,IAAA9rB,EAAAqN,SAAAye,GACA+zH,KACAC,GAAA59I,EAAAlC,GACA+/I,GAAA79I,EAAA3E,IAEAs7H,oBAAA,SAAA32H,EAAAC,EAAA2pB,GACA5pB,IAAAu9I,oBACA,IAAAliJ,EAAAmiJ,KAEA1/I,EAAA2/I,GADApiJ,EAAAqiJ,GAAAriJ,EAAA2E,IAEAlC,EAAAwhB,IAAAw+H,GACAhgJ,EAAA+gF,QAAA5+E,OACA,IAAA2pB,GAAA,OAAAA,IAAA9rB,EAAAqN,SAAAye,GACA+zH,KACAC,GAAA59I,EAAAlC,GACA+/I,GAAA79I,EAAA3E,IAEAq7H,mBAAA,SAAA12H,EAAAC,GACAD,IAAAu9I,oBACA,IAAA3zH,EAAA4zH,KAEAniJ,EAAAoiJ,GADA7zH,EAAA8zH,GAAA9zH,EAAA5pB,IAEA3E,EAAAikB,IAAAy+H,QACA,IAAA99I,GAAA,OAAAA,IAAA5E,EAAA8P,SAAAlL,GACA09I,KACAC,GAAA59I,EAAA3E,GACAwiJ,GAAA79I,EAAA4pB,KAIA,SAAAo0H,GAAAh+I,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,EAAAz4H,GAEA,0BADAoC,IAAA+9H,WACAkgB,sBAAAj+I,EAAAi+I,sBAAA5iJ,EAAAg7H,EAAAz4H,IAAAqC,EAAAxI,YAAAwI,EAAAxI,UAAA6/H,wBAAA6T,GAAAvhH,EAAAvuB,KAAA8vI,GAAArtI,EAAAu4H,IAGA,SAAA6nB,GAAAl+I,EAAAC,EAAA2pB,GACA,IAAAvuB,GAAA,EACAyC,EAAAq8I,GACA9jB,EAAAp2H,EAAAk+I,YAQA,MAPA,kBAAA9nB,GAAA,OAAAA,IAAA0B,GAAA1B,IAAAv4H,EAAA25H,GAAAx3H,GAAAm6I,GAAA/iB,GAAAG,QAAAnB,GAAAh7H,EAAA,QAAAA,EAAA4E,EAAAq6I,oBAAA,IAAAj/I,GAAAg/I,GAAAr6I,EAAAlC,GAAAq8I,IACAl6I,EAAA,IAAAA,EAAA2pB,EAAAysG,GACAr2H,EAAAy7I,cAAA,OAAAx7I,EAAA+8B,YAAA,IAAA/8B,EAAA+8B,MAAA/8B,EAAA+8B,MAAA,KACA/8B,EAAA+2H,QAAAsmB,GACAt9I,EAAA+9H,UAAA99H,EACAA,EAAAs9I,oBAAAv9I,EACA3E,KAAA2E,IAAA+9H,WAAAwc,4CAAAz8I,EAAAkC,EAAAw6I,0CAAAnkB,GACAp2H,EAGA,SAAAm+I,GAAAp+I,EAAAC,EAAA2pB,EAAAvuB,GACA2E,EAAAC,EAAA+8B,MACA,oBAAA/8B,EAAAo+I,2BAAAp+I,EAAAo+I,0BAAAz0H,EAAAvuB,GACA,oBAAA4E,EAAAq+I,kCAAAr+I,EAAAq+I,iCAAA10H,EAAAvuB,GACA4E,EAAA+8B,QAAAh9B,GAAAs9I,GAAA3mB,oBAAA12H,IAAA+8B,MAAA,MAGA,SAAAuhH,GAAAv+I,EAAAC,EAAA2pB,EAAAvuB,GACA,IAAAyC,EAAAkC,EAAA+9H,UACAjgI,EAAArC,MAAAmuB,EACA9rB,EAAAk/B,MAAAh9B,EAAAy7I,cACA39I,EAAAi5H,KAAAomB,GACA,IAAA9mB,EAAAp2H,EAAAk+I,YACA,kBAAA9nB,GAAA,OAAAA,EAAAv4H,EAAAyyB,QAAAwnG,GAAA1B,MAAAoB,GAAAx3H,GAAAm6I,GAAA/iB,GAAAG,QAAA15H,EAAAyyB,QAAA8pH,GAAAr6I,EAAAq2H,IAEA,QADAA,EAAAr2H,EAAA07I,eACA8C,GAAAx+I,EAAAq2H,EAAAzsG,EAAA9rB,EAAAzC,GAAAyC,EAAAk/B,MAAAh9B,EAAAy7I,eAEA,oBADAplB,EAAAp2H,EAAAw+I,4BACArB,GAAAp9I,EAAAC,EAAAo2H,EAAAzsG,GAAA9rB,EAAAk/B,MAAAh9B,EAAAy7I,eACA,oBAAAx7I,EAAAw+I,0BAAA,oBAAA3gJ,EAAA4gJ,yBAAA,oBAAA5gJ,EAAA6gJ,2BAAA,oBAAA7gJ,EAAA8gJ,qBAAA3+I,EAAAnC,EAAAk/B,MAAA,oBAAAl/B,EAAA8gJ,oBAAA9gJ,EAAA8gJ,qBAAA,oBAAA9gJ,EAAA6gJ,2BAAA7gJ,EAAA6gJ,4BAAA1+I,IAAAnC,EAAAk/B,OAAAsgH,GAAA3mB,oBAAA74H,IAAAk/B,MAAA,cAAAq5F,EAAAr2H,EAAA07I,eAAA8C,GAAAx+I,EAAAq2H,EAAAzsG,EAAA9rB,EAAAzC,GAAAyC,EAAAk/B,MAAAh9B,EAAAy7I,gBACA,oBAAA39I,EAAA+gJ,oBAAA7+I,EAAAqrI,WAAA,GAGA,IAAAyT,GAAAltI,MAAAI,QAEA,SAAA+sI,GAAA/+I,EAAAC,EAAA2pB,GAGA,WAFA5pB,EAAA4pB,EAAAguG,MAEA,oBAAA53H,GAAA,kBAAAA,EAAA,CACA,GAAA4pB,EAAAsuG,OAAA,CACAtuG,IAAAsuG,OACA,IAAA78H,OAAA,EACAuuB,IAAA,IAAAA,EAAAtK,KAAAnN,EAAA,OAAA9W,EAAAuuB,EAAAm0G,WACA1iI,GAAA8W,EAAA,MAAAnS,GACA,IAAAlC,EAAA,GAAAkC,EACA,cAAAC,GAAA,OAAAA,EAAA23H,KAAA,oBAAA33H,EAAA23H,KAAA33H,EAAA23H,IAAAonB,aAAAlhJ,EAAAmC,EAAA23H,MAEA33H,EAAA,SAAAD,GACA,IAAAC,EAAA5E,EAAA07H,KACA92H,IAAAk9I,KAAAl9I,EAAA5E,EAAA07H,KAAA,IACA,OAAA/2H,SAAAC,EAAAnC,GAAAmC,EAAAnC,GAAAkC,IAGAg/I,WAAAlhJ,EACAmC,GAGA,kBAAAD,GAAAmS,EAAA,OACAyX,EAAAsuG,QAAA/lH,EAAA,MAAAnS,GAGA,OAAAA,EAGA,SAAAi/I,GAAAj/I,EAAAC,GACA,aAAAD,EAAAzJ,MAAA4b,EAAA,yBAAArW,OAAArE,UAAA6G,SAAAjH,KAAA4I,GAAA,qBAAgHnE,OAAAiW,KAAA9R,GAAAkR,KAAA,UAAkClR,EAAA,IAGlJ,SAAAi/I,GAAAl/I,GACA,SAAAC,IAAA2pB,GACA,GAAA5pB,EAAA,CACA,IAAA3E,EAAA4E,EAAA27I,WACA,OAAAvgJ,KAAAygJ,WAAAlyH,EAAA3pB,EAAA27I,WAAAhyH,GAAA3pB,EAAA47I,YAAA57I,EAAA27I,WAAAhyH,EACAA,EAAAkyH,WAAA,KACAlyH,EAAAyhH,UAAA,GAIA,SAAAzhH,IAAAvuB,GACA,IAAA2E,EAAA,YAEA,KAAU,OAAA3E,GACV4E,EAAA2pB,EAAAvuB,OAAAmwI,QAGA,YAGA,SAAAnwI,EAAA2E,EAAAC,GACA,IAAAD,EAAA,IAAAs7B,IAAuB,OAAAr7B,GACvB,OAAAA,EAAAjE,IAAAgE,EAAA8B,IAAA7B,EAAAjE,IAAAiE,GAAAD,EAAA8B,IAAA7B,EAAAtJ,MAAAsJ,OAAAurI,QAGA,OAAAxrI,EAGA,SAAAlC,EAAAkC,EAAAC,EAAA2pB,GAIA,OAHA5pB,EAAAk8I,GAAAl8I,EAAAC,IACAtJ,MAAA,EACAqJ,EAAAwrI,QAAA,KACAxrI,EAGA,SAAAq2H,EAAAp2H,EAAA2pB,EAAAvuB,GAEA,OADA4E,EAAAtJ,MAAA0E,EACA2E,EAEA,QADA3E,EAAA4E,EAAA+qI,YACA3vI,IAAA1E,OAAAizB,GAAA3pB,EAAAorI,UAAA,EAAAzhH,GAAAvuB,GACA4E,EAAAorI,UAAA,EACAzhH,GAJAA,EAOA,SAAAhsB,EAAAqC,GAEA,OADAD,GAAA,OAAAC,EAAA+qI,YAAA/qI,EAAAorI,UAAA,GACAprI,EAGA,SAAA0iD,EAAA3iD,EAAAC,EAAA2pB,EAAAvuB,GACA,cAAA4E,GAAA,IAAAA,EAAAqf,MAAArf,EAAAq8I,GAAA1yH,EAAA5pB,EAAAkyC,KAAA72C,IAAAojI,OAAAz+H,EAAAC,KACAA,EAAAnC,EAAAmC,EAAA2pB,IACA60G,OAAAz+H,EACAC,GAGA,SAAAiT,EAAAlT,EAAAC,EAAA2pB,EAAAvuB,GACA,cAAA4E,KAAAq7I,cAAA1xH,EAAArzB,OAAA8E,EAAAyC,EAAAmC,EAAA2pB,EAAAnuB,QAAAm8H,IAAAmnB,GAAA/+I,EAAAC,EAAA2pB,GAAAvuB,EAAAojI,OAAAz+H,EAAA3E,KACAA,EAAA8gJ,GAAAvyH,EAAArzB,KAAAqzB,EAAA5tB,IAAA4tB,EAAAnuB,MAAA,KAAAuE,EAAAkyC,KAAA72C,IACAu8H,IAAAmnB,GAAA/+I,EAAAC,EAAA2pB,GACAvuB,EAAAojI,OAAAz+H,EACA3E,GAGA,SAAA4X,EAAAjT,EAAAC,EAAA2pB,EAAAvuB,GACA,cAAA4E,GAAA,IAAAA,EAAAqf,KAAArf,EAAA89H,UAAA0S,gBAAA7mH,EAAA6mH,eAAAxwI,EAAA89H,UAAA5/H,iBAAAyrB,EAAAzrB,iBAAA8B,EAAAs8I,GAAA3yH,EAAA5pB,EAAAkyC,KAAA72C,IAAAojI,OAAAz+H,EAAAC,KACAA,EAAAnC,EAAAmC,EAAA2pB,EAAA0V,UAAA,KACAm/F,OAAAz+H,EACAC,GAGA,SAAAy4B,EAAA14B,EAAAC,EAAA2pB,EAAAvuB,EAAAg7H,GACA,cAAAp2H,GAAA,IAAAA,EAAAqf,MAAArf,EAAAm8I,GAAAxyH,EAAA5pB,EAAAkyC,KAAA72C,EAAAg7H,IAAAoI,OAAAz+H,EAAAC,KACAA,EAAAnC,EAAAmC,EAAA2pB,IACA60G,OAAAz+H,EACAC,GAGA,SAAA9C,EAAA6C,EAAAC,EAAA2pB,GACA,qBAAA3pB,GAAA,kBAAAA,EAAA,OAAAA,EAAAq8I,GAAA,GAAAr8I,EAAAD,EAAAkyC,KAAAtoB,IAAA60G,OAAAz+H,EAAAC,EAEA,qBAAAA,GAAA,OAAAA,EAAA,CACA,OAAAA,EAAAg4H,UACA,KAAA8M,GACA,OAAAn7G,EAAAuyH,GAAAl8I,EAAA1J,KAAA0J,EAAAjE,IAAAiE,EAAAxE,MAAA,KAAAuE,EAAAkyC,KAAAtoB,IAAAguG,IAAAmnB,GAAA/+I,EAAA,KAAAC,GAAA2pB,EAAA60G,OAAAz+H,EAAA4pB,EAEA,KAAAo7G,GACA,OAAA/kI,EAAAs8I,GAAAt8I,EAAAD,EAAAkyC,KAAAtoB,IAAA60G,OAAAz+H,EAAAC,EAGA,GAAA6+I,GAAA7+I,IAAA0lI,GAAA1lI,GAAA,OAAAA,EAAAm8I,GAAAn8I,EAAAD,EAAAkyC,KAAAtoB,EAAA,OAAA60G,OAAAz+H,EAAAC,EACAg/I,GAAAj/I,EAAAC,GAGA,YAGA,SAAAkZ,EAAAnZ,EAAAC,EAAA2pB,EAAAvuB,GACA,IAAAyC,EAAA,OAAAmC,IAAAjE,IAAA,KACA,qBAAA4tB,GAAA,kBAAAA,EAAA,cAAA9rB,EAAA,KAAA6kD,EAAA3iD,EAAAC,EAAA,GAAA2pB,EAAAvuB,GAEA,qBAAAuuB,GAAA,OAAAA,EAAA,CACA,OAAAA,EAAAquG,UACA,KAAA8M,GACA,OAAAn7G,EAAA5tB,MAAA8B,EAAA8rB,EAAArzB,OAAA0uI,GAAAvsG,EAAA14B,EAAAC,EAAA2pB,EAAAnuB,MAAA6jC,SAAAjkC,EAAAyC,GAAAoV,EAAAlT,EAAAC,EAAA2pB,EAAAvuB,GAAA,KAEA,KAAA2pI,GACA,OAAAp7G,EAAA5tB,MAAA8B,EAAAmV,EAAAjT,EAAAC,EAAA2pB,EAAAvuB,GAAA,KAGA,GAAAyjJ,GAAAl1H,IAAA+7G,GAAA/7G,GAAA,cAAA9rB,EAAA,KAAA46B,EAAA14B,EAAAC,EAAA2pB,EAAAvuB,EAAA,MACA4jJ,GAAAj/I,EAAA4pB,GAGA,YAGA,SAAAusG,EAAAn2H,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACA,qBAAAzC,GAAA,kBAAAA,EAAA,OAAAsnD,EAAA1iD,EAAAD,IAAAusB,IAAA3C,IAAA,QAAAvuB,EAAAyC,GAEA,qBAAAzC,GAAA,OAAAA,EAAA,CACA,OAAAA,EAAA48H,UACA,KAAA8M,GACA,OAAA/kI,IAAAusB,IAAA,OAAAlxB,EAAAW,IAAA4tB,EAAAvuB,EAAAW,MAAA,KAAAX,EAAA9E,OAAA0uI,GAAAvsG,EAAAz4B,EAAAD,EAAA3E,EAAAI,MAAA6jC,SAAAxhC,EAAAzC,EAAAW,KAAAkX,EAAAjT,EAAAD,EAAA3E,EAAAyC,GAEA,KAAAknI,GACA,OAAA/xH,EAAAhT,EAAAD,IAAAusB,IAAA,OAAAlxB,EAAAW,IAAA4tB,EAAAvuB,EAAAW,MAAA,KAAAX,EAAAyC,GAGA,GAAAghJ,GAAAzjJ,IAAAsqI,GAAAtqI,GAAA,OAAAq9B,EAAAz4B,EAAAD,IAAAusB,IAAA3C,IAAA,KAAAvuB,EAAAyC,EAAA,MACAmhJ,GAAAh/I,EAAA5E,GAGA,YAGA,SAAAs2D,EAAA7zD,EAAAF,EAAA+kD,EAAA1vC,GACA,QAAAC,EAAA,KAAAwlB,EAAA,KAAAo9F,EAAAl4H,EAAAm4H,EAAAn4H,EAAA,EAAAw4H,EAAA,KAA4D,OAAAN,GAAAC,EAAApzE,EAAAzrD,OAA4B6+H,IAAA,CACxFD,EAAAn/H,MAAAo/H,GAAAK,EAAAN,IAAA,MAAAM,EAAAN,EAAA0V,QACA,IAAAxV,EAAA78G,EAAArb,EAAAg4H,EAAAnzE,EAAAozE,GAAA9iH,GAEA,UAAA+iH,EAAA,CACA,OAAAF,MAAAM,GACA,MAGAp2H,GAAA81H,GAAA,OAAAE,EAAAgV,WAAA/qI,EAAAnC,EAAAg4H,GACAl4H,EAAAy4H,EAAAL,EAAAp4H,EAAAm4H,GACA,OAAAr9F,EAAAxlB,EAAA8iH,EAAAt9F,EAAA8yG,QAAAxV,EACAt9F,EAAAs9F,EACAF,EAAAM,EAGA,GAAAL,IAAApzE,EAAAzrD,OAAA,OAAA0yB,EAAA9rB,EAAAg4H,GAAA5iH,EAEA,UAAA4iH,EAAA,CACA,KAAYC,EAAApzE,EAAAzrD,OAAc6+H,KAC1BD,EAAA34H,EAAAW,EAAA6kD,EAAAozE,GAAA9iH,MAAArV,EAAAy4H,EAAAP,EAAAl4H,EAAAm4H,GAAA,OAAAr9F,EAAAxlB,EAAA4iH,EAAAp9F,EAAA8yG,QAAA1V,EAAAp9F,EAAAo9F,GAGA,OAAA5iH,EAGA,IAAA4iH,EAAAz6H,EAAAyC,EAAAg4H,GAAqBC,EAAApzE,EAAAzrD,OAAc6+H,KACnCK,EAAAD,EAAAL,EAAAh4H,EAAAi4H,EAAApzE,EAAAozE,GAAA9iH,MAAAjT,GAAA,OAAAo2H,EAAA4U,WAAAlV,EAAAt6F,OAAA,OAAA46F,EAAAp6H,IAAA+5H,EAAAK,EAAAp6H,KAAA4B,EAAAy4H,EAAAD,EAAAx4H,EAAAm4H,GAAA,OAAAr9F,EAAAxlB,EAAAkjH,EAAA19F,EAAA8yG,QAAApV,EAAA19F,EAAA09F,GAMA,OAHAp2H,GAAA81H,EAAAz7H,QAAA,SAAA2F,GACA,OAAAC,EAAAnC,EAAAkC,KAEAkT,EAGA,SAAAslH,EAAA16H,EAAAF,EAAA+kD,EAAA1vC,GACA,IAAAC,EAAAyyH,GAAAhjF,GACA,oBAAAzvC,GAAAf,EAAA,OAEA,OADAwwC,EAAAzvC,EAAA7b,KAAAsrD,KACAxwC,EAAA,OAEA,QAAAumB,EAAAxlB,EAAA,KAAA4iH,EAAAl4H,EAAAm4H,EAAAn4H,EAAA,EAAAw4H,EAAA,KAAAJ,EAAArzE,EAAAzI,OAAoE,OAAA47E,IAAAE,EAAA/pG,KAAuB8pG,IAAAC,EAAArzE,EAAAzI,OAAA,CAC3F47E,EAAAn/H,MAAAo/H,GAAAK,EAAAN,IAAA,MAAAM,EAAAN,EAAA0V,QACA,IAAA75E,EAAAx4C,EAAArb,EAAAg4H,EAAAE,EAAAx4H,MAAAyV,GAEA,UAAA0+C,EAAA,CACAmkE,MAAAM,GACA,MAGAp2H,GAAA81H,GAAA,OAAAnkE,EAAAq5E,WAAA/qI,EAAAnC,EAAAg4H,GACAl4H,EAAAy4H,EAAA1kE,EAAA/zD,EAAAm4H,GACA,OAAAr9F,EAAAxlB,EAAAy+C,EAAAj5B,EAAA8yG,QAAA75E,EACAj5B,EAAAi5B,EACAmkE,EAAAM,EAGA,GAAAJ,EAAA/pG,KAAA,OAAArC,EAAA9rB,EAAAg4H,GAAA5iH,EAEA,UAAA4iH,EAAA,CACA,MAAYE,EAAA/pG,KAAS8pG,IAAAC,EAAArzE,EAAAzI,OACrB,QAAA87E,EAAA74H,EAAAW,EAAAk4H,EAAAx4H,MAAAyV,MAAArV,EAAAy4H,EAAAL,EAAAp4H,EAAAm4H,GAAA,OAAAr9F,EAAAxlB,EAAA8iH,EAAAt9F,EAAA8yG,QAAAxV,EAAAt9F,EAAAs9F,GAGA,OAAA9iH,EAGA,IAAA4iH,EAAAz6H,EAAAyC,EAAAg4H,IAAqBE,EAAA/pG,KAAS8pG,IAAAC,EAAArzE,EAAAzI,OAC9B,QAAA87E,EAAAG,EAAAL,EAAAh4H,EAAAi4H,EAAAC,EAAAx4H,MAAAyV,MAAAjT,GAAA,OAAAg2H,EAAAgV,WAAAlV,EAAAt6F,OAAA,OAAAw6F,EAAAh6H,IAAA+5H,EAAAC,EAAAh6H,KAAA4B,EAAAy4H,EAAAL,EAAAp4H,EAAAm4H,GAAA,OAAAr9F,EAAAxlB,EAAA8iH,EAAAt9F,EAAA8yG,QAAAxV,EAAAt9F,EAAAs9F,GAMA,OAHAh2H,GAAA81H,EAAAz7H,QAAA,SAAA2F,GACA,OAAAC,EAAAnC,EAAAkC,KAEAkT,EAGA,gBAAAlT,EAAA3E,EAAAg7H,EAAA1zE,GACA,IAAA1vC,EAAA,kBAAAojH,GAAA,OAAAA,KAAA9/H,OAAA0uI,IAAA,OAAA5O,EAAAr6H,IACAiX,IAAAojH,IAAA56H,MAAA6jC,UACA,IAAApsB,EAAA,kBAAAmjH,GAAA,OAAAA,EACA,GAAAnjH,EAAA,OAAAmjH,EAAA4B,UACA,KAAA8M,GACA/kI,EAAA,CAGA,IAFAkT,EAAAmjH,EAAAr6H,IAEAiX,EAAA5X,EAAqB,OAAA4X,GAAY,CACjC,GAAAA,EAAAjX,MAAAkX,EAAA,CACA,OAAAD,EAAAqM,IAAA+2G,EAAA9/H,OAAA0uI,GAAAhyH,EAAAqoI,cAAAjlB,EAAA9/H,KAAA,CACAqzB,EAAA5pB,EAAAiT,EAAAu4H,UACAnwI,EAAAyC,EAAAmV,EAAAojH,EAAA9/H,OAAA0uI,GAAA5O,EAAA56H,MAAA6jC,SAAA+2F,EAAA56H,QACAm8H,IAAAmnB,GAAA/+I,EAAAiT,EAAAojH,GACAh7H,EAAAojI,OAAAz+H,EACAA,EAAA3E,EACA,MAAA2E,EAEA4pB,EAAA5pB,EAAAiT,GACA,MAEahT,EAAAD,EAAAiT,GACbA,IAAAu4H,QAGAnV,EAAA9/H,OAAA0uI,KAAA5pI,EAAA+gJ,GAAA/lB,EAAA56H,MAAA6jC,SAAAt/B,EAAAkyC,KAAAyQ,EAAA0zE,EAAAr6H,MAAAyiI,OAAAz+H,IAAA3E,KAAAsnD,EAAAw5F,GAAA9lB,EAAA9/H,KAAA8/H,EAAAr6H,IAAAq6H,EAAA56H,MAAA,KAAAuE,EAAAkyC,KAAAyQ,IAAAi1E,IAAAmnB,GAAA/+I,EAAA3E,EAAAg7H,GAAA1zE,EAAA87E,OAAAz+H,IAAA2iD,GAGA,OAAA/kD,EAAAoC,GAEA,KAAAglI,GACAhlI,EAAA,CACA,IAAAiT,EAAAojH,EAAAr6H,IAAyB,OAAAX,GAAY,CACrC,GAAAA,EAAAW,MAAAiX,EAAA,CACA,OAAA5X,EAAAikB,KAAAjkB,EAAA0iI,UAAA0S,gBAAApa,EAAAoa,eAAAp1I,EAAA0iI,UAAA5/H,iBAAAk4H,EAAAl4H,eAAA,CACAyrB,EAAA5pB,EAAA3E,EAAAmwI,UACAnwI,EAAAyC,EAAAzC,EAAAg7H,EAAA/2F,UAAA,KACAm/F,OAAAz+H,EACAA,EAAA3E,EACA,MAAA2E,EAEA4pB,EAAA5pB,EAAA3E,GACA,MAEa4E,EAAAD,EAAA3E,GACbA,IAAAmwI,SAGAnwI,EAAAkhJ,GAAAlmB,EAAAr2H,EAAAkyC,KAAAyQ,IACA87E,OAAAz+H,EACAA,EAAA3E,EAGA,OAAAuC,EAAAoC,GAEA,qBAAAq2H,GAAA,kBAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAh7H,GAAA,IAAAA,EAAAikB,KAAAsK,EAAA5pB,EAAA3E,EAAAmwI,UAAAnwI,EAAAyC,EAAAzC,EAAAg7H,IAAAoI,OAAAz+H,IAAA3E,IAAAuuB,EAAA5pB,EAAA3E,MAAAihJ,GAAAjmB,EAAAr2H,EAAAkyC,KAAAyQ,IAAA87E,OAAAz+H,IAAA3E,GAAAuC,EAAAoC,GACA,GAAA8+I,GAAAzoB,GAAA,OAAA1kE,EAAA3xD,EAAA3E,EAAAg7H,EAAA1zE,GACA,GAAAgjF,GAAAtP,GAAA,OAAAmC,EAAAx4H,EAAA3E,EAAAg7H,EAAA1zE,GAEA,GADAzvC,GAAA+rI,GAAAj/I,EAAAq2H,GACA,qBAAAA,IAAApjH,EAAA,OAAAjT,EAAAsf,KACA,OACA,OACAnN,EAAA,OAAAwwC,EAAA3iD,EAAAzJ,MAAAsvI,aAAAljF,EAAA/vC,MAAA,aAEA,OAAAgX,EAAA5pB,EAAA3E,IAIA,IAAA8jJ,GAAAD,IAAA,GACAE,GAAAF,IAAA,GACAG,GAAA,GACAlnB,GAAA,CACAX,QAAA6nB,IAEAC,GAAA,CACA9nB,QAAA6nB,IAEAE,GAAA,CACA/nB,QAAA6nB,IAGA,SAAAG,GAAAx/I,GAEA,OADAA,IAAAq/I,IAAAltI,EAAA,OACAnS,EAGA,SAAAy/I,GAAAz/I,EAAAC,GACAi3H,GAAAqoB,GAAAt/I,GACAi3H,GAAAooB,GAAAt/I,GACAk3H,GAAAiB,GAAAknB,IACA,IAAAz1H,EAAA3pB,EAAAiwB,SAEA,OAAAtG,GACA,OACA,QACA3pB,OAAAiM,iBAAAjM,EAAA20I,aAAAH,GAAA,SACA,MAEA,QACAx0I,EAAAw0I,GAAAx0I,GAAA2pB,EAAA,IAAAA,EAAA3pB,EAAAszB,WAAAtzB,GAAA20I,cAAA,KAAAhrH,IAAA1M,SAGA+5G,GAAAkB,IACAjB,GAAAiB,GAAAl4H,GAGA,SAAAy/I,GAAA1/I,GACAi3H,GAAAkB,IACAlB,GAAAqoB,IACAroB,GAAAsoB,IAGA,SAAAI,GAAA3/I,GACAw/I,GAAAD,GAAA/nB,SACA,IAAAv3H,EAAAu/I,GAAArnB,GAAAX,SACA5tG,EAAA6qH,GAAAx0I,EAAAD,EAAAzJ,MACA0J,IAAA2pB,IAAAstG,GAAAooB,GAAAt/I,GAAAk3H,GAAAiB,GAAAvuG,IAGA,SAAAg2H,GAAA5/I,GACAs/I,GAAA9nB,UAAAx3H,IAAAi3H,GAAAkB,IAAAlB,GAAAqoB,KAGA,IAAAO,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,IACAC,GAAAxb,GAAAlJ,uBACA2kB,GAAA,EACAC,GAAA,KACAnoB,GAAA,KACAC,GAAA,KACAmoB,GAAA,KACAloB,GAAA,KACAmoB,GAAA,KACAC,GAAA,EACAC,GAAA,KACAC,GAAA,EACAC,IAAA,EACAC,GAAA,KACAC,GAAA,EAEA,SAAAC,KACA7uI,EAAA,OAGA,SAAA8uI,GAAAjhJ,EAAAC,GACA,UAAAA,EAAA,SAEA,QAAA2pB,EAAA,EAAiBA,EAAA3pB,EAAA/I,QAAA0yB,EAAA5pB,EAAA9I,OAA8B0yB,IAC/C,IAAAqhH,GAAAjrI,EAAA4pB,GAAA3pB,EAAA2pB,IAAA,SAGA,SAGA,SAAAs3H,GAAAlhJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,GAOA,GANAiqB,GAAAjqB,EACAkqB,GAAAtgJ,EACAo4H,GAAA,OAAAr4H,IAAAy7I,cAAA,KACA4E,GAAA7oB,QAAA,OAAAa,GAAA8oB,GAAAC,GACAnhJ,EAAA2pB,EAAAvuB,EAAAyC,GAEA+iJ,GAAA,CACA,GACAA,IAAA,EAAAE,IAAA,EAAA1oB,GAAA,OAAAr4H,IAAAy7I,cAAA,KAAAgF,GAAAD,GAAAG,GAAAroB,GAAAF,GAAA,KAAAioB,GAAA7oB,QAAA4pB,GAAAnhJ,EAAA2pB,EAAAvuB,EAAAyC,SACK+iJ,IAELC,GAAA,KACAC,GAAA,EAgBA,OAbAV,GAAA7oB,QAAA6pB,IACArhJ,EAAAugJ,IACA9E,cAAA+E,GACAxgJ,EAAAg8I,eAAA0E,GACA1gJ,EAAA07I,YAAAiF,GACA3gJ,EAAAqrI,WAAAuV,GACA5gJ,EAAA,OAAAo4H,IAAA,OAAAA,GAAAl+E,KACAomG,GAAA,EACAG,GAAAnoB,GAAAkoB,GAAAnoB,GAAAD,GAAAmoB,GAAA,KACAG,GAAA,EACAC,GAAA,KACAC,GAAA,EACA5gJ,GAAAmS,EAAA,OACAlS,EAGA,SAAAqhJ,KACAjB,GAAA7oB,QAAA6pB,GACAf,GAAA,EACAG,GAAAnoB,GAAAkoB,GAAAnoB,GAAAD,GAAAmoB,GAAA,KACAG,GAAA,EACAC,GAAA,KACAC,GAAA,EACAC,IAAA,EACAC,GAAA,KACAC,GAAA,EAGA,SAAAQ,KACA,IAAAvhJ,EAAA,CACAy7I,cAAA,KACA4B,UAAA,KACAmE,MAAA,KACAC,WAAA,KACAvnG,KAAA,MAGA,OADA,OAAAo+E,GAAAkoB,GAAAloB,GAAAt4H,EAAAs4H,MAAAp+E,KAAAl6C,EACAs4H,GAGA,SAAAopB,KACA,UAAAjB,OAAAnoB,GAAAmoB,IAAAvmG,KAAAm+E,GAAA,QAAAD,GAAAC,IAAAD,GAAAl+E,KAAA,SAA8E,CAC9E,OAAAm+E,IAAAlmH,EAAA,OAEA,IAAAnS,EAAA,CACAy7I,eAFArjB,GAAAC,IAEAojB,cACA4B,UAAAjlB,GAAAilB,UACAmE,MAAAppB,GAAAopB,MACAC,WAAArpB,GAAAqpB,WACAvnG,KAAA,MAEAo+E,GAAA,OAAAA,GAAAkoB,GAAAxgJ,EAAAs4H,GAAAp+E,KAAAl6C,EACAq4H,GAAAD,GAAAl+E,KAEA,OAAAo+E,GAGA,SAAAqpB,GAAA3hJ,EAAAC,GACA,0BAAAA,IAAAD,GAAAC,EAGA,SAAA2hJ,GAAA5hJ,GACA,IAAAC,EAAAyhJ,KACA93H,EAAA3pB,EAAAuhJ,MAGA,GAFA,OAAA53H,GAAAzX,EAAA,OAEA,EAAA4uI,GAAA,CACA,IAAA1lJ,EAAAuuB,EAAAi4H,SAEA,UAAAf,GAAA,CACA,IAAAhjJ,EAAAgjJ,GAAAv0H,IAAA3C,GAEA,YAAA9rB,EAAA,CACAgjJ,GAAAtlH,OAAA5R,GACA,IAAAysG,EAAAp2H,EAAAw7I,cAEA,GACAplB,EAAAr2H,EAAAq2H,EAAAv4H,EAAA+iG,QAAA/iG,IAAAo8C,WACS,OAAAp8C,GAKT,OAHAmtI,GAAA5U,EAAAp2H,EAAAw7I,iBAAAqG,IAAA,GACA7hJ,EAAAw7I,cAAAplB,EACAp2H,EAAAwhJ,aAAA73H,EAAA+Q,OAAA16B,EAAAo9I,UAAAhnB,GACA,CAAAA,EAAAh7H,IAIA,OAAA4E,EAAAw7I,cAAApgJ,GAGAA,EAAAuuB,EAAA+Q,KACA,IAAA/8B,EAAAqC,EAAAwhJ,WAIA,GAHAprB,EAAAp2H,EAAAo9I,UACA,OAAAz/I,GAAA,OAAAvC,MAAA6+C,KAAA,MAAA7+C,EAAAuC,EAAAs8C,MAAA7+C,EAAA,OAAAA,IAAA6+C,KAAA,KAEA,OAAA7+C,EAAA,CACA,IAAAsnD,EAAA7kD,EAAA,KACAoV,EAAA7X,EACA4X,GAAA,EAEA,GACA,IAAAylB,EAAAxlB,EAAA8oI,eACAtjH,EAAA4nH,IAAArtI,OAAA,EAAA0vC,EAAA/kD,EAAAE,EAAAu4H,GAAA39F,EAAAgoH,QAAAhoH,IAAA29F,EAAAnjH,EAAA6uI,eAAA/hJ,EAAAkT,EAAA8uI,WAAAhiJ,EAAAq2H,EAAAnjH,EAAA2tF,QACAjjG,EAAAsV,EACAA,IAAAgnC,WACK,OAAAhnC,OAAA7X,GAEL4X,IAAA0vC,EAAA/kD,EAAAE,EAAAu4H,GACA4U,GAAA5U,EAAAp2H,EAAAw7I,iBAAAqG,IAAA,GACA7hJ,EAAAw7I,cAAAplB,EACAp2H,EAAAwhJ,WAAA9+F,EACA1iD,EAAAo9I,UAAAv/I,EACA8rB,EAAAm4H,aAAA/hJ,EACA4pB,EAAAo4H,WAAA3rB,EAGA,OAAAp2H,EAAAw7I,cAAA7xH,EAAAi4H,UAGA,SAAAI,GAAAjiJ,EAAAC,EAAA2pB,EAAAvuB,GAWA,OAVA2E,EAAA,CACAsf,IAAAtf,EACAzC,OAAA0C,EACAiiJ,QAAAt4H,EACAu4H,KAAA9mJ,EACA6+C,KAAA,MAEA,OAAAymG,OAAA,CACA/E,WAAA,OACGA,WAAA57I,EAAAk6C,KAAAl6C,EAAA,QAAAC,EAAA0gJ,GAAA/E,YAAA+E,GAAA/E,WAAA57I,EAAAk6C,KAAAl6C,GAAA4pB,EAAA3pB,EAAAi6C,KAAAj6C,EAAAi6C,KAAAl6C,IAAAk6C,KAAAtwB,EAAA+2H,GAAA/E,WAAA57I,GACHA,EAGA,SAAAoiJ,GAAApiJ,EAAAC,EAAA2pB,EAAAvuB,GACA,IAAAyC,EAAAyjJ,KACAX,IAAA5gJ,EACAlC,EAAA29I,cAAAwG,GAAAhiJ,EAAA2pB,OAAA,WAAAvuB,EAAA,KAAAA,GAGA,SAAAgnJ,GAAAriJ,EAAAC,EAAA2pB,EAAAvuB,GACA,IAAAyC,EAAA4jJ,KACArmJ,OAAA,IAAAA,EAAA,KAAAA,EACA,IAAAg7H,OAAA,EAEA,UAAA+B,GAAA,CACA,IAAAx6H,EAAAw6H,GAAAqjB,cAGA,GAFAplB,EAAAz4H,EAAAskJ,QAEA,OAAA7mJ,GAAA4lJ,GAAA5lJ,EAAAuC,EAAAukJ,MAEA,YADAF,GAAApC,GAAAj2H,EAAAysG,EAAAh7H,GAKAulJ,IAAA5gJ,EACAlC,EAAA29I,cAAAwG,GAAAhiJ,EAAA2pB,EAAAysG,EAAAh7H,GAGA,SAAAinJ,GAAAtiJ,EAAAC,GACA,0BAAAA,GAAAD,MAAAC,EAAAD,GAAA,WACAC,EAAA,QAEA,OAAAA,QAAA,IAAAA,GAAAD,MAAAC,EAAAu3H,QAAAx3H,EAAA,WACAC,EAAAu3H,QAAA,YADA,EAKA,SAAA+qB,MAEA,SAAAC,GAAAxiJ,EAAAC,EAAA2pB,GACA,GAAAm3H,IAAA5uI,EAAA,OACA,IAAA9W,EAAA2E,EAAAgrI,UACA,GAAAhrI,IAAAugJ,IAAA,OAAAllJ,OAAAklJ,GACA,GAAAM,IAAA,EAAA7gJ,EAAA,CACAg8I,eAAAsE,GACAz/C,OAAAj3E,EACAm4H,aAAA,KACAC,WAAA,KACA9nG,KAAA,MACK,OAAA4mG,QAAA,IAAAxlH,UAAA,KAAA1R,EAAAk3H,GAAAv0H,IAAAtsB,IAAA6gJ,GAAAh/I,IAAA7B,EAAAD,OAA6E,CAClF,IAAAC,EAAA2pB,EAAiB,OAAA3pB,EAAAi6C,MACjBj6C,IAAAi6C,KAGAj6C,EAAAi6C,KAAAl6C,MAEG,CACH29I,KACA,IAAA7/I,EAAA0/I,KAEAnnB,EAAA,CACA2lB,eAFAl+I,EAAA4/I,GAAA5/I,EAAAkC,GAGA6gG,OAAAj3E,EACAm4H,aAAA,KACAC,WAAA,KACA9nG,KAAA,MAEAt8C,EAAAqC,EAAA06B,KACA,UAAA/8B,EAAAy4H,EAAAn8E,KAAAm8E,MAA+B,CAC/B,IAAA1zE,EAAA/kD,EAAAs8C,KACA,OAAAyI,IAAA0zE,EAAAn8E,KAAAyI,GACA/kD,EAAAs8C,KAAAm8E,EAGA,GADAp2H,EAAA06B,KAAA07F,EACA,IAAAr2H,EAAAg8I,iBAAA,OAAA3gJ,GAAA,IAAAA,EAAA2gJ,iBAAA,QAAA3gJ,EAAA4E,EAAA8hJ,cAAA,IACA,IAAA7uI,EAAAjT,EAAA+hJ,WACA/uI,EAAA5X,EAAA6X,EAAA0W,GAGA,GAFAysG,EAAA0rB,aAAA1mJ,EACAg7H,EAAA2rB,WAAA/uI,EACAg4H,GAAAh4H,EAAAC,GAAA,OACK,MAAAwlB,IACLmlH,GAAA79I,EAAAlC,IAIA,IAAAujJ,GAAA,CACAoB,YAAA1qB,GACAyC,YAAAwmB,GACAvmB,WAAAumB,GACAtmB,UAAAsmB,GACArmB,oBAAAqmB,GACAnmB,gBAAAmmB,GACAlmB,QAAAkmB,GACAjmB,WAAAimB,GACAhmB,OAAAgmB,GACA/lB,SAAA+lB,GACApmB,cAAAomB,IAEAG,GAAA,CACAsB,YAAA1qB,GACAyC,YAAA,SAAAx6H,EAAAC,GAEA,OADAshJ,KAAA9F,cAAA,CAAAz7I,OAAA,IAAAC,EAAA,KAAAA,GACAD,GAEAy6H,WAAA1C,GACA2C,UAAA,SAAA16H,EAAAC,GACA,OAAAmiJ,GAAA,IAAAhC,GAAAD,GAAAngJ,EAAAC,IAEA06H,oBAAA,SAAA36H,EAAAC,EAAA2pB,GAEA,OADAA,EAAA,OAAAA,QAAA,IAAAA,IAAAnzB,OAAA,CAAAuJ,IAAA,KACAoiJ,GAAA,EAAArC,GAAAG,GAAAoC,GAAAlkJ,KAAA,KAAA6B,EAAAD,GAAA4pB,IAEAixG,gBAAA,SAAA76H,EAAAC,GACA,OAAAmiJ,GAAA,EAAArC,GAAAG,GAAAlgJ,EAAAC,IAEA66H,QAAA,SAAA96H,EAAAC,GACA,IAAA2pB,EAAA23H,KAIA,OAHAthJ,OAAA,IAAAA,EAAA,KAAAA,EACAD,MACA4pB,EAAA6xH,cAAA,CAAAz7I,EAAAC,GACAD,GAEA+6H,WAAA,SAAA/6H,EAAAC,EAAA2pB,GACA,IAAAvuB,EAAAkmJ,KAUA,OATAthJ,OAAA,IAAA2pB,IAAA3pB,KACA5E,EAAAogJ,cAAApgJ,EAAAgiJ,UAAAp9I,EAOAD,GANAA,EAAA3E,EAAAmmJ,MAAA,CACA7mH,KAAA,KACAknH,SAAA,KACAE,aAAA/hJ,EACAgiJ,WAAA/hJ,IAEA4hJ,SAAAW,GAAApkJ,KAAA,KAAAmiJ,GAAAvgJ,GACA,CAAA3E,EAAAogJ,cAAAz7I,IAEAg7H,OAAA,SAAAh7H,GAKA,OAHAA,EAAA,CACAw3H,QAAAx3H,GAFAuhJ,KAIA9F,cAAAz7I,GAEAi7H,SAAA,SAAAj7H,GACA,IAAAC,EAAAshJ,KAUA,MATA,oBAAAvhJ,WACAC,EAAAw7I,cAAAx7I,EAAAo9I,UAAAr9I,EAOAA,GANAA,EAAAC,EAAAuhJ,MAAA,CACA7mH,KAAA,KACAknH,SAAA,KACAE,aAAAJ,GACAK,WAAAhiJ,IAEA6hJ,SAAAW,GAAApkJ,KAAA,KAAAmiJ,GAAAvgJ,GACA,CAAAC,EAAAw7I,cAAAz7I,IAEA46H,cAAA2nB,IAEAnB,GAAA,CACAqB,YAAA1qB,GACAyC,YAAA,SAAAx6H,EAAAC,GACA,IAAA2pB,EAAA83H,KACAzhJ,OAAA,IAAAA,EAAA,KAAAA,EACA,IAAA5E,EAAAuuB,EAAA6xH,cACA,cAAApgJ,GAAA,OAAA4E,GAAAghJ,GAAAhhJ,EAAA5E,EAAA,IAAAA,EAAA,IACAuuB,EAAA6xH,cAAA,CAAAz7I,EAAAC,GACAD,IAEAy6H,WAAA1C,GACA2C,UAAA,SAAA16H,EAAAC,GACA,OAAAoiJ,GAAA,IAAAjC,GAAAD,GAAAngJ,EAAAC,IAEA06H,oBAAA,SAAA36H,EAAAC,EAAA2pB,GAEA,OADAA,EAAA,OAAAA,QAAA,IAAAA,IAAAnzB,OAAA,CAAAuJ,IAAA,KACAqiJ,GAAA,EAAAtC,GAAAG,GAAAoC,GAAAlkJ,KAAA,KAAA6B,EAAAD,GAAA4pB,IAEAixG,gBAAA,SAAA76H,EAAAC,GACA,OAAAoiJ,GAAA,EAAAtC,GAAAG,GAAAlgJ,EAAAC,IAEA66H,QAAA,SAAA96H,EAAAC,GACA,IAAA2pB,EAAA83H,KACAzhJ,OAAA,IAAAA,EAAA,KAAAA,EACA,IAAA5E,EAAAuuB,EAAA6xH,cACA,cAAApgJ,GAAA,OAAA4E,GAAAghJ,GAAAhhJ,EAAA5E,EAAA,IAAAA,EAAA,IACA2E,MACA4pB,EAAA6xH,cAAA,CAAAz7I,EAAAC,GACAD,IAEA+6H,WAAA6mB,GACA5mB,OAAA,WACA,OAAA0mB,KAAAjG,eAEAxgB,SAAA,SAAAj7H,GACA,OAAA4hJ,GAAAD,KAEA/mB,cAAA2nB,IAEAG,GAAA,KACAC,GAAA,KACAC,IAAA,EAEA,SAAAC,GAAA7iJ,EAAAC,GACA,IAAA2pB,EAAA8tG,GAAA,eACA9tG,EAAA0xH,YAAA,UACA1xH,EAAArzB,KAAA,UACAqzB,EAAAm0G,UAAA99H,EACA2pB,EAAA60G,OAAAz+H,EACA4pB,EAAAyhH,UAAA,EACA,OAAArrI,EAAA47I,YAAA57I,EAAA47I,WAAAE,WAAAlyH,EAAA5pB,EAAA47I,WAAAhyH,GAAA5pB,EAAA67I,YAAA77I,EAAA47I,WAAAhyH,EAGA,SAAAk5H,GAAA9iJ,EAAAC,GACA,OAAAD,EAAAsf,KACA,OACA,IAAAsK,EAAA5pB,EAAAzJ,KAEA,eADA0J,EAAA,IAAAA,EAAAiwB,UAAAtG,EAAAtF,gBAAArkB,EAAAkM,SAAAmY,cAAA,KAAArkB,KACAD,EAAA+9H,UAAA99H,GAAA,GAEA,OACA,eAAAA,EAAA,KAAAD,EAAAu7I,cAAA,IAAAt7I,EAAAiwB,SAAA,KAAAjwB,KAAAD,EAAA+9H,UAAA99H,GAAA,GAEA,QAGA,QACA,UAIA,SAAA8iJ,GAAA/iJ,GACA,GAAA4iJ,GAAA,CACA,IAAA3iJ,EAAA0iJ,GAEA,GAAA1iJ,EAAA,CACA,IAAA2pB,EAAA3pB,EAEA,IAAA6iJ,GAAA9iJ,EAAAC,GAAA,CAGA,KAFAA,EAAA85I,GAAAnwH,MAEAk5H,GAAA9iJ,EAAAC,GAIA,OAHAD,EAAAqrI,WAAA,EACAuX,IAAA,OACAF,GAAA1iJ,GAIA6iJ,GAAAH,GAAA94H,GAGA84H,GAAA1iJ,EACA2iJ,GAAA3I,GAAA/5I,QACKD,EAAAqrI,WAAA,EAAAuX,IAAA,EAAAF,GAAA1iJ,GAIL,SAAAgjJ,GAAAhjJ,GACA,IAAAA,IAAAy+H,OAAoB,OAAAz+H,GAAA,IAAAA,EAAAsf,KAAA,IAAAtf,EAAAsf,KAAA,KAAAtf,EAAAsf,KACpBtf,IAAAy+H,OAGAikB,GAAA1iJ,EAGA,SAAAijJ,GAAAjjJ,GACA,GAAAA,IAAA0iJ,GAAA,SACA,IAAAE,GAAA,OAAAI,GAAAhjJ,GAAA4iJ,IAAA,KACA,IAAA3iJ,EAAAD,EAAAzJ,KACA,OAAAyJ,EAAAsf,KAAA,SAAArf,GAAA,SAAAA,IAAAs5I,GAAAt5I,EAAAD,EAAA27I,eAAA,IAAA17I,EAAA0iJ,GAA0F1iJ,GAC1F4iJ,GAAA7iJ,EAAAC,KAAA85I,GAAA95I,GAIA,OAFA+iJ,GAAAhjJ,GACA2iJ,GAAAD,GAAA3I,GAAA/5I,EAAA+9H,WAAA,MACA,EAGA,SAAAmlB,KACAP,GAAAD,GAAA,KACAE,IAAA,EAGA,IAAAO,GAAAte,GAAAjJ,kBACAkmB,IAAA,EAEA,SAAA/oI,GAAA/Y,EAAAC,EAAA2pB,EAAAvuB,GACA4E,EAAAsxB,MAAA,OAAAvxB,EAAAo/I,GAAAn/I,EAAA,KAAA2pB,EAAAvuB,GAAA8jJ,GAAAl/I,EAAAD,EAAAuxB,MAAA3H,EAAAvuB,GAGA,SAAA+nJ,GAAApjJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACA8rB,IAAAqwG,OACA,IAAA5D,EAAAp2H,EAAA23H,IAGA,OAFAyrB,GAAApjJ,EAAAnC,GACAzC,EAAA6lJ,GAAAlhJ,EAAAC,EAAA2pB,EAAAvuB,EAAAg7H,EAAAv4H,GACA,OAAAkC,GAAA8hJ,IACA7hJ,EAAAorI,WAAA,EACAtyH,GAAA/Y,EAAAC,EAAA5E,EAAAyC,GACAmC,EAAAsxB,QAHAtxB,EAAAy7I,YAAA17I,EAAA07I,YAAAz7I,EAAAorI,YAAA,IAAArrI,EAAAg8I,gBAAAl+I,IAAAkC,EAAAg8I,eAAA,GAAAsH,GAAAtjJ,EAAAC,EAAAnC,IAMA,SAAAylJ,GAAAvjJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,GACA,UAAAr2H,EAAA,CACA,IAAApC,EAAAgsB,EAAArzB,KACA,0BAAAqH,GAAAq+I,GAAAr+I,SAAA,IAAAA,EAAAo6H,cAAA,OAAApuG,EAAA2wG,cAAA,IAAA3wG,EAAAouG,eACAh4H,EAAAm8I,GAAAvyH,EAAArzB,KAAA,KAAA8E,EAAA,KAAA4E,EAAAiyC,KAAAmkF,IACAuB,IAAA33H,EAAA23H,IACA53H,EAAAy+H,OAAAx+H,EACAA,EAAAsxB,MAAAvxB,IAJAC,EAAAqf,IAAA,GAAArf,EAAA1J,KAAAqH,EAAA4lJ,GAAAxjJ,EAAAC,EAAArC,EAAAvC,EAAAyC,EAAAu4H,IAQA,OADAz4H,EAAAoC,EAAAuxB,MACAzzB,EAAAu4H,IAAAv4H,EAAAF,EAAA+9I,eAAA/xH,EAAA,QAAAA,IAAA2wG,SAAA3wG,EAAAuhH,IAAArtI,EAAAzC,IAAA2E,EAAA43H,MAAA33H,EAAA23H,KAAA0rB,GAAAtjJ,EAAAC,EAAAo2H,IACAp2H,EAAAorI,WAAA,GACArrI,EAAAk8I,GAAAt+I,EAAAvC,IACAu8H,IAAA33H,EAAA23H,IACA53H,EAAAy+H,OAAAx+H,EACAA,EAAAsxB,MAAAvxB,GAGA,SAAAwjJ,GAAAxjJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,GACA,cAAAr2H,GAAAmrI,GAAAnrI,EAAA27I,cAAAtgJ,IAAA2E,EAAA43H,MAAA33H,EAAA23H,MAAAkqB,IAAA,EAAAhkJ,EAAAu4H,GAAAitB,GAAAtjJ,EAAAC,EAAAo2H,GAAAotB,GAAAzjJ,EAAAC,EAAA2pB,EAAAvuB,EAAAg7H,GAGA,SAAAqtB,GAAA1jJ,EAAAC,GACA,IAAA2pB,EAAA3pB,EAAA23H,KACA,OAAA53H,GAAA,OAAA4pB,GAAA,OAAA5pB,KAAA43H,MAAAhuG,KAAA3pB,EAAAorI,WAAA,KAGA,SAAAoY,GAAAzjJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACA,IAAAu4H,EAAAoB,GAAA7tG,GAAAwwH,GAAA/iB,GAAAG,QAIA,OAHAnB,EAAAgkB,GAAAp6I,EAAAo2H,GACAgtB,GAAApjJ,EAAAnC,GACA8rB,EAAAs3H,GAAAlhJ,EAAAC,EAAA2pB,EAAAvuB,EAAAg7H,EAAAv4H,GACA,OAAAkC,GAAA8hJ,IACA7hJ,EAAAorI,WAAA,EACAtyH,GAAA/Y,EAAAC,EAAA2pB,EAAA9rB,GACAmC,EAAAsxB,QAHAtxB,EAAAy7I,YAAA17I,EAAA07I,YAAAz7I,EAAAorI,YAAA,IAAArrI,EAAAg8I,gBAAAl+I,IAAAkC,EAAAg8I,eAAA,GAAAsH,GAAAtjJ,EAAAC,EAAAnC,IAMA,SAAA6lJ,GAAA3jJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACA,GAAA25H,GAAA7tG,GAAA,CACA,IAAAysG,GAAA,EACA0kB,GAAA96I,QACGo2H,GAAA,EAGH,GADAgtB,GAAApjJ,EAAAnC,GACA,OAAAmC,EAAA89H,UAAA,OAAA/9H,MAAAgrI,UAAA,KAAA/qI,EAAA+qI,UAAA,KAAA/qI,EAAAorI,WAAA,GAAA6S,GAAAj+I,EAAA2pB,EAAAvuB,GAAAkjJ,GAAAt+I,EAAA2pB,EAAAvuB,EAAAyC,GAAAzC,GAAA,OAA6I,UAAA2E,EAAA,CAC7I,IAAApC,EAAAqC,EAAA89H,UACAp7E,EAAA1iD,EAAA07I,cACA/9I,EAAAnC,MAAAknD,EACA,IAAAzvC,EAAAtV,EAAA2yB,QACAtd,EAAA2W,EAAAu0H,YACA,kBAAAlrI,GAAA,OAAAA,IAAA8kH,GAAA9kH,KAAAonI,GAAAp6I,EAAAgT,EAAAwkH,GAAA7tG,GAAAwwH,GAAA/iB,GAAAG,SACA,IAAA9+F,EAAA9O,EAAA60H,yBACAthJ,EAAA,oBAAAu7B,GAAA,oBAAA96B,EAAA8gJ,wBACAvhJ,GAAA,oBAAAS,EAAA0gJ,kCAAA,oBAAA1gJ,EAAAygJ,4BAAA17F,IAAAtnD,GAAA6X,IAAAD,IAAAmrI,GAAAn+I,EAAArC,EAAAvC,EAAA4X,GACA2wI,IAAA,EACA,IAAAzqI,EAAAlZ,EAAAw7I,cACAvoI,EAAAtV,EAAAo/B,MAAA7jB,EACA,IAAAg9G,EAAAl2H,EAAAy7I,YACA,OAAAvlB,IAAAqoB,GAAAv+I,EAAAk2H,EAAA96H,EAAAuC,EAAAE,GAAAoV,EAAAjT,EAAAw7I,eACA94F,IAAAtnD,GAAA8d,IAAAjG,GAAAqkH,GAAAC,SAAAosB,IAAA,oBAAAlrH,IAAA0kH,GAAAn9I,EAAA2pB,EAAA8O,EAAAr9B,GAAA6X,EAAAjT,EAAAw7I,gBAAA94F,EAAAihG,IAAA5F,GAAA/9I,EAAA2pB,EAAA+4B,EAAAtnD,EAAA8d,EAAAjG,EAAAD,KAAA9V,GAAA,oBAAAS,EAAA+gJ,2BAAA,oBAAA/gJ,EAAAghJ,qBAAA,oBAAAhhJ,EAAAghJ,oBAAAhhJ,EAAAghJ,qBAAA,oBAAAhhJ,EAAA+gJ,2BAAA/gJ,EAAA+gJ,6BAAA,oBAAA/gJ,EAAAihJ,oBAAA5+I,EAAAorI,WAAA,yBAAAztI,EAAAihJ,oBAAA5+I,EAAAorI,WAAA,GAAAprI,EAAA07I,cAAAtgJ,EAAA4E,EAAAw7I,cAAAvoI,GAAAtV,EAAAnC,MAAAJ,EAAAuC,EAAAo/B,MAAA9pB,EAAAtV,EAAA2yB,QAAAtd,EAAA5X,EAAAsnD,IAAA,oBAAA/kD,EAAAihJ,oBAAA5+I,EAAAorI,WAAA,GAAAhwI,GAAA,QACGuC,EAAAqC,EAAA89H,UAAAp7E,EAAA1iD,EAAA07I,cAAA/9I,EAAAnC,MAAAwE,EAAA1J,OAAA0J,EAAAq7I,YAAA34F,EAAAg1E,GAAA13H,EAAA1J,KAAAosD,GAAAzvC,EAAAtV,EAAA2yB,QAAA,kBAAAtd,EAAA2W,EAAAu0H,cAAA,OAAAlrI,IAAA8kH,GAAA9kH,KAAAonI,GAAAp6I,EAAAgT,EAAAwkH,GAAA7tG,GAAAwwH,GAAA/iB,GAAAG,UAAAr6H,EAAA,oBAAAu7B,EAAA9O,EAAA60H,2BAAA,oBAAA7gJ,EAAA8gJ,0BAAA,oBAAA9gJ,EAAA0gJ,kCAAA,oBAAA1gJ,EAAAygJ,4BAAA17F,IAAAtnD,GAAA6X,IAAAD,IAAAmrI,GAAAn+I,EAAArC,EAAAvC,EAAA4X,GAAA2wI,IAAA,EAAA1wI,EAAAjT,EAAAw7I,cAAAtiI,EAAAvb,EAAAo/B,MAAA9pB,EAAA,QAAAijH,EAAAl2H,EAAAy7I,eAAA8C,GAAAv+I,EAAAk2H,EAAA96H,EAAAuC,EAAAE,GAAAqb,EAAAlZ,EAAAw7I,eAAA94F,IAAAtnD,GAAA6X,IAAAiG,GAAAo+G,GAAAC,SAAAosB,IAAA,oBAAAlrH,IAAA0kH,GAAAn9I,EAAA2pB,EAAA8O,EAAAr9B,GAAA8d,EAAAlZ,EAAAw7I,gBAAA/iH,EAAAkrH,IAAA5F,GAAA/9I,EAAA2pB,EAAA+4B,EAAAtnD,EAAA6X,EAAAiG,EAAAlG,KAAA9V,GAAA,oBAAAS,EAAAimJ,4BAAA,oBAAAjmJ,EAAAkmJ,sBAAA,oBAAAlmJ,EAAAkmJ,qBAAAlmJ,EAAAkmJ,oBAAAzoJ,EAAA8d,EAAAlG,GAAA,oBAAArV,EAAAimJ,4BAAAjmJ,EAAAimJ,2BAAAxoJ,EAAA8d,EAAAlG,IAAA,oBAAArV,EAAAmmJ,qBAAA9jJ,EAAAorI,WAAA,uBAAAztI,EAAA8gJ,0BAAAz+I,EAAAorI,WAAA,2BAAAztI,EAAAmmJ,oBAAAphG,IAAA3iD,EAAA27I,eAAAzoI,IAAAlT,EAAAy7I,gBAAAx7I,EAAAorI,WAAA,uBAAAztI,EAAA8gJ,yBAAA/7F,IAAA3iD,EAAA27I,eAAAzoI,IAAAlT,EAAAy7I,gBAAAx7I,EAAAorI,WAAA,KAAAprI,EAAA07I,cAAAtgJ,EAAA4E,EAAAw7I,cAAAtiI,GAAAvb,EAAAnC,MAAAJ,EAAAuC,EAAAo/B,MAAA7jB,EAAAvb,EAAA2yB,QAAAtd,EAAA5X,EAAAq9B,IAAA,oBAAA96B,EAAAmmJ,oBAAAphG,IAAA3iD,EAAA27I,eAAAzoI,IAAAlT,EAAAy7I,gBAAAx7I,EAAAorI,WAAA,uBAAAztI,EAAA8gJ,yBAAA/7F,IAAA3iD,EAAA27I,eAAAzoI,IAAAlT,EAAAy7I,gBAAAx7I,EAAAorI,WAAA,KAAAhwI,GAAA,GACH,OAAA2oJ,GAAAhkJ,EAAAC,EAAA2pB,EAAAvuB,EAAAg7H,EAAAv4H,GAGA,SAAAkmJ,GAAAhkJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,GACAqtB,GAAA1jJ,EAAAC,GACA,IAAArC,EAAA,QAAAqC,EAAAorI,WACA,IAAAhwI,IAAAuC,EAAA,OAAAE,GAAAm9I,GAAAh7I,EAAA2pB,GAAA,GAAA05H,GAAAtjJ,EAAAC,EAAAo2H,GACAh7H,EAAA4E,EAAA89H,UACAolB,GAAA3rB,QAAAv3H,EACA,IAAA0iD,EAAA/kD,GAAA,oBAAAgsB,EAAAq6H,yBAAA,KAAA5oJ,EAAA4+H,SAKA,OAJAh6H,EAAAorI,WAAA,EACA,OAAArrI,GAAApC,GAAAqC,EAAAsxB,MAAA4tH,GAAAl/I,EAAAD,EAAAuxB,MAAA,KAAA8kG,GAAAp2H,EAAAsxB,MAAA4tH,GAAAl/I,EAAA,KAAA0iD,EAAA0zE,IAAAt9G,GAAA/Y,EAAAC,EAAA0iD,EAAA0zE,GACAp2H,EAAAw7I,cAAApgJ,EAAA2hC,MACAl/B,GAAAm9I,GAAAh7I,EAAA2pB,GAAA,GACA3pB,EAAAsxB,MAGA,SAAA2yH,GAAAlkJ,GACA,IAAAC,EAAAD,EAAA+9H,UACA99H,EAAAkkJ,eAAAvJ,GAAA56I,EAAAC,EAAAkkJ,eAAAlkJ,EAAAkkJ,iBAAAlkJ,EAAAswB,SAAAtwB,EAAAswB,SAAAqqH,GAAA56I,EAAAC,EAAAswB,SAAA,GACAkvH,GAAAz/I,EAAAC,EAAAwwI,eAGA,SAAA2T,GAAApkJ,EAAAC,EAAA2pB,GACA,IAAAvuB,EAAA4E,EAAAiyC,KACAp0C,EAAAmC,EAAAs7I,aACAllB,EAAAp2H,EAAAw7I,cAEA,WAAAx7I,EAAAorI,WAAA,CACAhV,EAAA,KACA,IAAAz4H,GAAA,OACGy4H,EAAA,CACHguB,WAAA,OAAAhuB,IAAAguB,WAAA,GACGzmJ,GAAA,EAAAqC,EAAAorI,YAAA,GAEH,UAAArrI,EACA,GAAApC,EAAA,CACA,IAAA+kD,EAAA7kD,EAAAwmJ,SACAtkJ,EAAAo8I,GAAA,KAAA/gJ,EAAA,QACA,OAAA4E,EAAAiyC,QAAAlyC,EAAAuxB,MAAA,OAAAtxB,EAAAw7I,cAAAx7I,EAAAsxB,YAAAtxB,EAAAsxB,OACAl2B,EAAA+gJ,GAAAz5F,EAAAtnD,EAAAuuB,EAAA,MACA5pB,EAAAwrI,QAAAnwI,GACAuuB,EAAA5pB,GACAy+H,OAAApjI,EAAAojI,OAAAx+H,OACK2pB,EAAAvuB,EAAA+jJ,GAAAn/I,EAAA,KAAAnC,EAAAwhC,SAAA1V,QACF,OAAA5pB,EAAAy7I,eAAA94F,GAAAtnD,EAAA2E,EAAAuxB,OAAAi6G,QAAA5tI,GAAAgsB,EAAA9rB,EAAAwmJ,SAAAxmJ,EAAAo+I,GAAA7gJ,IAAAkgJ,cAAA,OAAAt7I,EAAAiyC,SAAAt0C,EAAA,OAAAqC,EAAAw7I,cAAAx7I,EAAAsxB,YAAAtxB,EAAAsxB,SAAAl2B,EAAAk2B,QAAAzzB,EAAAyzB,MAAA3zB,IAAAvC,EAAAyC,EAAA0tI,QAAA0Q,GAAAv5F,EAAA/4B,EAAA+4B,EAAAq5F,gBAAApyH,EAAA9rB,IAAAi+I,oBAAA,EAAAnyH,EAAA60G,OAAApjI,EAAAojI,OAAAx+H,GAAA2pB,EAAAvuB,EAAA8jJ,GAAAl/I,EAAA5E,EAAAk2B,MAAAzzB,EAAAwhC,SAAA1V,KAAA+4B,EAAA3iD,EAAAuxB,MAAA3zB,KAAAE,EAAAwmJ,UAAAxmJ,EAAAs+I,GAAA,KAAA/gJ,EAAA,SAAAk2B,MAAAoxB,EAAA,OAAA1iD,EAAAiyC,QAAAp0C,EAAAyzB,MAAA,OAAAtxB,EAAAw7I,cAAAx7I,EAAAsxB,YAAAtxB,EAAAsxB,QAAAl2B,EAAAyC,EAAA0tI,QAAA4Q,GAAAx+I,EAAAvC,EAAAuuB,EAAA,OAAAyhH,WAAA,EAAAzhH,EAAA9rB,IAAAi+I,oBAAA,EAAAnyH,EAAA60G,OAAApjI,EAAAojI,OAAAx+H,GAAA5E,EAAAuuB,EAAAu1H,GAAAl/I,EAAA0iD,EAAA7kD,EAAAwhC,SAAA1V,IAAA3pB,EAAA89H,UAAA/9H,EAAA+9H,UAGH,OAFA99H,EAAAw7I,cAAAplB,EACAp2H,EAAAsxB,MAAA3H,EACAvuB,EAGA,SAAAioJ,GAAAtjJ,EAAAC,EAAA2pB,GAEA,GADA,OAAA5pB,IAAAC,EAAAu7I,oBAAAx7I,EAAAw7I,qBACAv7I,EAAA87I,oBAAAnyH,EAAA,YAGA,GAFA,OAAA5pB,GAAAC,EAAAsxB,QAAAvxB,EAAAuxB,OAAApf,EAAA,OAEA,OAAAlS,EAAAsxB,MAAA,CAKA,IAHA3H,EAAAsyH,GADAl8I,EAAAC,EAAAsxB,MACAvxB,EAAAu7I,aAAAv7I,EAAAg8I,gBACA/7I,EAAAsxB,MAAA3H,EAEAA,EAAA60G,OAAAx+H,EAAsB,OAAAD,EAAAwrI,SACtBxrI,IAAAwrI,SAAA5hH,IAAA4hH,QAAA0Q,GAAAl8I,IAAAu7I,aAAAv7I,EAAAg8I,iBAAAvd,OAAAx+H,EAGA2pB,EAAA4hH,QAAA,KAGA,OAAAvrI,EAAAsxB,MAGA,SAAAgzH,GAAAvkJ,EAAAC,EAAA2pB,GACA,IAAAvuB,EAAA4E,EAAA+7I,eACA,UAAAh8I,GACA,GAAAA,EAAA27I,gBAAA17I,EAAAs7I,cAAAhkB,GAAAC,QAAAsqB,IAAA,OACA,GAAAzmJ,EAAAuuB,EAAA,CAGA,OAFAk4H,IAAA,EAEA7hJ,EAAAqf,KACA,OACA4kI,GAAAjkJ,GACAijJ,KACA,MAEA,OACAvD,GAAA1/I,GACA,MAEA,OACAw3H,GAAAx3H,EAAA1J,OAAAwkJ,GAAA96I,GACA,MAEA,OACAw/I,GAAAx/I,IAAA89H,UAAA0S,eACA,MAEA,QACA+T,GAAAvkJ,IAAA07I,cAAAn+I,OACA,MAEA,QACA,UAAAyC,EAAAw7I,cAEA,YADApgJ,EAAA4E,EAAAsxB,MAAAwqH,sBACA1gJ,GAAAuuB,EAAAw6H,GAAApkJ,EAAAC,EAAA2pB,GAEA,QADA3pB,EAAAqjJ,GAAAtjJ,EAAAC,EAAA2pB,IACA3pB,EAAAurI,QAAA,KAKA,OAAA8X,GAAAtjJ,EAAAC,EAAA2pB,SAGGk4H,IAAA,EAGH,OAFA7hJ,EAAA+7I,eAAA,EAEA/7I,EAAAqf,KACA,OACAjkB,EAAA4E,EAAAq7I,YACA,OAAAt7I,MAAAgrI,UAAA,KAAA/qI,EAAA+qI,UAAA,KAAA/qI,EAAAorI,WAAA,GACArrI,EAAAC,EAAAs7I,aACA,IAAAz9I,EAAAu8I,GAAAp6I,EAAAo3H,GAAAG,SAKA,GAJA6rB,GAAApjJ,EAAA2pB,GACA9rB,EAAAojJ,GAAA,KAAAjhJ,EAAA5E,EAAA2E,EAAAlC,EAAA8rB,GACA3pB,EAAAorI,WAAA,EAEA,kBAAAvtI,GAAA,OAAAA,GAAA,oBAAAA,EAAAm8H,aAAA,IAAAn8H,EAAAm6H,SAAA,CAIA,GAHAh4H,EAAAqf,IAAA,EACAgiI,KAEA7pB,GAAAp8H,GAAA,CACA,IAAAg7H,GAAA,EACA0kB,GAAA96I,QACSo2H,GAAA,EAETp2H,EAAAw7I,cAAA,OAAA39I,EAAAk/B,YAAA,IAAAl/B,EAAAk/B,MAAAl/B,EAAAk/B,MAAA,KACA,IAAAp/B,EAAAvC,EAAAojJ,yBACA,oBAAA7gJ,GAAAw/I,GAAAn9I,EAAA5E,EAAAuC,EAAAoC,GACAlC,EAAAk5H,QAAAsmB,GACAr9I,EAAA89H,UAAAjgI,EACAA,EAAAy/I,oBAAAt9I,EACAs+I,GAAAt+I,EAAA5E,EAAA2E,EAAA4pB,GACA3pB,EAAA+jJ,GAAA,KAAA/jJ,EAAA5E,GAAA,EAAAg7H,EAAAzsG,QACO3pB,EAAAqf,IAAA,EAAAvG,GAAA,KAAA9Y,EAAAnC,EAAA8rB,GAAA3pB,IAAAsxB,MAEP,OAAAtxB,EAEA,QAUA,OATAnC,EAAAmC,EAAAq7I,YACA,OAAAt7I,MAAAgrI,UAAA,KAAA/qI,EAAA+qI,UAAA,KAAA/qI,EAAAorI,WAAA,GACAhV,EAAAp2H,EAAAs7I,aACAv7I,EA5qCA,SAAAA,GACA,IAAAC,EAAAD,EAAAq6H,QAEA,OAAAr6H,EAAAo6H,SACA,OACA,OAAAn6H,EAEA,OAGA,OACA,MAAAA,EAEA,QAUA,OATAD,EAAAo6H,QAAA,GAEAn6H,GADAA,EAAAD,EAAAm6H,UAEAxyF,KAAA,SAAA1nC,GACA,IAAAD,EAAAo6H,UAAAn6H,IAAAuW,QAAAxW,EAAAo6H,QAAA,EAAAp6H,EAAAq6H,QAAAp6H,IACO,SAAAA,GACP,IAAAD,EAAAo6H,UAAAp6H,EAAAo6H,QAAA,EAAAp6H,EAAAq6H,QAAAp6H,KAGAD,EAAAo6H,SACA,OACA,OAAAp6H,EAAAq6H,QAEA,OACA,MAAAr6H,EAAAq6H,QAIA,MADAr6H,EAAAq6H,QAAAp6H,EACAA,GA4oCAwkJ,CAAA3mJ,GACAmC,EAAA1J,KAAAyJ,EACAlC,EAAAmC,EAAAqf,IA91CA,SAAAtf,GACA,uBAAAA,EAAA,OAAAi8I,GAAAj8I,GAAA,IAEA,YAAAA,GAAA,OAAAA,EAAA,CAEA,IADAA,IAAAi4H,YACAhzC,GAAA,UACA,GAAAjlF,IAAAwlI,GAAA,UAGA,SAq1CAkf,CAAA1kJ,GACAq2H,EAAAsB,GAAA33H,EAAAq2H,GACAz4H,OAAA,EAEAE,GACA,OACAF,EAAA6lJ,GAAA,KAAAxjJ,EAAAD,EAAAq2H,EAAAzsG,GACA,MAEA,OACAhsB,EAAA+lJ,GAAA,KAAA1jJ,EAAAD,EAAAq2H,EAAAzsG,GACA,MAEA,QACAhsB,EAAAwlJ,GAAA,KAAAnjJ,EAAAD,EAAAq2H,EAAAzsG,GACA,MAEA,QACAhsB,EAAA2lJ,GAAA,KAAAtjJ,EAAAD,EAAA23H,GAAA33H,EAAAzJ,KAAA8/H,GAAAh7H,EAAAuuB,GACA,MAEA,QACAzX,EAAA,MAAAnS,EAAA,IAGA,OAAApC,EAEA,OACA,OAAAvC,EAAA4E,EAAA1J,KAAAuH,EAAAmC,EAAAs7I,aAAAkI,GAAAzjJ,EAAAC,EAAA5E,EAAAyC,EAAAmC,EAAAq7I,cAAAjgJ,EAAAyC,EAAA65H,GAAAt8H,EAAAyC,GAAA8rB,GAEA,OACA,OAAAvuB,EAAA4E,EAAA1J,KAAAuH,EAAAmC,EAAAs7I,aAAAoI,GAAA3jJ,EAAAC,EAAA5E,EAAAyC,EAAAmC,EAAAq7I,cAAAjgJ,EAAAyC,EAAA65H,GAAAt8H,EAAAyC,GAAA8rB,GAEA,OAcA,OAbAs6H,GAAAjkJ,GAEA,QADA5E,EAAA4E,EAAAy7I,cACAvpI,EAAA,OAEArU,EAAA,QADAA,EAAAmC,EAAAw7I,eACA39I,EAAAkf,QAAA,KACAwhI,GAAAv+I,EAAA5E,EAAA4E,EAAAs7I,aAAA,KAAA3xH,IACAvuB,EAAA4E,EAAAw7I,cAAAz+H,WACAlf,GAAAolJ,KAAAjjJ,EAAAqjJ,GAAAtjJ,EAAAC,EAAA2pB,KACA9rB,EAAAmC,EAAA89H,WACAjgI,GAAA,OAAAkC,GAAA,OAAAA,EAAAuxB,QAAAzzB,EAAA6mJ,WAAAhC,GAAA3I,GAAA/5I,EAAA89H,UAAA0S,eAAAiS,GAAAziJ,EAAAnC,EAAA8kJ,IAAA,GACA9kJ,GAAAmC,EAAAorI,WAAA,EAAAprI,EAAAsxB,MAAA6tH,GAAAn/I,EAAA,KAAA5E,EAAAuuB,KAAA7Q,GAAA/Y,EAAAC,EAAA5E,EAAAuuB,GAAAs5H,MACAjjJ,IAAAsxB,OAEAtxB,EAEA,OACA,OAAA0/I,GAAA1/I,GAAA,OAAAD,GAAA+iJ,GAAA9iJ,GAAA5E,EAAA4E,EAAA1J,KAAAuH,EAAAmC,EAAAs7I,aAAAllB,EAAA,OAAAr2H,IAAA27I,cAAA,KAAA/9I,EAAAE,EAAAwhC,SAAAi6G,GAAAl+I,EAAAyC,GAAAF,EAAA,YAAAy4H,GAAAkjB,GAAAl+I,EAAAg7H,KAAAp2H,EAAAorI,WAAA,IAAAqY,GAAA1jJ,EAAAC,GAAA,IAAA2pB,GAAA,EAAA3pB,EAAAiyC,MAAAp0C,EAAA0xC,QAAAvvC,EAAA+7I,eAAA/7I,EAAA87I,oBAAA,EAAA97I,EAAA,OAAA8Y,GAAA/Y,EAAAC,EAAArC,EAAAgsB,GAAA3pB,IAAAsxB,OAAAtxB,EAEA,OACA,cAAAD,GAAA+iJ,GAAA9iJ,GAAA,KAEA,QACA,OAAAmkJ,GAAApkJ,EAAAC,EAAA2pB,GAEA,OACA,OAAA61H,GAAAx/I,IAAA89H,UAAA0S,eAAAp1I,EAAA4E,EAAAs7I,aAAA,OAAAv7I,EAAAC,EAAAsxB,MAAA4tH,GAAAl/I,EAAA,KAAA5E,EAAAuuB,GAAA7Q,GAAA/Y,EAAAC,EAAA5E,EAAAuuB,GAAA3pB,EAAAsxB,MAEA,QACA,OAAAl2B,EAAA4E,EAAA1J,KAAAuH,EAAAmC,EAAAs7I,aAAA6H,GAAApjJ,EAAAC,EAAA5E,EAAAyC,EAAAmC,EAAAq7I,cAAAjgJ,EAAAyC,EAAA65H,GAAAt8H,EAAAyC,GAAA8rB,GAEA,OACA,OAAA7Q,GAAA/Y,EAAAC,IAAAs7I,aAAA3xH,GAAA3pB,EAAAsxB,MAEA,OAGA,QACA,OAAAxY,GAAA/Y,EAAAC,IAAAs7I,aAAAj8G,SAAA1V,GAAA3pB,EAAAsxB,MAEA,QACAvxB,EAAA,CAOA,GANA3E,EAAA4E,EAAA1J,KAAAwjI,SACAj8H,EAAAmC,EAAAs7I,aACA39I,EAAAqC,EAAA07I,cAEA6I,GAAAvkJ,EADAo2H,EAAAv4H,EAAAN,OAGA,OAAAI,EAAA,CACA,IAAA+kD,EAAA/kD,EAAAJ,MAGA,QAFA64H,EAAA4U,GAAAtoF,EAAA0zE,GAAA,yBAAAh7H,EAAAo+H,sBAAAp+H,EAAAo+H,sBAAA92E,EAAA0zE,GAAA,cAGA,GAAAz4H,EAAA0hC,WAAAxhC,EAAAwhC,WAAAi4F,GAAAC,QAAA,CACAv3H,EAAAqjJ,GAAAtjJ,EAAAC,EAAA2pB,GACA,MAAA5pB,QAEW,YAAA2iD,EAAA1iD,EAAAsxB,SAAAoxB,EAAA87E,OAAAx+H,GAAqD,OAAA0iD,GAAY,CAC5E,IAAAzvC,EAAAyvC,EAAA64F,oBAEA,UAAAtoI,EAAA,CACAtV,EAAA+kD,EAAApxB,MAEA,QAAAte,EAAAC,EAAA0xI,MAAmC,OAAA3xI,GAAY,CAC/C,GAAAA,EAAAsd,UAAAl1B,GAAA,KAAA4X,EAAA4xI,aAAAxuB,GAAA,CACA,IAAA1zE,EAAArjC,OAAArM,EAAAwqI,GAAA7zH,IAAAtK,IAAAy+H,GAAAH,GAAAj7F,EAAA1vC,IACA0vC,EAAAq5F,eAAApyH,IAAA+4B,EAAAq5F,eAAApyH,GAEA,QADA3W,EAAA0vC,EAAAqoF,YACA/3H,EAAA+oI,eAAApyH,IAAA3W,EAAA+oI,eAAApyH,GACA3W,EAAA2W,EAEA,QAAA8O,EAAAiqB,EAAA87E,OAAwC,OAAA/lG,GAAY,CACpD,IAAAv7B,EAAAu7B,EAAAsyG,UACA,GAAAtyG,EAAAqjH,oBAAA9oI,EAAAylB,EAAAqjH,oBAAA9oI,EAAA,OAAA9V,KAAA4+I,oBAAA9oI,IAAA9V,EAAA4+I,oBAAA9oI,OAAqJ,aAAA9V,KAAA4+I,oBAAA9oI,GAA4E,MAA5E9V,EAAA4+I,oBAAA9oI,EACrJylB,IAAA+lG,OAGAvrH,EAAA8oI,eAAApyH,IAAA1W,EAAA8oI,eAAApyH,GACA,MAGA3W,IAAAinC,WAEat8C,EAAA,KAAA+kD,EAAArjC,KAAAqjC,EAAApsD,OAAA0J,EAAA1J,KAAA,KAAAosD,EAAApxB,MAEb,UAAA3zB,IAAA6gI,OAAA97E,OAAyC,IAAA/kD,EAAA+kD,EAAgB,OAAA/kD,GAAY,CACrE,GAAAA,IAAAqC,EAAA,CACArC,EAAA,KACA,MAKA,WAFA+kD,EAAA/kD,EAAA4tI,SAEA,CACA7oF,EAAA87E,OAAA7gI,EAAA6gI,OACA7gI,EAAA+kD,EACA,MAGA/kD,IAAA6gI,OAEA97E,EAAA/kD,GAIAmb,GAAA/Y,EAAAC,EAAAnC,EAAAwhC,SAAA1V,GACA3pB,IAAAsxB,MAGA,OAAAtxB,EAEA,OACA,OAAAnC,EAAAmC,EAAA1J,KAAA8E,GAAAg7H,EAAAp2H,EAAAs7I,cAAAj8G,SAAA+jH,GAAApjJ,EAAA2pB,GAAAvuB,IAAAyC,EAAAi6H,GAAAj6H,EAAAu4H,EAAAyuB,wBAAA7kJ,EAAAorI,WAAA,EAAAtyH,GAAA/Y,EAAAC,EAAA5E,EAAAuuB,GAAA3pB,EAAAsxB,MAEA,QACA,OAAA8kG,EAAAsB,GAAA75H,EAAAmC,EAAA1J,KAAA0J,EAAAs7I,cAAAgI,GAAAvjJ,EAAAC,EAAAnC,EAAAu4H,EAAAsB,GAAA75H,EAAAvH,KAAA8/H,GAAAh7H,EAAAuuB,GAEA,QACA,OAAA45H,GAAAxjJ,EAAAC,IAAA1J,KAAA0J,EAAAs7I,aAAAlgJ,EAAAuuB,GAEA,QACA,OAAAvuB,EAAA4E,EAAA1J,KAAAuH,EAAAmC,EAAAs7I,aAAAz9I,EAAAmC,EAAAq7I,cAAAjgJ,EAAAyC,EAAA65H,GAAAt8H,EAAAyC,GAAA,OAAAkC,MAAAgrI,UAAA,KAAA/qI,EAAA+qI,UAAA,KAAA/qI,EAAAorI,WAAA,GAAAprI,EAAAqf,IAAA,EAAAm4G,GAAAp8H,IAAA2E,GAAA,EAAA+6I,GAAA96I,IAAAD,GAAA,EAAAqjJ,GAAApjJ,EAAA2pB,GAAAs0H,GAAAj+I,EAAA5E,EAAAyC,GAAAygJ,GAAAt+I,EAAA5E,EAAAyC,EAAA8rB,GAAAo6H,GAAA,KAAA/jJ,EAAA5E,GAAA,EAAA2E,EAAA4pB,GAGAzX,EAAA,OAGA,IAAA4yI,GAAA,CACAvtB,QAAA,MAEAwtB,GAAA,KACAC,GAAA,KACAC,GAAA,KAEA,SAAAV,GAAAxkJ,EAAAC,GACA,IAAA2pB,EAAA5pB,EAAAzJ,KAAAwjI,SACA7C,GAAA6tB,GAAAn7H,EAAA8vG,eACA9vG,EAAA8vG,cAAAz5H,EAGA,SAAAklJ,GAAAnlJ,GACA,IAAAC,EAAA8kJ,GAAAvtB,QACAP,GAAA8tB,IACA/kJ,EAAAzJ,KAAAwjI,SAAAL,cAAAz5H,EAGA,SAAAojJ,GAAArjJ,EAAAC,GACA+kJ,GAAAhlJ,EACAklJ,GAAAD,GAAA,KACA,IAAAr7H,EAAA5pB,EAAAw7I,oBACA,OAAA5xH,KAAAoyH,gBAAA/7I,IAAA6hJ,IAAA,GACA9hJ,EAAAw7I,oBAAA,KAGA,SAAAzjB,GAAA/3H,EAAAC,GAcA,OAbAilJ,KAAAllJ,IAAA,IAAAC,GAAA,IAAAA,IACA,kBAAAA,GAAA,aAAAA,IAAAilJ,GAAAllJ,EAAAC,EAAA,YACAA,EAAA,CACAswB,QAAAvwB,EACA6kJ,aAAA5kJ,EACAi6C,KAAA,MAEA,OAAA+qG,IAAA,OAAAD,IAAA7yI,EAAA,OAAA8yI,GAAAhlJ,EAAA+kJ,GAAAxJ,oBAAA,CACAoJ,MAAA3kJ,EACA+7I,eAAA,IACKiJ,MAAA/qG,KAAAj6C,GAGLD,EAAA05H,cAGA,IAAA0rB,GAAA,EACAtH,GAAA,EACAC,GAAA,EACAsH,GAAA,EACAzB,IAAA,EAEA,SAAA0B,GAAAtlJ,GACA,OACAq9I,UAAAr9I,EACAulJ,YAAA,KACAC,WAAA,KACAC,oBAAA,KACAC,mBAAA,KACA7J,YAAA,KACAD,WAAA,KACA+J,oBAAA,KACAC,mBAAA,MAIA,SAAAC,GAAA7lJ,GACA,OACAq9I,UAAAr9I,EAAAq9I,UACAkI,YAAAvlJ,EAAAulJ,YACAC,WAAAxlJ,EAAAwlJ,WACAC,oBAAA,KACAC,mBAAA,KACA7J,YAAA,KACAD,WAAA,KACA+J,oBAAA,KACAC,mBAAA,MAIA,SAAAnI,GAAAz9I,GACA,OACAg8I,eAAAh8I,EACAsf,IAAA8lI,GACAvmE,QAAA,KACA1zE,SAAA,KACA+uC,KAAA,KACA4hG,WAAA,MAIA,SAAAgK,GAAA9lJ,EAAAC,GACA,OAAAD,EAAAwlJ,WAAAxlJ,EAAAulJ,YAAAvlJ,EAAAwlJ,WAAAvlJ,GAAAD,EAAAwlJ,WAAAtrG,KAAAj6C,EAAAD,EAAAwlJ,WAAAvlJ,GAGA,SAAA29I,GAAA59I,EAAAC,GACA,IAAA2pB,EAAA5pB,EAAAgrI,UAEA,UAAAphH,EAAA,CACA,IAAAvuB,EAAA2E,EAAA07I,YACA59I,EAAA,KACA,OAAAzC,MAAA2E,EAAA07I,YAAA4J,GAAAtlJ,EAAAy7I,qBACGpgJ,EAAA2E,EAAA07I,YAAA59I,EAAA8rB,EAAA8xH,YAAA,OAAArgJ,EAAA,OAAAyC,GAAAzC,EAAA2E,EAAA07I,YAAA4J,GAAAtlJ,EAAAy7I,eAAA39I,EAAA8rB,EAAA8xH,YAAA4J,GAAA17H,EAAA6xH,gBAAApgJ,EAAA2E,EAAA07I,YAAAmK,GAAA/nJ,GAAA,OAAAA,MAAA8rB,EAAA8xH,YAAAmK,GAAAxqJ,IAEH,OAAAyC,GAAAzC,IAAAyC,EAAAgoJ,GAAAzqJ,EAAA4E,GAAA,OAAA5E,EAAAmqJ,YAAA,OAAA1nJ,EAAA0nJ,YAAAM,GAAAzqJ,EAAA4E,GAAA6lJ,GAAAhoJ,EAAAmC,KAAA6lJ,GAAAzqJ,EAAA4E,GAAAnC,EAAA0nJ,WAAAvlJ,GAGA,SAAA8lJ,GAAA/lJ,EAAAC,GACA,IAAA2pB,EAAA5pB,EAAA07I,YAEA,QADA9xH,EAAA,OAAAA,EAAA5pB,EAAA07I,YAAA4J,GAAAtlJ,EAAAy7I,eAAAuK,GAAAhmJ,EAAA4pB,IACA87H,mBAAA97H,EAAA67H,oBAAA77H,EAAA87H,mBAAAzlJ,GAAA2pB,EAAA87H,mBAAAxrG,KAAAj6C,EAAA2pB,EAAA87H,mBAAAzlJ,GAGA,SAAA+lJ,GAAAhmJ,EAAAC,GACA,IAAA2pB,EAAA5pB,EAAAgrI,UAEA,OADA,OAAAphH,GAAA3pB,IAAA2pB,EAAA8xH,cAAAz7I,EAAAD,EAAA07I,YAAAmK,GAAA5lJ,IACAA,EAGA,SAAA4iD,GAAA7iD,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,EAAAu4H,GACA,OAAAzsG,EAAAtK,KACA,KAAAw+H,GACA,0BAAA99I,EAAA4pB,EAAAi1D,SAAA7+E,EAAA3I,KAAAg/H,EAAAh7H,EAAAyC,GAAAkC,EAEA,KAAAqlJ,GACArlJ,EAAAqrI,WAAA,KAAArrI,EAAAqrI,UAAA,GAEA,KAAA+Z,GAGA,WADAtnJ,EAAA,oBADAkC,EAAA4pB,EAAAi1D,SACA7+E,EAAA3I,KAAAg/H,EAAAh7H,EAAAyC,GAAAkC,SACA,IAAAlC,EAAA,MACA,OAAAyT,EAAA,GAAiBlW,EAAAyC,GAEjB,KAAAigJ,GACA6F,IAAA,EAGA,OAAAvoJ,EAGA,SAAAmjJ,GAAAx+I,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACA8lJ,IAAA,EAGA,QAAAvtB,GAFAp2H,EAAA+lJ,GAAAhmJ,EAAAC,IAEAo9I,UAAAz/I,EAAA,KAAA+kD,EAAA,EAAAzvC,EAAAjT,EAAAslJ,YAAAtyI,EAAAojH,EAAsE,OAAAnjH,GAAY,CAClF,IAAAwlB,EAAAxlB,EAAA8oI,eACAtjH,EAAA56B,GAAA,OAAAF,MAAAsV,EAAAmjH,EAAApjH,GAAA0vC,EAAAjqB,IAAAiqB,EAAAjqB,KAAAzlB,EAAA4vC,GAAA7iD,EAAAC,EAAAiT,EAAAD,EAAA2W,EAAAvuB,GAAA,OAAA6X,EAAA/H,WAAAnL,EAAAqrI,WAAA,GAAAn4H,EAAA4oI,WAAA,YAAA77I,EAAA27I,WAAA37I,EAAA47I,YAAA57I,EAAA27I,WAAA1oI,GAAAjT,EAAA27I,WAAAE,WAAA5oI,EAAAjT,EAAA27I,WAAA1oI,KACAA,IAAAgnC,KAKA,IAFAxhB,EAAA,KAEAxlB,EAAAjT,EAAAwlJ,oBAAiC,OAAAvyI,GAAY,CAC7C,IAAA/V,EAAA+V,EAAA8oI,eACA7+I,EAAAW,GAAA,OAAA46B,MAAAxlB,EAAA,OAAAtV,IAAAy4H,EAAApjH,IAAA0vC,EAAAxlD,IAAAwlD,EAAAxlD,KAAA8V,EAAA4vC,GAAA7iD,EAAAC,EAAAiT,EAAAD,EAAA2W,EAAAvuB,GAAA,OAAA6X,EAAA/H,WAAAnL,EAAAqrI,WAAA,GAAAn4H,EAAA4oI,WAAA,YAAA77I,EAAA2lJ,mBAAA3lJ,EAAA0lJ,oBAAA1lJ,EAAA2lJ,mBAAA1yI,GAAAjT,EAAA2lJ,mBAAA9J,WAAA5oI,EAAAjT,EAAA2lJ,mBAAA1yI,KACAA,IAAAgnC,KAGA,OAAAt8C,IAAAqC,EAAAulJ,WAAA,MACA,OAAA9sH,EAAAz4B,EAAAylJ,mBAAA,KAAA1lJ,EAAAqrI,WAAA,GACA,OAAAztI,GAAA,OAAA86B,IAAA29F,EAAApjH,GACAhT,EAAAo9I,UAAAhnB,EACAp2H,EAAAslJ,YAAA3nJ,EACAqC,EAAAwlJ,oBAAA/sH,EACA14B,EAAAg8I,eAAAr5F,EACA3iD,EAAAy7I,cAAAxoI,EAGA,SAAAgzI,GAAAjmJ,EAAAC,EAAA2pB,GACA,OAAA3pB,EAAAwlJ,sBAAA,OAAAxlJ,EAAAulJ,aAAAvlJ,EAAAulJ,WAAAtrG,KAAAj6C,EAAAwlJ,oBAAAxlJ,EAAAulJ,WAAAvlJ,EAAAylJ,oBAAAzlJ,EAAAwlJ,oBAAAxlJ,EAAAylJ,mBAAA,MACAQ,GAAAjmJ,EAAA47I,YAAAjyH,GACA3pB,EAAA47I,YAAA57I,EAAA27I,WAAA,KACAsK,GAAAjmJ,EAAA0lJ,oBAAA/7H,GACA3pB,EAAA0lJ,oBAAA1lJ,EAAA2lJ,mBAAA,KAGA,SAAAM,GAAAlmJ,EAAAC,GACA,KAAQ,OAAAD,GAAY,CACpB,IAAA4pB,EAAA5pB,EAAAmL,SAEA,UAAAye,EAAA,CACA5pB,EAAAmL,SAAA,KACA,IAAA9P,EAAA4E,EACA,oBAAA2pB,GAAAzX,EAAA,MAAAyX,GACAA,EAAAvyB,KAAAgE,GAGA2E,IAAA87I,YAIA,SAAAqK,GAAAnmJ,EAAAC,GACA,OACAzC,MAAAwC,EACA8R,OAAA7R,EACAmmJ,MAAAtgB,GAAA7lI,IAIA,SAAAomJ,GAAArmJ,GACAA,EAAAqrI,WAAA,EAGA,IAAAib,QAAA,EACAC,QAAA,EACAC,QAAA,EACAC,QAAA,EAEAH,GAAA,SAAAtmJ,EAAAC,GACA,QAAA2pB,EAAA3pB,EAAAsxB,MAAuB,OAAA3H,GAAY,CACnC,OAAAA,EAAAtK,KAAA,IAAAsK,EAAAtK,IAAAtf,EAAA0xB,YAAA9H,EAAAm0G,gBAA+D,OAAAn0G,EAAAtK,KAAA,OAAAsK,EAAA2H,MAAA,CAC/D3H,EAAA2H,MAAAktG,OAAA70G,EACAA,IAAA2H,MACA,SAEA,GAAA3H,IAAA3pB,EAAA,MAEA,KAAU,OAAA2pB,EAAA4hH,SAAoB,CAC9B,UAAA5hH,EAAA60G,QAAA70G,EAAA60G,SAAAx+H,EAAA,OACA2pB,IAAA60G,OAGA70G,EAAA4hH,QAAA/M,OAAA70G,EAAA60G,OACA70G,IAAA4hH,UAIA+a,GAAA,aAEAC,GAAA,SAAAxmJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACA,IAAAu4H,EAAAr2H,EAAA27I,cAEA,GAAAtlB,IAAAh7H,EAAA,CACA,IAAAuC,EAAAqC,EAAA89H,UAIA,OAHAyhB,GAAArnB,GAAAX,SACAx3H,EAAA,KAEA4pB,GACA,YACAysG,EAAA+Q,GAAAxpI,EAAAy4H,GACAh7H,EAAA+rI,GAAAxpI,EAAAvC,GACA2E,EAAA,GACA,MAEA,aACAq2H,EAAAid,GAAA11I,EAAAy4H,GACAh7H,EAAAi4I,GAAA11I,EAAAvC,GACA2E,EAAA,GACA,MAEA,aACAq2H,EAAA9kH,EAAA,GAAgB8kH,EAAA,CAChB74H,WAAA,IAEAnC,EAAAkW,EAAA,GAAgBlW,EAAA,CAChBmC,WAAA,IAEAwC,EAAA,GACA,MAEA,eACAq2H,EAAAqd,GAAA91I,EAAAy4H,GACAh7H,EAAAq4I,GAAA91I,EAAAvC,GACA2E,EAAA,GACA,MAEA,QACA,oBAAAq2H,EAAAqwB,SAAA,oBAAArrJ,EAAAqrJ,UAAA9oJ,EAAA+oJ,QAAAzN,IAGAJ,GAAAlvH,EAAAvuB,GACAuC,EAAAgsB,OAAA,EACA,IAAA+4B,EAAA,KAEA,IAAA/4B,KAAAysG,EACA,IAAAh7H,EAAAwT,eAAA+a,IAAAysG,EAAAxnH,eAAA+a,IAAA,MAAAysG,EAAAzsG,GAAA,aAAAA,EAAA,CACA,IAAA1W,EAAAmjH,EAAAzsG,GAEA,IAAAhsB,KAAAsV,EACAA,EAAArE,eAAAjR,KAAA+kD,MAAA,IAA8CA,EAAA/kD,GAAA,QAEvC,4BAAAgsB,GAAA,aAAAA,GAAA,mCAAAA,GAAA,6BAAAA,GAAA,cAAAA,IAAAgzG,EAAA/tH,eAAA+a,GAAA5pB,MAAA,KAAAA,KAAA,IAAA1I,KAAAsyB,EAAA,OAGP,IAAAA,KAAAvuB,EAAA,CACA,IAAA4X,EAAA5X,EAAAuuB,GAEA,GADA1W,EAAA,MAAAmjH,IAAAzsG,QAAA,EACAvuB,EAAAwT,eAAA+a,IAAA3W,IAAAC,IAAA,MAAAD,GAAA,MAAAC,GAAA,aAAA0W,EACA,GAAA1W,EAAA,CACA,IAAAtV,KAAAsV,GACAA,EAAArE,eAAAjR,IAAAqV,KAAApE,eAAAjR,KAAA+kD,MAAA,IAA6EA,EAAA/kD,GAAA,IAG7E,IAAAA,KAAAqV,EACAA,EAAApE,eAAAjR,IAAAsV,EAAAtV,KAAAqV,EAAArV,KAAA+kD,MAAA,IAAiEA,EAAA/kD,GAAAqV,EAAArV,SAExD+kD,IAAA3iD,MAAA,IAAAA,EAAA1I,KAAAsyB,EAAA+4B,MAAA1vC,MACF,4BAAA2W,GAAA3W,MAAAumI,YAAA,EAAAtmI,MAAAsmI,YAAA,QAAAvmI,GAAAC,IAAAD,IAAAjT,KAAA,IAAA1I,KAAAsyB,EAAA,GAAA3W,IAAA,aAAA2W,EAAA1W,IAAAD,GAAA,kBAAAA,GAAA,kBAAAA,IAAAjT,KAAA,IAAA1I,KAAAsyB,EAAA,GAAA3W,GAAA,mCAAA2W,GAAA,6BAAAA,IAAAgzG,EAAA/tH,eAAA+a,IAAA,MAAA3W,GAAAgmI,GAAAn7I,EAAA8rB,GAAA5pB,GAAAkT,IAAAD,IAAAjT,EAAA,MAAAA,KAAA,IAAA1I,KAAAsyB,EAAA3W,IAGP0vC,IAAA3iD,KAAA,IAAA1I,KAAA,QAAAqrD,GACA7kD,EAAAkC,GACAC,EAAAy7I,YAAA59I,IAAAuoJ,GAAApmJ,KAIAwmJ,GAAA,SAAAzmJ,EAAAC,EAAA2pB,EAAAvuB,GACAuuB,IAAAvuB,GAAAgrJ,GAAApmJ,IAGA,IAAA2mJ,GAAA,oBAAAhzB,gBAAAnC,IAEA,SAAAo1B,GAAA7mJ,EAAAC,GACA,IAAA2pB,EAAA3pB,EAAA6R,OACAzW,EAAA4E,EAAAmmJ,MACA,OAAA/qJ,GAAA,OAAAuuB,IAAAvuB,EAAAyqI,GAAAl8G,IACA,OAAAA,GAAAg8G,GAAAh8G,EAAArzB,MACA0J,IAAAzC,MACA,OAAAwC,GAAA,IAAAA,EAAAsf,KAAAsmH,GAAA5lI,EAAAzJ,MAEA,IACAs3B,QAAAQ,MAAApuB,GACG,MAAAnC,GACHiQ,WAAA,WACA,MAAAjQ,KAKA,SAAAgpJ,GAAA9mJ,GACA,IAAAC,EAAAD,EAAA43H,IACA,UAAA33H,EAAA,uBAAAA,EAAA,IACAA,EAAA,MACG,MAAA2pB,GACH2vB,GAAAv5C,EAAA4pB,QACG3pB,EAAAu3H,QAAA,KAGH,SAAAhvG,GAAAxoB,EAAAC,EAAA2pB,GAIA,WAFAA,EAAA,QADAA,IAAA8xH,aACA9xH,EAAAgyH,WAAA,MAEA,CACA,IAAAvgJ,EAAAuuB,IAAAswB,KAEA,GACA,IAAA7+C,EAAAikB,IAAAtf,KAAA6/I,GAAA,CACA,IAAA/hJ,EAAAzC,EAAA6mJ,QACA7mJ,EAAA6mJ,aAAA,OACA,IAAApkJ,QAGAzC,EAAAikB,IAAArf,KAAA4/I,KAAA/hJ,EAAAzC,EAAAkC,OAAAlC,EAAA6mJ,QAAApkJ,KACAzC,IAAA6+C,WACK7+C,IAAAuuB,IAqCL,SAAAm9H,GAAA/mJ,GAGA,OAFA,oBAAAm7I,OAAAn7I,GAEAA,EAAAsf,KACA,OACA,QACA,QACA,QACA,IAAArf,EAAAD,EAAA07I,YAEA,UAAAz7I,GAAA,QAAAA,IAAA27I,YAAA,CACA,IAAAhyH,EAAA3pB,IAAAi6C,KAEA,GACA,IAAA7+C,EAAAuuB,EAAAs4H,QAEA,YAAA7mJ,EAAA,CACA,IAAAyC,EAAAkC,EAEA,IACA3E,IACa,MAAAg7H,GACb98E,GAAAz7C,EAAAu4H,IAIAzsG,IAAAswB,WACStwB,IAAA3pB,GAGT,MAEA,OAGA,GAFA6mJ,GAAA9mJ,GAEA,oBADAC,EAAAD,EAAA+9H,WACAipB,qBAAA,IACA/mJ,EAAAxE,MAAAuE,EAAA27I,cAAA17I,EAAA+8B,MAAAh9B,EAAAy7I,cAAAx7I,EAAA+mJ,uBACO,MAAA3wB,GACP98E,GAAAv5C,EAAAq2H,GAEA,MAEA,OACAywB,GAAA9mJ,GACA,MAEA,OACAinJ,GAAAjnJ,IAIA,SAAAknJ,GAAAlnJ,GACA,WAAAA,EAAAsf,KAAA,IAAAtf,EAAAsf,KAAA,IAAAtf,EAAAsf,IAGA,SAAA6nI,GAAAnnJ,GACAA,EAAA,CACA,QAAAC,EAAAD,EAAAy+H,OAA0B,OAAAx+H,GAAY,CACtC,GAAAinJ,GAAAjnJ,GAAA,CACA,IAAA2pB,EAAA3pB,EACA,MAAAD,EAGAC,IAAAw+H,OAGAtsH,EAAA,OACAyX,OAAA,EAGA,IAAAvuB,EAAA4E,OAAA,EAEA,OAAA2pB,EAAAtK,KACA,OACArf,EAAA2pB,EAAAm0G,UACA1iI,GAAA,EACA,MAEA,OAKA,OACA4E,EAAA2pB,EAAAm0G,UAAA0S,cACAp1I,GAAA,EACA,MAEA,QACA8W,EAAA,OAGA,GAAAyX,EAAAyhH,YAAA0J,GAAA90I,EAAA,IAAA2pB,EAAAyhH,YAAA,IAEArrI,EAAAC,EAAA,IAAA2pB,EAAA5pB,IAAoB,CACpB,KAAU,OAAA4pB,EAAA4hH,SAAoB,CAC9B,UAAA5hH,EAAA60G,QAAAyoB,GAAAt9H,EAAA60G,QAAA,CACA70G,EAAA,KACA,MAAA5pB,EAGA4pB,IAAA60G,OAKA,IAFA70G,EAAA4hH,QAAA/M,OAAA70G,EAAA60G,OAEA70G,IAAA4hH,QAAuB,IAAA5hH,EAAAtK,KAAA,IAAAsK,EAAAtK,KAAA,KAAAsK,EAAAtK,KAA4C,CACnE,KAAAsK,EAAAyhH,UAAA,SAAAprI,EACA,UAAA2pB,EAAA2H,OAAA,IAAA3H,EAAAtK,IAAA,SAAArf,EAAsD2pB,EAAA2H,MAAAktG,OAAA70G,MAAA2H,MAGtD,OAAA3H,EAAAyhH,WAAA,CACAzhH,IAAAm0G,UACA,MAAA/9H,GAIA,QAAAlC,EAAAkC,IAAkB,CAClB,OAAAlC,EAAAwhB,KAAA,IAAAxhB,EAAAwhB,IACA,GAAAsK,EACA,GAAAvuB,EAAA,CACA,IAAAg7H,EAAAp2H,EACArC,EAAAE,EAAAigI,UACAp7E,EAAA/4B,EACA,IAAAysG,EAAAnmG,SAAAmmG,EAAA9iG,WAAA9B,aAAA7zB,EAAA+kD,GAAA0zE,EAAA5kG,aAAA7zB,EAAA+kD,QACS1iD,EAAAwxB,aAAA3zB,EAAAigI,UAAAn0G,QACFvuB,GAAAuC,EAAAqC,EAAA0iD,EAAA7kD,EAAAigI,UAAA,IAAAngI,EAAAsyB,UAAAmmG,EAAAz4H,EAAA21B,YAAA9B,aAAAkxB,EAAA/kD,IAAAy4H,EAAAz4H,GAAA8zB,YAAAixB,GAAA,QAAA/kD,IAAAwpJ,2BAAA,IAAAxpJ,GAAA,OAAAy4H,EAAAswB,UAAAtwB,EAAAswB,QAAAzN,KAAAj5I,EAAAyxB,YAAA5zB,EAAAigI,gBACF,OAAAjgI,EAAAwhB,KAAA,OAAAxhB,EAAAyzB,MAAA,CACLzzB,EAAAyzB,MAAAktG,OAAA3gI,EACAA,IAAAyzB,MACA,SAEA,GAAAzzB,IAAAkC,EAAA,MAEA,KAAU,OAAAlC,EAAA0tI,SAAoB,CAC9B,UAAA1tI,EAAA2gI,QAAA3gI,EAAA2gI,SAAAz+H,EAAA,OACAlC,IAAA2gI,OAGA3gI,EAAA0tI,QAAA/M,OAAA3gI,EAAA2gI,OACA3gI,IAAA0tI,SAIA,SAAAyb,GAAAjnJ,GACA,QAAAC,EAAAD,EAAA4pB,GAAA,EAAAvuB,OAAA,EAAAyC,OAAA,IAAkD,CAClD,IAAA8rB,EAAA,CACAA,EAAA3pB,EAAAw+H,OAEAz+H,EAAA,OAAgB,CAGhB,OAFA,OAAA4pB,GAAAzX,EAAA,OAEAyX,EAAAtK,KACA,OACAjkB,EAAAuuB,EAAAm0G,UACAjgI,GAAA,EACA,MAAAkC,EAEA,OAKA,OACA3E,EAAAuuB,EAAAm0G,UAAA0S,cACA3yI,GAAA,EACA,MAAAkC,EAGA4pB,IAAA60G,OAGA70G,GAAA,EAGA,OAAA3pB,EAAAqf,KAAA,IAAArf,EAAAqf,IAAA,CACAtf,EAAA,QAAAq2H,EAAAp2H,EAAArC,EAAAy4H,IACA,GAAA0wB,GAAAnpJ,GAAA,OAAAA,EAAA2zB,OAAA,IAAA3zB,EAAA0hB,IAAA1hB,EAAA2zB,MAAAktG,OAAA7gI,MAAA2zB,UAAoF,CACpF,GAAA3zB,IAAAy4H,EAAA,MAEA,KAAgB,OAAAz4H,EAAA4tI,SAAoB,CACpC,UAAA5tI,EAAA6gI,QAAA7gI,EAAA6gI,SAAApI,EAAA,MAAAr2H,EACApC,IAAA6gI,OAGA7gI,EAAA4tI,QAAA/M,OAAA7gI,EAAA6gI,OACA7gI,IAAA4tI,QAIA1tI,GAAAu4H,EAAAh7H,EAAAuC,EAAAqC,EAAA89H,UAAA,IAAA1H,EAAAnmG,SAAAmmG,EAAA9iG,WAAA2B,YAAAt3B,GAAAy4H,EAAAnhG,YAAAt3B,IAAAvC,EAAA65B,YAAAj1B,EAAA89H,gBACK,OAAA99H,EAAAqf,KACL,UAAArf,EAAAsxB,MAAA,CACAl2B,EAAA4E,EAAA89H,UAAA0S,cACA3yI,GAAA,EACAmC,EAAAsxB,MAAAktG,OAAAx+H,EACAA,IAAAsxB,MACA,eAEK,GAAAw1H,GAAA9mJ,GAAA,OAAAA,EAAAsxB,MAAA,CACLtxB,EAAAsxB,MAAAktG,OAAAx+H,EACAA,IAAAsxB,MACA,SAGA,GAAAtxB,IAAAD,EAAA,MAEA,KAAU,OAAAC,EAAAurI,SAAoB,CAC9B,UAAAvrI,EAAAw+H,QAAAx+H,EAAAw+H,SAAAz+H,EAAA,OAEA,KADAC,IAAAw+H,QACAn/G,MAAAsK,GAAA,GAGA3pB,EAAAurI,QAAA/M,OAAAx+H,EAAAw+H,OACAx+H,IAAAurI,SAIA,SAAA6b,GAAArnJ,EAAAC,GACA,OAAAA,EAAAqf,KACA,OACA,QACA,QACA,QACAkJ,GAAAu3H,GAAAC,GAAA//I,GACA,MAEA,OACA,MAEA,OACA,IAAA2pB,EAAA3pB,EAAA89H,UAEA,SAAAn0G,EAAA,CACA,IAAAvuB,EAAA4E,EAAA07I,cACA37I,EAAA,OAAAA,IAAA27I,cAAAtgJ,EACA,IAAAyC,EAAAmC,EAAA1J,KACA8/H,EAAAp2H,EAAAy7I,YACAz7I,EAAAy7I,YAAA,KACA,OAAArlB,GA1yEA,SAAAr2H,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACAkC,EAAAm+H,GAAArgI,EACA,UAAA8rB,GAAA,UAAA9rB,EAAAvH,MAAA,MAAAuH,EAAA8U,MAAA+0H,GAAA3nI,EAAAlC,GACAi7I,GAAAnvH,EAAAvuB,GACAA,EAAA09I,GAAAnvH,EAAA9rB,GAEA,QAAAu4H,EAAA,EAAiBA,EAAAp2H,EAAA/I,OAAcm/H,GAAA,GAC/B,IAAAz4H,EAAAqC,EAAAo2H,GACA1zE,EAAA1iD,EAAAo2H,EAAA,GACA,UAAAz4H,EAAAk6I,GAAA93I,EAAA2iD,GAAA,4BAAA/kD,EAAA+2I,GAAA30I,EAAA2iD,GAAA,aAAA/kD,EAAAm3I,GAAA/0I,EAAA2iD,GAAAmkF,GAAA9mI,EAAApC,EAAA+kD,EAAAtnD,GAGA,OAAAuuB,GACA,YACAg+G,GAAA5nI,EAAAlC,GACA,MAEA,eACA+1I,GAAA7zI,EAAAlC,GACA,MAEA,aACAmC,EAAAD,EAAAsnI,cAAAggB,YAAAtnJ,EAAAsnI,cAAAggB,cAAAxpJ,EAAAypJ,SAAA,OAAA39H,EAAA9rB,EAAAN,OAAAg2I,GAAAxzI,IAAAlC,EAAAypJ,SAAA39H,GAAA,GAAA3pB,MAAAnC,EAAAypJ,WAAA,MAAAzpJ,EAAAghC,aAAA00G,GAAAxzI,IAAAlC,EAAAypJ,SAAAzpJ,EAAAghC,cAAA,GAAA00G,GAAAxzI,IAAAlC,EAAAypJ,SAAAzpJ,EAAAypJ,SAAA,YAoxEAC,CAAA59H,EAAAysG,EAAAv4H,EAAAkC,EAAA3E,GAGA,MAEA,OACA,OAAA4E,EAAA89H,WAAA5rH,EAAA,OACAlS,EAAA89H,UAAAkX,UAAAh1I,EAAA07I,cACA,MAEA,OAGA,QACA,MAEA,QAQA,GAPA/xH,EAAA3pB,EAAAw7I,cACApgJ,OAAA,EACA2E,EAAAC,EACA,OAAA2pB,EAAAvuB,GAAA,GAAAA,GAAA,EAAA2E,EAAAC,EAAAsxB,MAAA,IAAA3H,EAAAy6H,aAAAz6H,EAAAy6H,WAAA7G,OACA,OAAAx9I,GArSA,SAAAA,EAAAC,GACA,QAAA2pB,EAAA5pB,IAAkB,CAClB,OAAA4pB,EAAAtK,IAAA,CACA,IAAAjkB,EAAAuuB,EAAAm0G,UACA,GAAA99H,EAAA5E,EAAA++B,MAAAqtH,QAAA,WAAsC,CACtCpsJ,EAAAuuB,EAAAm0G,UACA,IAAAjgI,EAAA8rB,EAAA+xH,cAAAvhH,MACAt8B,OAAA,IAAAA,GAAA,OAAAA,KAAA+Q,eAAA,WAAA/Q,EAAA2pJ,QAAA,KACApsJ,EAAA++B,MAAAqtH,QAAA5P,GAAA,UAAA/5I,SAEK,OAAA8rB,EAAAtK,IAAAsK,EAAAm0G,UAAAkX,UAAAh1I,EAAA,GAAA2pB,EAAA+xH,kBAAwE,SAAA/xH,EAAAtK,KAAA,OAAAsK,EAAA6xH,cAAA,EAC7EpgJ,EAAAuuB,EAAA2H,MAAAi6G,SACA/M,OAAA70G,EACAA,EAAAvuB,EACA,SACK,UAAAuuB,EAAA2H,MAAA,CACL3H,EAAA2H,MAAAktG,OAAA70G,EACAA,IAAA2H,MACA,UAGA,GAAA3H,IAAA5pB,EAAA,MAEA,KAAU,OAAA4pB,EAAA4hH,SAAoB,CAC9B,UAAA5hH,EAAA60G,QAAA70G,EAAA60G,SAAAz+H,EAAA,OACA4pB,IAAA60G,OAGA70G,EAAA4hH,QAAA/M,OAAA70G,EAAA60G,OACA70G,IAAA4hH,SAwQAkc,CAAA1nJ,EAAA3E,GAGA,QAFAuuB,EAAA3pB,EAAAy7I,aAEA,CACAz7I,EAAAy7I,YAAA,KACA,IAAA99I,EAAAqC,EAAA89H,UACA,OAAAngI,MAAAqC,EAAA89H,UAAA,IAAA6oB,IACAh9H,EAAAvvB,QAAA,SAAA2F,GACA,IAAA4pB,EAi/BA,SAAA5pB,EAAAC,GACA,IAAA2pB,EAAA5pB,EAAA+9H,UACA,OAAAn0G,KAAA4R,OAAAv7B,GAEAA,EAAAy9I,GADAz9I,EAAAu9I,KACAx9I,GAEA,QADAA,EAAA2nJ,GAAA3nJ,EAAAC,MACAw8I,GAAAz8I,EAAAC,GAAA,KAAAA,EAAAD,EAAAg8I,iBAAA4L,GAAA5nJ,EAAAC,KAv/BA7B,KAAA,KAAA6B,EAAAD,GACApC,EAAA60B,IAAAzyB,KAAApC,EAAAs0B,IAAAlyB,KAAA2nC,KAAA/d,QAIA,MAEA,QACA,MAEA,QACAzX,EAAA,QAIA,IAAA01I,GAAA,oBAAAp0B,gBAAAn4F,IAEA,SAAAwsH,GAAA9nJ,EAAAC,EAAA2pB,IACAA,EAAA6zH,GAAA7zH,IACAtK,IAAA+lI,GACAz7H,EAAAi1D,QAAA,CACA7hE,QAAA,MAEA,IAAA3hB,EAAA4E,EAAAzC,MAOA,OALAosB,EAAAze,SAAA,WACA48I,GAAA1sJ,GACAwrJ,GAAA7mJ,EAAAC,IAGA2pB,EAGA,SAAAo+H,GAAAhoJ,EAAAC,EAAA2pB,IACAA,EAAA6zH,GAAA7zH,IACAtK,IAAA+lI,GACA,IAAAhqJ,EAAA2E,EAAAzJ,KAAA0tJ,yBAEA,uBAAA5oJ,EAAA,CACA,IAAAyC,EAAAmC,EAAAzC,MAEAosB,EAAAi1D,QAAA,WACA,OAAAxjF,EAAAyC,IAIA,IAAAu4H,EAAAr2H,EAAA+9H,UAUA,OATA,OAAA1H,GAAA,oBAAAA,EAAA4xB,oBAAAr+H,EAAAze,SAAA,WACA,oBAAA9P,IAAA,OAAA6sJ,MAAA,IAAAz2B,IAAA,CAAAt7H,OAAA+xJ,GAAAh2H,IAAA/7B,OACA,IAAAyzB,EAAA3pB,EAAAzC,MACAM,EAAAmC,EAAAmmJ,MACAS,GAAA7mJ,EAAAC,GACA9J,KAAA8xJ,kBAAAr+H,EAAA,CACAu+H,eAAA,OAAArqJ,IAAA,OAGA8rB,EAGA,SAAAw+H,GAAApoJ,GACA,OAAAA,EAAAsf,KACA,OACAm4G,GAAAz3H,EAAAzJ,OAAAmkJ,KACA,IAAAz6I,EAAAD,EAAAqrI,UACA,YAAAprI,GAAAD,EAAAqrI,WAAA,KAAAprI,EAAA,GAAAD,GAAA,KAEA,OACA,OAAA0/I,KAAA/E,KAAA,SAAA16I,EAAAD,EAAAqrI,aAAAl5H,EAAA,OAAAnS,EAAAqrI,WAAA,KAAAprI,EAAA,GAAAD,EAEA,OACA,OAAA4/I,GAAA5/I,GAAA,KAEA,QACA,aAAAC,EAAAD,EAAAqrI,YAAArrI,EAAAqrI,WAAA,KAAAprI,EAAA,GAAAD,GAAA,KAEA,QACA,YAEA,OACA,OAAA0/I,KAAA,KAEA,QACA,OAAAyF,GAAAnlJ,GAAA,KAEA,QACA,aAIA,IAAAqoJ,GAAAxjB,GAAAlJ,uBACA2sB,GAAAzjB,GAAAjJ,kBACA2sB,GAAA,WACAC,IAAA,EACA9vB,GAAA,KACA+vB,GAAA,KACAhwB,GAAA,EACAiwB,IAAA,EACAC,IAAA,EACA5vB,GAAA,KACA6vB,IAAA,EACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAb,GAAA,KAEA,SAAAc,KACA,UAAAtwB,GAAA,QAAA14H,EAAA04H,GAAA+F,OAAwC,OAAAz+H,GAAY,CACpD,IAAAC,EAAAD,EAEA,OAAAC,EAAAqf,KACA,OACA,IAAAsK,EAAA3pB,EAAA1J,KAAAkkJ,kBACA,OAAA7wH,QAAA,IAAAA,GAAA8wH,KACA,MAEA,OACAgF,KACA/E,KACA,MAEA,OACAiF,GAAA3/I,GACA,MAEA,OACAy/I,KACA,MAEA,QACAyF,GAAAllJ,GAGAD,IAAAy+H,OAEAgqB,GAAA,KACAhwB,GAAA,EACAiwB,IAAA,EACAC,IAAA,EACAjwB,GAAA,KAGA,SAAAuwB,KACA,KAAQ,OAAAlwB,IAAY,CACpB,IAAA/4H,EAAA+4H,GAAAsS,UAGA,GAFA,GAAArrI,GAAA+0I,GAAAhc,GAAAgF,UAAA,IAEA,IAAA/9H,EAAA,CACA,IAAAC,EAAA84H,GAAAiS,UACA,OAAA/qI,IAAA,QAAAA,IAAA23H,OAAA,oBAAA33H,IAAA,MAAAA,EAAAu3H,QAAA,OAGA,UAAAx3H,GACA,OACAmnJ,GAAApuB,IACAA,GAAAsS,YAAA,EACA,MAEA,OACA8b,GAAApuB,IACAA,GAAAsS,YAAA,EACAgc,GAAAtuB,GAAAiS,UAAAjS,IACA,MAEA,OACAsuB,GAAAtuB,GAAAiS,UAAAjS,IACA,MAEA,OACAkuB,GAAAjnJ,EAAA+4H,IAAA/4H,EAAAy+H,OAAA,KAAAz+H,EAAAuxB,MAAA,KAAAvxB,EAAAy7I,cAAA,KAAAz7I,EAAA07I,YAAA,aAAA17I,IAAAgrI,aAAAhrI,EAAAy+H,OAAA,KAAAz+H,EAAAuxB,MAAA,KAAAvxB,EAAAy7I,cAAA,KAAAz7I,EAAA07I,YAAA,MAGA3iB,MAAA+iB,YAIA,SAAAoN,KACA,KAAQ,OAAAnwB,IAAY,CACpB,OAAAA,GAAAsS,UAAArrI,EAAA,CACA,IAAAA,EAAA+4H,GAAAiS,UACA/qI,EAAA84H,GAEA,OAAA94H,EAAAqf,KACA,OACA,QACA,QACAkJ,GAAAs3H,GAAAD,GAAA5/I,GACA,MAAAD,EAEA,OACA,OAAAC,EAAAorI,WAAA,OAAArrI,EAAA,CACA,IAAA4pB,EAAA5pB,EAAA27I,cACAtgJ,EAAA2E,EAAAy7I,cAEAx7I,GADAD,EAAAC,EAAA89H,WACA2gB,wBAAAz+I,EAAAq7I,cAAAr7I,EAAA1J,KAAAqzB,EAAA+tG,GAAA13H,EAAA1J,KAAAqzB,GAAAvuB,GACA2E,EAAAmpJ,oCAAAlpJ,EAGA,MAAAD,EAEA,OACA,OACA,OACA,OACA,QACA,MAAAA,EAEA,QACAmS,EAAA,QAGA4mH,MAAA+iB,YAIA,SAAAsN,GAAAppJ,EAAAC,GACA,KAAQ,OAAA84H,IAAY,CACpB,IAAAnvG,EAAAmvG,GAAAsS,UAEA,MAAAzhH,EAAA,CACA,IAAAvuB,EAAA09H,GAAAiS,UACAltI,EAAAi7H,GACA1C,EAAAp2H,EAEA,OAAAnC,EAAAwhB,KACA,OACA,QACA,QACAkJ,GAAAy3H,GAAAC,GAAApiJ,GACA,MAEA,OACA,IAAAF,EAAAE,EAAAigI,UACA,KAAAjgI,EAAAutI,UAAA,UAAAhwI,EAAAuC,EAAAihJ,wBAAqE,CACrE,IAAAl8F,EAAA7kD,EAAAw9I,cAAAx9I,EAAAvH,KAAA8E,EAAAsgJ,cAAAhkB,GAAA75H,EAAAvH,KAAA8E,EAAAsgJ,eACA/9I,EAAAmmJ,mBAAAphG,EAAAtnD,EAAAogJ,cAAA79I,EAAAurJ,qCAGA,QADA9tJ,EAAAyC,EAAA49I,cACAuK,GAAAnoJ,EAAAzC,EAAAuC,GACA,MAEA,OAGA,WAFAvC,EAAAyC,EAAA49I,aAEA,CAEA,GADA99I,EAAA,KACA,OAAAE,EAAAyzB,MAAA,OAAAzzB,EAAAyzB,MAAAjS,KACA,OACA1hB,EAAAE,EAAAyzB,MAAAwsG,UACA,MAEA,OACAngI,EAAAE,EAAAyzB,MAAAwsG,UAEAkoB,GAAAnoJ,EAAAzC,EAAAuC,GAGA,MAEA,OACAy4H,EAAAv4H,EAAAigI,UACA,OAAA1iI,GAAA,EAAAyC,EAAAutI,WAAAgO,GAAAv7I,EAAAvH,KAAAuH,EAAA69I,gBAAAtlB,EAAAljG,QACA,MAEA,OAGA,OAGA,QAGA,QAGA,QACA,MAEA,QACAhhB,EAAA,QAIA,IAAAyX,IAAA,QAAA9rB,EAAAi7H,GAAAnB,OAAAvB,EAAA0C,GAAAgF,UAAA,oBAAAjgI,IAAAu4H,GAAAv4H,EAAA05H,QAAAnB,IACA,IAAAzsG,IAAAi/H,GAAA7oJ,GACA+4H,MAAA+iB,YAkCA,SAAA6B,KACA,OAAAmL,IAAAjP,GAAAiP,IACA,OAAAC,SAGA,SAAAM,GAAArpJ,EAAAC,GACA2oJ,GAAAJ,IAAA,EACAxoJ,EAAAw3H,UAAAv3H,GAAAkS,EAAA,OACA,IAAAyX,EAAA5pB,EAAAspJ,4BACA,IAAA1/H,GAAAzX,EAAA,OACAnS,EAAAspJ,4BAAA,EACA,IAAAjuJ,EAAA4E,EAAA+7I,eACAl+I,EAAAmC,EAAA87I,oBASA,IA72EA,SAAA/7I,EAAAC,GAEA,GADAD,EAAAisG,UAAA,EACA,IAAAhsG,EAAAD,EAAA08I,oBAAA,EAAA18I,EAAA28I,kBAAA,EAAA38I,EAAA+8I,sBAAA,EAAA/8I,EAAAg9I,oBAAA,EAAAh9I,EAAA88I,iBAAA,MAAkJ,CAClJ78I,EAAAD,EAAA88I,mBAAA98I,EAAA88I,iBAAA,GACA,IAAAlzH,EAAA5pB,EAAA28I,kBACA,IAAA/yH,MAAA3pB,EAAAD,EAAA08I,oBAAA18I,EAAA28I,kBAAA,EAAA38I,EAAA08I,oBAAAz8I,IAAAD,EAAA08I,oBAAA18I,EAAA28I,oBAEA,KADA/yH,EAAA5pB,EAAA+8I,uBACAN,GAAAz8I,EAAAC,KAAAD,EAAAg9I,qBAAAh9I,EAAA+8I,sBAAA,EAAA/8I,EAAAg9I,oBAAA,EAAAh9I,EAAA88I,iBAAA,EAAAL,GAAAz8I,EAAAC,MAAA2pB,GAAA6yH,GAAAz8I,EAAAC,GAEA28I,GAAA,EAAA58I,GA41EAupJ,CAAAvpJ,EAAAlC,EAAAzC,EAAAyC,EAAAzC,GACAitJ,GAAA9wB,QAAA,KACAn8H,OAAA,EACA,EAAA4E,EAAAorI,UAAA,OAAAprI,EAAA27I,YAAA37I,EAAA27I,WAAAE,WAAA77I,EAAA5E,EAAA4E,EAAA47I,aAAAxgJ,EAAA4E,EAAA5E,EAAA4E,EAAA47I,YACA1C,GAAAxI,GACAyI,GAhqGA,WACA,IAAAp5I,EAAAsxI,KAEA,GAAAE,GAAAxxI,GAAA,CACA,sBAAAA,EAAA,IAAAC,EAAA,CACAiK,MAAAlK,EAAA+xI,eACAx5I,IAAAyH,EAAAgyI,mBACMhyI,EAAA,CAEN,IAAA4pB,GADA3pB,KAAAD,EAAA+4B,gBAAA94B,EAAA6qI,aAAAr1I,QACAw8I,cAAAhyI,EAAAgyI,eAEA,GAAAroH,GAAA,IAAAA,EAAAsoH,WAAA,CACAjyI,EAAA2pB,EAAAuoH,WACA,IAAA92I,EAAAuuB,EAAAwoH,aACAt0I,EAAA8rB,EAAAyoH,UACAzoH,IAAA0oH,YAEA,IACAryI,EAAAiwB,SAAApyB,EAAAoyB,SACS,MAAAimG,GACTl2H,EAAA,KACA,MAAAD,EAGA,IAAAq2H,EAAA,EACAz4H,GAAA,EACA+kD,GAAA,EACAzvC,EAAA,EACAD,EAAA,EACAylB,EAAA14B,EACA7C,EAAA,KAEA8C,EAAA,OAAkB,CAClB,QAAAkZ,EACAuf,IAAAz4B,GAAA,IAAA5E,GAAA,IAAAq9B,EAAAxI,WAAAtyB,EAAAy4H,EAAAh7H,GACAq9B,IAAA56B,GAAA,IAAA8rB,GAAA,IAAA8O,EAAAxI,WAAAyyB,EAAA0zE,EAAAzsG,GACA,IAAA8O,EAAAxI,WAAAmmG,GAAA39F,EAAAu8G,UAAA/9I,QACA,QAAAiiB,EAAAuf,EAAAlH,aACAr0B,EAAAu7B,EACAA,EAAAvf,EAGA,OAAiB,CACjB,GAAAuf,IAAA14B,EAAA,MAAAC,EAGA,GAFA9C,IAAA8C,KAAAiT,IAAA7X,IAAAuC,EAAAy4H,GACAl5H,IAAAW,KAAAmV,IAAA2W,IAAA+4B,EAAA0zE,GACA,QAAAl9G,EAAAuf,EAAAqS,aAAA,MAEA5tC,GADAu7B,EAAAv7B,GACAo2B,WAGAmF,EAAAvf,EAGAlZ,GAAA,IAAArC,IAAA,IAAA+kD,EAAA,MACAz4C,MAAAtM,EACArF,IAAAoqD,QAEO1iD,EAAA,KAEPA,KAAA,CACAiK,MAAA,EACA3R,IAAA,QAEG0H,EAAA,KAEH,OACA0xI,YAAA3xI,EACA4xI,eAAA3xI,GA4lGAupJ,GACA7Y,IAAA,EAEA5X,GAAA19H,EAAa,OAAA09H,IAAY,CACzBj7H,GAAA,EACA,IAAAu4H,OAAA,EAEA,IACA6yB,KACK,MAAAvmG,GACL7kD,GAAA,EAAAu4H,EAAA1zE,EAGA7kD,IAAA,OAAAi7H,IAAA5mH,EAAA,OAAAonC,GAAAw/E,GAAA1C,GAAA,OAAA0C,WAAA+iB,aAGA,IAAA/iB,GAAA19H,EAAa,OAAA09H,IAAY,CACzBj7H,GAAA,EACAu4H,OAAA,EAEA,IACA4yB,KACK,MAAAtmG,GACL7kD,GAAA,EAAAu4H,EAAA1zE,EAGA7kD,IAAA,OAAAi7H,IAAA5mH,EAAA,OAAAonC,GAAAw/E,GAAA1C,GAAA,OAAA0C,WAAA+iB,aASA,IANApK,GAAA0H,IACAA,GAAA,KACAzI,KAAAwI,GACAA,GAAA,KACAn5I,EAAAw3H,QAAAv3H,EAEA84H,GAAA19H,EAAa,OAAA09H,IAAY,CACzBj7H,GAAA,EACAu4H,OAAA,EAEA,IACA+yB,GAAAppJ,EAAA4pB,GACK,MAAA+4B,GACL7kD,GAAA,EAAAu4H,EAAA1zE,EAGA7kD,IAAA,OAAAi7H,IAAA5mH,EAAA,OAAAonC,GAAAw/E,GAAA1C,GAAA,OAAA0C,WAAA+iB,aAGA,UAAAzgJ,GAAA,OAAAwtJ,GAAA,CACA,IAAAjrJ,EAjGA,SAAAoC,EAAAC,GACA8oJ,GAAAD,GAAAD,GAAA,KACA,IAAAj/H,EAAAqvG,GACAA,IAAA,EAEA,GACA,OAAAh5H,EAAAorI,UAAA,CACA,IAAAhwI,GAAA,EACAyC,OAAA,EAEA,IACA,IAAAu4H,EAAAp2H,EACAuoB,GAAA43H,GAAAP,GAAAxpB,GACA7tG,GAAAq3H,GAAAM,GAAA9pB,GACO,MAAAz4H,GACPvC,GAAA,EAAAyC,EAAAF,EAGAvC,GAAAk+C,GAAAt5C,EAAAnC,GAGAmC,IAAA67I,iBACG,OAAA77I,GAEHg5H,GAAArvG,EAEA,KADAA,EAAA5pB,EAAAg8I,iBACA4L,GAAA5nJ,EAAA4pB,GACAsvG,IAAAD,IAAAwwB,GAAA,gBAsEArrJ,KAAA,KAAA4B,EAAA3E,GACAytJ,GAAA7vI,EAAAywI,yBAAAzwI,EAAA0wI,wBAAA,WACA,OAAAhQ,GAAA/7I,KAEAmrJ,GAAAnrJ,EAGA4qJ,GAAAI,IAAA,EACA,oBAAA1N,OAAAj7I,EAAA89H,WACAn0G,EAAA3pB,EAAA+7I,eAGA,KADA/7I,GADAA,IAAA87I,qBACAnyH,EAAA3pB,EAAA2pB,KACAs+H,GAAA,MA8rBA,SAAAloJ,EAAAC,GACAD,EAAAg8I,eAAA/7I,EACAD,EAAA4pJ,aAAA,KA/rBAC,CAAA7pJ,EAAAC,GAGA,SAAA6pJ,GAAA9pJ,GACA,OAAS,CACT,IAAAC,EAAAD,EAAAgrI,UACAphH,EAAA5pB,EAAAy+H,OACApjI,EAAA2E,EAAAwrI,QAEA,aAAAxrI,EAAAqrI,WAAA,CACA3S,GAAA14H,EAEAA,EAAA,CACA,IAAAlC,EAAAmC,EAEAo2H,EAAAoC,GACA76H,GAFAqC,EAAAD,GAEAu7I,aAEA,OAAAt7I,EAAAqf,KACA,OAGA,QACA,MAEA,QACA,OACA,MAEA,OACAm4G,GAAAx3H,EAAA1J,OAAAmkJ,KACA,MAEA,OACAgF,KACA/E,MACA/8I,EAAAqC,EAAA89H,WACAomB,iBAAAvmJ,EAAA2yB,QAAA3yB,EAAAumJ,eAAAvmJ,EAAAumJ,eAAA,MACA,OAAArmJ,GAAA,OAAAA,EAAAyzB,QAAA0xH,GAAAhjJ,KAAAorI,YAAA,GACAkb,GAAAtmJ,GACA,MAEA,OACA2/I,GAAA3/I,GACA,IAAA0iD,EAAA68F,GAAAD,GAAA/nB,SAEA,GADAnB,EAAAp2H,EAAA1J,KACA,OAAAuH,GAAA,MAAAmC,EAAA89H,UAAAyoB,GAAA1oJ,EAAAmC,EAAAo2H,EAAAz4H,EAAA+kD,GAAA7kD,EAAA85H,MAAA33H,EAAA23H,MAAA33H,EAAAorI,WAAA,UAA8G,GAAAztI,EAAA,CAC9G,IAAAsV,EAAAssI,GAAArnB,GAAAX,SAEA,GAAAyrB,GAAAhjJ,GAAA,CAEAnC,GADAF,EAAAqC,GACA89H,UACA,IAAA9qH,EAAArV,EAAArH,KACAmiC,EAAA96B,EAAA+9I,cACAx+I,EAAAwlD,EAMA,OALA7kD,EAAAogI,GAAAtgI,EACAE,EAAAqgI,GAAAzlG,EACA29F,OAAA,EACA1zE,EAAA1vC,GAGA,aACA,aACA6jH,GAAA,OAAAh5H,GACA,MAEA,YACA,YACA,IAAAmV,EAAA,EAA+BA,EAAA0qF,GAAAzmG,OAAe+b,IAC9C6jH,GAAAn5B,GAAA1qF,GAAAnV,GAGA,MAEA,aACAg5H,GAAA,QAAAh5H,GACA,MAEA,UACA,YACA,WACAg5H,GAAA,QAAAh5H,GACAg5H,GAAA,OAAAh5H,GACA,MAEA,WACAg5H,GAAA,QAAAh5H,GACAg5H,GAAA,SAAAh5H,GACA,MAEA,cACAg5H,GAAA,SAAAh5H,GACA,MAEA,YACA0pI,GAAA1pI,EAAA46B,GACAo+F,GAAA,UAAAh5H,GACAm7I,GAAA97I,EAAA,YACA,MAEA,aACAW,EAAAwpI,cAAA,CACAggB,cAAA5uH,EAAA6uH,UAEAzwB,GAAA,UAAAh5H,GACAm7I,GAAA97I,EAAA,YACA,MAEA,eACAy2I,GAAA91I,EAAA46B,GAAAo+F,GAAA,UAAAh5H,GAAAm7I,GAAA97I,EAAA,YAMA,IAAAk5H,KAHAyiB,GAAAn2F,EAAAjqB,GACAzlB,EAAA,KAEAylB,EACAA,EAAA7pB,eAAAwnH,KAAAnjH,EAAAwlB,EAAA29F,GAAA,aAAAA,EAAA,kBAAAnjH,EAAApV,EAAAsf,cAAAlK,IAAAD,EAAA,YAAAC,IAAA,kBAAAA,GAAApV,EAAAsf,cAAA,GAAAlK,IAAAD,EAAA,eAAAC,IAAA0pH,EAAA/tH,eAAAwnH,IAAA,MAAAnjH,GAAA+lI,GAAA97I,EAAAk5H,IAGA,OAAA1zE,GACA,YACA2hF,GAAAxmI,GACAgqI,GAAAhqI,EAAA46B,GAAA,GACA,MAEA,eACA4rG,GAAAxmI,GACAg2I,GAAAh2I,GACA,MAEA,aACA,aACA,MAEA,QACA,oBAAA46B,EAAAguH,UAAA5oJ,EAAA6oJ,QAAAzN,IAGA7iB,EAAApjH,EACArV,EAAA89I,YAAArlB,GACAz4H,EAAA,OAAAy4H,IACAgwB,GAAApmJ,OACe,CACfy4B,EAAAz4B,EACAnC,EAAAu4H,EACAl5H,EAAAS,EACAqV,EAAA,IAAA0vC,EAAAzyB,SAAAyyB,IAAA5pB,cACA7lB,IAAAkhI,GAAAC,OAAAnhI,EAAAshI,GAAA12I,IACAoV,IAAAkhI,GAAAC,KAAA,WAAAv2I,MAAAmV,EAAA4d,cAAA,QAAAqf,UAAA,qBAAAj9B,EAAAnV,EAAAo3B,YAAAp3B,EAAA0zB,aAAA,kBAAAr0B,EAAA67I,GAAA/lI,IAAA4d,cAAA/yB,EAAA,CACAk7I,GAAA77I,EAAA67I,MACiB/lI,IAAA4d,cAAA/yB,GAAA,WAAAA,GAAAX,EAAAoqJ,WAAAt0I,EAAAs0I,UAAA,IAAAt0I,IAAA82I,gBAAA72I,EAAApV,IACjBA,EAAAmV,GACAirH,GAAAxlG,EACA56B,EAAAqgI,GAAAvgI,EACA0oJ,GAAAxoJ,EAAAmC,GAAA,MACA9C,EAAAW,EAGA,IAAAqb,EAAAwpC,EACAwzE,EAAA4iB,GAHA9lI,EAAAojH,EACA39F,EAAA96B,GAIA,OAAAqV,GACA,aACA,aACA6jH,GAAA,OAAA35H,GACAwlD,EAAAjqB,EACA,MAEA,YACA,YACA,IAAAiqB,EAAA,EAA+BA,EAAAg7C,GAAAzmG,OAAeyrD,IAC9Cm0E,GAAAn5B,GAAAh7C,GAAAxlD,GAGAwlD,EAAAjqB,EACA,MAEA,aACAo+F,GAAA,QAAA35H,GACAwlD,EAAAjqB,EACA,MAEA,UACA,YACA,WACAo+F,GAAA,QAAA35H,GACA25H,GAAA,OAAA35H,GACAwlD,EAAAjqB,EACA,MAEA,WACAo+F,GAAA,QAAA35H,GACA25H,GAAA,SAAA35H,GACAwlD,EAAAjqB,EACA,MAEA,cACAo+F,GAAA,SAAA35H,GACAwlD,EAAAjqB,EACA,MAEA,YACA8uG,GAAArqI,EAAAu7B,GACAiqB,EAAAykF,GAAAjqI,EAAAu7B,GACAo+F,GAAA,UAAA35H,GACA87I,GAAA9/H,EAAA,YACA,MAEA,aACAwpC,EAAA2wF,GAAAn2I,EAAAu7B,GACA,MAEA,aACAv7B,EAAAmqI,cAAA,CACAggB,cAAA5uH,EAAA6uH,UAEA5kG,EAAApxC,EAAA,GAA4BmnB,EAAA,CAC5Bl7B,WAAA,IAEAs5H,GAAA,UAAA35H,GACA87I,GAAA9/H,EAAA,YACA,MAEA,eACAy6H,GAAAz2I,EAAAu7B,GACAiqB,EAAA+wF,GAAAv2I,EAAAu7B,GACAo+F,GAAA,UAAA35H,GACA87I,GAAA9/H,EAAA,YACA,MAEA,QACAwpC,EAAAjqB,EAGAogH,GAAA7lI,EAAA0vC,GACAzvC,OAAA,EACA,IAAAy+C,EAAA1+C,EACAulH,EAAAr7H,EACA44H,EAAApzE,EAEA,IAAAzvC,KAAA6iH,EACA,GAAAA,EAAAlnH,eAAAqE,GAAA,CACA,IAAA4iH,EAAAC,EAAA7iH,GACA,UAAAA,EAAA4kI,GAAAtf,EAAA1C,GAAA,4BAAA5iH,EAAA,OAAA4iH,MAAA0jB,YAAA,IAAA7E,GAAAnc,EAAA1C,GAAA,aAAA5iH,EAAA,kBAAA4iH,GAAA,aAAAnkE,GAAA,KAAAmkE,IAAAif,GAAAvc,EAAA1C,GAAA,kBAAAA,GAAAif,GAAAvc,EAAA,GAAA1C,GAAA,mCAAA5iH,GAAA,6BAAAA,GAAA,cAAAA,IAAA0pH,EAAA/tH,eAAAqE,GAAA,MAAA4iH,GAAAmjB,GAAA9/H,EAAAjG,GAAA,MAAA4iH,GAAAgR,GAAAtO,EAAAtlH,EAAA4iH,EAAAK,IAIA,OAAAljH,GACA,YACAqxH,GAAAnnI,GACA2qI,GAAA3qI,EAAAu7B,GAAA,GACA,MAEA,eACA4rG,GAAAnnI,GACA22I,GAAA32I,GACA,MAEA,aACA,MAAAu7B,EAAAl7B,OAAAL,EAAA+zB,aAAA,WAAAi2G,GAAAzuG,EAAAl7B,QACA,MAEA,cACAmlD,EAAAxlD,GACAoqJ,WAAA7uH,EAAA6uH,SAEA,OADApqJ,EAAAu7B,EAAAl7B,OACAg2I,GAAA7wF,IAAAjqB,EAAA6uH,SAAApqJ,GAAA,SAAAu7B,EAAAoG,cAAA00G,GAAA7wF,IAAAjqB,EAAA6uH,SAAA7uH,EAAAoG,cAAA,GACA,MAEA,QACA,oBAAA6jB,EAAA+jG,UAAAvpJ,EAAAwpJ,QAAAzN,KAGAt7I,EAAAy7I,GAAAhjB,EAAAz4H,KAAAyoJ,GAAApmJ,GACAA,EAAA89H,UAAAjgI,EAGA,OAAAmC,EAAA23H,MAAA33H,EAAAorI,WAAA,UACa,OAAAprI,EAAA89H,WAAA5rH,EAAA,OACb,MAEA,OACArU,GAAA,MAAAmC,EAAA89H,UAAA0oB,GAAA3oJ,EAAAmC,EAAAnC,EAAA69I,cAAA/9I,IAAA,kBAAAA,IAAA,OAAAqC,EAAA89H,WAAA5rH,EAAA,QAAArU,EAAA0hJ,GAAAD,GAAA/nB,SAAAgoB,GAAArnB,GAAAX,SAAAyrB,GAAAhjJ,IAAAo2H,GAAAz4H,EAAAqC,GAAA89H,UAAAjgI,EAAAF,EAAA+9I,cAAAtlB,EAAA6H,GAAAtgI,KAAAy4H,EAAA4e,YAAAn3I,IAAAuoJ,GAAApmJ,KAAAo2H,EAAAp2H,GAAArC,GAAA,IAAAE,EAAAoyB,SAAApyB,IAAAi7B,eAAA3D,eAAAx3B,IAAAsgI,GAAAj+H,EAAAo2H,EAAA0H,UAAAngI,IACA,MAEA,QACA,MAEA,QAGA,GAFAA,EAAAqC,EAAAw7I,cAEA,QAAAx7I,EAAAorI,WAAA,CACAprI,EAAA+7I,eAAA3lB,EACAqC,GAAAz4H,EACA,MAAAD,EAGApC,EAAA,OAAAA,EACAy4H,EAAA,OAAAv4H,GAAA,OAAAA,EAAA29I,cACA,OAAA39I,IAAAF,GAAAy4H,IAAA,QAAAv4H,IAAAyzB,MAAAi6G,WAAA,QAAA7oF,EAAA1iD,EAAA47I,cAAA57I,EAAA47I,YAAA/9I,IAAAg+I,WAAAn5F,IAAA1iD,EAAA47I,YAAA57I,EAAA27I,WAAA99I,IAAAg+I,WAAA,MAAAh+I,EAAAutI,UAAA,KACAztI,GAAAy4H,KAAAp2H,EAAAorI,WAAA,GACA,MAEA,OAGA,OAGA,QACA,MAEA,OACAqU,KACA6G,GAAAtmJ,GACA,MAEA,QACAklJ,GAAAllJ,GACA,MAEA,OAGA,QACA,MAEA,QACAw3H,GAAAx3H,EAAA1J,OAAAmkJ,KACA,MAEA,QACA,MAEA,QACAvoI,EAAA,OAGAumH,GAAA,KAKA,GAFAz4H,EAAAD,EAEA,IAAAy4H,IAAA,IAAAx4H,EAAA87I,oBAAA,CAGA,IAFAn+I,EAAA,EAEAy4H,EAAAp2H,EAAAsxB,MAAyB,OAAA8kG,IACzBv4H,EAAAu4H,EAAA2lB,gBAAAp+I,MAAAE,IAAA6kD,EAAA0zE,EAAA0lB,qBAAAn+I,MAAA+kD,GAAA0zE,IAAAmV,QAGAvrI,EAAA87I,oBAAAn+I,EAGA,UAAA86H,GAAA,OAAAA,GACA,OAAA9uG,GAAA,UAAAA,EAAAyhH,aAAA,OAAAzhH,EAAAiyH,cAAAjyH,EAAAiyH,YAAA77I,EAAA67I,aAAA,OAAA77I,EAAA47I,aAAA,OAAAhyH,EAAAgyH,aAAAhyH,EAAAgyH,WAAAE,WAAA97I,EAAA67I,aAAAjyH,EAAAgyH,WAAA57I,EAAA47I,YAAA,EAAA57I,EAAAqrI,YAAA,OAAAzhH,EAAAgyH,WAAAhyH,EAAAgyH,WAAAE,WAAA97I,EAAA4pB,EAAAiyH,YAAA77I,EAAA4pB,EAAAgyH,WAAA57I,QACK,CAEL,WADAA,EAAAooJ,GAAApoJ,IACA,OAAAA,EAAAqrI,WAAA,KAAArrI,EACA,OAAA4pB,MAAAiyH,YAAAjyH,EAAAgyH,WAAA,KAAAhyH,EAAAyhH,WAAA,MAGA,UAAAhwI,EAAA,OAAAA,EACA,UAAAuuB,EAA0B,MAA1B5pB,EAAA4pB,EAGA,YAGA,SAAAogI,GAAAhqJ,GACA,IAAAC,EAAAskJ,GAAAvkJ,EAAAgrI,UAAAhrI,EAAAy4H,IAIA,OAHAz4H,EAAA27I,cAAA37I,EAAAu7I,aACA,OAAAt7I,MAAA6pJ,GAAA9pJ,IACAsoJ,GAAA9wB,QAAA,KACAv3H,EAGA,SAAAgqJ,GAAAjqJ,EAAAC,GACAuoJ,IAAAr2I,EAAA,OACAwrI,KACA6K,IAAA,EACA,IAAA5+H,EAAAy+H,GAAA7wB,QACA6wB,GAAA7wB,QAAA6pB,GACA,IAAAhmJ,EAAA2E,EAAAk9I,2BACA7hJ,IAAAo9H,IAAAz4H,IAAAyoJ,IAAA,OAAA/vB,KAAAswB,KAAAvwB,GAAAp9H,EAAAq9H,GAAAwjB,IAAAuM,GAAAzoJ,GAAAw3H,QAAA,MAAAx3H,EAAAspJ,4BAAA,GAGA,IAFA,IAAAxrJ,GAAA,IAEA,CACA,IACA,GAAAmC,EAAA,KAAmB,OAAAy4H,KAAAwxB,MACnBxxB,GAAAsxB,GAAAtxB,SACO,KAAY,OAAAA,IACnBA,GAAAsxB,GAAAtxB,IAEK,MAAA3C,GACL,GAAAmvB,GAAAD,GAAAD,GAAA,KAAA1D,KAAA,OAAA5oB,GAAA56H,GAAA,EAAAiqJ,GAAAhyB,OAA+D,CAC/D,OAAA2C,IAAAvmH,EAAA,OACA,IAAAkkH,EAAAqC,GACA96H,EAAAy4H,EAAAoI,OACA,UAAA7gI,EAAsC,CACtCoC,EAAA,CACA,IAAA2iD,EAAA3iD,EACAkT,EAAAtV,EACAqV,EAAAojH,EACA39F,EAAAq9F,EAKA,GAJAn4H,EAAA66H,GACAxlH,EAAAo4H,WAAA,KACAp4H,EAAA4oI,YAAA5oI,EAAA2oI,WAAA,KAEA,OAAAljH,GAAA,kBAAAA,GAAA,oBAAAA,EAAAiP,KAAA,CACA,IAAAxqC,EAAAu7B,EACAA,EAAAxlB,EACA,IAAAiG,GAAA,EACAg9G,GAAA,EAEA,GACA,QAAAz9F,EAAApZ,IAAA,CACA,IAAAqyC,EAAAj5B,EAAAsyG,UAEA,UAAAr5E,GAAA,QAAAA,IAAA8pF,eAAA,CACAtlB,EAAA,eAAAxkE,EAAA0yF,YACA,MAIA,kBADA1yF,EAAAj5B,EAAA6iH,aAAA4O,eACA,GAAAx4F,EAAAx4C,EAAA,IAA+D,IAAAA,GAAAw4C,EAAAx4C,OAAAw4C,IAG/Dj5B,IAAA+lG,aACe,OAAA/lG,GAEfA,EAAAxlB,EAEA,GAGA,IAFAy+C,EAAA,KAAAj5B,EAAApZ,OAAAqyC,OAAA,IAAAj5B,EAAAijH,cAAA2I,UAAA,OAAA5rH,EAAA+iH,eAEA9pF,EAAA,CAIA,GAFA,QADAz+C,EAAAwlB,EAAAgjH,eACAxoI,EAAA,IAAAu+G,KAAAv/F,IAAA/0B,GAAAu7B,EAAAgjH,YAAAxoI,KAAAgf,IAAA/0B,GAEA,OAAAu7B,EAAAwZ,MAAA,CACAxZ,EAAA2yG,WAAA,GACAp4H,EAAAo4H,YAAA,KACA,IAAAp4H,EAAAqM,MAAA,OAAArM,EAAA+3H,UAAA/3H,EAAAqM,IAAA,KAAA1hB,EAAA6/I,GAAA,aAAAn+H,IAAAy+H,GAAAH,GAAA3qI,EAAArV,KACAqV,EAAA+oI,eAAA,WACA,MAAAh8I,EAIAkT,EAAAtV,EACA,IAAA46H,GAFAvlH,EAAA0vC,GAEAynG,UACA,OAAA5xB,KAAAvlH,EAAAm3I,UAAA,IAAAvC,GAAAl2F,EAAA,IAAA8/D,IAAA+G,EAAA12H,IAAA3E,EAAAw0D,SAAA,KAAAA,EAAA6mE,EAAAjsG,IAAApvB,MAAAw0D,EAAA,IAAA8/D,IAAA+G,EAAA12H,IAAA3E,EAAAw0D,IACAA,EAAAl/B,IAAAvf,KAAAy+C,EAAAz/B,IAAAhf,GAAAD,EAAAo3I,GAAAjsJ,KAAA,KAAA6U,EAAA9V,EAAA+V,GAAA/V,EAAAwqC,KAAA10B,OACA,IAAAkG,EAAAwpC,EAAA,iBAAAwzE,MAAA,eAAA8mB,GAAAt6F,EAAA/kD,IAAA,KAAA+kD,EAAAwzE,EAAAh9G,GACA,GAAAwpC,GAAA+lG,GAAA/lG,IAAA+lG,GAAA/lG,GACAjqB,EAAA2yG,WAAA,KACA3yG,EAAAsjH,eAAAp+I,EACA,MAAAoC,EAGA04B,IAAA+lG,aACe,OAAA/lG,GAEfA,EAAAntB,OAAAq6H,GAAA3yH,EAAA1c,OAAA,6MAAAuvI,GAAA7yH,IAGA01I,IAAA,EACAjwH,EAAAytH,GAAAztH,EAAAzlB,GACA0vC,EAAAzvC,EAEA,GACA,OAAAyvC,EAAArjC,KACA,OACAqjC,EAAA0oF,WAAA,KACA1oF,EAAAq5F,eAAAp+I,EAEAmoJ,GAAApjG,EADA/kD,EAAAkqJ,GAAAnlG,EAAAjqB,EAAA96B,IAEA,MAAAoC,EAEA,OACA,GAAAmZ,EAAAuf,EAAAy9F,EAAAxzE,EAAApsD,KAAA0c,EAAA0vC,EAAAo7E,UAAA,QAAAp7E,EAAA0oF,aAAA,oBAAAlV,EAAA8tB,0BAAA,OAAAhxI,GAAA,oBAAAA,EAAAg1I,oBAAA,OAAAC,QAAAz1H,IAAAxf,KAAA,CACA0vC,EAAA0oF,WAAA,KACA1oF,EAAAq5F,eAAAp+I,EAEAmoJ,GAAApjG,EADA/kD,EAAAoqJ,GAAArlG,EAAAxpC,EAAAvb,IAEA,MAAAoC,GAKA2iD,IAAA87E,aACa,OAAA97E,GAGb+1E,GAAAoxB,GAAAzzB,GACA,SAhGAv4H,GAAA,EAAAiqJ,GAAAhyB,IAqGA,MAOA,GAJAyyB,IAAA,EACAH,GAAA7wB,QAAA5tG,EACAs7H,GAAAD,GAAAD,GAAA,KACA1D,KACAxjJ,EAAA2qJ,GAAA,KAAAzoJ,EAAA4pJ,aAAA,UAA0C,UAAAlxB,GAAA14H,EAAA4pJ,aAAA,SAA2C,CAKrF,GAHA,QADAhgI,EAAA5pB,EAAAw3H,QAAAwT,YACA74H,EAAA,OACAs2I,GAAA,KAEAE,GAAA,CAKA,GAJA7qJ,EAAAkC,EAAA28I,kBACAtmB,EAAAr2H,EAAAg9I,oBACAp/I,EAAAoC,EAAA88I,iBAEA,IAAAh/I,KAAAzC,GAAA,IAAAg7H,KAAAh7H,GAAA,IAAAuC,KAAAvC,EAGA,OAFAwhJ,GAAA78I,EAAA3E,QACAivJ,GAAAtqJ,EAAA4pB,EAAAvuB,EAAA2E,EAAAg8I,gBAAA,GAIA,IAAAh8I,EAAAisG,UAAAhsG,EAKA,OAJAD,EAAAisG,UAAA,EACA5wG,EAAA2E,EAAAk9I,2BAAA7hJ,EACA4E,EAAAD,EAAAg8I,eAAA,gBACAsO,GAAAtqJ,EAAA4pB,EAAAvuB,EAAA4E,GAAA,GAKAA,IAAA,IAAAyoJ,IAAA7L,GAAA78I,EAAA3E,IAAA4E,EAAA,eAAAg9I,GAAAj9I,EAAA3E,KAAAqtJ,QAAAzoJ,KAAA,eAAAu9I,MAAAv9I,EAAAyoJ,GAAAzoJ,EAAAqqJ,GAAAtqJ,EAAA4pB,EAAAvuB,EAAA2E,EAAAg8I,eAAA,EAAA/7I,EAAA,EAAAA,KAAAD,EAAAspJ,4BAAAjuJ,EAAA2E,EAAA4pJ,aAAAhgI,IAIA,SAAA2vB,GAAAv5C,EAAAC,GACA,QAAA2pB,EAAA5pB,EAAAy+H,OAAwB,OAAA70G,GAAY,CACpC,OAAAA,EAAAtK,KACA,OACA,IAAAjkB,EAAAuuB,EAAAm0G,UAEA,uBAAAn0G,EAAArzB,KAAA0tJ,0BAAA,oBAAA5oJ,EAAA4sJ,oBAAA,OAAAC,QAAAz1H,IAAAp3B,IAKA,OAFAuiJ,GAAAh0H,EADA5pB,EAAAgoJ,GAAAp+H,EADA5pB,EAAAmmJ,GAAAlmJ,EAAAD,GACA,kBAEA69I,GAAAj0H,EAAA,YAIA,MAEA,OAKA,OAFAg0H,GAAAh0H,EADA5pB,EAAA8nJ,GAAAl+H,EADA5pB,EAAAmmJ,GAAAlmJ,EAAAD,GACA,kBAEA69I,GAAAj0H,EAAA,YAIAA,IAAA60G,OAGA,IAAAz+H,EAAAsf,MAAAs+H,GAAA59I,EAAA4pB,EAAAk+H,GAAA9nJ,EAAA4pB,EAAAu8H,GAAAlmJ,EAAAD,GAAA,aAAA69I,GAAA79I,EAAA,aAGA,SAAA09I,GAAA19I,EAAAC,GACA,IAAA2pB,EAAA3Q,EAAAsxI,mCACAlvJ,OAAA,EACA,UAAA4E,EAAAiyC,MAAA72C,EAAA,gBAAyC,GAAAmtJ,KAAAI,GAAAvtJ,EAAAo9H,OAA0B,CACnE,OAAA7uG,GACA,KAAA3Q,EAAAuxI,2BACAnvJ,EAAA,WACA,MAEA,KAAA4d,EAAAwxI,8BACApvJ,EAAA,8BAAA2E,EAAA,WACA,MAEA,KAAAiZ,EAAA0wI,wBACAtuJ,EAAA,8BAAA2E,EAAA,YACA,MAEA,KAAAiZ,EAAAyxI,qBACA,KAAAzxI,EAAA0xI,sBACAtvJ,EAAA,EACA,MAEA,QACA8W,EAAA,OAGA,OAAAs2I,IAAAptJ,IAAAo9H,MAAAp9H,EAGA,OADAuuB,IAAA3Q,EAAAwxI,gCAAA,IAAAG,IAAAvvJ,EAAAuvJ,SAAAvvJ,GACAA,EAGA,SAAAgvJ,GAAArqJ,EAAAC,EAAA2pB,GACA,IAAAvuB,EAAA2E,EAAAoqJ,UACA,OAAA/uJ,KAAAmgC,OAAAv7B,GACA,OAAAwoJ,IAAAhwB,KAAA7uG,EAAA6+H,GAAA,MAAwCxoJ,EAAAD,EAAA+8I,sBAAA1hJ,EAAA2E,EAAAg9I,oBAAA,IAAA/8I,GAAA2pB,GAAA3pB,GAAA2pB,GAAAvuB,IACxC2E,EAAAisG,UAAA,GAEA,KADAhsG,EAAAD,EAAA88I,mBACA78I,EAAA2pB,KAAA5pB,EAAA88I,iBAAAlzH,GACAgzH,GAAAhzH,EAAA5pB,GAEA,KADA4pB,EAAA5pB,EAAAg8I,iBACA4L,GAAA5nJ,EAAA4pB,KAaA,SAAA+9H,GAAA3nJ,EAAAC,GACAD,EAAAg8I,eAAA/7I,IAAAD,EAAAg8I,eAAA/7I,GACA,IAAA2pB,EAAA5pB,EAAAgrI,UACA,OAAAphH,KAAAoyH,eAAA/7I,IAAA2pB,EAAAoyH,eAAA/7I,GACA,IAAA5E,EAAA2E,EAAAy+H,OACA3gI,EAAA,KACA,UAAAzC,GAAA,IAAA2E,EAAAsf,IAAAxhB,EAAAkC,EAAA+9H,eAAiD,KAAW,OAAA1iI,GAAY,CAKxE,GAJAuuB,EAAAvuB,EAAA2vI,UACA3vI,EAAA0gJ,oBAAA97I,IAAA5E,EAAA0gJ,oBAAA97I,GACA,OAAA2pB,KAAAmyH,oBAAA97I,IAAA2pB,EAAAmyH,oBAAA97I,GAEA,OAAA5E,EAAAojI,QAAA,IAAApjI,EAAAikB,IAAA,CACAxhB,EAAAzC,EAAA0iI,UACA,MAGA1iI,IAAAojI,OAEA,OAAA3gI,EAGA,SAAA+/I,GAAA79I,EAAAC,GAEA,QADAD,EAAA2nJ,GAAA3nJ,EAAAC,OACAuoJ,IAAA,IAAA/vB,IAAAx4H,EAAAw4H,IAAAuwB,KAAAvM,GAAAz8I,EAAAC,GAAAuoJ,KAAAI,IAAAH,KAAAzoJ,GAAA4nJ,GAAA5nJ,IAAAg8I,gBAAA6O,GAAAC,KAAAD,GAAA,EAAA14I,EAAA,SAGA,SAAA44I,GAAA/qJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACA,OAAAmb,EAAAywI,yBAAAzwI,EAAAuxI,2BAAA,WACA,OAAAxqJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,KAIA,IAAAktJ,GAAA,KACAnvB,GAAA,KACA3sE,GAAA,EACA+7F,QAAA,EACAhyB,IAAA,EACAiyB,GAAA,KACApvB,GAAA,EACA8uB,GAAA,EACAO,IAAA,EACAC,GAAA,KACAlyB,IAAA,EACAmyB,IAAA,EACAC,GAAA,KACAC,GAAAtyI,EAAAuyI,eACAC,GAAA,YAAAF,GAAA,MACAG,GAAAD,GACAX,GAAA,GACAD,GAAA,EACAc,GAAA,KAEA,SAAAC,KACAH,GAAA,aAAAxyI,EAAAuyI,eAAAD,IAAA,MAGA,SAAAM,GAAA7rJ,EAAAC,GACA,OAAAivD,GAAA,CACA,GAAAjvD,EAAAivD,GAAA,OACA,OAAA+7F,IAAAhyI,EAAA6gI,wBAAAmR,IAGA/7F,GAAAjvD,EACAD,EAAAiZ,EAAAuyI,eAAAD,GACAN,GAAAhyI,EAAA2gI,0BAAAkS,GAAA,CACAr9I,QAAA,eAAAxO,GAAAD,IAIA,SAAAsqJ,GAAAtqJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACAkC,EAAAg8I,eAAA3gJ,EACA,IAAAyC,GAAAosJ,KAAA,EAAApsJ,IAAAkC,EAAA+rJ,cAAAtS,GAGA,SAAAz5I,EAAAC,EAAA2pB,GACA5pB,EAAAspJ,4BAAA1/H,EACA5pB,EAAA4pJ,aAAA3pJ,EACA2rJ,KACAF,GAAAD,GACAO,GAAAhsJ,EAAA4pB,IARAxrB,KAAA,KAAA4B,EAAAC,EAAA2pB,GAAA9rB,KAAAkC,EAAAspJ,4BAAA1/H,EAAA5pB,EAAA4pJ,aAAA3pJ,GAgBA,SAAAu9I,KACA,OAAAvkB,GAAAyyB,IACAO,KACA,IAAAnwB,IAAA,IAAAA,KAAA8vB,KAAAF,GAAAD,IACAC,IAGA,SAAA9D,GAAA5nJ,EAAAC,GACA,OAAAD,EAAAksJ,mBAAAlsJ,EAAAg8I,eAAA/7I,EAAA,OAAA47H,IAAAmvB,GAAAnvB,GAAA77H,IAAAksJ,kBAAAlsJ,IAAA67H,MAAAqwB,kBAAAlsJ,GAAAksJ,kBAAAlB,IAAA/qJ,EAAAD,EAAAg8I,iBAAAh8I,EAAAg8I,eAAA/7I,GACAg5H,KAAAC,GAAAmyB,KAAAH,GAAAlrJ,EAAA87H,GAAA,WAAAqwB,GAAAnsJ,EAAA,6BAAAC,EAAAwpJ,GAAA,eAAAoC,GAAA7rJ,EAAAC,IAGA,SAAAgsJ,KACA,IAAAjsJ,EAAA,EACAC,EAAA,KACA,UAAA47H,GAAA,QAAAjyG,EAAAiyG,GAAAxgI,EAAA2vJ,GAAyC,OAAA3vJ,GAAY,CACrD,IAAAyC,EAAAzC,EAAA2gJ,eAEA,OAAAl+I,EAAA,CAGA,IAFA,OAAA8rB,GAAA,OAAAiyG,KAAA1pH,EAAA,OAEA9W,MAAA6wJ,kBAAA,CACAlB,GAAAnvB,GAAAxgI,EAAA6wJ,kBAAA,KACA,MACO,GAAA7wJ,IAAA2vJ,MAAAltJ,EAAAzC,EAAA6wJ,kBAAArwB,GAAAqwB,kBAAApuJ,EAAAzC,EAAA6wJ,kBAAA,SAAsG,IAAA7wJ,IAAAwgI,GAAA,EAC7GA,GAAAjyG,GACAsiI,kBAAAlB,GACA3vJ,EAAA6wJ,kBAAA,KACA,MACOtiI,EAAAsiI,kBAAA7wJ,EAAA6wJ,kBAAA7wJ,EAAA6wJ,kBAAA,KAEP7wJ,EAAAuuB,EAAAsiI,sBACK,CAEL,GADApuJ,EAAAkC,MAAAlC,EAAAmC,EAAA5E,GACAA,IAAAwgI,GAAA,MACA,gBAAA77H,EAAA,MACA4pB,EAAAvuB,EACAA,IAAA6wJ,mBAGAhB,GAAAjrJ,EACA67H,GAAA97H,EAGA,IAAAosJ,IAAA,EAEA,SAAAlC,KACA,QAAAkC,MAAAnzI,EAAAozI,yBAAAD,IAAA,GAGA,SAAAN,KACA,IACA,IAAA5B,MAAA,OAAAc,GAAA,CACAY,KACA,IAAA5rJ,EAAAgrJ,GAEA,GACA,IAAA/qJ,EAAAD,EAAAg8I,eACA,IAAA/7I,GAAAwrJ,IAAAxrJ,IAAAD,EAAAk9I,2BAAAuO,IACAzrJ,IAAAksJ,wBACOlsJ,IAAAgrJ,IAGPvB,GAAA,MACG,QACH2C,IAAA,GAIA,SAAA3C,GAAAzpJ,EAAAC,GAEA,GADAgsJ,KACAhsJ,EAAA,IAAA2rJ,KAAAF,GAAAD,GAA4B,OAAAP,IAAA,IAAApvB,IAAA97H,GAAA87H,MAAAswB,IAAAX,GAAA3vB,KAC5BqwB,GAAAjB,GAAApvB,GAAA2vB,GAAA3vB,IAAAmwB,KAAAL,KAAAF,GAAAD,QACG,KAAY,OAAAP,IAAA,IAAApvB,IAAA97H,GAAA87H,IACfqwB,GAAAjB,GAAApvB,IAAA,GAAAmwB,KAMA,GAJAhsJ,IAAAivD,GAAA,EAAA+7F,GAAA,MACA,IAAAnvB,IAAA+vB,GAAAX,GAAApvB,IACA+uB,GAAA,EACAc,GAAA,KACA,OAAAL,GAAA,IAAAtrJ,EAAAsrJ,MAAA,KAAArrJ,EAAA,EAAiDA,EAAAD,EAAA9I,OAAc+I,IAAA,CAC/D,IAAA2pB,EAAA5pB,EAAAC,GAEA,IACA2pB,EAAA0iI,cACK,MAAAjxJ,GACL8vJ,SAAA,EAAAC,GAAA/vJ,IAGA,GAAA8vJ,GAAA,MAAAnrJ,EAAAorJ,MAAA,KAAAD,IAAA,EAAAnrJ,EAGA,SAAAgsJ,GAAAhsJ,EAAAC,GACAg5H,IAAA9mH,EAAA,OACA+4I,GAAAlrJ,EACA87H,GAAA77H,EACAksJ,GAAAnsJ,EAAAC,GAAA,GACAwpJ,GAAA,eAGA,SAAA0C,GAAAnsJ,EAAAC,EAAA2pB,GAIA,GAHAqvG,IAAA9mH,EAAA,OACA8mH,IAAA,EAEArvG,EAAA,CACA,IAAAvuB,EAAA2E,EAAA4pJ,aACA,OAAAvuJ,EAAAkxJ,GAAAvsJ,EAAA3E,EAAA4E,IAAAD,EAAA4pJ,aAAA,WAAAvuJ,EAAA2E,EAAA+rJ,iBAAA/rJ,EAAA+rJ,eAAA,EAAArS,GAAAr+I,IAAA4uJ,GAAAjqJ,EAAA4pB,GAAA,QAAAvuB,EAAA2E,EAAA4pJ,gBAAAM,KAAAlqJ,EAAA4pJ,aAAAvuJ,EAAAkxJ,GAAAvsJ,EAAA3E,EAAA4E,UACG,QAAA5E,EAAA2E,EAAA4pJ,cAAA2C,GAAAvsJ,EAAA3E,EAAA4E,IAAAD,EAAA4pJ,aAAA,WAAAvuJ,EAAA2E,EAAA+rJ,iBAAA/rJ,EAAA+rJ,eAAA,EAAArS,GAAAr+I,IAAA4uJ,GAAAjqJ,EAAA4pB,GAAA,QAAAvuB,EAAA2E,EAAA4pJ,eAAA2C,GAAAvsJ,EAAA3E,EAAA4E,IAEHg5H,IAAA,EAGA,SAAAszB,GAAAvsJ,EAAAC,EAAA2pB,GACA,IAAAvuB,EAAA2E,EAAAwsJ,WAEA,UAAAnxJ,KAAAoxJ,iBAAA7iI,IAAA,OAAA0hI,MAAA,CAAAjwJ,GAAAiwJ,GAAAh0J,KAAA+D,KAAAqxJ,QAGA,OAFA1sJ,EAAA4pJ,aAAA3pJ,OACAD,EAAAg8I,eAAA,GAIAh8I,EAAA4pJ,aAAA,KACA5pJ,IAAA2rJ,GAAAd,MAAAc,GAAA3rJ,EAAA6qJ,GAAA,GACA5xI,EAAAywI,yBAAAzwI,EAAAuxI,2BAAA,WACAnB,GAAArpJ,EAAAC,KAIA,SAAA8nJ,GAAA/nJ,GACA,OAAAkrJ,IAAA/4I,EAAA,OACA+4I,GAAAlP,eAAA,EACAmP,SAAA,EAAAC,GAAAprJ,GAGA,SAAA2sJ,GAAA3sJ,EAAAC,GACA,IAAA2pB,EAAAsvG,GACAA,IAAA,EAEA,IACA,OAAAl5H,EAAAC,GACG,SACHi5H,GAAAtvG,IAAAqvG,IAAAwwB,GAAA,gBAIA,SAAAmD,GAAA5sJ,EAAAC,GACA,GAAAi5H,KAAAmyB,GAAA,CACAA,IAAA,EAEA,IACA,OAAArrJ,EAAAC,GACK,QACLorJ,IAAA,GAIA,OAAArrJ,EAAAC,GAGA,SAAA4sJ,GAAA7sJ,EAAAC,EAAA2pB,GACAsvG,IAAAD,IAAA,IAAA2xB,KAAAnB,GAAAmB,IAAA,GAAAA,GAAA,GACA,IAAAvvJ,EAAA69H,GACAA,IAAA,EAEA,IACA,OAAAjgH,EAAAywI,yBAAAzwI,EAAAwxI,8BAAA,WACA,OAAAzqJ,EAAAC,EAAA2pB,KAEG,SACHsvG,GAAA79H,IAAA49H,IAAAwwB,GAAA,gBAIA,SAAAqD,GAAA9sJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACA,IAAAu4H,EAAAp2H,EAAAu3H,QAEAx3H,EAAA,GAAA4pB,EAAA,CAGA3pB,EAAA,CACA,IAAAmrI,GAHAxhH,IAAA2zH,sBAGA,IAAA3zH,EAAAtK,KAAAnN,EAAA,OACA,IAAAvU,EAAAgsB,EAEA,GACA,OAAAhsB,EAAA0hB,KACA,OACA1hB,IAAAmgI,UAAAxtG,QACA,MAAAtwB,EAEA,OACA,GAAAw3H,GAAA75H,EAAArH,MAAA,CACAqH,IAAAmgI,UAAAid,0CACA,MAAA/6I,GAKArC,IAAA6gI,aACO,OAAA7gI,GAEPuU,EAAA,OACAvU,OAAA,EAGA,OAAAgsB,EAAAtK,IAAA,CACA,IAAAqjC,EAAA/4B,EAAArzB,KAEA,GAAAkhI,GAAA90E,GAAA,CACA/4B,EAAAixH,GAAAjxH,EAAA+4B,EAAA/kD,GACA,MAAAoC,GAIA4pB,EAAAhsB,OACGgsB,EAAAuwH,GAaH,OAXA,OAAAl6I,EAAAswB,QAAAtwB,EAAAswB,QAAA3G,EAAA3pB,EAAAkkJ,eAAAv6H,EACA3pB,EAAAnC,GACAA,EAAA2/I,GAAApiJ,IACAwjF,QAAA,CACA7hE,QAAAhd,GAGA,QADAC,OAAA,IAAAA,EAAA,KAAAA,KACAnC,EAAAqN,SAAAlL,GACA09I,KACAC,GAAAvnB,EAAAv4H,GACA+/I,GAAAxnB,EAAAh7H,GACAA,EAGA,SAAA0xJ,GAAA/sJ,EAAAC,EAAA2pB,EAAAvuB,GACA,IAAAyC,EAAAmC,EAAAu3H,QAGA,OAAAs1B,GAAA9sJ,EAAAC,EAAA2pB,EADA9rB,EAAA4/I,GADAF,KACA1/I,GACAzC,GAGA,SAAA2xJ,GAAAhtJ,GAEA,KADAA,IAAAw3H,SACAjmG,MAAA,YAEA,OAAAvxB,EAAAuxB,MAAAjS,KACA,OAGA,QACA,OAAAtf,EAAAuxB,MAAAwsG,WAmDA,SAAAkvB,GAAAjtJ,GACA,IAAAC,EAAA,8BAAAu9I,KAAA,YACAv9I,GAAAsoJ,KAAAtoJ,EAAAsoJ,GAAA,GACApyJ,KAAAs2J,gBAAAlE,GAAAtoJ,EACA9J,KAAA+2J,MAAAltJ,EACA7J,KAAAg3J,WAAAh3J,KAAAi3J,MAAA,KACAj3J,KAAAk3J,aAAAl3J,KAAAm3J,cAAA,EACAn3J,KAAAo3J,UAAA,KACAp3J,KAAAu2J,QAAA,EA8DA,SAAAc,KACAr3J,KAAAg3J,WAAA,KACAh3J,KAAAs3J,YAAA,EACAt3J,KAAAu3J,UAAAv3J,KAAAu3J,UAAAtvJ,KAAAjI,MAuBA,SAAAw3J,GAAA3tJ,EAAAC,EAAA2pB,GAEA5pB,EAAA,CACAw3H,QAFAv3H,EAAAy3H,GAAA,YAAAz3H,EAAA,KAGAwwI,cAAAzwI,EACAw8I,gBAAA,KACA4N,UAAA,KACA1N,oBAAA,EACAC,kBAAA,EACAI,sBAAA,EACAC,oBAAA,EACAF,iBAAA,EACA7wC,UAAA,EACAq9C,4BAAA,EACAM,aAAA,KACAmC,eAAA,EACAx7H,QAAA,KACA4zH,eAAA,KACAQ,QAAA/6H,EACAszH,2BAAA,EACAlB,eAAA,EACAwQ,WAAA,KACAN,kBAAA,MAEA/1J,KAAAy3J,cAAA3tJ,EAAA89H,UAAA/9H,EA8CA,SAAA6tJ,GAAA7tJ,GACA,SAAAA,GAAA,IAAAA,EAAAkwB,UAAA,IAAAlwB,EAAAkwB,UAAA,KAAAlwB,EAAAkwB,WAAA,IAAAlwB,EAAAkwB,UAAA,iCAAAlwB,EAAAi1I,YAkBA,SAAA6Y,GAAA9tJ,EAAAC,EAAA2pB,EAAAvuB,EAAAyC,GACA,IAAAu4H,EAAAzsG,EAAAw9H,oBAEA,GAAA/wB,EAAA,CACA,uBAAAv4H,EAAA,CACA,IAAAF,EAAAE,EAEAA,EAAA,WACA,IAAAkC,EAAAgtJ,GAAA32B,EAAAu3B,eACAhwJ,EAAAvG,KAAA2I,IAIA,MAAAA,EAAAq2H,EAAA03B,kCAAA/tJ,EAAAC,EAAAnC,GAAAu4H,EAAA4D,OAAAh6H,EAAAnC,OACG,CAGH,GAFAu4H,EAAAzsG,EAAAw9H,oBAvBA,SAAApnJ,EAAAC,GAEA,GADAA,YAAAD,EAAA,IAAAA,EAAAkwB,SAAAlwB,EAAAkM,gBAAAlM,EAAAwxB,WAAA,WAAAvxB,EAAAiwB,WAAAjwB,EAAA8rC,aAAA,qBACA9rC,EAAA,QAAA2pB,EAAqBA,EAAA5pB,EAAAg1I,WACrBh1I,EAAAk1B,YAAAtL,GAEA,WAAA+jI,GAAA3tJ,GAAA,EAAAC,GAkBA+tJ,CAAApkI,EAAAvuB,GAEA,oBAAAyC,EAAA,CACA,IAAA6kD,EAAA7kD,EAEAA,EAAA,WACA,IAAAkC,EAAAgtJ,GAAA32B,EAAAu3B,eACAjrG,EAAAtrD,KAAA2I,IAIA4sJ,GAAA,WACA,MAAA5sJ,EAAAq2H,EAAA03B,kCAAA/tJ,EAAAC,EAAAnC,GAAAu4H,EAAA4D,OAAAh6H,EAAAnC,KAIA,OAAAkvJ,GAAA32B,EAAAu3B,eAGA,SAAAK,GAAAjuJ,EAAAC,GACA,IAAA2pB,EAAA,EAAAxyB,UAAAF,aAAA,IAAAE,UAAA,GAAAA,UAAA,QAEA,OADAy2J,GAAA5tJ,IAAAkS,EAAA,OA5QA,SAAAnS,EAAAC,EAAA2pB,GACA,IAAAvuB,EAAA,EAAAjE,UAAAF,aAAA,IAAAE,UAAA,GAAAA,UAAA,QACA,OACA6gI,SAAA+M,GACAhpI,IAAA,MAAAX,EAAA,QAAAA,EACAikC,SAAAt/B,EACAywI,cAAAxwI,EACA9B,eAAAyrB,GAsQAskI,CAAAluJ,EAAAC,EAAA,KAAA2pB,GAlQAm5G,GAAA,SAAA/iI,EAAAC,EAAA2pB,GACA,OAAA3pB,GACA,YAIA,GAHA2nI,GAAA5nI,EAAA4pB,GACA3pB,EAAA2pB,EAAAhX,KAEA,UAAAgX,EAAArzB,MAAA,MAAA0J,EAAA,CACA,IAAA2pB,EAAA5pB,EAAmB4pB,EAAA2J,YACnB3J,IAAA2J,WAKA,IAFA3J,IAAAgiB,iBAAA,cAAAt/B,KAAAsB,UAAA,GAAA3N,GAAA,mBAEAA,EAAA,EAAmBA,EAAA2pB,EAAA1yB,OAAc+I,IAAA,CACjC,IAAA5E,EAAAuuB,EAAA3pB,GAEA,GAAA5E,IAAA2E,GAAA3E,EAAA8yJ,OAAAnuJ,EAAAmuJ,KAAA,CACA,IAAArwJ,EAAAygI,EAAAljI,GACAyC,GAAAqU,EAAA,MACAwyH,GAAAtpI,GACAusI,GAAAvsI,EAAAyC,KAKA,MAEA,eACA+1I,GAAA7zI,EAAA4pB,GACA,MAEA,aACA,OAAA3pB,EAAA2pB,EAAApsB,QAAAg2I,GAAAxzI,IAAA4pB,EAAA29H,SAAAtnJ,GAAA,KAeAgtJ,GAAAx1J,UAAAwiI,OAAA,SAAAj6H,GACA7J,KAAAu2J,QAAAv6I,EAAA,OACAhc,KAAAk3J,cAAA,EACAl3J,KAAAo3J,UAAAvtJ,EACA,IAAAC,EAAA9J,KAAA+2J,MAAAU,cACAhkI,EAAAzzB,KAAAs2J,gBACApxJ,EAAA,IAAAmyJ,GAEA,OADAV,GAAA9sJ,EAAAC,EAAA,KAAA2pB,EAAAvuB,EAAAqyJ,WACAryJ,GAGA4xJ,GAAAx1J,UAAAkwC,KAAA,SAAA3nC,GACA,GAAA7J,KAAAm3J,aAAAttJ,QAA6B,CAC7B,IAAAC,EAAA9J,KAAAg3J,WACA,OAAAltJ,MAAA9J,KAAAg3J,WAAA,IACAltJ,EAAA3I,KAAA0I,KAIAitJ,GAAAx1J,UAAA22J,OAAA,WACA,IAAApuJ,EAAA7J,KAAA+2J,MAAAU,cACA3tJ,EAAAD,EAAAwsJ,WAGA,GAFAr2J,KAAAu2J,QAAA,OAAAzsJ,GAAAkS,EAAA,OAEAhc,KAAAk3J,aAAA,CACA,IAAAzjI,EAAAzzB,KAAAs2J,gBAEA,GAAAxsJ,IAAA9J,KAAA,CACAA,KAAAk3J,eAAAzjI,EAAAzzB,KAAAs2J,gBAAAxsJ,EAAAwsJ,gBAAAt2J,KAAA8jI,OAAA9jI,KAAAo3J,YAEA,QAAAlyJ,EAAA,KAAAyC,EAAAmC,EAA+BnC,IAAA3H,MAC/BkF,EAAAyC,MAAAsvJ,MAGA,OAAA/xJ,GAAA8W,EAAA,OACA9W,EAAA+xJ,MAAAtvJ,EAAAsvJ,MACAj3J,KAAAi3J,MAAAntJ,EACAD,EAAAwsJ,WAAAr2J,KAGAA,KAAAu2J,QAAA,EACAV,GAAAhsJ,EAAA4pB,GACA3pB,EAAA9J,KAAAi3J,MACAj3J,KAAAi3J,MAAA,KAEA,QADAntJ,EAAAD,EAAAwsJ,WAAAvsJ,IACAA,EAAAotJ,cAAAptJ,EAAAg6H,OAAAh6H,EAAAstJ,gBACGp3J,KAAAi3J,MAAA,KAAAj3J,KAAAu2J,QAAA,GAGHO,GAAAx1J,UAAA60J,YAAA,WACA,IAAAn2J,KAAAm3J,aAAA,CACAn3J,KAAAm3J,cAAA,EACA,IAAAttJ,EAAA7J,KAAAg3J,WACA,UAAAntJ,EAAA,QAAAC,EAAA,EAAmCA,EAAAD,EAAA9I,OAAc+I,KACjD,EAAAD,EAAAC,QAWAutJ,GAAA/1J,UAAAkwC,KAAA,SAAA3nC,GACA,GAAA7J,KAAAs3J,WAAAztJ,QAA2B,CAC3B,IAAAC,EAAA9J,KAAAg3J,WACA,OAAAltJ,MAAA9J,KAAAg3J,WAAA,IACAltJ,EAAA3I,KAAA0I,KAIAwtJ,GAAA/1J,UAAAi2J,UAAA,WACA,IAAAv3J,KAAAs3J,WAAA,CACAt3J,KAAAs3J,YAAA,EACA,IAAAztJ,EAAA7J,KAAAg3J,WACA,UAAAntJ,EAAA,QAAAC,EAAA,EAAmCA,EAAAD,EAAA9I,OAAc+I,IAAA,CACjD,IAAA2pB,EAAA5pB,EAAAC,GACA,oBAAA2pB,GAAAzX,EAAA,MAAAyX,GACAA,OAgCA+jI,GAAAl2J,UAAAwiI,OAAA,SAAAj6H,EAAAC,GACA,IAAA2pB,EAAAzzB,KAAAy3J,cACAvyJ,EAAA,IAAAmyJ,GAIA,OAFA,QADAvtJ,OAAA,IAAAA,EAAA,KAAAA,IACA5E,EAAAssC,KAAA1nC,GACA8sJ,GAAA/sJ,EAAA4pB,EAAA,KAAAvuB,EAAAqyJ,WACAryJ,GAGAsyJ,GAAAl2J,UAAA42J,QAAA,SAAAruJ,GACA,IAAAC,EAAA9J,KAAAy3J,cACAhkI,EAAA,IAAA4jI,GAIA,OAFA,QADAxtJ,OAAA,IAAAA,EAAA,KAAAA,IACA4pB,EAAA+d,KAAA3nC,GACA+sJ,GAAA,KAAA9sJ,EAAA,KAAA2pB,EAAA8jI,WACA9jI,GAGA+jI,GAAAl2J,UAAAs2J,kCAAA,SAAA/tJ,EAAAC,EAAA2pB,GACA,IAAAvuB,EAAAlF,KAAAy3J,cACA9vJ,EAAA,IAAA0vJ,GAIA,OAFA,QADA5jI,OAAA,IAAAA,EAAA,KAAAA,IACA9rB,EAAA6pC,KAAA/d,GACAmjI,GAAA9sJ,EAAA5E,EAAA2E,EAAAlC,EAAA4vJ,WACA5vJ,GAGA6vJ,GAAAl2J,UAAA62J,YAAA,WACA,IAAAtuJ,EAAA,IAAAitJ,GAAA92J,MACA8J,EAAAD,EAAAysJ,gBACA7iI,EAAAzzB,KAAAy3J,cACAvyJ,EAAAuuB,EAAA4iI,WACA,UAAAnxJ,EAAAuuB,EAAA4iI,WAAAxsJ,IAAAotJ,MAAA,SAAmD,CACnD,IAAAxjI,EAAA,KAAkB,OAAAvuB,KAAAoxJ,iBAAAxsJ,GAClB2pB,EAAAvuB,MAAA+xJ,MAGAptJ,EAAAotJ,MAAA/xJ,EACA,OAAAuuB,MAAAwjI,MAAAptJ,GAEA,OAAAA,GAOAqjI,GAAAspB,GACArpB,GAAAupB,GAEAtpB,GAAA,WACAtK,IAAA,IAAA2xB,KAAAnB,GAAAmB,IAAA,GAAAA,GAAA,IAmDA,IAAA2D,GAAA,CACAC,aAAAP,GACAQ,YAAA,SAAAzuJ,GACA,SAAAA,EAAA,YACA,OAAAA,EAAAkwB,SAAA,OAAAlwB,EACA,IAAAC,EAAAD,EAAAu9I,oBAIA,YAHA,IAAAt9I,IAAA,oBAAAD,EAAAi6H,OAAA9nH,EAAA,OAAAA,EAAA,MAAArW,OAAAiW,KAAA/R,KAEAA,EAAA,QADAA,EAAAurI,GAAAtrI,IACA,KAAAD,EAAA+9H,WAGA4mB,QAAA,SAAA3kJ,EAAAC,EAAA2pB,GAEA,OADAikI,GAAA5tJ,IAAAkS,EAAA,OACA27I,GAAA,KAAA9tJ,EAAAC,GAAA,EAAA2pB,IAEAqwG,OAAA,SAAAj6H,EAAAC,EAAA2pB,GAEA,OADAikI,GAAA5tJ,IAAAkS,EAAA,OACA27I,GAAA,KAAA9tJ,EAAAC,GAAA,EAAA2pB,IAEA8kI,oCAAA,SAAA1uJ,EAAAC,EAAA2pB,EAAAvuB,GAGA,OAFAwyJ,GAAAjkI,IAAAzX,EAAA,QACA,MAAAnS,QAAA,IAAAA,EAAAu9I,sBAAAprI,EAAA,MACA27I,GAAA9tJ,EAAAC,EAAA2pB,GAAA,EAAAvuB,IAEAszJ,uBAAA,SAAA3uJ,GAEA,OADA6tJ,GAAA7tJ,IAAAmS,EAAA,QACAnS,EAAAonJ,sBAAAwF,GAAA,WACAkB,GAAA,UAAA9tJ,GAAA,aACAA,EAAAonJ,oBAAA,UAEK,IAELwH,sBAAA,WACA,OAAAX,GAAA12J,WAAA,EAAAH,YAEAy3J,wBAAAlC,GACAmC,4BAAAjC,GACAkC,UAAA,SAAA/uJ,EAAAC,GACAg5H,IAAA9mH,EAAA,OACA,IAAAyX,EAAAsvG,GACAA,IAAA,EAEA,IACA,OAAA6xB,GAAA/qJ,EAAAC,GACK,QACLi5H,GAAAtvG,EAAA6/H,GAAA,iBAGAuF,oBAkBA,SAAAhvJ,EAAAC,GAEA,OADA4tJ,GAAA7tJ,IAAAmS,EAAA,6BACA,IAAAw7I,GAAA3tJ,GAAA,QAAAC,IAAA,IAAAA,EAAA0kJ,UAnBAsK,yBAAA,SAAAjvJ,GACA,IAAAC,EAAAi5H,GACAA,IAAA,EAEA,IACA6xB,GAAA/qJ,GACK,SACLk5H,GAAAj5H,IAAAg5H,IAAAwwB,GAAA,iBAGA/tB,mDAAA,CACAriG,OAAA,CAAAglG,EAAAC,EAAAC,EAAAZ,EAAAE,yBAAArB,EAAAwC,EAAA,SAAAh/H,GACAo9H,EAAAp9H,EAAA++H,IACKoE,GAAAC,GAAAyN,GAAA7S,MASL,SAAAh+H,GACA,IAAAC,EAAAD,EAAAkvJ,yBA51HA,SAAAlvJ,GACA,wBAAAq0H,+BAAA,SACA,IAAAp0H,EAAAo0H,+BACA,GAAAp0H,EAAAk0E,aAAAl0E,EAAAkvJ,cAAA,SAEA,IACA,IAAAvlI,EAAA3pB,EAAAmvJ,OAAApvJ,GACAk7I,GAAAE,GAAA,SAAAp7I,GACA,OAAAC,EAAAovJ,kBAAAzlI,EAAA5pB,KAEAm7I,GAAAC,GAAA,SAAAp7I,GACA,OAAAC,EAAAqvJ,qBAAA1lI,EAAA5pB,KAEG,MAAA3E,MAg1HHk0J,CAAAh+I,EAAA,GAAgBvR,EAAA,CAChBwvJ,cAAA,KACAC,qBAAA5qB,GAAAlJ,uBACA+zB,wBAAA,SAAA1vJ,GAEA,eADAA,EAAAurI,GAAAvrI,IACA,KAAAA,EAAA+9H,WAEAmxB,wBAAA,SAAAlvJ,GACA,OAAAC,IAAAD,GAAA,SAVA,CAaC,CACDkvJ,wBAAA9wB,EACAuxB,WAAA,EACAx2J,QAAA,SACAy2J,oBAAA,cAGA,IAAAC,GAAA,CACAr5I,QAAA+3I,IAEAuB,GAAAD,IAAAtB,IAAAsB,GACAl6J,EAAAC,QAAAk6J,GAAAt5I,SAAAs5I,iCC9zMAn6J,EAAAC,QAAmBI,EAAQ,mCCH3B,SAAAT,GAUAuG,OAAAC,eAAAnG,EAAA,cACA4H,OAAA,IAEA,IAAAnC,EAAA,KACAyC,GAAA,EACAF,EAAA,EACAqV,GAAA,EACAC,GAAA,EACAwlB,GAAA,EACAnnB,GAAA,EAEA,SAAApU,IACA,IAAAu7B,EAAA,CACA,IAAA14B,EAAA3E,EAAA2gJ,eACAzqI,EAAAukH,IAAAvkH,GAAA,EAEAw+I,EAAA52I,EAAAnZ,IAIA,SAAA+1H,IACA,IAAA/1H,EAAA3E,EACA4E,EAAA5E,EAAA6+C,KACA,GAAA7+C,IAAA4E,EAAA5E,EAAA,SAAwB,CACxB,IAAAuuB,EAAAvuB,EAAA20J,SACA30J,EAAAuuB,EAAAswB,KAAAj6C,EACAA,EAAA+vJ,SAAApmI,EAEA5pB,EAAAk6C,KAAAl6C,EAAAgwJ,SAAA,KACApmI,EAAA5pB,EAAAmL,SACAlL,EAAAD,EAAAg8I,eACAh8I,IAAAiwJ,cACA,IAAA55B,EAAAz4H,EACA06H,EAAAplH,EACAtV,EAAAoC,EACAkT,EAAAjT,EAEA,IACA,IAAA0iD,EAAA/4B,IACG,QACHhsB,EAAAy4H,EAAAnjH,EAAAolH,EAGA,uBAAA31E,EAAA,GAAAA,EAAA,CACAx3C,SAAAw3C,EACAstG,cAAAjwJ,EACAg8I,eAAA/7I,EACAi6C,KAAA,KACA81G,SAAA,MACG,OAAA30J,IAAAsnD,EAAAzI,KAAAyI,EAAAqtG,SAAArtG,MAA0C,CAC7C/4B,EAAA,KACA5pB,EAAA3E,EAEA,GACA,GAAA2E,EAAAg8I,gBAAA/7I,EAAA,CACA2pB,EAAA5pB,EACA,MAGAA,IAAAk6C,WACKl6C,IAAA3E,GAEL,OAAAuuB,IAAAvuB,EAAAuuB,IAAAvuB,MAAAsnD,EAAAxlD,MACA8C,EAAA2pB,EAAAomI,UACA91G,KAAAtwB,EAAAomI,SAAArtG,EACAA,EAAAzI,KAAAtwB,EACA+4B,EAAAqtG,SAAA/vJ,GAIA,SAAA0xD,IACA,QAAA1+C,GAAA,OAAA5X,GAAA,IAAAA,EAAA40J,cAAA,CACAv3H,GAAA,EAEA,IACA,GACAq9F,UACO,OAAA16H,GAAA,IAAAA,EAAA40J,eACF,QACLv3H,GAAA,SAAAr9B,EAAA8B,IAAAoU,GAAA,IAKA,SAAA4H,EAAAnZ,GACA04B,GAAA,EACA,IAAAz4B,EAAAnC,EACAA,EAAAkC,EAEA,IACA,GAAAA,EAAA,KAAiB,OAAA3E,GAAY,CAC7B,IAAAuuB,EAAAh0B,EAAA41J,eAEA,KAAAnwJ,EAAA2gJ,gBAAApyH,GAIO,MAHP,GACAmsG,UACS,OAAA16H,KAAA2gJ,gBAAApyH,QAEJ,UAAAvuB,EACL,GACA06H,UACO,OAAA16H,IAAA26H,KAEJ,QACHt9F,GAAA,EAAA56B,EAAAmC,EAAA,OAAA5E,EAAA8B,IAAAoU,GAAA,EAAAogD,KAIA,IAKA6kE,EACAK,EANA1kH,EAAA8L,KACA7L,EAAA,oBAAArE,2BAAA,EACA6vF,EAAA,oBAAAlxF,+BAAA,EACAypH,EAAA,oBAAA5yF,iDAAA,EACA6yF,EAAA,oBAAA1yF,+CAAA,EAIA,SAAAozF,EAAA92H,GACAw2H,EAAAL,EAAA,SAAAl2H,GACA29F,EAAAi5B,GACA72H,EAAAC,KAEA42H,EAAAzkH,EAAA,WACAgkH,EAAAI,GACAx2H,EAAApK,EAAA41J,iBACG,KAGH,qBAAA5vF,aAAA,oBAAAA,YAAAjiD,IAAA,CACA,IAAAs9G,EAAAr7D,YAEAhmE,EAAA41J,aAAA,WACA,OAAAv0B,EAAAt9G,YAEC/jB,EAAA41J,aAAA,WACD,OAAAr5I,EAAAwH,OAGA,IAAAo2I,EACAj6B,EACAE,EACAkB,EAAA,KAIA,GAFA,qBAAAzhI,OAAAyhI,EAAAzhI,OAAA,qBAAAF,IAAA2hI,EAAA3hI,GAEA2hI,KAAAg5B,WAAA,CACA,IAAA74B,EAAAH,EAAAg5B,WACAH,EAAA14B,EAAA,GACAvB,EAAAuB,EAAA,GACArB,EAAAqB,EAAA,GACAzhI,EAAA41J,aAAAn0B,EAAA,QACC,wBAAA5hI,QAAA,oBAAA06J,eAAA,CACD,IAAA54B,EAAA,KACAE,EAAA,SAAAz3H,GACA,UAAAu3H,EAAA,IACAA,EAAAv3H,GACK,QACLu3H,EAAA,OAIAw4B,EAAA,SAAA/vJ,GACA,OAAAu3H,EAAAxpH,WAAAgiJ,EAAA,EAAA/vJ,IAAAu3H,EAAAv3H,EAAA+N,WAAA0pH,EAAA,QAGA3B,EAAA,WACAyB,EAAA,MAGAvB,EAAA,WACA,cAEC,CACD,qBAAAnoG,UAAA,oBAAAsoG,GAAAtoG,QAAAQ,MAAA,+JAAA+nG,GAAAvoG,QAAAQ,MAAA,2IACA,IAAAqpG,EAAA,KACAC,GAAA,EACAI,GAAA,EACAI,GAAA,EACAC,GAAA,EACAC,EAAA,EACAG,EAAA,GACAz/G,EAAA,GAEAi9G,EAAA,WACA,OAAAqC,GAAAziI,EAAA41J,gBAGA,IAAA9yB,EAAA,IAAAy3B,eACA13B,EAAAC,EAAA03B,MAEA13B,EAAA23B,MAAA10E,UAAA,WACAg8C,GAAA,EACA,IAAA33H,EAAA03H,EACAz3H,EAAA83H,EACAL,EAAA,KACAK,GAAA,EACA,IAAAnuG,EAAAh0B,EAAA41J,eACAn1B,GAAA,EACA,MAAAgC,EAAAzuG,EAAA,WAAA3pB,MAAA2pB,GAIA,OAHAuuG,OAAA,EAAArB,EAAAiC,IACArB,EAAA13H,OACA+3H,EAAA93H,GAHAo2H,GAAA,EAOA,UAAAr2H,EAAA,CACAo4H,GAAA,EAEA,IACAp4H,EAAAq2H,GACO,QACP+B,GAAA,KAKA,IAAAW,EAAA,SAAAA,EAAA/4H,GACA,UAAA03H,EAAA,CACAZ,EAAAiC,GACA,IAAA94H,EAAAD,EAAAq4H,EAAAt/G,EACA9Y,EAAA8Y,GAAAy/G,EAAAz/G,GAAA,EAAA9Y,MAAA,GAAA8Y,EAAA9Y,EAAAu4H,IAAAv4H,GAAAu4H,EAAAv4H,EACAo4H,EAAAr4H,EAAA+Y,EACA4+G,OAAA,EAAAc,EAAA/8C,iBAAA,SACKy8C,GAAA,GAGL43B,EAAA,SAAA/vJ,EAAAC,GACAy3H,EAAA13H,EACA+3H,EAAA93H,EACAm4H,GAAA,EAAAn4H,EAAAw4H,EAAA/8C,iBAAA,GAAAy8C,OAAA,EAAArB,EAAAiC,KAGAjD,EAAA,WACA4B,EAAA,KACAC,GAAA,EACAI,GAAA,GAIAniI,EAAA40J,2BAAA,EACA50J,EAAA60J,8BAAA,EACA70J,EAAA+zJ,wBAAA,EACA/zJ,EAAA+0J,sBAAA,EACA/0J,EAAA80J,qBAAA,EAEA90J,EAAA8zJ,yBAAA,SAAA1pJ,EAAAC,GACA,OAAAD,GACA,OACA,OACA,OACA,OACA,OACA,MAEA,QACAA,EAAA,EAGA,IAAA4pB,EAAAhsB,EACAy4H,EAAApjH,EACArV,EAAAoC,EACAiT,EAAArd,EAAA41J,eAEA,IACA,OAAAvrJ,IACG,QACHrC,EAAAgsB,EAAA3W,EAAAojH,EAAA1kE,MAIA/7D,EAAA06J,cAAA,SAAAtwJ,GACA,OAAApC,GACA,OACA,OACA,OACA,IAAAqC,EAAA,EACA,MAEA,QACAA,EAAArC,EAGA,IAAAgsB,EAAAhsB,EACAy4H,EAAApjH,EACArV,EAAAqC,EACAgT,EAAArd,EAAA41J,eAEA,IACA,OAAAxrJ,IACG,QACHpC,EAAAgsB,EAAA3W,EAAAojH,EAAA1kE,MAIA/7D,EAAAgkJ,0BAAA,SAAA55I,EAAAC,GACA,IAAA2pB,GAAA,IAAA3W,IAAArd,EAAA41J,eACA,qBAAAvrJ,GAAA,OAAAA,GAAA,kBAAAA,EAAAwO,QAAAxO,EAAA2pB,EAAA3pB,EAAAwO,aAA8F,OAAA7Q,GAC9F,OACAqC,EAAA2pB,GAAA,EACA,MAEA,OACA3pB,EAAA2pB,EAAA,IACA,MAEA,OACA3pB,EAAA2pB,EAAA,WACA,MAEA,OACA3pB,EAAA2pB,EAAA,IACA,MAEA,QACA3pB,EAAA2pB,EAAA,IASA,GAPA5pB,EAAA,CACAmL,SAAAnL,EACAiwJ,cAAAryJ,EACAo+I,eAAA/7I,EACAi6C,KAAA,KACA81G,SAAA,MAEA,OAAA30J,IAAA2E,EAAAk6C,KAAAl6C,EAAAgwJ,SAAAhwJ,EAAA7C,QAAmD,CACnDysB,EAAA,KACA,IAAAysG,EAAAh7H,EAEA,GACA,GAAAg7H,EAAA2lB,eAAA/7I,EAAA,CACA2pB,EAAAysG,EACA,MAGAA,IAAAn8E,WACKm8E,IAAAh7H,GAEL,OAAAuuB,IAAAvuB,EAAAuuB,IAAAvuB,MAAA2E,EAAA7C,MACA8C,EAAA2pB,EAAAomI,UACA91G,KAAAtwB,EAAAomI,SAAAhwJ,EACAA,EAAAk6C,KAAAtwB,EACA5pB,EAAAgwJ,SAAA/vJ,EAEA,OAAAD,GAGApK,EAAAkkJ,wBAAA,SAAA95I,GACA,IAAAC,EAAAD,EAAAk6C,KAEA,UAAAj6C,EAAA,CACA,GAAAA,IAAAD,EAAA3E,EAAA,SAA0B,CAC1B2E,IAAA3E,MAAA4E,GACA,IAAA2pB,EAAA5pB,EAAAgwJ,SACApmI,EAAAswB,KAAAj6C,EACAA,EAAA+vJ,SAAApmI,EAEA5pB,EAAAk6C,KAAAl6C,EAAAgwJ,SAAA,OAIAp6J,EAAA26J,sBAAA,SAAAvwJ,GACA,IAAAC,EAAArC,EACA,kBACA,IAAAgsB,EAAAhsB,EACAy4H,EAAApjH,EACArV,EAAAqC,EACAgT,EAAArd,EAAA41J,eAEA,IACA,OAAAxrJ,EAAAzI,MAAApB,KAAAiB,WACK,QACLwG,EAAAgsB,EAAA3W,EAAAojH,EAAA1kE,OAKA/7D,EAAA20J,iCAAA,WACA,OAAA3sJ,GAGAhI,EAAAy2J,qBAAA,WACA,OAAAvuJ,IAAA,OAAAzC,KAAA2gJ,eAAA9oI,GAAA8iH,MAGApgI,EAAA46J,2BAAA,WACA,OAAAn1J,GAAA8B,KAGAvH,EAAA66J,wBAAA,aAEA76J,EAAA86J,8BAAA,WACA,OAAAr1J,wCC5XA,IAAAs1J,EAAA70J,OAAAyB,QAAA,WACA,SAAA05H,KAEA,gBAAA56H,GACA,OAAAjF,UAAAF,OACA,UAAAqU,MAAA,kDAIA,OADA0rH,EAAAx/H,UAAA4E,EACA,IAAA46H,GATA,GAiBA,SAAA25B,EAAAC,EAAAlrI,GACAxvB,KAAAyc,KAAA,eACAzc,KAAAwY,KAAAkiJ,EAAAliJ,KACAxY,KAAAwvB,WAAAkrI,EAAAlrI,QAiBA,SAAAmrI,EAAAtY,GACA,SAAAuY,EAAApuG,EAAAjqB,EAAA16B,EAAAq4H,GACA,eAAA1zE,GAAA,MAAAjqB,IAAA,EAAA16B,IAAA,EAAAq4H,GAAA,IAGA,IAAA39F,EAAA8/G,EAAA99H,MAAA,oCAEA,OAAAge,EAIAA,EAAA,GAEAq4H,EAAAr4H,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAz6B,QAAA,QAAAy6B,EAAA,IACGA,EAAA,MAGHq4H,EAAAr4H,EAAA,GAAAA,EAAA,KAAAA,EAAA,IAGAq4H,EAAA,EAAAr4H,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAZA,KAkBA,SAAAs4H,IACA76J,KAAAskB,OAAAk2I,EAAA,MA4DA,SAAAM,EAAAzY,EAAArtI,EAAA+lJ,EAAAC,GACA,IAAA70C,EAAA60C,EAAA3Y,EAAAvnI,MAAAkgJ,GAAA,CAAA3Y,GAEA,QAAAvhJ,KAAAqlH,EACA,qBAAAA,EAAArlH,GAAA,CAIA,IAAAm6J,EAAA90C,EAAArlH,GAAAga,MAAAigJ,GAEA,OAAAE,EAAAl6J,OAMAiU,EAFAimJ,EAAA,GACAA,EAAA,KAKA,SAAAC,EAAA7Y,EAAAzwG,EAAAupH,GAEA,IAAAC,EAAA/Y,EAEA,SAAAgZ,IACA,IAAAh9B,EAAAs8B,EAAAtY,GAEA,UAAAhkB,EACA,UAAAo8B,IAAAa,OAAAC,aAAA,wBAAAH,GAKA,OADA/Y,IAAAv6I,QAAA,qBACAu2H,EA+EA,SAAAm9B,IACAnZ,IAAAv6I,QAAA,WASA,GALA0zJ,IACA5pH,EAAA7vC,UAAAs5J,IAEAG,IAEA,WAAAnZ,EAAAoZ,OAAA,KAEA,UAAAhB,IAAAa,OAAAC,aAAA,qEAAAH,GAGA/Y,IAAAoZ,OAAA,GACAD,IACA5pH,EAAAzhC,QAAAkrJ,IAGAG,IA/FA,SAAAnZ,EAAAzwG,GACA,IAAAiK,EAAA,IAAAg/G,EACAC,EAAAzY,EAAA,SAAAvlI,EAAA0+C,GACA,OAAA1+C,GACA,aAEA,QAAAhc,EAAAq6J,EAAAp6J,OAAA,EAA6CD,GAAA,EAAQA,IACrD,GAAAq6J,EAAAr6J,GAAAmC,KAAAu4D,EAAA,CACA3f,EAAAlwC,IAAAmR,EAAAq+I,EAAAr6J,GAAA46J,QACA,MAIA,MAEA,eACA7/G,EAAA8/G,IAAA7+I,EAAA0+C,EAAA,aACA,MAEA,WACA,IAAAogG,EAAApgG,EAAA1gD,MAAA,KACA+gJ,EAAAD,EAAA,GACA//G,EAAAigH,QAAAh/I,EAAA++I,GACAhgH,EAAAuU,QAAAtzC,EAAA++I,IAAAhgH,EAAAlwC,IAAA,kBACAkwC,EAAA8/G,IAAA7+I,EAAA++I,EAAA,UAEA,IAAAD,EAAA76J,QACA86C,EAAA8/G,IAAA,YAAAC,EAAA,6BAGA,MAEA,eACAA,EAAApgG,EAAA1gD,MAAA,KACA+gC,EAAAuU,QAAAtzC,EAAA8+I,EAAA,IAEA,IAAAA,EAAA76J,QACA86C,EAAA8/G,IAAA,gBAAAC,EAAA,6BAGA,MAEA,WACA//G,EAAAuU,QAAAtzC,EAAA0+C,GACA,MAEA,YACA3f,EAAA8/G,IAAA7+I,EAAA0+C,EAAA,2CAGK,UAEL5pB,EAAA8pH,OAAA7/G,EAAAzlB,IAAA,eACAwb,EAAAgd,SAAA/S,EAAAzlB,IAAA,eACAwb,EAAArkB,KAAAsuB,EAAAzlB,IAAA,eACAwb,EAAAmqH,UAAAlgH,EAAAzlB,IAAA,qBACAwb,EAAAoqH,YAAAngH,EAAAzlB,IAAA,kBACAwb,EAAAzvC,KAAA05C,EAAAzlB,IAAA,YACAwb,EAAAzjC,MAAA0tC,EAAAzlB,IAAA,kBACAwb,EAAAzT,SAAA0d,EAAAzlB,IAAA,YACAriB,MAAA,EACAypB,KAAA,EACAjqB,OAAA,GACAnR,IAAA,IACA0uD,MAAA,KACKlf,EAAAzjC,OACLyjC,EAAAqqH,cAAApgH,EAAAzlB,IAAA,iBACAriB,MAAA,QACAypB,KAAA,QACAjqB,OAAA,SACAnR,IAAA,MACA0uD,MAAA,OACKlf,EAAAzjC,OAwBL+tJ,CAAA7Z,EAAAzwG,GA1OA6oH,EAAAn5J,UAAAk5J,EAAAplJ,MAAA9T,WACAm5J,EAAAn5J,UAAAoF,YAAA+zJ,EAEAA,EAAAa,OAAA,CACAa,aAAA,CACA3jJ,KAAA,EACAgX,QAAA,+BAEA+rI,aAAA,CACA/iJ,KAAA,EACAgX,QAAA,0BAkCAqrI,EAAAv5J,UAAA,CAEAqK,IAAA,SAAAmR,EAAA0+C,GACAx7D,KAAAo2B,IAAAtZ,IAAA,KAAA0+C,IACAx7D,KAAAskB,OAAAxH,GAAA0+C,IAQAplC,IAAA,SAAAtZ,EAAAs/I,EAAAC,GACA,OAAAA,EACAr8J,KAAAs8B,IAAAxf,GAAA9c,KAAAskB,OAAAxH,GAAAs/I,EAAAC,GAGAr8J,KAAAs8B,IAAAxf,GAAA9c,KAAAskB,OAAAxH,GAAAs/I,GAGA9/H,IAAA,SAAAxf,GACA,OAAAA,KAAA9c,KAAAskB,QAGAq3I,IAAA,SAAA7+I,EAAA0+C,EAAA3xD,GACA,QAAAuR,EAAA,EAAmBA,EAAAvR,EAAA9I,SAAcqa,EACjC,GAAAogD,IAAA3xD,EAAAuR,GAAA,CACApb,KAAA2L,IAAAmR,EAAA0+C,GACA,QAKAsgG,QAAA,SAAAh/I,EAAA0+C,GACA,UAAAjzD,KAAAizD,IAEAx7D,KAAA2L,IAAAmR,EAAAuE,SAAAm6C,EAAA,MAIApL,QAAA,SAAAtzC,EAAA0+C,GAGA,SAAAA,EAAAj3C,MAAA,8BACAi3C,EAAA7zC,WAAA6zC,KAEA,GAAAA,GAAA,OACAx7D,KAAA2L,IAAAmR,EAAA0+C,IACA,KAiJA,IAAA8gG,EAAA,CACAC,QAAQ,IACRC,OAAO,IACPC,OAAO,IACPC,QAAQ,SACRC,QAAQ,SACRC,SAAS,QAETC,EAAA,CACAppI,EAAA,OACA3yB,EAAA,IACAgJ,EAAA,IACA81H,EAAA,IACAk9B,KAAA,OACAC,GAAA,KACAvhG,EAAA,OACA7+C,KAAA,QAEAqgJ,EAAA,CACAxhG,EAAA,QACA7+C,KAAA,QAEAsgJ,EAAA,CACAF,GAAA,QAGA,SAAAG,EAAA59J,EAAA+iJ,GACA,SAAA8a,IAEA,IAAA9a,EACA,YASA,IALA3/I,EAKA6/B,EAAA8/G,EAAA99H,MAAA,uBAGA,OARA7hB,EAQA6/B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAPA8/G,IAAAoZ,OAAA/4J,EAAA3B,QACA2B,EAUA,SAAA06J,EAAAz1J,GACA,OAAA20J,EAAA30J,GAGA,SAAAkM,EAAAhM,GACA,KAAA06B,EAAA16B,EAAA0c,MAAA,+BACA1c,IAAAC,QAAAy6B,EAAA,GAAA66H,GAGA,OAAAv1J,EAGA,SAAAw1J,EAAAh8B,EAAAx6G,GACA,OAAAo2I,EAAAp2I,EAAAy2I,YAAAL,EAAAp2I,EAAAy2I,aAAAj8B,EAAAi8B,UAIA,SAAA5iI,EAAAt6B,EAAAm9J,GACA,IAAAx2I,EAAA81I,EAAAz8J,GAEA,IAAA2mB,EACA,YAGA,IAAAF,EAAAvnB,EAAAQ,SAAA46B,cAAA3T,GACAF,EAAAy2I,UAAAv2I,EACA,IAAAtK,EAAAugJ,EAAA58J,GAMA,OAJAqc,GAAA8gJ,IACA12I,EAAApK,GAAA8gJ,EAAA5jJ,QAGAkN,EAQA,IALA,IAEA7D,EAFAw6I,EAAAl+J,EAAAQ,SAAA46B,cAAA,OACA2mG,EAAAm8B,EAEAC,EAAA,GAEA,QAAAz6I,EAAAm6I,MACA,SAAAn6I,EAAA,GAuDAq+G,EAAA9lG,YAAAj8B,EAAAQ,SAAAm/B,eAAAprB,EAAAmP,SAvDA,CACA,SAAAA,EAAA,IAEAy6I,EAAA18J,QAAA08J,IAAA18J,OAAA,KAAAiiB,EAAAy4I,OAAA,GAAA3zJ,QAAA,UACA21J,EAAAhwJ,MACA4zH,IAAAjkG,YAIA,SAGA,IACA1T,EADA20G,EAAAs8B,EAAA33I,EAAAy4I,OAAA,EAAAz4I,EAAAjiB,OAAA,IAGA,GAAAs9H,EAAA,CAEA30G,EAAApqB,EAAAQ,SAAA49J,4BAAA,YAAAr/B,GACAgD,EAAA9lG,YAAA7R,GACA,SAGA,IAAA6Y,EAAAvf,EAAAuB,MAAA,qDAEA,IAAAge,EACA,SAMA,KAFA7Y,EAAAgR,EAAA6H,EAAA,GAAAA,EAAA,KAGA,SAKA,IAAA86H,EAAAh8B,EAAA33G,GACA,SAIA6Y,EAAA,KACA7Y,EAAAkS,UAAA2G,EAAA,GAAAk5H,OAAA,GAAA3zJ,QAAA,UAKA21J,EAAAt8J,KAAAohC,EAAA,IACA8+F,EAAA9lG,YAAA7R,GACA23G,EAAA33G,EAQA,OAAA8zI,EAQA,IAAAG,EAAA,o8CAEA,SAAAC,EAAA77H,GACA,QAAAjhC,EAAA,EAAiBA,EAAA68J,EAAA58J,OAA4BD,IAAA,CAC7C,IAAAksH,EAAA2wC,EAAA78J,GAEA,GAAAihC,GAAAirF,EAAA,IAAAjrF,GAAAirF,EAAA,GACA,SAIA,SAGA,SAAA6wC,EAAA1zG,GACA,IAAA2zG,EAAA,GACAvuJ,EAAA,GAGA,IAAA46C,MAAArjC,WACA,YAGA,SAAAi3I,EAAAD,EAAAp0I,GACA,QAAA5oB,EAAA4oB,EAAA5C,WAAA/lB,OAAA,EAA4CD,GAAA,EAAQA,IACpDg9J,EAAA38J,KAAAuoB,EAAA5C,WAAAhmB,IAIA,SAAAk9J,EAAAF,GACA,IAAAA,MAAA/8J,OACA,YAGA,IAAA2oB,EAAAo0I,EAAArwJ,MACA8B,EAAAma,EAAAzC,aAAAyC,EAAAwR,UAEA,GAAA3rB,EAAA,CAGA,IAAAgzB,EAAAhzB,EAAAgV,MAAA,cAEA,OAAAge,GACAu7H,EAAA/8J,OAAA,EACAwhC,EAAA,IAGAhzB,EAGA,eAAAma,EAAA3C,QACAi3I,EAAAF,GAGAp0I,EAAA5C,YACAi3I,EAAAD,EAAAp0I,GACAs0I,EAAAF,SAFA,EAQA,IAFAC,EAAAD,EAAA3zG,GAEA56C,EAAAyuJ,EAAAF,IACA,QAAAh9J,EAAA,EAAmBA,EAAAyO,EAAAxO,OAAiBD,IAGpC,GAAA88J,EAFAruJ,EAAAyD,WAAAlS,IAGA,YAKA,YAyBA,SAAAm9J,KAoBA,SAAAC,EAAA5+J,EAAAsyC,EAAAusH,GACAF,EAAA/8J,KAAAlB,MACAA,KAAA4xC,MAGA5xC,KAAAmqD,OAAA+yG,EAAA59J,EAAAsyC,EAAAriC,MACA,IAAA6uJ,EAAA,CACA31G,MAAA,yBACA6B,gBAAA,qBACAnsB,SAAA,WACAX,KAAA,EACAszB,MAAA,EACArzB,IAAA,EACAqtB,OAAA,EACAwmG,QAAA,SACA+M,YAAA,KAAAzsH,EAAAgd,SAAA,uBAAAhd,EAAAgd,SAAA,4BACA0vG,YAAA,aAEAt+J,KAAAu+J,YAAAH,EAAAp+J,KAAAmqD,QAIAnqD,KAAA25C,IAAAr6C,EAAAQ,SAAA46B,cAAA,OACA0jI,EAAA,CACArlE,UAAA8kE,EAAA79J,KAAAmqD,QACAk0G,YAAA,KAAAzsH,EAAAgd,SAAA,uBAAAhd,EAAAgd,SAAA,4BACA0vG,YAAA,YACAE,UAAA,WAAA5sH,EAAAzjC,MAAA,SAAAyjC,EAAAzjC,MACAswJ,KAAAN,EAAAM,KACAC,WAAA,WACAvgI,SAAA,YAEAn+B,KAAAu+J,YAAAH,GACAp+J,KAAA25C,IAAApe,YAAAv7B,KAAAmqD,QAIA,IAAAw0G,EAAA,EAEA,OAAA/sH,EAAAqqH,eACA,YACA0C,EAAA/sH,EAAAzT,SACA,MAEA,aACAwgI,EAAA/sH,EAAAzT,SAAAyT,EAAAzvC,KAAA,EACA,MAEA,UACAw8J,EAAA/sH,EAAAzT,SAAAyT,EAAAzvC,KAOA,KAAAyvC,EAAAgd,SACA5uD,KAAAu+J,YAAA,CACA/gI,KAAAx9B,KAAA4+J,YAAAD,EAAA,KACAhgJ,MAAA3e,KAAA4+J,YAAAhtH,EAAAzvC,KAAA,OAKAnC,KAAAu+J,YAAA,CACA9gI,IAAAz9B,KAAA4+J,YAAAD,EAAA,KACA//I,OAAA5e,KAAA4+J,YAAAhtH,EAAAzvC,KAAA,OAIAnC,KAAA6+J,KAAA,SAAAthI,GACAv9B,KAAAu+J,YAAA,CACA9gI,IAAAz9B,KAAA4+J,YAAArhI,EAAAE,IAAA,MACAqtB,OAAA9qD,KAAA4+J,YAAArhI,EAAAutB,OAAA,MACAttB,KAAAx9B,KAAA4+J,YAAArhI,EAAAC,KAAA,MACAszB,MAAA9wD,KAAA4+J,YAAArhI,EAAAuzB,MAAA,MACAlyC,OAAA5e,KAAA4+J,YAAArhI,EAAA3e,OAAA,MACAD,MAAA3e,KAAA4+J,YAAArhI,EAAA5e,MAAA,SAUA,SAAAmgJ,EAAAv4J,GAKA,IAAA4pJ,EAAAvxI,EAAAD,EAAA8e,EAEA,GAAAl3B,EAAAozC,IAAA,CACA/6B,EAAArY,EAAAozC,IAAApb,aACA5f,EAAApY,EAAAozC,IAAAtb,YACAZ,EAAAl3B,EAAAozC,IAAAolH,UACA,IAAAC,KAAAz4J,EAAAozC,IAAA7yB,cAAAk4I,IAAA,KAAAA,EAAAC,gBAAAD,EAAAC,iBACA14J,IAAAozC,IAAAxc,wBAKAgzH,EAAA6O,EAAAr7J,KAAAmgB,IAAAk7I,EAAA,IAAAA,EAAA,GAAApgJ,QAAA,EAAArY,EAAAqY,OAAAogJ,EAAAj+J,QAAA,EAGAf,KAAAw9B,KAAAj3B,EAAAi3B,KACAx9B,KAAA8wD,MAAAvqD,EAAAuqD,MACA9wD,KAAAy9B,IAAAl3B,EAAAk3B,OACAz9B,KAAA4e,OAAArY,EAAAqY,UACA5e,KAAA8qD,OAAAvkD,EAAAukD,QAAArtB,GAAAl3B,EAAAqY,WACA5e,KAAA2e,MAAApY,EAAAoY,SACA3e,KAAA0gJ,gBAAA/yI,IAAAwiJ,IAAA5pJ,EAAAm6I,WAsHA,SAAAwe,EAAA5/J,EAAA6/J,EAAAC,EAAAC,GAqCA,IAAAC,EAAA,IAAAR,EAAAK,GACAvtH,EAAAutH,EAAAvtH,IACA2tH,EAxTA,SAAA3tH,GACA,qBAAAA,EAAArkB,OAAAqkB,EAAAoqH,aAAApqH,EAAArkB,MAAA,GAAAqkB,EAAArkB,MAAA,KACA,OAAAqkB,EAAArkB,KAGA,IAAAqkB,EAAA7nC,QAAA6nC,EAAA7nC,MAAAy1J,gBAAA5tH,EAAA7nC,MAAAy1J,cAAAC,aACA,SAOA,IAJA,IAAA11J,EAAA6nC,EAAA7nC,MACAu/C,EAAAv/C,EAAAy1J,cACAv8I,EAAA,EAEAniB,EAAA,EAAiBA,EAAAwoD,EAAAvoD,QAAAuoD,EAAAxoD,KAAAiJ,EAAgDjJ,IACjE,YAAAwoD,EAAAxoD,GAAAi7C,MACA94B,IAIA,WAAAA,EAqSAy8I,CAAA9tH,GACA+tH,EAAA,GAEA,GAAA/tH,EAAAoqH,YAAA,CACA,IAAA75J,EAEA,OAAAyvC,EAAAgd,UACA,OACA+wG,EAAA,YACAx9J,EAAA,SACA,MAEA,SACAw9J,EAAA,YACAx9J,EAAA,QACA,MAEA,SACAw9J,EAAA,YACAx9J,EAAA,QAIA,IAAA4zB,EAAAupI,EAAA5e,WACAviH,EAAApI,EAAApyB,KAAAs6B,MAAAshI,GACAK,EAAAR,EAAAj9J,GAAA4zB,EACA8pI,EAAAF,EAAA,GAIAh8J,KAAAw7D,IAAAhhC,GAAAyhI,IACAzhI,IAAA,OACAA,GAAAx6B,KAAAse,KAAA29I,EAAA7pI,MAOAwpI,EAAA,IACAphI,GAAA,KAAAyT,EAAAgd,SAAAwwG,EAAAxgJ,OAAAwgJ,EAAAzgJ,MACAghJ,IAAA5kJ,WAKAukJ,EAAAT,KAAAgB,EAAA1hI,OACG,CAEH,IAAA2hI,EAAAR,EAAA5e,WAAA0e,EAAAxgJ,OAAA,IAEA,OAAAgzB,EAAAmqH,WACA,aACAwD,GAAAO,EAAA,EACA,MAEA,UACAP,GAAAO,EAKA,OAAAluH,EAAAgd,UACA,OACAuwG,EAAAZ,YAAA,CACA9gI,IAAA0hI,EAAAP,YAAAW,EAAA,OAEA,MAEA,SACAJ,EAAAZ,YAAA,CACA/gI,KAAA2hI,EAAAP,YAAAW,EAAA,OAEA,MAEA,SACAJ,EAAAZ,YAAA,CACAztG,MAAAquG,EAAAP,YAAAW,EAAA,OAKAI,EAAA,sBAGAL,EAAA,IAAAR,EAAAK,GAGA,IAAAY,EAzHA,SAAAj2J,EAAA61J,GAKA,IAJA,IAAAI,EACAC,EAAA,IAAAlB,EAAAh1J,GACAulD,EAAA,EAEAvuD,EAAA,EAAmBA,EAAA6+J,EAAA5+J,OAAiBD,IAAA,CACpC,KAAAgJ,EAAAm2J,qBAAAb,EAAAO,EAAA7+J,KAAAgJ,EAAAo2J,OAAAd,IAAAt1J,EAAAq2J,YAAAd,IACAv1J,EAAA+0J,KAAAc,EAAA7+J,IAKA,GAAAgJ,EAAAo2J,OAAAd,GACA,OAAAt1J,EAGA,IAAA9C,EAAA8C,EAAAs2J,oBAAAhB,GAGA/vG,EAAAroD,IACA+4J,EAAA,IAAAjB,EAAAh1J,GACAulD,EAAAroD,GAIA8C,EAAA,IAAAg1J,EAAAkB,GAGA,OAAAD,GAAAC,EA6FAK,CAAAf,EAAAK,GACAR,EAAAN,KAAAkB,EAAAO,kBAAAlB,IAGA,SAAAlrJ,KA1XA+pJ,EAAA38J,UAAAi9J,YAAA,SAAAH,EAAAzkH,GAGA,QAAApvC,KAFAovC,KAAA35C,KAAA25C,IAEAykH,EACAA,EAAA1lJ,eAAAnO,KACAovC,EAAA1V,MAAA15B,GAAA6zJ,EAAA7zJ,KAKA0zJ,EAAA38J,UAAAs9J,YAAA,SAAA/jI,EAAA0lI,GACA,WAAA1lI,EAAA,EAAAA,EAAA0lI,GAuFArC,EAAA58J,UAAAk5J,EAAAyD,EAAA38J,WACA48J,EAAA58J,UAAAoF,YAAAw3J,EAoCAY,EAAAx9J,UAAAu9J,KAAA,SAAAc,EAAAa,GAGA,OAFAA,OAAA7yJ,IAAA6yJ,IAAAxgK,KAAA0gJ,WAEAif,GACA,SACA3/J,KAAAw9B,MAAAgjI,EACAxgK,KAAA8wD,OAAA0vG,EACA,MAEA,SACAxgK,KAAAw9B,MAAAgjI,EACAxgK,KAAA8wD,OAAA0vG,EACA,MAEA,SACAxgK,KAAAy9B,KAAA+iI,EACAxgK,KAAA8qD,QAAA01G,EACA,MAEA,SACAxgK,KAAAy9B,KAAA+iI,EACAxgK,KAAA8qD,QAAA01G,IAMA1B,EAAAx9J,UAAAm/J,SAAA,SAAA9sI,GACA,OAAA3zB,KAAAw9B,KAAA7J,EAAAm9B,OAAA9wD,KAAA8wD,MAAAn9B,EAAA6J,MAAAx9B,KAAAy9B,IAAA9J,EAAAm3B,QAAA9qD,KAAA8qD,OAAAn3B,EAAA8J,KAIAqhI,EAAAx9J,UAAA6+J,YAAA,SAAAj1J,GACA,QAAApK,EAAA,EAAiBA,EAAAoK,EAAAnK,OAAkBD,IACnC,GAAAd,KAAAygK,SAAAv1J,EAAApK,IACA,SAIA,UAIAg+J,EAAAx9J,UAAA4+J,OAAA,SAAAx0D,GACA,OAAA1rG,KAAAy9B,KAAAiuE,EAAAjuE,KAAAz9B,KAAA8qD,QAAA4gD,EAAA5gD,QAAA9qD,KAAAw9B,MAAAkuE,EAAAluE,MAAAx9B,KAAA8wD,OAAA46C,EAAA56C,OAOAguG,EAAAx9J,UAAA2+J,qBAAA,SAAAv0D,EAAAi0D,GACA,OAAAA,GACA,SACA,OAAA3/J,KAAAw9B,KAAAkuE,EAAAluE,KAEA,SACA,OAAAx9B,KAAA8wD,MAAA46C,EAAA56C,MAEA,SACA,OAAA9wD,KAAAy9B,IAAAiuE,EAAAjuE,IAEA,SACA,OAAAz9B,KAAA8qD,OAAA4gD,EAAA5gD,SAMAg0G,EAAAx9J,UAAA8+J,oBAAA,SAAAzsI,GAIA,OAHAhwB,KAAAmgB,IAAA,EAAAngB,KAAAG,IAAA9D,KAAA8wD,MAAAn9B,EAAAm9B,OAAAntD,KAAAmgB,IAAA9jB,KAAAw9B,KAAA7J,EAAA6J,OACA75B,KAAAmgB,IAAA,EAAAngB,KAAAG,IAAA9D,KAAA8qD,OAAAn3B,EAAAm3B,QAAAnnD,KAAAmgB,IAAA9jB,KAAAy9B,IAAA9J,EAAA8J,OAEAz9B,KAAA4e,OAAA5e,KAAA2e,QAOAmgJ,EAAAx9J,UAAAg/J,kBAAA,SAAAz3I,GACA,OACA4U,IAAAz9B,KAAAy9B,IAAA5U,EAAA4U,IACAqtB,OAAAjiC,EAAAiiC,OAAA9qD,KAAA8qD,OACAttB,KAAAx9B,KAAAw9B,KAAA3U,EAAA2U,KACAszB,MAAAjoC,EAAAioC,MAAA9wD,KAAA8wD,MACAlyC,OAAA5e,KAAA4e,OACAD,MAAA3e,KAAA2e,QAMAmgJ,EAAA4B,qBAAA,SAAAn6J,GACA,IAAAqY,EAAArY,EAAAozC,IAAApzC,EAAAozC,IAAApb,aAAAh4B,EAAAwgB,QAAAxgB,EAAAg4B,aAAA,EACA5f,EAAApY,EAAAozC,IAAApzC,EAAAozC,IAAAtb,YAAA93B,EAAAwgB,QAAAxgB,EAAA83B,YAAA,EACAZ,EAAAl3B,EAAAozC,IAAApzC,EAAAozC,IAAAolH,UAAAx4J,EAAAwgB,QAAAxgB,EAAAw4J,UAAA,EAUA,MARA,CACAvhI,MAFAj3B,IAAAozC,IAAApzC,EAAAozC,IAAAxc,wBAAA52B,EAAAwgB,QAAAxgB,EAAA42B,wBAAA52B,GAEAi3B,KACAszB,MAAAvqD,EAAAuqD,MACArzB,IAAAl3B,EAAAk3B,OACA7e,OAAArY,EAAAqY,UACAksC,OAAAvkD,EAAAukD,QAAArtB,GAAAl3B,EAAAqY,WACAD,MAAApY,EAAAoY,WA+IAzK,EAAA2mC,cAAA,WACA,OACA8lH,OAAA,SAAAl/J,GACA,IAAAA,EACA,SAGA,qBAAAA,EACA,UAAA2T,MAAA,iCAGA,OAAAkkF,mBAAAk+B,mBAAA/1H,OAKAyS,EAAA0sJ,oBAAA,SAAAthK,EAAAuhK,GACA,OAAAvhK,GAAAuhK,EAIA3D,EAAA59J,EAAAuhK,GAHA,MAYA3sJ,EAAA01C,YAAA,SAAAtqD,EAAAqyC,EAAAmvH,GACA,IAAAxhK,IAAAqyC,IAAAmvH,EACA,YAIA,KAAAA,EAAAzlI,YACAylI,EAAA/hI,YAAA+hI,EAAAzlI,YAGA,IAAA0lI,EAAAzhK,EAAAQ,SAAA46B,cAAA,OAsBA,GArBAqmI,EAAA98H,MAAA9F,SAAA,WACA4iI,EAAA98H,MAAAzG,KAAA,IACAujI,EAAA98H,MAAA6sB,MAAA,IACAiwG,EAAA98H,MAAAxG,IAAA,IACAsjI,EAAA98H,MAAA6mB,OAAA,IACAi2G,EAAA98H,MAAA+8H,OApBA,OAqBAF,EAAAvlI,YAAAwlI,GAIA,SAAApvH,GACA,QAAA7wC,EAAA,EAAmBA,EAAA6wC,EAAA5wC,OAAiBD,IACpC,GAAA6wC,EAAA7wC,GAAAmgK,eAAAtvH,EAAA7wC,GAAAspD,aACA,SAIA,SAIA82G,CAAAvvH,GAAA,CAQA,IAAA0tH,EAAA,GACAD,EAAAN,EAAA4B,qBAAAK,GAEA5C,EAAA,CACAM,KAFA96J,KAAAs6B,MAhDA,IAgDAmhI,EAAAxgJ,OAAA,SAEA,kBAGA,WAGA,IAFA,IAAAugJ,EAAAvtH,EAEA9wC,EAAA,EAAmBA,EAAA6wC,EAAA5wC,OAAiBD,IACpC8wC,EAAAD,EAAA7wC,GAEAq+J,EAAA,IAAAjB,EAAA5+J,EAAAsyC,EAAAusH,GACA4C,EAAAxlI,YAAA4jI,EAAAxlH,KAEAulH,EAAA5/J,EAAA6/J,EAAAC,EAAAC,GAGAztH,EAAAwY,aAAA+0G,EAAAxlH,IACA0lH,EAAAl+J,KAAA29J,EAAA4B,qBAAAvB,IAbA,QAdA,QAAAr+J,EAAA,EAAmBA,EAAA6wC,EAAA5wC,OAAiBD,IACpCigK,EAAAxlI,YAAAoW,EAAA7wC,GAAAspD,eA+BAl2C,EAAAya,OAAA,SAAArvB,EAAA2U,EAAAytG,GACAA,IACAA,EAAAztG,EACAA,EAAA,IAGAA,IACAA,EAAA,IAGAjU,KAAAV,SACAU,KAAAiU,QACAjU,KAAA6mC,MAAA,UACA7mC,KAAAyC,OAAA,GACAzC,KAAA0hH,WAAA,IAAAE,YAAA,QACA5hH,KAAAm7J,WAAA,IAGAjnJ,EAAAya,OAAArtB,UAAA,CAGA6/J,mBAAA,SAAAx5J,GACA,KAAAA,aAAA8yJ,GAGA,MAAA9yJ,EAFA3H,KAAA+6C,gBAAA/6C,KAAA+6C,eAAApzC,IAKAyO,MAAA,SAAA3U,GACA,IAAAlC,EAAAS,KAWA,SAAAohK,IAIA,IAHA,IAAA3+J,EAAAlD,EAAAkD,OACA4+J,EAAA,EAEAA,EAAA5+J,EAAA1B,QAAA,OAAA0B,EAAA4+J,IAAA,OAAA5+J,EAAA4+J,MACAA,EAGA,IAAA9zI,EAAA9qB,EAAAg5J,OAAA,EAAA4F,GAWA,MATA,OAAA5+J,EAAA4+J,MACAA,EAGA,OAAA5+J,EAAA4+J,MACAA,EAGA9hK,EAAAkD,SAAAg5J,OAAA4F,GACA9zI,EA4FA,SAAA+zI,EAAAjf,GACAA,EAAA99H,MAAA,mBAEAu2I,EAAAzY,EAAA,SAAAvlI,EAAA0+C,GACA,OAAA1+C,GACA,uBAzBA,SAAAulI,GACA,IAAAxmG,EAAA,IAAAg/G,EACAC,EAAAzY,EAAA,SAAAvlI,EAAA0+C,GACA,OAAA1+C,GACA,YACA++B,EAAAigH,QAAAh/I,EAAA,IAAA0+C,GACA,MAEA,WACA3f,EAAAlwC,IAAAmR,EAAA,IAAA69I,EAAAn/F,MAGO,cACPj8D,EAAAyiH,gBAAAziH,EAAAyiH,eAAA,CACAF,OAAAjmE,EAAAzlB,IAAA,UACA2rF,MAAAlmE,EAAAzlB,IAAA,WAWAmrI,CAAA/lG,KAGS,KAETs/F,EAAAzY,EAAA,SAAAvlI,EAAA0+C,GACA,OAAA1+C,GACA,cArGA,SAAAulI,GACA,IAAAxmG,EAAA,IAAAg/G,EA4CA,GA3CAC,EAAAzY,EAAA,SAAAvlI,EAAA0+C,GACA,OAAA1+C,GACA,SACA++B,EAAAlwC,IAAAmR,EAAA0+C,GACA,MAEA,YACA3f,EAAAuU,QAAAtzC,EAAA0+C,GACA,MAEA,YACA3f,EAAAigH,QAAAh/I,EAAA0+C,GACA,MAEA,mBACA,qBACA,IAAAgmG,EAAAhmG,EAAA1gD,MAAA,KAEA,OAAA0mJ,EAAAzgK,OACA,MAKA,IAAA0gK,EAAA,IAAA5G,EAIA,GAHA4G,EAAArxG,QAAA,IAAAoxG,EAAA,IACAC,EAAArxG,QAAA,IAAAoxG,EAAA,KAEAC,EAAAnlI,IAAA,OAAAmlI,EAAAnlI,IAAA,KACA,MAGAuf,EAAAlwC,IAAAmR,EAAA,IAAA2kJ,EAAArrI,IAAA,MACAylB,EAAAlwC,IAAAmR,EAAA,IAAA2kJ,EAAArrI,IAAA,MACA,MAEA,aACAylB,EAAA8/G,IAAA7+I,EAAA0+C,EAAA,UAGO,UAGP3f,EAAAvf,IAAA,OACA,IAAAo/H,EAAA,IAAAn8J,EAAA0U,MAAAG,WAAA7U,EAAAD,OAAA8U,WACAsnJ,EAAA/8I,MAAAk9B,EAAAzlB,IAAA,aACAslI,EAAAgG,MAAA7lH,EAAAzlB,IAAA,WACAslI,EAAAiG,cAAA9lH,EAAAzlB,IAAA,mBACAslI,EAAAkG,cAAA/lH,EAAAzlB,IAAA,qBACAslI,EAAAmG,gBAAAhmH,EAAAzlB,IAAA,qBACAslI,EAAAoG,gBAAAjmH,EAAAzlB,IAAA,uBACAslI,EAAAqG,OAAAlmH,EAAAzlB,IAAA,aAEA72B,EAAAyiK,UAAAziK,EAAAyiK,SAAAtG,GAGAn8J,EAAA47J,WAAAh6J,KAAA,CACA8B,GAAA44C,EAAAzlB,IAAA,MACAslI,YA2CAuG,CAAAzmG,KAGS,KAxIT/5D,IAEAlC,EAAAkD,QAAAlD,EAAAmiH,QAAAi/C,OAAAl/J,EAAA,CACA4O,QAAA,KA0IA,IACA,IAAAkd,EAEA,eAAAhuB,EAAAsnC,MAAA,CAEA,cAAAt+B,KAAAhJ,EAAAkD,QACA,OAAAzC,KAIA,IAAAuiC,GADAhV,EAAA6zI,KACA78I,MAAA,sBAEA,IAAAge,MAAA,GACA,UAAAk4H,IAAAa,OAAAa,cAGA58J,EAAAsnC,MAAA,SAKA,IAFA,IAAAq7H,GAAA,EAEA3iK,EAAAkD,QAAA,CAEA,cAAA8F,KAAAhJ,EAAAkD,QACA,OAAAzC,KASA,OANAkiK,EAGAA,GAAA,EAFA30I,EAAA6zI,IAKA7hK,EAAAsnC,OACA,aAEA,IAAAt+B,KAAAglB,GACA+zI,EAAA/zI,GACaA,IAEbhuB,EAAAsnC,MAAA,MAGA,SAEA,WAEAtZ,IACAhuB,EAAAsnC,MAAA,MAGA,SAEA,SAEA,oBAAAt+B,KAAAglB,GAAA,CACAhuB,EAAAsnC,MAAA,OACA,MAIA,IAAAtZ,EACA,SAMA,GAHAhuB,EAAAqyC,IAAA,IAAAryC,EAAA0U,MAAAE,QAAA5U,EAAAD,OAAA6U,QAAA,QACA5U,EAAAsnC,MAAA,OAEA,IAAAtZ,EAAA9sB,QAAA,WACAlB,EAAAqyC,IAAA3uC,GAAAsqB,EACA,SAOA,UAEA,IACA2tI,EAAA3tI,EAAAhuB,EAAAqyC,IAAAryC,EAAA47J,YACa,MAAAxzJ,GACbpI,EAAA4hK,mBAAAx5J,GAEApI,EAAAqyC,IAAA,KACAryC,EAAAsnC,MAAA,SACA,SAGAtnC,EAAAsnC,MAAA,UACA,SAEA,cACA,IAAAs7H,GAAA,IAAA50I,EAAA9sB,QAAA,UAKA,IAAA8sB,GAAA40I,IAAAD,GAAA,IAEA3iK,EAAAu7C,OAAAv7C,EAAAu7C,MAAAv7C,EAAAqyC,KACAryC,EAAAqyC,IAAA,KACAryC,EAAAsnC,MAAA,KACA,SAGAtnC,EAAAqyC,IAAAriC,OACAhQ,EAAAqyC,IAAAriC,MAAA,MAGAhQ,EAAAqyC,IAAAriC,MAAAge,EACA,SAEA,aAGAA,IACAhuB,EAAAsnC,MAAA,MAGA,WAGK,MAAAl/B,GACLpI,EAAA4hK,mBAAAx5J,GAEA,YAAApI,EAAAsnC,OAAAtnC,EAAAqyC,KAAAryC,EAAAu7C,OACAv7C,EAAAu7C,MAAAv7C,EAAAqyC,KAGAryC,EAAAqyC,IAAA,KAGAryC,EAAAsnC,MAAA,YAAAtnC,EAAAsnC,MAAA,qBAGA,OAAA7mC,MAEA2B,MAAA,WAGA,IAYA,GAdA3B,KAIAyC,QAJAzC,KAIA0hH,QAAAi/C,UAJA3gK,KAMA4xC,KAAA,WANA5xC,KAMA6mC,SANA7mC,KAOAyC,QAAA,OAPAzC,KAQAoW,SAMA,YAdApW,KAcA6mC,MACA,UAAA4zH,IAAAa,OAAAa,cAEK,MAAAx0J,GAjBL3H,KAkBAmhK,mBAAAx5J,GAIA,OAtBA3H,KAqBAg7C,SArBAh7C,KAqBAg7C,UACAh7C,OAGAR,EAAAC,QAAAyU,iBCrzCA,IAAAkuJ,EAAA,OACAC,EAAA,CACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GAEAC,EAAA,CACA1uJ,MAAA,EACAR,OAAA,EACAnR,IAAA,EACAo7B,KAAA,EACAszB,MAAA,GAYA,SAAA4xG,EAAAr7J,GACA,wBAAAA,MAIAo7J,EAAAp7J,EAAA8mB,gBACA9mB,EAAA8mB,eAGA,SAAAha,EAAApS,EAAAoO,EAAAZ,GAQAvP,KAAAihK,cAAA,EAMA,IAAA0B,EAAA,GACAC,GAAA,EACAC,EAAA9gK,EACA+gK,EAAA3yJ,EACA4yJ,EAAAxzJ,EACAyzJ,EAAA,KACAC,EAAA,GACAC,GAAA,EACAC,EAAA,OACAC,EAAA,QACAC,EAAA,GACAC,EAAA,SACAC,EAAA,GACAC,EAAA,SACA79J,OAAAisB,iBAAA5xB,KAAA,CACAiD,GAAA,CACAuC,YAAA,EACA4wB,IAAA,WACA,OAAAusI,GAEAh3J,IAAA,SAAAtE,GACAs7J,EAAA,GAAAt7J,IAGAo8J,YAAA,CACAj+J,YAAA,EACA4wB,IAAA,WACA,OAAAwsI,GAEAj3J,IAAA,SAAAtE,GACAu7J,IAAAv7J,IAGAtF,UAAA,CACAyD,YAAA,EACA4wB,IAAA,WACA,OAAAysI,GAEAl3J,IAAA,SAAAtE,GACA,qBAAAA,EACA,UAAApC,UAAA,uCAGA49J,EAAAx7J,EACArH,KAAAihK,cAAA,IAGA9wJ,QAAA,CACA3K,YAAA,EACA4wB,IAAA,WACA,OAAA0sI,GAEAn3J,IAAA,SAAAtE,GACA,qBAAAA,EACA,UAAApC,UAAA,qCAGA69J,EAAAz7J,EACArH,KAAAihK,cAAA,IAGA1xJ,KAAA,CACA/J,YAAA,EACA4wB,IAAA,WACA,OAAA2sI,GAEAp3J,IAAA,SAAAtE,GACA07J,EAAA,GAAA17J,EACArH,KAAAihK,cAAA,IAGAvF,OAAA,CACAl2J,YAAA,EACA4wB,IAAA,WACA,OAAA4sI,GAEAr3J,IAAA,SAAAtE,GACA27J,EAAA37J,EACArH,KAAAihK,cAAA,IAGAryG,SAAA,CACAppD,YAAA,EACA4wB,IAAA,WACA,OAAA6sI,GAEAt3J,IAAA,SAAAtE,GACA,IAAAq8J,EAvHA,SAAAr8J,GACA,wBAAAA,KAIAg7J,EAAAh7J,EAAA8mB,gBACA9mB,EAAA8mB,cAiHAw1I,CAAAt8J,GAEA,QAAAq8J,EACA,UAAAxnC,YAAA,+CAGA+mC,EAAAS,EACA1jK,KAAAihK,cAAA,IAGAjF,YAAA,CACAx2J,YAAA,EACA4wB,IAAA,WACA,OAAA8sI,GAEAv3J,IAAA,SAAAtE,GACA67J,IAAA77J,EACArH,KAAAihK,cAAA,IAGA1zI,KAAA,CACA/nB,YAAA,EACA4wB,IAAA,WACA,OAAA+sI,GAEAx3J,IAAA,SAAAtE,GACA,qBAAAA,OAAA+6J,EACA,UAAAlmC,YAAA,sDAGAinC,EAAA97J,EACArH,KAAAihK,cAAA,IAGAlF,UAAA,CACAv2J,YAAA,EACA4wB,IAAA,WACA,OAAAgtI,GAEAz3J,IAAA,SAAAtE,GACA,IAAAq8J,EAAAhB,EAAAr7J,GAEA,IAAAq8J,EACA,UAAAxnC,YAAA,+CAGAknC,EAAAM,EACA1jK,KAAAihK,cAAA,IAGA9iI,SAAA,CACA34B,YAAA,EACA4wB,IAAA,WACA,OAAAitI,GAEA13J,IAAA,SAAAtE,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,UAAA+N,MAAA,uCAGAiuJ,EAAAh8J,EACArH,KAAAihK,cAAA,IAGAhF,cAAA,CACAz2J,YAAA,EACA4wB,IAAA,WACA,OAAAktI,GAEA33J,IAAA,SAAAtE,GACA,IAAAq8J,EAAAhB,EAAAr7J,GAEA,IAAAq8J,EACA,UAAAxnC,YAAA,+CAGAonC,EAAAI,EACA1jK,KAAAihK,cAAA,IAGA9+J,KAAA,CACAqD,YAAA,EACA4wB,IAAA,WACA,OAAAmtI,GAEA53J,IAAA,SAAAtE,GACA,GAAAA,EAAA,GAAAA,EAAA,IACA,UAAA+N,MAAA,mCAGAmuJ,EAAAl8J,EACArH,KAAAihK,cAAA,IAGA9yJ,MAAA,CACA3I,YAAA,EACA4wB,IAAA,WACA,OAAAotI,GAEA73J,IAAA,SAAAtE,GACA,IAAAq8J,EAAAhB,EAAAr7J,GAEA,IAAAq8J,EACA,UAAAxnC,YAAA,+CAGAsnC,EAAAE,EACA1jK,KAAAihK,cAAA,MASAjhK,KAAAoqD,kBAAAz8C,EAOAwG,EAAA7S,UAAAsiK,aAAA,WAEA,OAAA1vJ,OAAA0sJ,oBAAAthK,OAAAU,KAAAuP,OAGA/P,EAAAC,QAAA0U,iBCrQA,IAAA0vJ,EAAA,CACAvB,IAAA,EACAwB,IAAA,GAYA,SAAAC,EAAA18J,GACA,wBAAAA,MAAA,GAAAA,GAAA,IA6GA7H,EAAAC,QAzGA,WACA,IAAA6rE,EAAA,IACA04F,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,EAAA,EACAC,EAAA,IACAC,EAAA,GACA1+J,OAAAisB,iBAAA5xB,KAAA,CACA2e,MAAA,CACAnZ,YAAA,EACA4wB,IAAA,WACA,OAAAk1C,GAEA3/D,IAAA,SAAAtE,GACA,IAAA08J,EAAA18J,GACA,UAAA+N,MAAA,oCAGAk2D,EAAAjkE,IAGAq6J,MAAA,CACAl8J,YAAA,EACA4wB,IAAA,WACA,OAAA4tI,GAEAr4J,IAAA,SAAAtE,GACA,qBAAAA,EACA,UAAApC,UAAA,kCAGA++J,EAAA38J,IAGAu6J,cAAA,CACAp8J,YAAA,EACA4wB,IAAA,WACA,OAAA8tI,GAEAv4J,IAAA,SAAAtE,GACA,IAAA08J,EAAA18J,GACA,UAAA+N,MAAA,4CAGA8uJ,EAAA78J,IAGAs6J,cAAA,CACAn8J,YAAA,EACA4wB,IAAA,WACA,OAAA6tI,GAEAt4J,IAAA,SAAAtE,GACA,IAAA08J,EAAA18J,GACA,UAAA+N,MAAA,4CAGA6uJ,EAAA58J,IAGAy6J,gBAAA,CACAt8J,YAAA,EACA4wB,IAAA,WACA,OAAAguI,GAEAz4J,IAAA,SAAAtE,GACA,IAAA08J,EAAA18J,GACA,UAAA+N,MAAA,8CAGAgvJ,EAAA/8J,IAGAw6J,gBAAA,CACAr8J,YAAA,EACA4wB,IAAA,WACA,OAAA+tI,GAEAx4J,IAAA,SAAAtE,GACA,IAAA08J,EAAA18J,GACA,UAAA+N,MAAA,8CAGA+uJ,EAAA98J,IAGA06J,OAAA,CACAv8J,YAAA,EACA4wB,IAAA,WACA,OAAAiuI,GAEA14J,IAAA,SAAAtE,GACA,IAAAq8J,EA3GA,SAAAr8J,GACA,wBAAAA,KAIAw8J,EAAAx8J,EAAA8mB,gBACA9mB,EAAA8mB,cAqGAm2I,CAAAj9J,GAEA,QAAAq8J,EACA,UAAAxnC,YAAA,+CAGAmoC,EAAAX,sBCrIAlkK,EAAAC,QAGA,SAAAghB,GACA,IAAA6mB,EAAAn/B,EAAAjH,KAAAuf,GACA,4BAAA6mB,GAAA,oBAAA7mB,GAAA,oBAAA6mB,GAAA,qBAAAhoC,SACAmhB,IAAAnhB,OAAAsY,YAAA6I,IAAAnhB,OAAAilK,OAAA9jJ,IAAAnhB,OAAAklK,SAAA/jJ,IAAAnhB,OAAAmlK,SALA,IAAAt8J,EAAAxC,OAAArE,UAAA6G,0BCDA,IAAAwR,EAAW9Z,EAAQ,IACnBqE,EAAcrE,EAAQ,IAKtBL,EAAAC,QAAA,SAAAuX,GACA,IAAAA,EAAA,SACA,IAAAtU,EAAA,GAcA,OAbAwB,EAAAyV,EAAA3C,GAAA8D,MAAA,eAAAg9E,GACA,IARAhzC,EAQAtkD,EAAAs3F,EAAAr3F,QAAA,KACAoF,EAAA8T,EAAAm+E,EAAAp3F,MAAA,EAAAF,IAAA2tB,cACA9mB,EAAAsS,EAAAm+E,EAAAp3F,MAAAF,EAAA,IAEA,qBAAAkC,EAAAmD,GACAnD,EAAAmD,GAAAwB,GAbAy9C,EAcKpiD,EAAAmD,GAbL,mBAAAF,OAAArE,UAAA6G,SAAAjH,KAAA4jD,GAcApiD,EAAAmD,GAAA1E,KAAAkG,GAEA3E,EAAAmD,GAAA,CAAAnD,EAAAmD,GAAAwB,MAGA3E,iCCpBA,IAAAuF,EAAWpI,EAAQ,IAEnB6kK,EAAa7kK,EAAQ,IAErBmI,EAAqBnI,EAAQ,IAE7B8kK,EAAkB9kK,EAAQ,IAE1B4U,EAAW5U,EAAQ,IAEnB+kK,EAAA38J,EAAA/G,KAAAwG,SAAAxG,KAAAyjK,KACAD,EAAAE,EAAA,CACAD,cACA38J,iBACAyM,SAEAjV,EAAAC,QAAAmlK,gCCfA,IACAlkK,EAAA+a,MAAAna,UAAAZ,MACA8H,EAAA7C,OAAArE,UAAA6G,SAGA3I,EAAAC,QAAA,SAAAolK,GACA,IAAAx/J,EAAArF,KAEA,uBAAAqF,GALA,sBAKAmD,EAAAtH,KAAAmE,GACA,UAAAJ,UATA,kDASAI,GAuBA,IApBA,IACAi/B,EADAtjC,EAAAN,EAAAQ,KAAAD,UAAA,GAiBA6jK,EAAAnhK,KAAAmgB,IAAA,EAAAze,EAAAtE,OAAAC,EAAAD,QACAgkK,EAAA,GAEAjkK,EAAA,EAAiBA,EAAAgkK,EAAiBhkK,IAClCikK,EAAA5jK,KAAA,IAAAL,GAKA,GAFAwjC,EAAA58B,SAAA,6BAAAq9J,EAAA/pJ,KAAA,iDAAAtT,CArBA,WACA,GAAA1H,gBAAAskC,EAAA,CACA,IAAA5hC,EAAA2C,EAAAjE,MAAApB,KAAAgB,EAAAV,OAAAI,EAAAQ,KAAAD,aAEA,OAAA0E,OAAAjD,OACAA,EAGA1C,KAEA,OAAAqF,EAAAjE,MAAAyjK,EAAA7jK,EAAAV,OAAAI,EAAAQ,KAAAD,eAaAoE,EAAA/D,UAAA,CACA,IAAA0jK,EAAA,aAEAA,EAAA1jK,UAAA+D,EAAA/D,UACAgjC,EAAAhjC,UAAA,IAAA0jK,EACAA,EAAA1jK,UAAA,KAGA,OAAAgjC,iCC/CA,IAAA5jC,EAAA+a,MAAAna,UAAAZ,MAEAm0H,EAAah1H,EAAQ,IAErBolK,EAAAt/J,OAAAiW,KACAspJ,EAAAD,EAAA,SAAA/+J,GACA,OAAA++J,EAAA/+J,IACIrG,EAAQ,IACZslK,EAAAx/J,OAAAiW,KAEAspJ,EAAAzwJ,KAAA,WACA9O,OAAAiW,KACA,WAEA,IAAA5a,EAAA2E,OAAAiW,KAAA3a,WACA,OAAAD,KAAAD,SAAAE,UAAAF,OAHA,CAIK,OAGL4E,OAAAiW,KAAA,SAAAqd,GAEA,OAAA47F,EAAA57F,GACAksI,EAAAzkK,EAAAQ,KAAA+3B,IAGAksI,EAAAlsI,KAIAtzB,OAAAiW,KAAAspJ,EAGA,OAAAv/J,OAAAiW,MAAAspJ,GAGA1lK,EAAAC,QAAAylK,gCCnCA,IAAAA,EAEA,IAAAv/J,OAAAiW,KAAA,CAEA,IAAA0gB,EAAA32B,OAAArE,UAAAoX,eACAlQ,EAAA7C,OAAArE,UAAA6G,SAEA0sH,EAAeh1H,EAAQ,IAGvBulK,EAAAz/J,OAAArE,UAAAyyH,qBACAsxC,GAAAD,EAAAlkK,KAAA,CACAiH,SAAA,MACG,YACHm9J,EAAAF,EAAAlkK,KAAA,aAAwD,aACxDqkK,EAAA,8GAEAC,EAAA,SAAAt/J,GACA,IAAAu/J,EAAAv/J,EAAAQ,YACA,OAAA++J,KAAAnkK,YAAA4E,GAGAw/J,EAAA,CACAC,mBAAA,EACAC,UAAA,EACAC,WAAA,EACAC,QAAA,EACAC,eAAA,EACAC,SAAA,EACAC,cAAA,EACAC,aAAA,EACAC,cAAA,EACAC,aAAA,EACAC,cAAA,EACAC,cAAA,EACAC,SAAA,EACAC,aAAA,EACAC,YAAA,EACAC,UAAA,EACAC,UAAA,EACAC,OAAA,EACAC,kBAAA,EACAC,oBAAA,EACAC,SAAA,GAGAC,EAAA,WAEA,wBAAA1nK,OACA,SAGA,QAAAwd,KAAAxd,OACA,IACA,IAAAomK,EAAA,IAAA5oJ,IAAAwf,EAAAp7B,KAAA5B,OAAAwd,IAAA,OAAAxd,OAAAwd,IAAA,kBAAAxd,OAAAwd,GACA,IACA0oJ,EAAAlmK,OAAAwd,IACW,MAAAnV,GACX,UAGO,MAAAA,GACP,SAIA,SApBA,GAoCAu9J,EAAA,SAAAjsI,GACA,IAAA5d,EAAA,OAAA4d,GAAA,kBAAAA,EACAtkB,EAAA,sBAAAnM,EAAAtH,KAAA+3B,GACAguI,EAAApyC,EAAA57F,GACAiuI,EAAA7rJ,GAAA,oBAAA7S,EAAAtH,KAAA+3B,GACAkuI,EAAA,GAEA,IAAA9rJ,IAAA1G,IAAAsyJ,EACA,UAAAhiK,UAAA,sCAGA,IAAAmiK,EAAA9B,GAAA3wJ,EAEA,GAAAuyJ,GAAAjuI,EAAAl4B,OAAA,IAAAu7B,EAAAp7B,KAAA+3B,EAAA,GACA,QAAAn4B,EAAA,EAAqBA,EAAAm4B,EAAAl4B,SAAmBD,EACxCqmK,EAAAhmK,KAAAwB,OAAA7B,IAIA,GAAAmmK,GAAAhuI,EAAAl4B,OAAA,EACA,QAAA8xB,EAAA,EAAqBA,EAAAoG,EAAAl4B,SAAmB8xB,EACxCs0I,EAAAhmK,KAAAwB,OAAAkwB,SAGA,QAAApW,KAAAwc,EACAmuI,GAAA,cAAA3qJ,IAAA6f,EAAAp7B,KAAA+3B,EAAAxc,IACA0qJ,EAAAhmK,KAAAwB,OAAA8Z,IAKA,GAAA4oJ,EAGA,IAFA,IAAAgC,EA7CA,SAAAnhK,GAEA,wBAAA5G,SAAA0nK,EACA,OAAAxB,EAAAt/J,GAGA,IACA,OAAAs/J,EAAAt/J,GACK,MAAAyB,GACL,UAoCA2/J,CAAAruI,GAEAnc,EAAA,EAAqBA,EAAAyoJ,EAAAxkK,SAAsB+b,EAC3CuqJ,GAAA,gBAAA9B,EAAAzoJ,KAAAwf,EAAAp7B,KAAA+3B,EAAAssI,EAAAzoJ,KACAqqJ,EAAAhmK,KAAAokK,EAAAzoJ,IAKA,OAAAqqJ,GAIA3nK,EAAAC,QAAAylK,gCC/HA,IAAAqC,EAAmB1nK,EAAQ,IAE3B2nK,EAAAD,EAAA,YACAE,EAAAF,EAAA,eACAG,EAAAH,EAAA,YAEAI,EAAmB9nK,EAAQ,IAE3B+nK,EAAa/nK,EAAQ,IAErBgoK,EAAgBhoK,EAAQ,IAExB84C,EAAW94C,EAAQ,IAEnBioK,EAAUjoK,EAAQ,IAElBkoK,EAAiBloK,EAAQ,IAEzBmoK,EAAkBnoK,EAAQ,IAE1By8B,EAAUz8B,EAAQ,IAGlBooK,EAAA,CACAC,YAAAF,EACAG,UAAA,SAAA9gK,GACA,QAAAA,GAEA+gK,SAAA,SAAA/gK,GACA,OAAAA,GAEAghK,UAAA,SAAAhhK,GACA,IAAA0W,EAAA/d,KAAAooK,SAAA/gK,GAEA,OAAAugK,EAAA7pJ,GACA,EAGA,IAAAA,GAAA8pJ,EAAA9pJ,GAIA46B,EAAA56B,GAAApa,KAAAigB,MAAAjgB,KAAAw7D,IAAAphD,IAHAA,GAKAuqJ,QAAA,SAAAtsJ,GACA,OAAAhc,KAAAooK,SAAApsJ,IAAA,GAEAusJ,SAAA,SAAAvsJ,GACA,OAAAhc,KAAAooK,SAAApsJ,KAAA,GAEAwsJ,SAAA,SAAAnhK,GACA,IAAA0W,EAAA/d,KAAAooK,SAAA/gK,GAEA,GAAAugK,EAAA7pJ,IAAA,IAAAA,IAAA8pJ,EAAA9pJ,GACA,SAGA,IAAA0qJ,EAAA9vH,EAAA56B,GAAApa,KAAAigB,MAAAjgB,KAAAw7D,IAAAphD,IACA,OAAA+pJ,EAAAW,EAAA,QAEAvzC,SAAA,SAAA7tH,GACA,OAAAqgK,EAAArgK,IAEAqhK,SAAA,SAAArhK,GAEA,OADArH,KAAAm1H,qBAAA9tH,GACAmgK,EAAAngK,IAEA8tH,qBAAA,SAAA9tH,EAAAshK,GAEA,SAAAthK,EACA,UAAAogK,EAAAkB,GAAA,yBAAAthK,GAGA,OAAAA,GAEA0gK,aACAa,UAAA,SAAA5sJ,EAAAC,GACA,OAAAD,IAAAC,EAEA,IAAAD,GACA,EAAAA,IAAA,EAAAC,EAMA2rJ,EAAA5rJ,IAAA4rJ,EAAA3rJ,IAGA4sJ,KAAA,SAAA7sJ,GACA,cAAAA,EACA,OAGA,qBAAAA,EACA,YAGA,oBAAAA,GAAA,kBAAAA,EACA,SAGA,kBAAAA,EACA,SAGA,mBAAAA,EACA,UAGA,kBAAAA,EACA,cADA,GAKA8sJ,qBAAA,SAAAC,GACA,cAAA/oK,KAAA6oK,KAAAE,GACA,SAGA,IAAAp7I,EAAA,CACAq7I,oBAAA,EACAC,kBAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,gBAAA,GAGA,QAAAxjK,KAAAkjK,EAEA,GAAAzsI,EAAAysI,EAAAljK,KAAA8nB,EAAA9nB,GACA,SAIA,IAAAyjK,EAAAhtI,EAAAysI,EAAA,aACAQ,EAAAjtI,EAAAysI,EAAA,YAAAzsI,EAAAysI,EAAA,WAEA,GAAAO,GAAAC,EACA,UAAA9B,EAAA,sEAGA,UAGA+B,qBAAA,SAAAT,GACA,2BAAAA,IAIApB,EAAA3nK,KAAA,6BAAA+oK,MAEAzsI,EAAAysI,EAAA,aAAAzsI,EAAAysI,EAAA,cAOAU,iBAAA,SAAAV,GACA,2BAAAA,IAIApB,EAAA3nK,KAAA,6BAAA+oK,MAEAzsI,EAAAysI,EAAA,eAAAzsI,EAAAysI,EAAA,mBAOAW,oBAAA,SAAAX,GACA,2BAAAA,IAIApB,EAAA3nK,KAAA,6BAAA+oK,IAEA/oK,KAAAwpK,qBAAAT,KAAA/oK,KAAAypK,iBAAAV,KAOAY,uBAAA,SAAAZ,GACA,wBAAAA,EACA,OAAAA,EAKA,GAFApB,EAAA3nK,KAAA,6BAAA+oK,GAEA/oK,KAAAypK,iBAAAV,GACA,OACA1hK,MAAA0hK,EAAA,aACArjK,WAAAqjK,EAAA,gBACAvjK,aAAAujK,EAAA,kBACAtjK,eAAAsjK,EAAA,qBAEK,GAAA/oK,KAAAwpK,qBAAAT,GACL,OACA3yI,IAAA2yI,EAAA,WACAp9J,IAAAo9J,EAAA,WACAvjK,aAAAujK,EAAA,kBACAtjK,eAAAsjK,EAAA,qBAGA,UAAAtB,EAAA,qFAIAmC,qBAAA,SAAAC,GACA,cAAA7pK,KAAA6oK,KAAAgB,GACA,UAAApC,EAAA,2CAGA,IAAAh0H,EAAA,GAkBA,GAhBAnX,EAAAutI,EAAA,gBACAp2H,EAAA,kBAAAzzC,KAAAmoK,UAAA0B,EAAArkK,aAGA82B,EAAAutI,EAAA,kBACAp2H,EAAA,oBAAAzzC,KAAAmoK,UAAA0B,EAAApkK,eAGA62B,EAAAutI,EAAA,WACAp2H,EAAA,aAAAo2H,EAAAxiK,OAGAi1B,EAAAutI,EAAA,cACAp2H,EAAA,gBAAAzzC,KAAAmoK,UAAA0B,EAAAnkK,WAGA42B,EAAAutI,EAAA,QACA,IAAAp2C,EAAAo2C,EAAAzzI,IAEA,wBAAAq9F,IAAAzzH,KAAA+nK,WAAAt0C,GACA,UAAAxuH,UAAA,6BAGAwuC,EAAA,WAAAggF,EAGA,GAAAn3F,EAAAutI,EAAA,QACA,IAAAC,EAAAD,EAAAl+J,IAEA,wBAAAm+J,IAAA9pK,KAAA+nK,WAAA+B,GACA,UAAArC,EAAA,6BAGAh0H,EAAA,WAAAq2H,EAGA,IAAAxtI,EAAAmX,EAAA,YAAAnX,EAAAmX,EAAA,cAAAnX,EAAAmX,EAAA,cAAAnX,EAAAmX,EAAA,iBACA,UAAAg0H,EAAA,gGAGA,OAAAh0H,IAGAj0C,EAAAC,QAAAwoK,gCCxQA,IAAAV,EAAmB1nK,EAAQ,IAE3B4nK,EAAAF,EAAA,eACAwC,EAAAxC,EAAA,iBAEAjrI,EAAUz8B,EAAQ,IAElB+0H,EAAA,CAEAo1C,sBAAA,SAAAj1C,EAAAg0C,GACA,cAAAh0C,EAAA8zC,KAAAE,GACA,SAGA,IAAAp7I,EAAA,CACAq7I,oBAAA,EACAC,kBAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,gBAAA,GAGA,QAAAxjK,KAAAkjK,EAEA,GAAAzsI,EAAAysI,EAAAljK,KAAA8nB,EAAA9nB,GACA,SAIA,IAAAyjK,EAAAhtI,EAAAysI,EAAA,aACAQ,EAAAjtI,EAAAysI,EAAA,YAAAzsI,EAAAysI,EAAA,WAEA,GAAAO,GAAAC,EACA,UAAA9B,EAAA,sEAGA,WAIAjoK,EAAAC,QAAA,SAAAs1H,EAAAk1C,EAAAC,EAAA7iK,GACA,IAAAg1B,EAAAu4F,EAAAq1C,GAEA,uBAAA5tI,EACA,UAAA0tI,EAAA,wBAAAE,GAGA,IAAA5tI,EAAA04F,EAAA1tH,GACA,UAAAogK,EAAAyC,EAAA,cAAAD,GAGAvyI,QAAAN,IAAAiF,EAAA04F,EAAA1tH,sBCtDA7H,EAAAC,QAAA4lB,OAAA2C,OAAA,SAAAne,GACA,OAAAA,sBCDA,IAAA+9J,EAAAviJ,OAAA2C,OAAA,SAAAne,GACA,OAAAA,OAGArK,EAAAC,QAAA4lB,OAAAthB,UAAA,SAAAiY,GACA,wBAAAA,IAAA4rJ,EAAA5rJ,QAAAnY,KAAAmY,KAAAnY,oBCLArE,EAAAC,QAAA,SAAAse,GACA,OAAAA,GAAA,uBCDAve,EAAAC,QAAA,SAAAse,EAAAosJ,GACA,IAAAC,EAAArsJ,EAAAosJ,EACA,OAAAxmK,KAAAigB,MAAAwmJ,GAAA,EAAAA,IAAAD,kCCAA,IAAA3hK,EAAA7C,OAAArE,UAAA6G,SAEAkiK,EAAkBxqK,EAAQ,IAE1ByqK,EAAiBzqK,EAAQ,IAGzB0qK,EACA,SAAAtoC,GACA,IAAAuoC,EAQA,IALAA,EADAvpK,UAAAF,OAAA,EACAE,UAAA,GAEA,kBAAAuH,EAAAtH,KAAA+gI,GAAAt/H,OAAA0iB,UAGA1iB,QAAA6nK,IAAAnlJ,OAAA,CACA,IACAhe,EAAAvG,EADAq3E,EAAAqyF,IAAA7nK,OAAA,8CAGA,IAAA7B,EAAA,EAAiBA,EAAAq3E,EAAAp3E,SAAoBD,EACrC,GAAAwpK,EAAAroC,EAAA9pD,EAAAr3E,OACAuG,EAAA46H,EAAA9pD,EAAAr3E,MAEAupK,EAAAhjK,IACA,OAAAA,EAKA,UAAApC,UAAA,oBAGA,UAAAA,UAAA,2CAIAzF,EAAAC,QAAA,SAAA4iJ,GACA,OAAAgoB,EAAAhoB,GACAA,EAGAphJ,UAAAF,OAAA,EACAwpK,EAAAloB,EAAAphJ,UAAA,IAGAspK,EAAAloB,mBCjDA7iJ,EAAAC,QAAA,SAAA4H,GACA,cAAAA,GAAA,oBAAAA,GAAA,kBAAAA,iCCCA,IAAAq9J,EAAa7kK,EAAQ,IAErB8kK,EAAkB9kK,EAAQ,IAE1BL,EAAAC,QAAA,WACA,IAAAgrK,EAAA9F,IAQA,OAPAD,EAAA/hK,OAAArB,UAAA,CACAqY,KAAA8wJ,GACG,CACH9wJ,KAAA,WACA,OAAAhX,OAAArB,UAAAqY,OAAA8wJ,KAGAA,iCCbA,IAAAH,EAAiBzqK,EAAQ,IAEzB2I,EAAA7C,OAAArE,UAAA6G,SACAuQ,EAAA/S,OAAArE,UAAAoX,eAyDAlZ,EAAAC,QApBA,SAAA0c,EAAA1V,EAAAikK,GACA,IAAAJ,EAAA7jK,GACA,UAAAxB,UAAA,+BAGA,IAAAuuH,EAEAvyH,UAAAF,QAAA,IACAyyH,EAAAk3C,GAGA,mBAAAliK,EAAAtH,KAAAib,GA9CA,SAAArD,EAAArS,EAAA+sH,GACA,QAAA1yH,EAAA,EAAA6pK,EAAA7xJ,EAAA/X,OAAqCD,EAAA6pK,EAAS7pK,IAC9C4X,EAAAxX,KAAA4X,EAAAhY,KACA,MAAA0yH,EACA/sH,EAAAqS,EAAAhY,KAAAgY,GAEArS,EAAAvF,KAAAsyH,EAAA16G,EAAAhY,KAAAgY,IAyCAC,CAAAoD,EAAA1V,EAAA+sH,GACG,kBAAAr3G,EApCH,SAAAmrB,EAAA7gC,EAAA+sH,GACA,QAAA1yH,EAAA,EAAA6pK,EAAArjI,EAAAvmC,OAAsCD,EAAA6pK,EAAS7pK,IAE/C,MAAA0yH,EACA/sH,EAAA6gC,EAAAC,OAAAzmC,KAAAwmC,GAEA7gC,EAAAvF,KAAAsyH,EAAAlsF,EAAAC,OAAAzmC,KAAAwmC,GA+BAsjI,CAAAzuJ,EAAA1V,EAAA+sH,GA1BA,SAAAv6F,EAAAxyB,EAAA+sH,GACA,QAAA12G,KAAAmc,EACAvgB,EAAAxX,KAAA+3B,EAAAnc,KACA,MAAA02G,EACA/sH,EAAAwyB,EAAAnc,KAAAmc,GAEAxyB,EAAAvF,KAAAsyH,EAAAv6F,EAAAnc,KAAAmc,IAsBA4xI,CAAA1uJ,EAAA1V,EAAA+sH,mBC1DAh0H,EAAAC,QAGA,WAGA,IAFA,IAAA4F,EAAA,GAEAvE,EAAA,EAAiBA,EAAAG,UAAAF,OAAsBD,IAAA,CACvC,IAAA6a,EAAA1a,UAAAH,GAEA,QAAA+E,KAAA8V,EACAjD,EAAAxX,KAAAya,EAAA9V,KACAR,EAAAQ,GAAA8V,EAAA9V,IAKA,OAAAR,GAfA,IAAAqT,EAAA/S,OAAArE,UAAAoX,+BCGAlZ,EAAAC,QAAA,CACAwC,WALA,SAAAoF,GACA,OAAAA,IAAA,mBCGA,IAoKAskF,EAAA,SAAAv6E,EAAAw6E,GACA,IAAAlB,EAvBA,CACAvoF,KAAA,EACA8mF,MAAA,CACA0B,UAAA,EACAzB,UAAA,EACAC,aAAA,EACAC,cAAA,EACA0B,oBAAA,EACAD,gBAAA,IA4BA,OAZAH,EAAAkB,aACAlB,EAAAD,sBAAAr5E,EAAApE,IAAAoE,EAAAnE,IACAy9E,EAAAx9E,SAAAkE,EAAAlE,SACAw9E,EAAAvoF,KAAA,EAAAiP,EAAArQ,OAEA2pF,EAAAvoF,MAAAiP,EAAA7O,WAEA6O,EAAAxE,WACA89E,EAAAzB,MAAAC,UAAA,EACAwB,EAAAzB,MAAA4B,gBAAA,GAGAH,GA6DAlrF,EAAAC,QAAA,CACAiN,oBAhPA,SAAAX,GACA,IAAAjL,EACA+qF,EACAC,EAAA,GACA/gF,EAAA,GAGA,IAFA+gF,EAAAvpF,WAAA,EAEAzB,EAAA,EAAaA,EAAAiL,EAAAhL,OAAqBD,IAGlC,gCAFA+qF,EAAA9/E,EAAAjL,IAEAsL,aAGA0/E,EAAA/qF,SACA+qF,EAAA5+E,SAAA2+E,EAAA5+E,IAAA6+E,EAAA7+E,IACAlC,EAAA5J,KAAA2qF,KAGAA,EAAA,CAAAD,IACAtpF,WAAAspF,EAAApqF,KAAAc,WACAupF,EAAA9+E,IAAA6+E,EAAA7+E,IACA8+E,EAAA7+E,IAAA4+E,EAAA5+E,MAGA,8CAAA4+E,EAAAz/E,cACA0/E,EAAAl/E,UAAA,GAGAk/E,EAAA5+E,SAAA2+E,EAAA5+E,IAAA6+E,EAAA7+E,IACA6+E,EAAAvpF,YAAAspF,EAAApqF,KAAAc,WACAupF,EAAA3qF,KAAA0qF,IAYA,OANA9gF,EAAAhK,UAAA+qF,EAAA5+E,UAAA4+E,EAAA5+E,UAAA,KACA4+E,EAAA5+E,SAAAnC,IAAAhK,OAAA,GAAAmM,UAIAnC,EAAA5J,KAAA2qF,GACA/gF,GAuMA4B,oBAhMA,SAAA5B,GACA,IAAAjK,EACAgrF,EACAh+E,EAAA,GACAvB,EAAA,GAeA,IAZAuB,EAAAvL,WAAA,EACAuL,EAAAf,SAAA,EACAe,EAAAZ,SAAA,EACAY,EAAAd,IAAAjC,EAAA,GAAAiC,IACAc,EAAAb,IAAAlC,EAAA,GAAAkC,IAEAV,EAAAhK,WAAA,EACAgK,EAAAQ,SAAA,EACAR,EAAAW,SAAA,EACAX,EAAAS,IAAAjC,EAAA,GAAAiC,IACAT,EAAAU,IAAAlC,EAAA,GAAAkC,IAEAnM,EAAA,EAAaA,EAAAiK,EAAAhK,OAAmBD,KAChCgrF,EAAA/gF,EAAAjK,IAEA8L,UAGAkB,EAAA/M,SACAwL,EAAApL,KAAA2M,GACAvB,EAAAhK,YAAAuL,EAAAvL,WACAgK,EAAAQ,UAAAe,EAAAf,SACAR,EAAAW,UAAAY,EAAAZ,WAGAY,EAAA,CAAAg+E,IACA/+E,SAAA++E,EAAA/qF,OACA+M,EAAAvL,WAAAupF,EAAAvpF,WACAuL,EAAAd,IAAA8+E,EAAA9+E,IACAc,EAAAb,IAAA6+E,EAAA7+E,IACAa,EAAAZ,SAAA4+E,EAAA5+E,WAEAY,EAAAZ,UAAA4+E,EAAA5+E,SACAY,EAAAf,UAAA++E,EAAA/qF,OACA+M,EAAAvL,YAAAupF,EAAAvpF,WACAuL,EAAA3M,KAAA2qF,IAaA,OATAv/E,EAAAxL,QAAA+M,EAAAZ,UAAA,IACAY,EAAAZ,SAAAX,IAAAxL,OAAA,GAAAmM,UAGAX,EAAAhK,YAAAuL,EAAAvL,WACAgK,EAAAQ,UAAAe,EAAAf,SACAR,EAAAW,UAAAY,EAAAZ,SAEAX,EAAApL,KAAA2M,GACAvB,GA0IAY,oBA7HA,SAAAZ,GACA,IAAAuB,EAeA,OAbAvB,EAAA,MAAAK,UAAAL,EAAAxL,OAAA,IAEA+M,EAAAvB,EAAAC,QACAD,EAAAhK,YAAAuL,EAAAvL,WACAgK,EAAAQ,UAAAe,EAAAf,SAIAR,EAAA,MAAAU,IAAAa,EAAAb,IACAV,EAAA,MAAAS,IAAAc,EAAAd,IACAT,EAAA,MAAAW,UAAAY,EAAAZ,UAGAX,GA8GAf,oBA7DA,SAAAe,EAAAw/E,GACA,IAAAv/B,EACA1rD,EACA4pF,EACA58E,EACAg+E,EACAF,EAAAG,GAAA,EACAxgF,EAAA,GAEA,IAAAihD,EAAA,EAAaA,EAAAjgD,EAAAxL,OAAiByrD,IAG9B,IAFA1+C,EAAAvB,EAAAigD,GAEA1rD,EAAA,EAAeA,EAAAgN,EAAA/M,OAAuBD,IACtCgrF,EAAAh+E,EAAAhN,GAEA8qF,IADAlB,EAAAiB,EAAAG,EAAAF,IACAzpF,KACAoJ,EAAApK,KAAAupF,GAIA,OAAAn/E,GA0CAmC,mBAtCA,SAAAnB,GACA,IAAAigD,EACA1rD,EACA+xB,EACA/kB,EACAg+E,EACAD,EACAD,EAAA,EACAI,EAAAz/E,EAAAhK,WACA0pF,EAAA1/E,EAAAQ,SAEAtL,EAAA,IAAAiK,WADAsgF,EAAA,EAAAC,GAEA3nF,EAAA,IAAAG,SAAAhD,EAAAgB,QAEA,IAAA+pD,EAAA,EAAaA,EAAAjgD,EAAAxL,OAAiByrD,IAG9B,IAFA1+C,EAAAvB,EAAAigD,GAEA1rD,EAAA,EAAeA,EAAAgN,EAAA/M,OAAuBD,IAGtC,IAFAgrF,EAAAh+E,EAAAhN,GAEA+xB,EAAA,EAAiBA,EAAAi5D,EAAA/qF,OAAyB8xB,IAC1Cg5D,EAAAC,EAAAj5D,GACAvuB,EAAAqkF,UAAAiD,EAAAC,EAAApqF,KAAAc,YACAqpF,GAAA,EACAnqF,EAAAkK,IAAAkgF,EAAApqF,KAAAmqF,GACAA,GAAAC,EAAApqF,KAAAc,WAKA,OAAAd,qBChPA,IAAA4qF,EAAoBxsF,EAAQ,IAE5BstF,EAAYttF,EAAQ,IAiIpBL,EAAAC,QAAA,CACA6L,kBA3GA,SAAAvB,EAAAgB,EAAAX,EAAAC,GACA,IAAA+iF,EACAC,EAIAC,EACAxsF,EAJAysF,EAAA,EACAC,EAAA,EACAC,EAAA,EAIA,GAAA1iF,EAAAhK,SAIAqsF,EAAAD,EAAA1B,iBAAA1hF,EAAAY,oBAAAZ,EAAAg/E,YAEAsE,EAAA1pF,KAAAse,KApCA,KAoCAlY,EAAAg/E,WAAA,OAEA3+E,GAAAC,IAEAkjF,EAAAH,EAAAzpF,KAAAmgB,IAAA1Z,EAAAC,GAGAojF,GADAD,EAAA7pF,KAAAigB,MAAA2pE,EAAAF,IACAA,KAKAG,EAAA,GAAAC,EAAAq9E,OAAA,CAYA,KARAx9E,EAAAjB,EAAAtiF,EAAAg/E,eAKAuE,EAAAviF,EAAA,GAAAtJ,MAGAX,EAAA,EAAaA,EAAA0sF,EAAyB1sF,IACtCiK,EAAApK,OAAAG,EAAA,GACAW,KAAA6rF,IAIAvjF,EAAAY,qBAAAhH,KAAAigB,MAAAupE,EAAAzB,iBAAA+B,EAAA1jF,EAAAg/E,eA+DA59E,4BAxDA,SAAAlB,EAAAF,EAAAI,GACA,OAAAJ,EAAA4jF,eAAAxjF,EACAF,GAIAF,EAAA4jF,cAAA9pF,IACAoG,EAAAmV,OAAA,SAAA0sE,GAEA,OAAAA,EAAA7+E,KAAA9C,IACAJ,EAAA4jF,cAAAhqF,KAAAG,IAAAiG,EAAA4jF,cAAA7B,EAAA7+E,KACAlD,EAAA6jF,cAAA7jF,EAAA4jF,eACA,OA6CAniF,oBApCA,SAAAT,GACA,IAAAjK,EACAgrF,EACAvgF,EAAA,GAEA,IAAAzK,EAAA,EAAaA,EAAAiK,EAAAhK,OAAmBD,IAChCgrF,EAAA/gF,EAAAjK,GACAyK,EAAApK,KAAA,CACAgB,KAAA2pF,EAAArqF,KAAAc,WACA2K,SAAA,OAKA,OAAA3B,GAuBAE,qBAnBA,SAAAV,GACA,IAAAjK,EACAgrF,EACAF,EAAA,EACAnqF,EAAA,IAAAiK,WA9GA,SAAAoN,GACA,IAAAhY,EAEA+sF,EAAA,EAEA,IAAA/sF,EAAA,EAAaA,EAAAgY,EAAA/X,OAAkBD,IAE/B+sF,GADA/0E,EAAAhY,GACAW,KAAAc,WAGA,OAAAsrF,EAoGAC,CAAA/iF,IAEA,IAAAjK,EAAA,EAAaA,EAAAiK,EAAAhK,OAAmBD,IAChCgrF,EAAA/gF,EAAAjK,GACAW,EAAAkK,IAAAmgF,EAAArqF,KAAAmqF,GACAA,GAAAE,EAAArqF,KAAAc,WAGA,OAAAd,mBChIA,IAaA2pF,EAbAc,EAAA,oBACAC,EAAA,4CAEAC,EAAA,SAAAnpE,GAGA,IAFA,IAAApZ,EAAA,GAEAoZ,KACApZ,EAAA1I,KAAA,GAGA,OAAA0I,GAaAwiF,EAAA,CACAC,MAAA,CAAAJ,EAAA,SAAAE,EAAA,WACAG,MAAA,CAAAL,EAAA,MAAAE,EAAA,WACAI,MAAA,CAAAN,EAAA,UAAAE,EAAA,WACAK,MAAA,CAAAP,EAAA,UAAAE,EAAA,kBAAAA,EAAA,WACAM,MAAA,CAAAR,EAAA,UAAAE,EAAA,kBAAAA,EAAA,WACAO,MAAA,CAAAT,EAAA,UAAAE,EAAA,cAAAA,EAAA,YACAQ,MAAA,CAAAV,EAAA,UAAAE,EAAA,kBAAAA,EAAA,eAAAA,EAAA,YACAS,MAAA,CAAAX,EAAA,UAAAE,EAAA,kBAAAA,EAAA,eAAAA,EAAA,eAAAA,EAAA,cACAU,MAAA,CAAAX,EAAAC,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,WACAW,MAAA,CAAAZ,EAAAC,EAAA,iBAAAA,EAAA,iBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,kBAAAA,EAAA,YACAY,KAAA,CAAAb,EAAAC,EAAA,gBAAAA,EAAA,UAEA5sF,EAAAC,SAvBA2rF,EAuBAiB,EAtBA1mF,OAAAiW,KAAAwvE,GAAAvoF,OAAA,SAAA0D,EAAAV,GAIA,OAHAU,EAAAV,GAAA,IAAA6F,WAAA0/E,EAAAvlF,GAAAhD,OAAA,SAAAu2E,EAAA/oB,GACA,OAAA+oB,EAAA94E,OAAA+vD,IACK,KACL9pD,GACG,oBCnBH,IAEA8kF,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAL,EAAA,SAAA/+B,GACA,OAVA,IAUAA,GAGAg/B,EAAA,SAAAh/B,EAAA4gC,GACA,OAAA5gC,EAAA4gC,GAGA3B,EAAA,SAAAzgF,GACA,OAAAA,EAlBA,KAqBA0gF,EAAA,SAAA1gF,EAAAoiF,GACA,OAAApiF,EAAAoiF,GAGAzB,EAAA,SAAA3gF,EAAAoiF,GACA,OAAA7B,EAAAG,EAAA1gF,EAAAoiF,KAGAxB,EAAA,SAAA5gF,EAAAoiF,GACA,OAAA5B,EAAAC,EAAAzgF,GAAAoiF,IAGA1tF,EAAAC,QAAA,CACA4rF,mBACAC,mBACAC,mBACAC,mBACAC,mBACAC,mCCwDAlsF,EAAAC,QAAA,CACAmM,aA7CA,SAAA7B,UACAA,EAAA4jF,qBACA5jF,EAAAgkF,qBACAhkF,EAAA6jF,qBACA7jF,EAAAikF,eA0CA5iF,kCA9BA,SAAArB,EAAAsB,GACA,IAAAV,EAEAgjF,EAAA5jF,EAAA4jF,cAsBA,OApBAtiF,IACAsiF,GAAA5jF,EAAAW,kBAAAuC,KAKAtC,EAAAZ,EAAAW,kBAAAC,oBAEAA,GAAAgjF,EAEAhjF,EAAAhH,KAAAmgB,IAAA,EAAAnZ,GAEA,UAAAZ,EAAA3J,OAIAuK,GADAZ,EAAAg/E,WAvFA,IAyFAp+E,EAAAhH,KAAAigB,MAAAjZ,IAGAA,GAMAL,eA1FA,SAAAP,EAAAtI,GACA,kBAAAA,EAAAuL,WACAW,IAAA5D,EAAAW,kBAAAsC,MACAjD,EAAAW,kBAAAsC,IAAAvL,EAAAuL,UAGAW,IAAA5D,EAAA6jF,cACA7jF,EAAA6jF,cAAAnsF,EAAAuL,IAEAjD,EAAA6jF,cAAAjqF,KAAAG,IAAAiG,EAAA6jF,cAAAnsF,EAAAuL,UAGAW,IAAA5D,EAAAikF,cACAjkF,EAAAikF,cAAAvsF,EAAAuL,IAEAjD,EAAAikF,cAAArqF,KAAAmgB,IAAA/Z,EAAAikF,cAAAvsF,EAAAuL,MAIA,kBAAAvL,EAAAwL,WACAU,IAAA5D,EAAAW,kBAAAuC,MACAlD,EAAAW,kBAAAuC,IAAAxL,EAAAwL,UAGAU,IAAA5D,EAAA4jF,cACA5jF,EAAA4jF,cAAAlsF,EAAAwL,IAEAlD,EAAA4jF,cAAAhqF,KAAAG,IAAAiG,EAAA4jF,cAAAlsF,EAAAwL,UAGAU,IAAA5D,EAAAgkF,cACAhkF,EAAAgkF,cAAAtsF,EAAAwL,IAEAlD,EAAAgkF,cAAApqF,KAAAmgB,IAAA/Z,EAAAgkF,cAAAtsF,EAAAwL,sCC7BA,IAQA8sF,EAAAC,EAAAC,EARAl6F,EAAaF,EAAQ,GACrBsS,EAAoBtS,EAAQ,IAC5Bu+H,EAAkBv+H,EAAQ,IAC1BkR,EAA8BlR,EAAQ,IAA6BkR,wBAEnEg6J,EAAsBlrK,EAAQ,KAc9Bk6F,EAAA,WACA,IAAAt3F,EAAA,IAAAiJ,WATA,KAUAyuF,EAAA,EAEAJ,EAAAz4F,UAAArB,KAAAiB,KAAAlB,MAOAA,KAAAmB,KAAA,SAAA2S,GACA,IAEAsmF,EAFA9d,EAAA,EACAC,EArBA,IAmCA,IAVA4d,IACAC,EAAA,IAAA1uF,WAAAoI,EAAAvR,WAAA43F,IACAxuF,IAAAlJ,EAAAD,SAAA,EAAA23F,IACAC,EAAAzuF,IAAAmI,EAAAqmF,GACAA,EAAA,GAEAC,EAAAtmF,EAIAyoE,EAAA6d,EAAA73F,YAjCA,KAmCA63F,EAAA9d,IAnCA,KAmCA8d,EAAA7d,IAYAD,IACAC,MAVAv8E,KAAAY,QAAA,OAAAw5F,EAAA53F,SAAA85E,EAAAC,IACAD,GAzCA,IA0CAC,GA1CA,KAwDAD,EAAA8d,EAAA73F,aACAE,EAAAkJ,IAAAyuF,EAAA53F,SAAA85E,GAAA,GACA6d,EAAAC,EAAA73F,WAAA+5E,IAQAt8E,KAAA2B,MAAA,WAlEA,MAsEAw4F,GApEA,KAoEA13F,EAAA,KACAzC,KAAAY,QAAA,OAAA6B,GACA03F,EAAA,GAGAn6F,KAAAY,QAAA,WAIAU,UAAA,IAAAvB,GAMAi6F,EAAA,WACA,IAAAK,EAAAC,EAAAC,EAAAh7F,EAEAy6F,EAAA14F,UAAArB,KAAAiB,KAAAlB,MAEAT,EAAAS,KACAA,KAAAw6F,qBAAA,GACAx6F,KAAAy6F,qBAAA9sF,EAEA0sF,EAAA,SAAA3R,EAAAgS,GACA,IAAA9qF,EAAA,EAOA8qF,EAAAC,4BACA/qF,GAAA84E,EAAA94E,GAAA,GAGA,QAAA8qF,EAAAt6F,KACAk6F,EAAA5R,EAAAlmF,SAAAoN,GAAA8qF,GAEAH,EAAA7R,EAAAlmF,SAAAoN,GAAA8qF,IAIAJ,EAAA,SAAA5R,EAAAkS,GACAA,EAAAC,eAAAnS,EAAA,GAEAkS,EAAAE,oBAAApS,EAAA,GAGAnpF,EAAAw7F,QAAA,GAAArS,EAAA,QAAAA,EAAA,IACAkS,EAAAG,OAAAx7F,EAAAw7F,QAYAR,EAAA,SAAA7R,EAAAsS,GACA,IAAAC,EAAArrF,EAMA,KAAA84E,EAAA,IAmBA,IAdAnpF,EAAAk7F,gBAAA,CACA78C,MAAA,KACA59B,MAAA,KACAk7E,iBAAA,IAIAD,EAAA,IADA,GAAAvS,EAAA,OAAAA,EAAA,IACA,EAKA94E,EAAA,KAFA,GAAA84E,EAAA,QAAAA,EAAA,KAIA94E,EAAAqrF,GAAA,CACA,IAAAE,EAAAzS,EAAA94E,GACAwrF,GAAA,GAAA1S,EAAA94E,EAAA,OAAA84E,EAAA94E,EAAA,GAIAurF,IAAAijC,EAAA92H,kBAAA,OAAA/H,EAAAk7F,gBAAA78C,MACAr+C,EAAAk7F,gBAAA78C,MAAAw9C,EACOD,IAAAijC,EAAA72H,kBAAA,OAAAhI,EAAAk7F,gBAAAz6E,MACPzgB,EAAAk7F,gBAAAz6E,MAAAo7E,EACOD,IAAAijC,EAAA52H,uBAEPjI,EAAAk7F,gBAAA,kBAAAW,GAAAD,GAKAvrF,GAAA,OAAA84E,EAAA94E,EAAA,OAAA84E,EAAA94E,EAAA,IAIAorF,EAAAP,gBAAAl7F,EAAAk7F,kBAOAz6F,KAAAmB,KAAA,SAAAsS,GACA,IAAA/Q,EAAA,GACAkN,EAAA,EAgBA,GAfAlN,EAAAi4F,6BAAA,GAAAlnF,EAAA,IAEA/Q,EAAA04F,IAAA,GAAA3nF,EAAA,GACA/Q,EAAA04F,MAAA,EACA14F,EAAA04F,KAAA3nF,EAAA,IAMA,GAAAA,EAAA,YACA7D,GAAA6D,EAAA7D,GAAA,GAIA,IAAAlN,EAAA04F,IACA14F,EAAAtC,KAAA,MACAi6F,EAAA5mF,EAAAjR,SAAAoN,GAAAlN,GACA1C,KAAAY,QAAA,OAAA8B,QACK,GAAAA,EAAA04F,MAAAp7F,KAAA+6F,OAKL,IAJAr4F,EAAAtC,KAAA,MACAi6F,EAAA5mF,EAAAjR,SAAAoN,GAAAlN,GACA1C,KAAAY,QAAA,OAAA8B,GAEA1C,KAAAw6F,qBAAAz5F,QACAf,KAAAq7F,YAAAj6F,MAAApB,UAAAw6F,qBAAAhuF,mBAEKmB,IAAA3N,KAAAy6F,gBAGLz6F,KAAAw6F,qBAAAr5F,KAAA,CAAAsS,EAAA7D,EAAAlN,IAEA1C,KAAAq7F,YAAA5nF,EAAA7D,EAAAlN,IAIA1C,KAAAq7F,YAAA,SAAA5nF,EAAA7D,EAAAlN,GAEAA,EAAA04F,MAAAp7F,KAAAy6F,gBAAA78C,MACAl7C,EAAAy4F,WAAAijC,EAAA92H,iBACK5E,EAAA04F,MAAAp7F,KAAAy6F,gBAAAz6E,MACLtd,EAAAy4F,WAAAijC,EAAA72H,iBAIA7E,EAAAy4F,WAAAn7F,KAAAy6F,gBAAA,kBAAA/3F,EAAA04F,KAGA14F,EAAAtC,KAAA,MACAsC,EAAAjB,KAAAgS,EAAAjR,SAAAoN,GACA5P,KAAAY,QAAA,OAAA8B,MAIApB,UAAA,IAAAvB,EACAi6F,EAAAsB,aAAA,CACAC,KAAA,GACAC,KAAA,KAWAvB,EAAA,WACA,IAAA16F,EAAAS,KAEA49C,EAAA,CACAn8C,KAAA,GACAU,KAAA,GAEA6d,EAAA,CACAve,KAAA,GACAU,KAAA,GAEAs5F,EAAA,CACAh6F,KAAA,GACAU,KAAA,GAgDAu5F,EAAA,SAAArrF,EAAAjQ,EAAAw7F,GACA,IAMAC,EACA14F,EAPA24F,EAAA,IAAApwF,WAAA2E,EAAAlO,MACA0N,EAAA,CACAzP,QAEAU,EAAA,EACA8O,EAAA,EAKA,GAAAS,EAAA5O,KAAAV,UAAAsP,EAAAlO,KAAA,IAMA,IAFA0N,EAAAtL,QAAA8L,EAAA5O,KAAA,GAAA25F,IAEAt6F,EAAA,EAAeA,EAAAuP,EAAA5O,KAAAV,OAAwBD,IACvCqC,EAAAkN,EAAA5O,KAAAX,GACAg7F,EAAAnwF,IAAAxI,EAAA1B,KAAAmO,GACAA,GAAAzM,EAAA1B,KAAAc,YAlEA,SAAAmmF,EAAAqT,GACA,IAAAC,EAEAD,EAAAE,aAAA,GAAAvT,EAAA,MAAAA,EAAA,IAEAqT,EAAAjC,uBAAA,OAAApR,EAAA,IAaA,KATAsT,EAAAtT,EAAA,MAaAqT,EAAA/uF,KAAA,GAAA07E,EAAA,aAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,aAAAA,EAAA,SACAqT,EAAA/uF,KAAA,EAEA+uF,EAAA/uF,MAAA,EAAA07E,EAAA,SAEAqT,EAAA9uF,IAAA8uF,EAAA/uF,IAEA,GAAAgvF,IACAD,EAAA9uF,KAAA,GAAAy7E,EAAA,cAAAA,EAAA,cAAAA,EAAA,cAAAA,EAAA,aAAAA,EAAA,SACAqT,EAAA9uF,KAAA,EAEA8uF,EAAA9uF,MAAA,EAAAy7E,EAAA,WAOAqT,EAAAt6F,KAAAinF,EAAAlmF,SAAA,EAAAkmF,EAAA,IA8BAwT,CAAAJ,EAAAjsF,GAGAgsF,EAAA,UAAAz7F,GAAAyP,EAAAosF,cAAA5rF,EAAAlO,MAEAy5F,GAAAC,KACAxrF,EAAAlO,KAAA,EACAkO,EAAA5O,KAAAV,OAAA,GAKA86F,GACAt8F,EAAAqB,QAAA,OAAAiP,KAIAoqF,EAAA34F,UAAArB,KAAAiB,KAAAlB,MAOAA,KAAAmB,KAAA,SAAAM,IACA,CACAm5F,IAAA,aAGAmB,IAAA,WACA,IAAA1rF,EAAA8qF,EAEA,OAAA15F,EAAA05F,YACA,KAAAijC,EAAA92H,iBACA,KAAAyjK,EAAAzjK,iBACA+I,EAAAutC,EACAu9C,EAAA,QACA,MAEA,KAAAijC,EAAA72H,iBACA8I,EAAA2P,EACAm7E,EAAA,QACA,MAEA,KAAAijC,EAAA52H,qBACA6I,EAAAorF,EACAN,EAAA,iBACA,MAEA,QAEA,OAKA15F,EAAAk5F,2BACAe,EAAArrF,EAAA8qF,GAAA,GAKA9qF,EAAA5O,KAAAN,KAAAM,GACA4O,EAAAlO,MAAAV,OAAAc,YAEAy4F,IAAA,WACA,IAAAnrF,EAAA,CACAzP,KAAA,WACAgS,OAAA,IAEAqoF,EAAAh5F,EAAAg5F,gBAEA,OAAAA,EAAA78C,OACA/tC,EAAAuC,OAAAjR,KAAA,CACAuJ,kBAAA,CACAC,oBAAA,GAEA1H,IAAAw3F,EAAA78C,MACApsC,MAAA,MACApR,KAAA,UAIA,OAAAq6F,EAAAz6E,OACAnQ,EAAAuC,OAAAjR,KAAA,CACAuJ,kBAAA,CACAC,oBAAA,GAEA1H,IAAAw3F,EAAAz6E,MACAxO,MAAA,OACApR,KAAA,UAIAb,EAAAqB,QAAA,OAAAiP,MAEKpO,EAAArB,SAaLJ,KAAA2B,MAAA,WAGA+5F,EAAA99C,EAAA,SACA89C,EAAA17E,EAAA,SACA07E,EAAAD,EAAA,kBACAz7F,KAAAY,QAAA,WAIAU,UAAA,IAAAvB,EACA,IAAAsJ,EAAA,CACA8yF,QAAA,EACAC,mBAhdA,IAidAzqF,sBAAAooF,EACAloF,qBAAAmoF,EACAjoF,iBAAAkoF,EACAlpF,0BACAoB,8BACA08E,aAAA18E,EAAA08E,aACAj+E,eAAkB/Q,EAAQ,KAG1B,QAAAO,KAAAg+H,EACAA,EAAA1lH,eAAAtY,KACAiJ,EAAAjJ,GAAAg+H,EAAAh+H,IAIAZ,EAAAC,QAAA4J,gCChfA,IAgFA8vF,EAhFAp5F,EAAaF,EAAQ,GACrBu+H,EAAkBv+H,EAAQ,IAG1BmU,EAAA,SAAAF,EAAAC,EAAA3R,GACA,IAAAtB,EACA4B,EAAA,GAEA,IAAA5B,EAAAiT,EAAiBjT,EAAAsB,EAAStB,IAC1B4B,GAAA,UAAAoR,EAAAhT,GAAAqH,SAAA,KAAAzH,OAAA,GAGA,OAAAgC,GAIA22F,EAAA,SAAAvlF,EAAAC,EAAA3R,GACA,OAAAk3F,mBAAAtlF,EAAAF,EAAAC,EAAA3R,KAOA2Q,EAAA,SAAAtR,GACA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEA83F,EAAA,CACAC,KAAA,SAAArwE,GACA,IAAAroB,EAEA,OAAAqoB,EAAA1nB,KAAA,IAKA,IAAAX,EAAA,EAAeA,EAAAqoB,EAAA1nB,KAAAV,OAAqBD,IACpC,OAAAqoB,EAAA1nB,KAAAX,GAAA,CAEAqoB,EAAA8pB,YAAAomD,EAAAlwE,EAAA1nB,KAAA,EAAAX,GAEAqoB,EAAA9hB,MAAAgyF,EAAAlwE,EAAA1nB,KAAAX,EAAA,EAAAqoB,EAAA1nB,KAAAV,QAAA+G,QAAA,WACA,MAIAqhB,EAAA1nB,KAAA0nB,EAAA9hB,QAEAoyF,KAAA,SAAAtwE,GACA,IAAAroB,EAEA,OAAAqoB,EAAA1nB,KAAA,GAKA,IAAAX,EAAA,EAAeA,EAAAqoB,EAAA1nB,KAAAV,OAAqBD,IACpC,OAAAqoB,EAAA1nB,KAAAX,GAAA,CAEAqoB,EAAA8pB,YAAAomD,EAAAlwE,EAAA1nB,KAAA,EAAAX,GACAqoB,EAAAlS,IAAAoiF,EAAAlwE,EAAA1nB,KAAAX,EAAA,EAAAqoB,EAAA1nB,KAAAV,QACA,QAIA24F,KAAA,SAAAvwE,GACA,IAAAroB,EA7CAgT,EA+CA,IAAAhT,EAAA,EAAeA,EAAAqoB,EAAA1nB,KAAAV,OAAqBD,IACpC,OAAAqoB,EAAA1nB,KAAAX,GAAA,CAEAqoB,EAAAwwE,OAlDA7lF,EAkDAqV,EAAA1nB,KAjDAoS,SAAAG,EAAAF,EAiDA,EAAAhT,KACA,MAIAqoB,EAAAq6D,YAAAr6D,EAAA1nB,KAAAe,SAAA1B,EAAA,GACAqoB,EAAA1nB,KAAA0nB,EAAAq6D,eAKA2V,EAAA,SAAAnvF,GACA,IAaAlJ,EAbA+6C,EAAA,CACA7jB,SAAAhuB,MAAAguB,OAIAzyB,WAAAyE,KAAAzE,YAGAq0F,EAAA,EAEAn3F,EAAA,GAEAo3F,EAAA,EASA,GANAV,EAAA73F,UAAArB,KAAAiB,KAAAlB,MAIAA,KAAAuQ,aAAA6tH,EAAA52H,qBAAAW,SAAA,IAEA0zC,EAAAt2C,WACA,IAAAzE,EAAA,EAAeA,EAAA+6C,EAAAt2C,WAAAxE,OAAgCD,IAC/Cd,KAAAuQ,eAAA,KAAAsrC,EAAAt2C,WAAAzE,GAAAqH,SAAA,KAAAzH,OAAA,GAIAV,KAAAmB,KAAA,SAAAswB,GACA,IAAAtI,EAAAxV,EAAAC,EAAAxC,EAAAtQ,EAEA,sBAAA2wB,EAAArxB,KAaA,GANAqxB,EAAAqoE,yBACAD,EAAA,EACAp3F,EAAA1B,OAAA,GAIA,IAAA0B,EAAA1B,SAAA0wB,EAAAhwB,KAAAV,OAAA,IAAA0wB,EAAAhwB,KAAA,SAAAuR,WAAA,IAAAye,EAAAhwB,KAAA,SAAAuR,WAAA,IAAAye,EAAAhwB,KAAA,SAAAuR,WAAA,IACA6oC,EAAA7jB,OAEAN,QAAAN,IAAA,8CAsBA,GAfA30B,EAAAtB,KAAAswB,GACAooE,GAAApoE,EAAAhwB,KAAAc,WAEA,IAAAE,EAAA1B,SAKA64F,EAAA7mF,EAAA0e,EAAAhwB,KAAAe,SAAA,OAGAo3F,GAAA,MAIAC,EAAAD,GAAA,CAYA,IAPAzwE,EAAA,CACA1nB,KAAA,IAAAiK,WAAAkuF,GACA7uF,OAAA,GACAiC,IAAAvK,EAAA,GAAAuK,IACAC,IAAAxK,EAAA,GAAAwK,KAGAnM,EAAA,EAAeA,EAAA84F,GACfzwE,EAAA1nB,KAAAkK,IAAAlJ,EAAA,GAAAhB,KAAAe,SAAA,EAAAo3F,EAAA94F,MACAA,GAAA2B,EAAA,GAAAhB,KAAAc,WACAs3F,GAAAp3F,EAAA,GAAAhB,KAAAc,WACAE,EAAA+J,QAIAmH,EAAA,GAEA,GAAAwV,EAAA1nB,KAAA,KAEAkS,GAAA,EAEAA,GAAAZ,EAAAoW,EAAA1nB,KAAAe,SAAA,QAEAo3F,GAAA7mF,EAAAoW,EAAA1nB,KAAAe,SAAA,SAKA,GAIA,IAFAoR,EAAAb,EAAAoW,EAAA1nB,KAAAe,SAAAmR,EAAA,EAAAA,EAAA,KAEA,EAEA,OAAA+jB,QAAAN,IAAA,+DAUA,IANAhmB,EAAA,CACAnO,GAFAN,OAAAC,aAAAumB,EAAA1nB,KAAAkS,GAAAwV,EAAA1nB,KAAAkS,EAAA,GAAAwV,EAAA1nB,KAAAkS,EAAA,GAAAwV,EAAA1nB,KAAAkS,EAAA,IAGAlS,KAAA0nB,EAAA1nB,KAAAe,SAAAmR,EAAA,GAAAA,EAAAC,EAAA,MAEA/N,IAAAuL,EAAAnO,GAEAs2F,EAAAnoF,EAAAnO,MACAs2F,EAAAnoF,EAAAnO,IAAAmO,GAGA,iDAAAA,EAAAuoF,OAAA,CACA,IAAAz0F,EAAAkM,EAAA3P,KACAU,GAAA,EAAA+C,EAAA,QAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,OACA/C,GAAA,EACAA,GAAA,EAAA+C,EAAA,GACAkM,EAAAE,UAAAnP,OAKAwL,IAAAwb,EAAAnc,UAAAW,IAAAwb,EAAAlc,MACAkc,EAAAnc,IAAAoE,EAAAE,UACA6X,EAAAlc,IAAAmE,EAAAE,WAGAtR,KAAAY,QAAA,YAAAwQ,GAIA+X,EAAApe,OAAA5J,KAAAiQ,GACAuC,GAAA,GAEAA,GAAAC,QACKD,EAAAimF,GAEL55F,KAAAY,QAAA,OAAAuoB,OAIA7nB,UAAA,IAAAvB,EACAP,EAAAC,QAAA05F,gCC/OA,IAEAkD,EAFAt8F,EAAaF,EAAQ,GAIrBiT,EAAA,uEAUAupF,EAAA,WACA,IAAA55F,EAEA45F,EAAA/6F,UAAArB,KAAAiB,KAAAlB,MAEAA,KAAAmB,KAAA,SAAAsS,GACA,IAEA8oF,EACAC,EACAC,EACAC,EACAC,EACAC,EAPA97F,EAAA,EACA+7F,EAAA,EAQA,aAAAppF,EAAArT,KAkBA,IAXAqC,GACAi6F,EAAAj6F,GACAA,EAAA,IAAAiJ,WAAAgxF,EAAAn6F,WAAAkR,EAAAhS,KAAAc,aACAoJ,IAAA+wF,GACAj6F,EAAAkJ,IAAA8H,EAAAhS,KAAAi7F,EAAAn6F,aAEAE,EAAAgR,EAAAhS,KAKAX,EAAA,EAAA2B,EAAA1B,QAEA,SAAA0B,EAAA3B,IAAA,WAAA2B,EAAA3B,EAAA,KAkBA,GATA07F,EAAA,MAAA/5F,EAAA3B,EAAA,IAGAy7F,GAAA,EAAA95F,EAAA3B,EAAA,QAAA2B,EAAA3B,EAAA,WAAA2B,EAAA3B,EAAA,OAEA87F,EAAA,KADAD,EAAA,WAAAl6F,EAAA3B,EAAA,MACAgS,GAAA,GAAArQ,EAAA3B,EAAA,SACA27F,EAAA37F,EAAAy7F,EAGA95F,EAAAF,WAAAk6F,EACA,OAiBA,GAbAz8F,KAAAY,QAAA,QACAoM,IAAAyG,EAAAzG,IAAA6vF,EAAAD,EACA3vF,IAAAwG,EAAAxG,IAAA4vF,EAAAD,EACAD,cACA/T,gBAAA,GAAAnmF,EAAA3B,EAAA,UACAgoF,cAAA,EAAArmF,EAAA3B,EAAA,YAAA2B,EAAA3B,EAAA,QACAioF,WAAAj2E,GAAA,GAAArQ,EAAA3B,EAAA,SACA+nF,wBAAA,GAAApmF,EAAA3B,EAAA,QAEA8oF,WAAA,GACAnoF,KAAAgB,EAAAD,SAAA1B,EAAA,EAAA07F,EAAAC,KAGAh6F,EAAAF,aAAAk6F,EAEA,YADAh6F,OAAAkL,GAIAkvF,IAEAp6F,IAAAD,SAAAi6F,QAxCA37F,KA4CAd,KAAA2B,MAAA,WACA3B,KAAAY,QAAA,WAIAU,UAAA,IAAAvB,EACAP,EAAAC,QAAA48F,gCCtGA,IAIAS,EAAAC,EAEAC,EANAj9F,EAAaF,EAAQ,GAErBmrK,EAAgBnrK,EAAQ,KASxBk9F,EAAA,WACA,IACAj8F,EACA2B,EAFA+7F,EAAA,EAIAzB,EAAAz7F,UAAArB,KAAAiB,KAAAlB,MAUAA,KAAAmB,KAAA,SAAAM,GACA,IAAAg9F,EAoBA,IAlBAh8F,IAGAg8F,EAAA,IAAA/yF,WAAAjJ,EAAAF,WAAAd,OAAAc,aACAoJ,IAAAlJ,GACAg8F,EAAA9yF,IAAAlK,OAAAgB,EAAAF,YACAE,EAAAg8F,GALAh8F,EAAAhB,OAiBU+8F,EAAA/7F,EAAAF,WAAA,EAAmCi8F,IAC7C,OAAA/7F,EAAA+7F,EAAA,IAEA19F,EAAA09F,EAAA,EACA,MAIA,KAAA19F,EAAA2B,EAAAF,YAGA,OAAAE,EAAA3B,IACA,OAEA,OAAA2B,EAAA3B,EAAA,IACAA,GAAA,EACA,MACW,OAAA2B,EAAA3B,EAAA,IACXA,IACA,MAIA09F,EAAA,IAAA19F,EAAA,GACAd,KAAAY,QAAA,OAAA6B,EAAAD,SAAAg8F,EAAA,EAAA19F,EAAA,IAIA,GACAA,UACW,IAAA2B,EAAA3B,MAAA2B,EAAA1B,QAEXy9F,EAAA19F,EAAA,EACAA,GAAA,EACA,MAEA,OAEA,OAAA2B,EAAA3B,EAAA,QAAA2B,EAAA3B,EAAA,IACAA,GAAA,EACA,MAIAd,KAAAY,QAAA,OAAA6B,EAAAD,SAAAg8F,EAAA,EAAA19F,EAAA,IACA09F,EAAA19F,EAAA,EACAA,GAAA,EACA,MAEA,QAGAA,GAAA,EAMA2B,IAAAD,SAAAg8F,GACA19F,GAAA09F,EACAA,EAAA,GAGAx+F,KAAA2B,MAAA,WAEAc,KAAAF,WAAA,GACAvC,KAAAY,QAAA,OAAA6B,EAAAD,SAAAg8F,EAAA,IAIA/7F,EAAA,KACA+7F,EAAA,EACAx+F,KAAAY,QAAA,WAIAU,UAAA,IAAAvB,EAIAi9F,EAAA,CACA0B,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,IAAA,EACAC,IAAA,EACAC,IAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,EACAC,KAAA,IAOAvC,EAAA,WACA,IACAv9F,EACAgF,EACA+6F,EACAC,EACAC,EACAC,EACAC,EAPAC,EAAA,IAAA5C,EASAD,EAAAx7F,UAAArB,KAAAiB,KAAAlB,MAEAT,EAAAS,KAaAA,KAAAmB,KAAA,SAAAsS,GACA,UAAAA,EAAArT,OAIAmE,EAAAkP,EAAAlP,QACA+6F,EAAA7rF,EAAAzG,IACAuyF,EAAA9rF,EAAAxG,IACA0yF,EAAAx+F,KAAAsS,KAYAksF,EAAAx/F,GAAA,gBAAAsB,GACA,IAAAoO,EAAA,CACAtL,UACAyI,IAAAsyF,EACAryF,IAAAsyF,EACA99F,QAGA,UAAAA,EAAA,IACA,OACAoO,EAAAzD,YAAA,4CACA,MAEA,OACAyD,EAAAzD,YAAA,WACAyD,EAAAm/E,YAAAwQ,EAAA/9F,EAAAe,SAAA,IACA,MAEA,OACAqN,EAAAzD,YAAA,yBACAyD,EAAAm/E,YAAAwQ,EAAA/9F,EAAAe,SAAA,IACAqN,EAAAhE,OAAA4zF,EAAA5vF,EAAAm/E,aACA,MAEA,OACAn/E,EAAAzD,YAAA,yBACA,MAEA,OACAyD,EAAAzD,YAAA,6BAQA7M,EAAAqB,QAAA,OAAAiP,KAEA8vF,EAAAx/F,GAAA,kBACAZ,EAAAqB,QAAA,UAGAZ,KAAA2B,MAAA,WACAg+F,EAAAh+F,SAaA+9F,EAAA,SAAAz8E,EAAA28E,GACA,IAEA/sE,EAFAgtE,EAAA,EACAC,EAAA,EAIA,IAAAjtE,EAAA,EAAeA,EAAA5P,EAAW4P,IAC1B,IAAAitE,IAEAA,GAAAD,EADAD,EAAAvB,gBACA,UAGAwB,EAAA,IAAAC,EAAAD,EAAAC,GAaAN,EAAA,SAAA/9F,GAOA,IANA,IAGA8sF,EACAC,EAJAztF,EAAAU,EAAAc,WACAksF,EAAA,GACA3tF,EAAA,EAIAA,EAAAC,EAAA,GACA,IAAAU,EAAAX,IAAA,IAAAW,EAAAX,EAAA,QAAAW,EAAAX,EAAA,IACA2tF,EAAAttF,KAAAL,EAAA,GACAA,GAAA,GAEAA,IAMA,OAAA2tF,EAAA1tF,OACA,OAAAU,EAIA8sF,EAAAxtF,EAAA0tF,EAAA1tF,OACAytF,EAAA,IAAA9iF,WAAA6iF,GACA,IAAAG,EAAA,EAEA,IAAA5tF,EAAA,EAAeA,EAAAytF,EAAeG,IAAA5tF,IAC9B4tF,IAAAD,EAAA,KAEAC,IAEAD,EAAAjiF,SAGAgiF,EAAA1tF,GAAAW,EAAAitF,GAGA,OAAAF,GAaAiR,EAAA,SAAAh+F,GACA,IAKAm+F,EACAnW,EACAE,EACAD,EACAqW,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAx/F,EAlBAy/F,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAyBA,GATAlX,GADAmW,EAAA,IAAAorE,EAAAvpK,IACA88F,mBAEA7U,EAAAkW,EAAArB,mBAEA5U,EAAAiW,EAAArB,mBAEAqB,EAAA3B,wBAGAjB,EAAAvT,KAGA,KAFAsW,EAAAH,EAAAzB,0BAGAyB,EAAAlC,SAAA,GAGAkC,EAAA3B,wBAEA2B,EAAA3B,wBAEA2B,EAAAlC,SAAA,GAEAkC,EAAAtB,eAIA,IAFA+B,EAAA,IAAAN,EAAA,KAEAj/F,EAAA,EAAmBA,EAAAu/F,EAAsBv/F,IACzC8+F,EAAAtB,eAGAoB,EADA5+F,EAAA,EACA,GAEA,GAFA8+F,GAaA,GAJAA,EAAA3B,wBAIA,KAFA+B,EAAAJ,EAAAzB,yBAGAyB,EAAAzB,6BACK,OAAA6B,EASL,IARAJ,EAAAlC,SAAA,GAEAkC,EAAA1B,gBAEA0B,EAAA1B,gBAEA+B,EAAAL,EAAAzB,wBAEAr9F,EAAA,EAAiBA,EAAAm/F,EAAoCn/F,IACrD8+F,EAAA1B,gBA0BA,GAtBA0B,EAAA3B,wBAEA2B,EAAAlC,SAAA,GAEAwC,EAAAN,EAAAzB,wBACAgC,EAAAP,EAAAzB,wBAGA,KAFAiC,EAAAR,EAAAhC,SAAA,KAGAgC,EAAAlC,SAAA,GAGAkC,EAAAlC,SAAA,GAEAkC,EAAAtB,gBAEAiC,EAAAX,EAAAzB,wBACAqC,EAAAZ,EAAAzB,wBACAsC,EAAAb,EAAAzB,wBACAuC,EAAAd,EAAAzB,yBAGAyB,EAAAtB,eAEAsB,EAAAtB,cAAA,CAIA,OAFAsB,EAAArB,oBAGA,OACA+B,EAAA,MACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,OACAA,EAAA,QACA,MAEA,QACAA,EAAA,QACA,MAEA,QACAA,EAAA,QACA,MAEA,QACAA,EAAA,QACA,MAEA,QACAA,EAAA,SACA,MAEA,QACAA,EAAA,MACA,MAEA,QACAA,EAAA,MACA,MAEA,QACAA,EAAA,MACA,MAEA,SAEAA,EAAA,CAAAV,EAAArB,oBAAA,EAAAqB,EAAArB,mBAAAqB,EAAArB,oBAAA,EAAAqB,EAAArB,oBAKA+B,IACAK,EAAAL,EAAA,GAAAA,EAAA,IAKA,OACA7W,aACAE,WACAD,uBACA/qE,MAAAhb,KAAAse,MAAA,IAAAi+E,EAAA,KAAAK,EAAA,EAAAC,GAAAG,GACA/hF,QAAA,EAAAwhF,IAAAD,EAAA,QAAAM,EAAA,EAAAC,MAKAp/F,UAAA,IAAAvB,EACAP,EAAAC,QAAA,CACA8J,WAAAuzF,EACA+D,cAAA9D,iCC3gBA,IAAAiuE,EAMAA,EAAA,SAAA9tE,GACA,IACAC,EAAAD,EAAA36F,WAEA66F,EAAA,EAGAC,EAAA,EAGAr9F,KAAAe,OAAA,WACA,SAAAo8F,GAIAn9F,KAAAs9F,cAAA,WACA,SAAAH,EAAAE,GAIAr9F,KAAAu9F,SAAA,WACA,IAAAp/D,EAAA++D,EAAA36F,WAAA46F,EACAK,EAAA,IAAA9xF,WAAA,GACA+xF,EAAA95F,KAAAG,IAAA,EAAAq5F,GAEA,OAAAM,EACA,UAAAroF,MAAA,sBAGAooF,EAAA7xF,IAAAuxF,EAAA16F,SAAA27B,IAAAs/D,IACAL,EAAA,IAAA34F,SAAA+4F,EAAA/6F,QAAAmC,UAAA,GAEAy4F,EAAA,EAAAI,EACAN,GAAAM,GAIAz9F,KAAA09F,SAAA,SAAAz6E,GACA,IAAA06E,EAEAN,EAAAp6E,GACAm6E,IAAAn6E,EACAo6E,GAAAp6E,IAEAA,GAAAo6E,EAEAp6E,GAAA,GADA06E,EAAAh6F,KAAAigB,MAAAX,EAAA,IAEAk6E,GAAAQ,EACA39F,KAAAu9F,WACAH,IAAAn6E,EACAo6E,GAAAp6E,IAKAjjB,KAAA49F,SAAA,SAAAz7F,GACA,IAAA07F,EAAAl6F,KAAAG,IAAAu5F,EAAAl7F,GAEA27F,EAAAV,IAAA,GAAAS,EAaA,OAVAR,GAAAQ,GAEA,EACAT,IAAAS,EACKV,EAAA,GACLn9F,KAAAu9F,YAGAM,EAAA17F,EAAA07F,GAEA,EACAC,GAAAD,EAAA79F,KAAA49F,SAAAC,GAGAC,GAIA99F,KAAA+9F,iBAAA,WACA,IAAAC,EAEA,IAAAA,EAAA,EAA8BA,EAAAX,IAAyCW,EACvE,QAAAZ,EAAA,aAAAY,GAIA,OAFAZ,IAAAY,EACAX,GAAAW,EACAA,EAMA,OADAh+F,KAAAu9F,WACAS,EAAAh+F,KAAA+9F,oBAIA/9F,KAAAi+F,sBAAA,WACAj+F,KAAA09F,SAAA,EAAA19F,KAAA+9F,qBAIA/9F,KAAAk+F,cAAA,WACAl+F,KAAA09F,SAAA,EAAA19F,KAAA+9F,qBAIA/9F,KAAAm+F,sBAAA,WACA,IAAAC,EAAAp+F,KAAA+9F,mBAEA,OAAA/9F,KAAA49F,SAAAQ,EAAA,MAIAp+F,KAAAq+F,cAAA,WACA,IAAAP,EAAA99F,KAAAm+F,wBAEA,SAAAL,EAEA,EAAAA,IAAA,GAGA,GAAAA,IAAA,IAKA99F,KAAAs+F,YAAA,WACA,WAAAt+F,KAAA49F,SAAA,IAIA59F,KAAAu+F,iBAAA,WACA,OAAAv+F,KAAA49F,SAAA,IAGA59F,KAAAu9F,YAGA/9F,EAAAC,QAAAurK,gCCvIA,IAKApqE,EALA7gG,EAAaF,EAAQ,GAErBorK,EAAeprK,EAAQ,KASvB+gG,EAAA,WACA,IAAAxG,EAAA,IAAA1uF,WACA4F,EAAA,EAEAsvF,EAAAt/F,UAAArB,KAAAiB,KAAAlB,MAEAA,KAAAqR,aAAA,SAAAvG,GACAwG,EAAAxG,GAGA9K,KAAAmB,KAAA,SAAA2S,GACA,IAEAgtF,EACArvE,EACAhe,EACAstF,EALAntF,EAAA,EACAT,EAAA,EAgBA,IATAinF,EAAAr5F,QACAggG,EAAA3G,EAAAr5F,QACAq5F,EAAA,IAAA1uF,WAAAoI,EAAAvR,WAAAw+F,IACAp1F,IAAAyuF,EAAA53F,SAAA,EAAAu+F,IACA3G,EAAAzuF,IAAAmI,EAAAitF,IAEA3G,EAAAtmF,EAGAsmF,EAAAr5F,OAAAoS,GAAA,GACA,GAAAinF,EAAAjnF,KAAA,IAAAH,WAAA,IAAAonF,EAAAjnF,EAAA,SAAAH,WAAA,IAAAonF,EAAAjnF,EAAA,SAAAH,WAAA,GAuBO,cAAAonF,EAAAjnF,KAAA,WAAAinF,EAAAjnF,EAAA,IAyBPA,QAzBO,CAGP,GAAAinF,EAAAr5F,OAAAoS,EAAA,EACA,MAMA,GAAAA,GAHAS,EAAAq3J,EAAA53J,cAAA+mF,EAAAjnF,IAGAinF,EAAAr5F,OACA,MAGA0S,EAAA,CACArT,KAAA,QACAqB,KAAA24F,EAAA53F,SAAA2Q,IAAAS,GACA5G,IAAAsE,EACArE,IAAAqE,GAEAtR,KAAAY,QAAA,OAAA6S,GACAN,GAAAS,MA5CA,CAGA,GAAAwmF,EAAAr5F,OAAAoS,EAAA,GACA,MAQA,GAAAA,GAJAS,EAAAq3J,EAAAh4J,gBAAAmnF,EAAAjnF,IAIAinF,EAAAr5F,OACA,MAGA0wB,EAAA,CACArxB,KAAA,iBACAqB,KAAA24F,EAAA53F,SAAA2Q,IAAAS,IAEA5T,KAAAY,QAAA,OAAA6wB,GACAte,GAAAS,EA8BAktF,EAAA1G,EAAAr5F,OAAAoS,EAGAinF,EADA0G,EAAA,EACA1G,EAAA53F,SAAA2Q,GAEA,IAAAzH,cAKApK,UAAA,IAAAvB,EACAP,EAAAC,QAAAmhG,gCCvGA,IAAApB,EAAsC3/F,EAAQ,IAAgC2/F,gCAE9ErtF,EAAoBtS,EAAQ,IAAwBsS,cAEpDg5E,EAAYtrF,EAAQ,GAEpB0nG,EAAc1nG,EAAQ,IAatBwoG,EAAA,SAAAz4F,EAAArE,GAGA,IAFA,IAAA+8F,EAAA14F,EAEA9O,EAAA,EAAiBA,EAAAyK,EAAAxK,OAAoBD,IAAA,CACrC,IAAA4pF,EAAAn/E,EAAAzK,GAEA,GAAAwnG,EAAA5d,EAAAvoF,KACA,OAAAuoF,EAGA4d,GAAA5d,EAAAvoF,KAGA,aA+HAomG,EAAA,SAAAnjF,EAAAojF,GAEA,IAAAplG,EAAA+nF,EAAAtmF,QAAAugB,EAAA,iBAEAqjF,EAAAtd,EAAAtmF,QAAAugB,EAAA,UACAsjF,EAAA,GACAC,EAAA,GAkCA,OAhCAF,EAAAvkG,QAAA,SAAA+G,EAAAzK,GACA,IAAAooG,EAAAxlG,EAAA5C,GACAmoG,EAAAxnG,KAAA,CACA8J,OACA1H,KAAAqlG,MAGAD,EAAAzkG,QAAA,SAAA2kG,GACA,IAWAC,EAXA79F,EAAA49F,EAAA59F,KACA1H,EAAAslG,EAAAtlG,KACAC,EAAA2nF,EAAAtmF,QAAAtB,EAAA,UAEAwlG,EAAAxB,EAAAU,UAAAzkG,EAAA,IACAe,EAAAwkG,EAAAxkG,QACAb,EAAAynF,EAAAtmF,QAAAtB,EAAA,UAEAoH,EAAAjH,EAAA3C,OAAA,EAAAwmG,EAAAQ,UAAArkG,EAAA,IAAAiH,oBAAA,EACAq+F,EAAA7d,EAAAtmF,QAAAtB,EAAA,UAIAilG,IAAAjkG,GAAAykG,EAAAjoG,OAAA,IAEA+nG,EA5IA,SAAAtH,EAAAj2F,EAAAhH,GACA,IAEA0kG,EACAnoG,EACAC,EACAmoG,EALAzH,EAAA,IAAAh9F,SAAA+8F,EAAA/+F,OAAA++F,EAAA98F,WAAA88F,EAAAj/F,YACAG,EAAA,GAMA,IAAA5B,EAAA,EAAaA,EAAA,EAAA0gG,EAAAzgG,OAA0BD,GAAAC,EAIvC,GAHAA,EAAA0gG,EAAA78F,UAAA9D,GACAA,GAAA,IAEAC,GAAA,GAIA,UAAAygG,EAAA1gG,IACA,OACA,IAAAW,EAAA+/F,EAAAh/F,SAAA1B,EAAA,EAAAA,EAAA,EAAAC,GACAooG,EAAAd,EAAAvnG,EAAAyK,GACA09F,EAAA,CACA78F,YAAA,WACAjK,KAAApB,EACAU,OACAutF,YAAAwQ,EAAA/9F,GACA8C,WAGA4kG,GACAF,EAAAj8F,IAAAm8F,EAAAn8F,IACAi8F,EAAAh8F,IAAAk8F,EAAAl8F,IACAi8F,EAAAC,IAIAF,EAAAj8F,IAAAk8F,EAAAl8F,IACAi8F,EAAAh8F,IAAAi8F,EAAAj8F,KAGAvK,EAAAvB,KAAA8nG,GAQA,OAAAvmG,EA6FA0mG,CAAAn+F,EA5EA,SAAA+9F,EAAAr+F,EAAAnH,GACA,IAAA+7F,EAAA50F,EACAm7F,EAAAtiG,EAAAsiG,uBAAA,EACAC,EAAAviG,EAAAuiG,mBAAA,EACAxhG,EAAAf,EAAAe,QACA8kG,EAAA,GA4BA,OA3BAL,EAAA9kG,QAAA,SAAA6iF,GAIA,IACAx7E,EADAg8F,EAAAW,UAAAnhB,GACAx7E,QACAA,EAAArH,QAAA,SAAAwmF,QACA/8E,IAAA+8E,EAAAx9E,WACAw9E,EAAAx9E,SAAA44F,QAGAn4F,IAAA+8E,EAAAvoF,OACAuoF,EAAAvoF,KAAA4jG,GAGArb,EAAAnmF,UACAmmF,EAAAz9E,IAAAsyF,OAEA5xF,IAAA+8E,EAAAD,wBACAC,EAAAD,sBAAA,GAGAC,EAAA19E,IAAAuyF,EAAA7U,EAAAD,sBACA8U,GAAA7U,EAAAx9E,WAEAm8F,IAAA/oG,OAAAiL,KAEA89F,EA0CAC,CAAAN,EAAAr+F,EAAAo+F,GACAxkG,GAEAmkG,EAAAnkG,KACAmkG,EAAAnkG,GAAA,IAGAmkG,EAAAnkG,GAAAmkG,EAAAnkG,GAAAjE,OAAAwoG,MAGAJ,GAiOAlpG,EAAAC,QA3LA,WACA,IACAyS,EAEAw3F,EAEAnlG,EAEAzC,EAEA6nG,EATAC,GAAA,EAeA5pG,KAAA4pG,cAAA,WACA,OAAAA,GAQA5pG,KAAAC,KAAA,WACAiS,EAAA,IAAAC,EACAy3F,GAAA,EAEA13F,EAAA/R,GAAA,gBAAA0P,GAEAA,EAAA9N,UAAA8N,EAAAK,SAAApO,EACA+N,EAAAM,QAAAN,EAAAO,OAAAtO,EACA6nG,EAAA75F,SAAA3O,KAAA0O,GACA85F,EAAA55F,eAAAF,EAAAQ,SAAA,KAUArQ,KAAA6pG,UAAA,SAAA5lG,EAAA6lG,GACA,QAAA7lG,GAAA,IAAAA,EAAAlD,QAAA+oG,GAAA,kBAAAA,GAAA,IAAAnkG,OAAAiW,KAAAkuF,GAAA/oG,UAIAwD,IAAAN,EAAA,IAAAnC,IAAAgoG,EAAAvlG,KAcAvE,KAAAoW,MAAA,SAAAgP,EAAAnhB,EAAA6lG,GACA,IAAAC,EAEA,IAAA/pG,KAAA4pG,gBACA,YACK,IAAA3lG,IAAA6lG,EACL,YACK,GAAA9pG,KAAA6pG,UAAA5lG,EAAA6lG,GAGLvlG,EAAAN,EAAA,GACAnC,EAAAgoG,EAAAvlG,QAEK,IAAAA,IAAAzC,EAEL,OADA4nG,EAAAvoG,KAAAikB,GACA,KAIA,KAAAskF,EAAA3oG,OAAA,IACA,IAAAipG,EAAAN,EAAAl9F,QACAxM,KAAAoW,MAAA4zF,EAAA/lG,EAAA6lG,GAKA,eAFAC,EAzGA,SAAA3kF,EAAA7gB,EAAAzC,GAGA,OAAAyC,EAKA,CACAukG,QAFAP,EAAAnjF,EAAA7gB,GAEAA,GACAzC,aANA,KAqGAmoG,CAAA7kF,EAAA7gB,EAAAzC,KAEAioG,EAAAjB,SAIA9oG,KAAAkqG,SAAAH,EAAAjB,SAEA9oG,KAAA07F,cACAiO,GANA,MAgBA3pG,KAAAkqG,SAAA,SAAA1G,GACA,IAAAxjG,KAAA4pG,kBAAApG,GAAA,IAAAA,EAAAziG,OACA,YAGAyiG,EAAAt/F,QAAA,SAAAimG,GACAj4F,EAAA/Q,KAAAgpG,MASAnqG,KAAA07F,YAAA,WACA,IAAA17F,KAAA4pG,gBACA,YAGA13F,EAAAvQ,SAOA3B,KAAAoqG,oBAAA,WACAT,EAAA75F,SAAA,GACA65F,EAAA55F,eAAA,IAQA/P,KAAAqqG,mBAAA,WACA,IAAArqG,KAAA4pG,gBACA,YAGA13F,EAAAM,SASAxS,KAAAsqG,iBAAA,WACAtqG,KAAAoqG,sBACApqG,KAAAqqG,sBAOArqG,KAAAwS,MAAA,WACAk3F,EAAA,GACAnlG,EAAA,KACAzC,EAAA,KAEA6nG,EAOA3pG,KAAAoqG,sBANAT,EAAA,CACA75F,SAAA,GAEAC,eAAA,IAMA/P,KAAAqqG,sBAGArqG,KAAAwS,uCCraA,IAAAyuF,EACAC,EACAr/F,EAAgBhC,EAAQ,GAAcgC,UACtCw/F,EAAA,SAAA/0C,GACA,WAAAxkC,KAAA,IAAAwkC,EAAA,aAEAg1C,EAAA,SAAArY,GACA,OACA0B,WAAA,GAAA1B,EAAA,QACAC,UAAA,EAAAD,EAAA,GACAE,cAAA,IAAAF,EAAA,QACAG,eAAA,GAAAH,EAAA,QACA2B,cAAA,GAAA3B,EAAA,QACA4B,gBAAA,EAAA5B,EAAA,GACA6B,oBAAA7B,EAAA,MAAAA,EAAA,KAGAsY,EAAA,SAAAC,GACA,IAEA1gG,EACAC,EAHA0gG,EAAA,IAAAh9F,SAAA+8F,EAAA/+F,OAAA++F,EAAA98F,WAAA88F,EAAAj/F,YACAG,EAAA,GAIA,IAAA5B,EAAA,EAAaA,EAAA,EAAA0gG,EAAAzgG,OAA0BD,GAAAC,EAIvC,GAHAA,EAAA0gG,EAAA78F,UAAA9D,GACAA,GAAA,EAEAC,GAAA,EACA2B,EAAAvB,KAAA,uDAIA,UAAAqgG,EAAA1gG,IACA,OACA4B,EAAAvB,KAAA,yCACA,MAEA,OACAuB,EAAAvB,KAAA,6CACA,MAEA,OACAuB,EAAAvB,KAAA,YACA,MAEA,OACAuB,EAAAvB,KAAA,0BACA,MAEA,OACAuB,EAAAvB,KAAA,0BACA,MAEA,OACAuB,EAAAvB,KAAA,8BACA,MAEA,QACAuB,EAAAvB,KAAA,iBAAAqgG,EAAA1gG,GAAA,IAKA,OAAA4B,GAGA0T,EAAA,CAIA0xE,KAAA,SAAArmF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACA,OACAo/F,mBAAAr9F,EAAAs9F,UAAA,GACAjjF,MAAAra,EAAAs9F,UAAA,IACAhjF,OAAAta,EAAAs9F,UAAA,IACAC,gBAAAv9F,EAAAs9F,UAAA,IAAAt9F,EAAAs9F,UAAA,OACAE,eAAAx9F,EAAAs9F,UAAA,IAAAt9F,EAAAs9F,UAAA,OACAG,WAAAz9F,EAAAs9F,UAAA,IACAI,MAAA19F,EAAAs9F,UAAA,IACA/1F,OAAAo1F,EAAAx/F,EAAAe,SAAA,GAAAf,EAAAc,eAGAwlF,KAAA,SAAAtmF,GACA,IAWAwgG,EACAC,EACAtyF,EACA9O,EAdAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAy/F,qBAAA1gG,EAAA,GACA2gG,qBAAA3gG,EAAA,GACAioF,qBAAAjoF,EAAA,GACA4gG,mBAAA5gG,EAAA,GACA6gG,mBAAA,EAAA7gG,EAAA,GACA4K,IAAA,GACAP,IAAA,IAEAy2F,EAAA,GAAA9gG,EAAA,GAQA,IAFAmO,EAAA,EAEA9O,EAAA,EAAeA,EAAAyhG,EAAgCzhG,IAC/CohG,EAAA59F,EAAAs9F,UAAAhyF,GACAA,GAAA,EACAlN,EAAA2J,IAAAlL,KAAA,IAAAuK,WAAAjK,EAAAe,SAAAoN,IAAAsyF,KACAtyF,GAAAsyF,EAOA,IAHAD,EAAAxgG,EAAAmO,GACAA,IAEA9O,EAAA,EAAeA,EAAAmhG,EAA+BnhG,IAC9CohG,EAAA59F,EAAAs9F,UAAAhyF,GACAA,GAAA,EACAlN,EAAAoJ,IAAA3K,KAAA,IAAAuK,WAAAjK,EAAAe,SAAAoN,IAAAsyF,KACAtyF,GAAAsyF,EAGA,OAAAx/F,GAEAslF,KAAA,SAAAvmF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACA,OACAigG,aAAAl+F,EAAAM,UAAA,GACA69F,WAAAn+F,EAAAM,UAAA,GACA89F,WAAAp+F,EAAAM,UAAA,KAGAuhF,KAAA,SAAA1kF,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAmgG,KAAAlhG,EAAA,MAAAA,EAAA,GACAmhG,eAAA,GAAAnhG,EAAA,GACAohG,cAAA,CACAC,wBAAArhG,EAAA,IACA05F,WAAA15F,EAAA,WACAo4F,WAAAp4F,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAghG,WAAAhhG,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAihG,WAAAjhG,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,IACAshG,wBAAA,CACA55E,IAAA1nB,EAAA,IACAV,OAAAU,EAAA,IACAuhG,gBAAAvhG,EAAA,WACAwhG,wBAAA,EAAAxhG,EAAA,QAAAA,EAAA,UACAyhG,qBAAAzhG,EAAA,eAKA2kF,KAAA,SAAA3kF,GASA,IARA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAygG,WAAAthG,EAAAJ,EAAAe,SAAA,MACA4gG,aAAA9+F,EAAAM,UAAA,GACAy+F,iBAAA,IAEAviG,EAAA,EAEAA,EAAAW,EAAAc,YACAG,EAAA2gG,iBAAAliG,KAAAU,EAAAJ,EAAAe,SAAA1B,IAAA,KACAA,GAAA,EAGA,OAAA4B,GAEAwjF,KAAA,SAAAzkF,GACA,OACAyJ,MAAA+1F,EAAAx/F,KAGAwmF,KAAA,SAAAxmF,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA8gG,eAAArC,EAAAx/F,EAAAe,SAAA,MAGA6B,KAAA,SAAA5C,GACA,IACAiB,EAAA,CACAM,QAFA,IAAAyB,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YAEAoC,SAAA,GACAskF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAgC,YAAA3C,EAAAJ,EAAAe,SAAA,OACAia,KAAA,IAEA3b,EAAA,EAEA,IAAAA,EAAA,GAAgBA,EAAAW,EAAAc,WAAqBzB,IAAA,CACrC,OAAAW,EAAAX,GAAA,CAEAA,IACA,MAGA4B,EAAA+Z,MAAA9Z,OAAAC,aAAAnB,EAAAX,IAMA,OADA4B,EAAA+Z,KAAA68E,mBAAAiK,OAAA7gG,EAAA+Z,OACA/Z,GAEAuI,KAAA,SAAAxJ,GACA,OACAc,WAAAd,EAAAc,WACAihG,KAAAjC,EAAA9/F,KAGAyB,KAAA,SAAAzB,GACA,IAEAye,EAFA5b,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAzB,EAAA,EAEA4B,EAAA,CACAM,QAAAsB,EAAAK,SAAA,GACAskF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA0d,SAAA,IA+BA,OA5BA,IAAAxd,EAAAM,SACAlC,GAAA,EACA4B,EAAAgjE,aAAA27B,EAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAA+gG,iBAAApC,EAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAAZ,UAAAwC,EAAAM,UAAA9D,GACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,KAEA4B,EAAAgjE,aAAA27B,EAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAA+gG,iBAAApC,EAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAAZ,UAAAwC,EAAAM,UAAA9D,GACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,IAGAA,GAAA,EAGAof,EAAA5b,EAAAs9F,UAAA9gG,GACA4B,EAAAwd,UAAAvd,OAAAC,aAAA,IAAAsd,GAAA,KACAxd,EAAAwd,UAAAvd,OAAAC,aAAA,SAAAsd,IAAA,IACAxd,EAAAwd,UAAAvd,OAAAC,aAAA,OAAAsd,IACAxd,GAEAgkF,KAAA,SAAAjlF,GACA,OACAyJ,MAAA+1F,EAAAx/F,KAGA4kF,KAAA,SAAA5kF,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA0H,eAAAzI,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,KAGA6kF,KAAA,SAAA7kF,GACA,OACAyJ,MAAA+1F,EAAAx/F,KAMAymF,KAAA,SAAAzmF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CAEAi/F,mBAAAr9F,EAAAs9F,UAAA,GAEA9Y,aAAAxkF,EAAAs9F,UAAA,IACAhY,WAAAtlF,EAAAs9F,UAAA,IAGA7Y,WAAAzkF,EAAAs9F,UAAA,IAAAt9F,EAAAs9F,UAAA,WAQA,OAJAngG,EAAAc,WAAA,KACAG,EAAAghG,iBAAAzC,EAAAx/F,EAAAe,SAAA,SAGAE,GAEAsI,KAAA,SAAAvJ,GACA,OACAyJ,MAAA+1F,EAAAx/F,KAGA8kF,KAAA,SAAA9kF,GACA,OACAyJ,MAAA+1F,EAAAx/F,KAGA+kF,KAAA,SAAA/kF,GACA,OACAyJ,MAAA+1F,EAAAx/F,KAGAglF,KAAA,SAAAhlF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAzB,EAAA,EACA4B,EAAA,CACAM,QAAAsB,EAAAK,SAAA,GACAskF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,OAoCA,OAjCA,IAAAE,EAAAM,SACAlC,GAAA,EACA4B,EAAAgjE,aAAA27B,EAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAA+gG,iBAAApC,EAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAAZ,UAAAwC,EAAAM,UAAA9D,GACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,KAEA4B,EAAAgjE,aAAA27B,EAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAA+gG,iBAAApC,EAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAAZ,UAAAwC,EAAAM,UAAA9D,GACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,IAGAA,GAAA,EAEA4B,EAAAi3D,KAAAr1D,EAAAs9F,UAAA9gG,GAAAwD,EAAAs9F,UAAA9gG,EAAA,MACAA,GAAA,EACA4B,EAAA4wD,OAAAhvD,EAAAK,SAAA7D,GAAAwD,EAAAK,SAAA7D,EAAA,KACAA,GAAA,EACAA,GAAA,EACAA,GAAA,EACA4B,EAAAihG,OAAA,IAAAv1E,YAAA3sB,EAAAe,SAAA1B,IAAA,KACAA,GAAA,GACAA,GAAA,GACA4B,EAAAkhG,YAAAt/F,EAAAM,UAAA9D,GACA4B,GAEAmhG,KAAA,SAAApiG,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACA,OACAS,QAAAsB,EAAAK,SAAA,GACAskF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAm3D,KAAAr1D,EAAAM,UAAA,GACAk/F,aAAAx/F,EAAAM,UAAA,KAGA+hF,KAAA,SAAAllF,GACA,IAKAX,EALA4B,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA+I,QAAA,IAIA,IAAAzK,EAAA,EAAeA,EAAAW,EAAAc,WAAqBzB,IACpC4B,EAAA6I,QAAApK,KAAA,CACA+nF,WAAA,GAAAznF,EAAAX,KAAA,EACAqoF,cAAA,GAAA1nF,EAAAX,KAAA,EACAsoF,cAAA,EAAA3nF,EAAAX,KAIA,OAAA4B,GAEAqhG,KAAA,SAAAtiG,GACA,IAWAX,EAXAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAwhG,WAAA,GACAC,YAAA3/F,EAAAM,UAAA,GACA9C,UAAAwC,EAAAM,UAAA,GACAs/F,yBAAA5/F,EAAAM,UAAA,IACAu/F,YAAA7/F,EAAAM,UAAA,KAEAw/F,EAAA9/F,EAAAs9F,UAAA,IAGA,IAAA9gG,EAAA,GAAgBsjG,EAAgBtjG,GAAA,GAAAsjG,IAChC1hG,EAAAshG,WAAA7iG,KAAA,CACAkjG,eAAA,IAAA5iG,EAAAX,MAAA,EACAwjG,eAAA,WAAAhgG,EAAAM,UAAA9D,GACAyjG,mBAAAjgG,EAAAM,UAAA9D,EAAA,GACA0jG,iBAAA,IAAA/iG,EAAAX,EAAA,IACA2jG,SAAA,IAAAhjG,EAAAX,EAAA,QACA4jG,aAAA,UAAApgG,EAAAM,UAAA9D,EAAA,KAIA,OAAA4B,GAEAylF,KAAA,SAAA1mF,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAmiG,QAAAljG,EAAA,GAAAA,EAAA,SAGAmlF,KAAA,SAAAnlF,GACA,OACAyJ,MAAA+1F,EAAAx/F,KAGA2mF,KAAA,SAAA3mF,GACA,IAOAX,EAPAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAoiG,aAAA,IAEAC,EAAAvgG,EAAAM,UAAA,GAGA,IAAA9D,EAAA,EAAe+jG,EAAY/jG,GAAA,EAAA+jG,IAC3BniG,EAAAkiG,aAAAzjG,KAAAmD,EAAAM,UAAA9D,IAGA,OAAA4B,GAEA2lF,KAAA,SAAA5mF,GACA,IAOAX,EAPAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAsiG,EAAAvgG,EAAAM,UAAA,GACAlC,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAsiG,eAAA,IAIA,IAAAhkG,EAAA,EAAe+jG,EAAY/jG,GAAA,GAAA+jG,IAC3BniG,EAAAoiG,eAAA3jG,KAAA,CACA4jG,WAAAzgG,EAAAM,UAAA9D,GACAkkG,gBAAA1gG,EAAAM,UAAA9D,EAAA,GACAmkG,uBAAA3gG,EAAAM,UAAA9D,EAAA,KAIA,OAAA4B,GAEAmkF,KAAA,SAAAplF,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA0iG,mBAAAjE,EAAAx/F,EAAAe,SAAA,MAGA8lF,KAAA,SAAA7mF,GACA,IAOAX,EAPAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA2iG,WAAA7gG,EAAAM,UAAA,GACAwgG,QAAA,IAIA,IAAAtkG,EAAA,GAAgBA,EAAAW,EAAAc,WAAqBzB,GAAA,EACrC4B,EAAA0iG,QAAAjkG,KAAAmD,EAAAM,UAAA9D,IAGA,OAAA4B,GAEA6lF,KAAA,SAAA9mF,GACA,IAOAX,EAPAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA6iG,cAAA,IAEAR,EAAAvgG,EAAAM,UAAA,GAGA,IAAA9D,EAAA,EAAe+jG,EAAY/jG,GAAA,EAAA+jG,IAC3BniG,EAAA2iG,cAAAlkG,KAAA,CACAw7F,YAAAr4F,EAAAM,UAAA9D,GACAwkG,YAAAhhG,EAAAM,UAAA9D,EAAA,KAIA,OAAA4B,GAEA8lF,KAAA,SAAA/mF,GACA,OAAA2U,EAAAgwE,KAAA3kF,IAEAiC,KAAA,SAAAjC,GACA,IAAAiB,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACAmI,oBAAAlJ,EAAA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAQA,OALA,IAAAiB,EAAAM,UACAN,EAAAiI,qBAAAhH,KAAAC,IAAA,MACAlB,EAAAiI,qBAAAlJ,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAGAiB,GAEAc,KAAA,SAAA/B,GACA,IAaAX,EAbAwD,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAG,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA+B,QAAAD,EAAAM,UAAA,IAEA2gG,EAAA,EAAA7iG,EAAAumF,MAAA,GACAuc,EAAA,EAAA9iG,EAAAumF,MAAA,GACAwc,EAAA,EAAA/iG,EAAAumF,MAAA,GACAyc,EAAA,GAAAhjG,EAAAumF,MAAA,GACA0c,EAAA,GAAAjjG,EAAAumF,MAAA,GACA2c,EAAA,MAAAljG,EAAAumF,MAAA,GACA4c,EAAA,OAAAnjG,EAAAumF,MAAA,GAuCA,OArCAnoF,EAAA,EAEAykG,IACAzkG,GAAA,EAGA4B,EAAAqpF,eAAAznF,EAAAM,UAAA,IACA9D,GAAA,GAGA0kG,IACA9iG,EAAAuiG,uBAAA3gG,EAAAM,UAAA9D,GACAA,GAAA,GAGA2kG,IACA/iG,EAAAojG,sBAAAxhG,EAAAM,UAAA9D,GACAA,GAAA,GAGA4kG,IACAhjG,EAAAqjG,kBAAAzhG,EAAAM,UAAA9D,GACAA,GAAA,GAGA6kG,IACAjjG,EAAAsjG,mBAAA1hG,EAAAM,UAAA9D,IAGA8kG,IACAljG,EAAAkjG,iBAAA,IAGAL,GAAAM,IACAnjG,EAAAujG,sBAAA,GAGAvjG,GAEAK,KAAA,SAAAtB,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACAzB,EAAA,EACA4B,EAAA,CACAM,QAAAsB,EAAAK,SAAA,GACAskF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,OAyCA,OAtCA,IAAAE,EAAAM,SACAlC,GAAA,EACA4B,EAAAgjE,aAAA27B,EAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAA+gG,iBAAApC,EAAA/8F,EAAAM,UAAA9D,IAEAA,GAAA,EACA4B,EAAA6B,QAAAD,EAAAM,UAAA9D,GACAA,GAAA,EACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,KAEA4B,EAAAgjE,aAAA27B,EAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAA+gG,iBAAApC,EAAA/8F,EAAAM,UAAA9D,IACAA,GAAA,EACA4B,EAAA6B,QAAAD,EAAAM,UAAA9D,GACAA,GAAA,EACAA,GAAA,EACA4B,EAAAwK,SAAA5I,EAAAM,UAAA9D,IAGAA,GAAA,EACAA,GAAA,EACA4B,EAAAwjG,MAAA5hG,EAAAs9F,UAAA9gG,GACAA,GAAA,EACA4B,EAAAyjG,eAAA7hG,EAAAs9F,UAAA9gG,GACAA,GAAA,EAEA4B,EAAA4wD,OAAAhvD,EAAAK,SAAA7D,GAAAwD,EAAAK,SAAA7D,EAAA,KACAA,GAAA,EACAA,GAAA,EACA4B,EAAAihG,OAAA,IAAAv1E,YAAA3sB,EAAAe,SAAA1B,IAAA,KACAA,GAAA,GACA4B,EAAAic,MAAAra,EAAAs9F,UAAA9gG,GAAAwD,EAAAs9F,UAAA9gG,EAAA,MACAA,GAAA,EACA4B,EAAAkc,OAAAta,EAAAs9F,UAAA9gG,GAAAwD,EAAAs9F,UAAA9gG,EAAA,MACA4B,GAEAa,KAAA,SAAA9B,GACA,OACAyJ,MAAA+1F,EAAAx/F,KAGAqB,KAAA,SAAArB,GACA,OACAyJ,MAAA+1F,EAAAx/F,KAGAqlF,KAAA,SAAArlF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACA,OACAS,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA+B,QAAAD,EAAAM,UAAA,GACAwhG,8BAAA9hG,EAAAM,UAAA,GACAkhG,sBAAAxhG,EAAAM,UAAA,IACAmhG,kBAAAzhG,EAAAM,UAAA,IACAyhG,gBAAA,EAAA5kG,EAAA,IACA6kG,oBAAA,IAAA7kG,EAAA,QACA8kG,qBAAA,GAAA9kG,EAAA,QACA+kG,oBAAA,GAAA/kG,EAAA,QACAglG,4BAAA,EAAAhlG,EAAA,KACAilG,0BAAApiG,EAAAs9F,UAAA,MAGA7a,KAAA,SAAAtlF,GACA,IAqBAipF,EArBAhoF,EAAA,CACAM,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA+I,QAAA,IAEAjH,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YAEAokG,EAAA,EAAAjkG,EAAAumF,MAAA,GAEA2d,EAAA,EAAAlkG,EAAAumF,MAAA,GAEA4d,EAAA,EAAAnkG,EAAAumF,MAAA,GAEA6d,EAAA,EAAApkG,EAAAumF,MAAA,GAEA8d,EAAA,EAAArkG,EAAAumF,MAAA,GAEA+d,EAAA,EAAAtkG,EAAAumF,MAAA,GAEA0T,EAAAr4F,EAAAM,UAAA,GACAgL,EAAA,EAqCA,IAlCA+2F,IAEAjkG,EAAAkpF,WAAAtnF,EAAA2iG,SAAAr3F,GACAA,GAAA,GAKAg3F,GAAAjK,IACAjS,EAAA,CACAzB,MAAAqY,EAAA7/F,EAAAe,SAAAoN,IAAA,KAEAA,GAAA,EAEAi3F,IACAnc,EAAAx9E,SAAA5I,EAAAM,UAAAgL,GACAA,GAAA,GAGAk3F,IACApc,EAAAvoF,KAAAmC,EAAAM,UAAAgL,GACAA,GAAA,GAGAo3F,IAEAtc,EAAAD,sBAAAnmF,EAAAM,UAAAgL,GACAA,GAAA,GAGAlN,EAAA6I,QAAApK,KAAAupF,GACAiS,KAGAA,KACAjS,EAAA,GAEAmc,IACAnc,EAAAx9E,SAAA5I,EAAAM,UAAAgL,GACAA,GAAA,GAGAk3F,IACApc,EAAAvoF,KAAAmC,EAAAM,UAAAgL,GACAA,GAAA,GAGAm3F,IACArc,EAAAzB,MAAAqY,EAAA7/F,EAAAe,SAAAoN,IAAA,IACAA,GAAA,GAGAo3F,IAEAtc,EAAAD,sBAAAnmF,EAAAM,UAAAgL,GACAA,GAAA,GAGAlN,EAAA6I,QAAApK,KAAAupF,GAGA,OAAAhoF,GAEAwkG,OAAA,SAAAzlG,GACA,OACAuB,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,QAGAimF,KAAA,SAAAhnF,GACA,IAAA6C,EAAA,IAAAG,SAAAhD,EAAAgB,OAAAhB,EAAAiD,WAAAjD,EAAAc,YACA,OACAS,QAAAvB,EAAA,GACAwnF,MAAA,IAAAv9E,WAAAjK,EAAAe,SAAA,MACA2kG,aAAA7iG,EAAAs9F,UAAA,GACAwF,QAAA,IAAAC,YAAA,CAAA/iG,EAAAs9F,UAAA,GAAAt9F,EAAAs9F,UAAA,GAAAt9F,EAAAs9F,UAAA,SAYAX,EAAA,SAAAx/F,GAYA,IAXA,IAEA6C,EACAnC,EACA/B,EACAgC,EACAm7B,EANAz8B,EAAA,EACA4B,EAAA,GAOA8kG,EAAA,IAAA/nB,YAAAh+E,EAAAV,QACAy6D,EAAA,IAAA9vD,WAAA87F,GAEAC,EAAA,EAAiBA,EAAAhmG,EAAAV,SAAiB0mG,EAClCjsC,EAAAisC,GAAAhmG,EAAAgmG,GAKA,IAFAnjG,EAAA,IAAAG,SAAA+iG,GAEA1mG,EAAAW,EAAAc,YAEAJ,EAAAmC,EAAAM,UAAA9D,GACAV,EAAAyB,EAAAJ,EAAAe,SAAA1B,EAAA,EAAAA,EAAA,IACAsB,EAAAD,EAAA,EAAArB,EAAAqB,EAAAV,EAAAc,YAEAg7B,GAAAnnB,EAAAhW,IAAA,SAAAqB,GACA,OACAA,UAEKA,EAAAe,SAAA1B,EAAA,EAAAsB,KAELD,OACAo7B,EAAAn9B,OAEAsC,EAAAvB,KAAAo8B,GACAz8B,EAAAsB,EAGA,OAAAM,GAcAw+F,EAAA,SAAAyG,EAAA3F,GACA,IAAA4F,EAIA,OAHA5F,KAAA,EACA4F,EAAA,IAAAnsF,MAAA,EAAAumF,EAAA,GAAAhnF,KAAA,KAEA2sF,EAAArkG,IAAA,SAAAi6B,EAAA/8B,GAEA,OAAAonG,EAAArqE,EAAAn9B,KAAA,KACAuF,OAAAiW,KAAA2hB,GAAAne,OAAA,SAAAvZ,GACA,eAAAA,GAAA,UAAAA,IACKvC,IAAA,SAAAuC,GACL,IAAAgiG,EAAAD,EAAA,KAAA/hG,EAAA,KACAwB,EAAAk2B,EAAA13B,GAEA,GAAAwB,aAAAqE,YAAArE,aAAA+mB,YAAA,CACA,IAAAta,EAAA2H,MAAAna,UAAAZ,MAAAQ,KAAA,IAAAwK,WAAArE,EAAA5E,OAAA4E,EAAA3C,WAAA2C,EAAA9E,aAAAe,IAAA,SAAAwkG,GACA,gBAAAA,EAAA3/F,SAAA,KAAAzH,OAAA,KACSsa,KAAA,IAAAuJ,MAAA,YAET,OAAAzQ,EAIA,IAAAA,EAAA/S,OACA8mG,EAAA,IAAA/zF,EAAAkH,KAAA,IAAAta,MAAA,OAGAmnG,EAAA,MAAA/zF,EAAAxQ,IAAA,SAAAiqB,GACA,OAAAq6E,EAAA,KAAAr6E,IACSvS,KAAA,WAAA4sF,EAAA,MATTC,EAAA,KAaA,OAAAA,EAAA1xF,KAAAsB,UAAApQ,EAAA,QAAAyT,MAAA,MAAAxX,IAAA,SAAAiqB,EAAA/sB,GACA,WAAAA,EACA+sB,EAGAq6E,EAAA,KAAAr6E,IACOvS,KAAA,QACFA,KAAA,OACLuiB,EAAAryB,MAAA,KAAAg2F,EAAA3jE,EAAAryB,MAAA82F,EAAA,SACGhnF,KAAA,OAGHxb,EAAAC,QAAA,CACA8nG,QAAAtG,EACAyG,QAAAxG,EACA6G,UAAA3xF,EAAA1S,KACAskG,UAAA5xF,EAAA/R,KACA4jG,UAAA7xF,EAAA5S,KACA0kG,UAAA9xF,EAAA2wE,oCCr1BA,IAAAq3C,EAAkBv+H,EAAQ,IAE1BqrK,EAAA,SAAAz3J,GACA,IAAA2nF,EAAA,GAAA3nF,EAAA,GAGA,OAFA2nF,IAAA,EACAA,GAAA3nF,EAAA,IAIAkrH,EAAA,SAAAlrH,GACA,YAAAA,EAAA,KAGA03J,EAAA,SAAA13J,GACA,IAAA7D,EAAA,EAUA,OAJA,GAAA6D,EAAA,YACA7D,GAAA6D,EAAA,MAGA7D,GAmJAw7J,EAAA,SAAAhrK,GACA,OAAAA,GACA,OACA,kDAEA,OACA,iBAEA,OACA,+BAEA,OACA,+BAEA,OACA,mCAEA,QACA,cA2FAZ,EAAAC,QAAA,CACAoC,UA9PA,SAAA4R,EAAAsnF,GACA,IAAAK,EAAA8vE,EAAAz3J,GAEA,WAAA2nF,EACA,MACGA,IAAAL,EACH,MACGA,EACH,MAGA,MAoPAT,SAjPA,SAAA7mF,GACA,IAAA+qH,EAAAG,EAAAlrH,GACA7D,EAAA,EAAAu7J,EAAA13J,GAMA,OAJA+qH,IACA5uH,GAAA6D,EAAA7D,GAAA,IAGA,GAAA6D,EAAA7D,EAAA,QAAA6D,EAAA7D,EAAA,KA0OA2qF,SAvOA,SAAA9mF,GACA,IAAAgnF,EAAA,GACA+jC,EAAAG,EAAAlrH,GACA43J,EAAA,EAAAF,EAAA13J,GAWA,GATA+qH,IACA6sC,GAAA53J,EAAA43J,GAAA,GAQA,EAAA53J,EAAA43J,EAAA,IAIA,IAAApwE,EAGAA,EAAA,IADA,GAAAxnF,EAAA43J,EAAA,OAAA53J,EAAA43J,EAAA,IACA,EAOA,IAFA,IAAAz7J,EAAA,KAFA,GAAA6D,EAAA43J,EAAA,QAAA53J,EAAA43J,EAAA,KAIAz7J,EAAAqrF,GAAA,CACA,IAAAn6F,EAAAuqK,EAAAz7J,EAEA6qF,GAAA,GAAAhnF,EAAA3S,EAAA,OAAA2S,EAAA3S,EAAA,IAAA2S,EAAA3S,GAGA8O,GAAA,OAAA6D,EAAA3S,EAAA,OAAA2S,EAAA3S,EAAA,IAGA,OAAA25F,IAmMAkkC,iCACAD,aAjMA,SAAAjrH,EAAAgnF,GAIA,OAFAA,EADAywE,EAAAz3J,KAIA,KAAA2qH,EAAA92H,iBACA,cAEA,KAAA82H,EAAA72H,iBACA,cAEA,KAAA62H,EAAA52H,qBACA,uBAEA,QACA,cAmLAo3H,aA/KA,SAAAnrH,GAGA,IAFAkrH,EAAAlrH,GAGA,YAGA,IAAA7D,EAAA,EAAAu7J,EAAA13J,GAEA,GAAA7D,GAAA6D,EAAAlR,WAWA,YAGA,IACAy5F,EADAD,EAAA,KAkCA,OApBA,KATAC,EAAAvoF,EAAA7D,EAAA,OAUAmsF,EAAA,IAIA/uF,KAAA,GAAAyG,EAAA7D,EAAA,aAAA6D,EAAA7D,EAAA,cAAA6D,EAAA7D,EAAA,cAAA6D,EAAA7D,EAAA,aAAA6D,EAAA7D,EAAA,SACAmsF,EAAA/uF,KAAA,EAEA+uF,EAAA/uF,MAAA,EAAAyG,EAAA7D,EAAA,SAEAmsF,EAAA9uF,IAAA8uF,EAAA/uF,IAEA,GAAAgvF,IACAD,EAAA9uF,KAAA,GAAAwG,EAAA7D,EAAA,cAAA6D,EAAA7D,EAAA,cAAA6D,EAAA7D,EAAA,cAAA6D,EAAA7D,EAAA,aAAA6D,EAAA7D,EAAA,SACAmsF,EAAA9uF,KAAA,EAEA8uF,EAAA9uF,MAAA,EAAAwG,EAAA7D,EAAA,WAIAmsF,GAuHAgjC,4BA9FA,SAAAtrH,GAQA,IAPA,IAAA7D,EAAA,EAAAu7J,EAAA13J,GACA63J,EAAA73J,EAAAjR,SAAAoN,GACA27J,EAAA,EACAC,EAAA,EACAC,GAAA,EAGQD,EAAAF,EAAA/oK,WAAA,EAA6CipK,IACrD,OAAAF,EAAAE,EAAA,IAEAD,EAAAC,EAAA,EACA,MAIA,KAAAD,EAAAD,EAAA/oK,YAGA,OAAA+oK,EAAAC,IACA,OAEA,OAAAD,EAAAC,EAAA,IACAA,GAAA,EACA,MACS,OAAAD,EAAAC,EAAA,IACTA,IACA,MAGAC,EAAA,IAAAD,EAAA,GAGA,8CAFAH,EAAA,GAAAE,EAAAE,EAAA,MAGAC,GAAA,GAKA,GACAF,UACS,IAAAD,EAAAC,MAAAD,EAAAvqK,QAETyqK,EAAAD,EAAA,EACAA,GAAA,EACA,MAEA,OAEA,OAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,IACAA,GAAA,EACA,MAKA,8CAFAH,EAAA,GAAAE,EAAAE,EAAA,MAGAC,GAAA,GAGAD,EAAAD,EAAA,EACAA,GAAA,EACA,MAEA,QAGAA,GAAA,EAiBA,OAZAD,IAAA9oK,SAAAgpK,GACAD,GAAAC,EACAA,EAAA,EAEAF,KAAA/oK,WAAA,GAGA,8CAFA6oK,EAAA,GAAAE,EAAAE,EAAA,MAGAC,GAAA,GAIAA","file":"static/js/2.49c4b2a8.chunk.js","sourcesContent":["var win;\n\nif (typeof window !== \"undefined\") {\n  win = window;\n} else if (typeof global !== \"undefined\") {\n  win = global;\n} else if (typeof self !== \"undefined\") {\n  win = self;\n} else {\n  win = {};\n}\n\nmodule.exports = win;","var topLevel = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : {};\n\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n  doccy = document;\n} else {\n  doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n  if (!doccy) {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n  }\n}\n\nmodule.exports = doccy;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","/**\n * mux.js\n *\n * Copyright (c) 2014 Brightcove\n * All rights reserved.\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function Stream() {\n  this.init = function () {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    this.on = function (type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n\n\n    this.off = function (type, listener) {\n      var index;\n\n      if (!listeners[type]) {\n        return false;\n      }\n\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n\n\n    this.trigger = function (type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n\n        length = callbacks.length;\n\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n\n\n    this.dispose = function () {\n      listeners = {};\n    };\n  };\n};\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\n\n\nStream.prototype.pipe = function (destination) {\n  this.on('data', function (data) {\n    destination.push(data);\n  });\n  this.on('done', function (flushSource) {\n    destination.flush(flushSource);\n  });\n  return destination;\n}; // Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\n\n\nStream.prototype.push = function (data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function (flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\n\nvar _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n_findBox = function findBox(data, path) {\n  var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size = toUnsigned(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n    type = parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of data\n\n\n  return results;\n};\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\n\n\nparseType = function parseType(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\n\n\ntimescale = function timescale(init) {\n  var result = {},\n      traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n  return traks.reduce(function (result, trak) {\n    var tkhd, version, index, id, mdhd;\n    tkhd = _findBox(trak, ['tkhd'])[0];\n\n    if (!tkhd) {\n      return null;\n    }\n\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n    mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n    if (!mdhd) {\n      return null;\n    }\n\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    return result;\n  }, result);\n};\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\n\n\nstartTime = function startTime(timescale, fragment) {\n  var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n  trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n  baseTimes = [].concat.apply([], trafs.map(function (traf) {\n    return _findBox(traf, ['tfhd']).map(function (tfhd) {\n      var id, scale, baseTime; // get the track id from the tfhd\n\n      id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n        var version, result;\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n        if (version === 1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n        }\n\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity; // convert base time to seconds\n\n      return baseTime / scale;\n    });\n  })); // return the minimum\n\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\n\n\ngetVideoTrackIds = function getVideoTrackIds(init) {\n  var traks = _findBox(init, ['moov', 'trak']);\n\n  var videoTrackIds = [];\n  traks.forEach(function (trak) {\n    var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n    var tkhds = _findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function (hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: _findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","function clean(s) {\n  return s.replace(/\\n\\r?\\s*/g, '');\n}\n\nmodule.exports = function tsml(sa) {\n  var s = '',\n      i = 0;\n\n  for (; i < arguments.length; i++) {\n    s += clean(sa[i]) + (arguments[i + 1] || '');\n  }\n\n  return s;\n};","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar constructorRegex = /^\\s*class\\b/;\n\nvar isES6ClassFn = function isES6ClassFunction(value) {\n  try {\n    var fnStr = fnToStr.call(value);\n    return constructorRegex.test(fnStr);\n  } catch (e) {\n    return false; // not a function\n  }\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n  try {\n    if (isES6ClassFn(value)) {\n      return false;\n    }\n\n    fnToStr.call(value);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n  if (!value) {\n    return false;\n  }\n\n  if (typeof value !== 'function' && typeof value !== 'object') {\n    return false;\n  }\n\n  if (typeof value === 'function' && !value.prototype) {\n    return true;\n  }\n\n  if (hasToStringTag) {\n    return tryFunctionObject(value);\n  }\n\n  if (isES6ClassFn(value)) {\n    return false;\n  }\n\n  var strClass = toStr.call(value);\n  return strClass === fnClass || strClass === genClass;\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar mp4 = require('./mp4-generator.js');\n\nvar frameUtils = require('./frame-utils');\n\nvar audioFrameUtils = require('./audio-frame-utils');\n\nvar trackDecodeInfo = require('./track-decode-info');\n\nvar m2ts = require('../m2ts/m2ts.js');\n\nvar AdtsStream = require('../codecs/adts.js');\n\nvar H264Stream = require('../codecs/h264').H264Stream;\n\nvar AacStream = require('../aac');\n\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData; // constants\n\n\nvar AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\nvar VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\nvar _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n/**\n * Compare two arrays (even typed) for same-ness\n */\n\n\nvar arrayEquals = function arrayEquals(a, b) {\n  var i;\n\n  if (a.length !== b.length) {\n    return false;\n  } // compare the value of each element in the array\n\n\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n\n_AudioSegmentStream = function AudioSegmentStream(track, options) {\n  var adtsFrames = [],\n      sequenceNumber = 0,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n  options = options || {};\n\n  _AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function (data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        track[prop] = data[prop];\n      });\n    } // buffer audio data until end() is called\n\n\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function (earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function (timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function () {\n    var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n    audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n\n    track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n    adtsFrames = [];\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n    sequenceNumber++;\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n    trackDecodeInfo.clearDtsInfo(track);\n    this.trigger('data', {\n      track: track,\n      boxes: boxes\n    });\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\n_AudioSegmentStream.prototype = new Stream();\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n_VideoSegmentStream = function VideoSegmentStream(track, options) {\n  var sequenceNumber = 0,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n  options = options || {};\n\n  _VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n  this.gopCache_ = [];\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n\n  this.push = function (nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    } // buffer video until flush() is called\n\n\n    nalUnits.push(nalUnit);\n  };\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n\n\n  this.flush = function () {\n    var frames, gopForFusion, gops, moof, mdat, boxes; // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n\n      nalUnits.shift();\n    } // Return early if no video data has been observed\n\n\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    } // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n\n\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    } // Trim gops to align with gopsToAlignWith\n\n\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n\n\n      trackDecodeInfo.clearDtsInfo(track);\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n\n    track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n    this.trigger('processedGopsInfo', gops.map(function (gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    })); // save all the nals in the last GOP into the gop cache\n\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    }); // Keep a maximum of 6 GOPs in the cache\n\n    this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n    nalUnits = [];\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n    moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n    sequenceNumber++;\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n    this.trigger('data', {\n      track: track,\n      boxes: boxes\n    });\n    this.resetStream_(); // Continue with the flush process now\n\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function () {\n    trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n\n    config = undefined;\n    pps = undefined;\n  }; // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n\n\n  this.getGopForFusion_ = function (nalUnit) {\n    var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n    allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n    nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      } // The distance between the end of the gop and the start of the nalUnit\n\n\n      dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n\n      if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj || nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n\n    return null;\n  }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n\n\n  this.alignGopsAtStart_ = function (gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      } // current gop starts before the current gop we want to align on. so increment gop\n      // index\n\n\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n    return alignedGops;\n  }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n\n\n  this.alignGopsAtEnd_ = function (gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function (total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, {\n      byteLength: 0,\n      duration: 0,\n      nalCount: 0\n    });\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function (newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\n_VideoSegmentStream.prototype = new Stream();\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\n\n_CoalesceStream = function CoalesceStream(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n  this.push = function (output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    } // buffer incoming id3 tags until the final flush\n\n\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    } // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n\n\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\n_CoalesceStream.prototype = new Stream();\n\n_CoalesceStream.prototype.flush = function (flushSource) {\n  var offset = 0,\n      event = {\n    captions: [],\n    captionStreams: {},\n    metadata: [],\n    info: {}\n  },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function (prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function (prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n  initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n  event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n  // and track definitions\n\n  event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n  event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  } // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n\n\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n    caption.startTime = caption.startPts;\n\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n\n    caption.startTime /= 90e3;\n    caption.endTime = caption.endPts;\n\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n\n    caption.endTime /= 90e3;\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  } // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n\n\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n    id3.cueTime = id3.pts;\n\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n\n    id3.cueTime /= 90e3;\n    event.metadata.push(id3);\n  } // We add this to every single emitted segment even though we only need\n  // it for the first\n\n\n  event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0; // Emit the built segment\n\n  this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\n\n\n_Transmuxer = function Transmuxer(options) {\n  var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n\n  _Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function () {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n    pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n    pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n    pipeline.metadataStream.on('timestamp', function (frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n    pipeline.aacStream.on('data', function (data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n      }\n    }); // Re-emit any data coming from the coalesce stream to the outside world\n\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function () {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n    pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n\n    pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n    pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n    pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n    pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n    pipeline.elementaryStream.on('data', function (data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length; // scan the tracks listed in the metadata\n\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        } // hook up the video segment stream to the first track with h264 data\n\n\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n          pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n            // When video emits timelineStartInfo data after a flush, we forward that\n            // info to the AudioSegmentStream, if it exists, because video timeline\n            // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n          pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          }); // Set up the final part of the video pipeline\n\n          pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n        }\n      }\n    }); // Re-emit any data coming from the coalesce stream to the outside world\n\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  }; // hook up the segment streams once track metadata is delivered\n\n\n  this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function (timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function (gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  }; // feed incoming data to the front of the parsing pipeline\n\n\n  this.push = function (data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n\n      hasFlushed = false;\n    }\n\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  }; // flush any buffered data\n\n\n  this.flush = function () {\n    hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n    this.transmuxPipeline_.headOfPipeline.flush();\n  }; // Caption data has to be reset when seeking outside buffered range\n\n\n  this.resetCaptions = function () {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n};\n\n_Transmuxer.prototype = new Stream();\nmodule.exports = {\n  Transmuxer: _Transmuxer,\n  VideoSegmentStream: _VideoSegmentStream,\n  AudioSegmentStream: _AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\nvar isLikelyAacData = function isLikelyAacData(data) {\n  if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n    return true;\n  }\n\n  return false;\n};\n\nvar parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n}; // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\nvar percentEncode = function percentEncode(bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n}; // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\n\n\nvar parseIso88591 = function parseIso88591(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n  var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n  var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n  return highTwo | middle | lowThree;\n};\n\nvar parseType = function parseType(header, byteIndex) {\n  if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n    return 'timed-metadata';\n  } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n    return 'audio';\n  }\n\n  return null;\n};\n\nvar parseSampleRate = function parseSampleRate(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function parseAacTimestamp(packet) {\n  var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n  frameStart = 10;\n\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  } // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n    if (frameSize < 1) {\n      return null;\n    }\n\n    frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            return size;\n          }\n\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function () {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function () {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar isFunction = require(\"is-function\");\n\nvar parseHeaders = require(\"parse-headers\");\n\nvar xtend = require(\"xtend\");\n\nmodule.exports = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = xtend(options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  if (xhr.responseType === \"document\") {\n    return xhr.responseXML;\n  }\n\n  var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n  if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n    return xhr.responseXML;\n  }\n\n  return null;\n}\n\nfunction noop() {}","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function (root) {\n  /* jshint ignore:end */\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n  var URLToolkit = {\n    // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n      opts = opts || {}; // remove any remaining space and CRLF\n\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n\n      var baseParts = URLToolkit.parseURL(baseURL);\n\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function parseURL(url) {\n      var parts = URL_REGEX.exec(url);\n\n      if (!parts) {\n        return null;\n      }\n\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function normalizePath(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function buildURLFromParts(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n  /* jshint ignore:start */\n\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = URLToolkit;else if (typeof define === 'function' && define.amd) define([], function () {\n    return URLToolkit;\n  });else if (typeof exports === 'object') exports[\"URLToolkit\"] = URLToolkit;else root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */","/*! @name mpd-parser @version 0.7.0 @license Apache-2.0 */\nimport window$1 from 'global/window';\nvar version = \"0.7.0\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\n\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\n\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\n\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments; // first segment of subsequent periods signal a discontinuity\n\n\n      playlist.segments[0].discontinuity = true;\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\n\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || 'main';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      label = playlist.attributes.lang + \" (\" + role + \")\";\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: [formatAudioPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\n\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists) {\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: [formatVttPlaylist(playlist)],\n      uri: ''\n    };\n    return a;\n  }, {});\n};\n\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  return playlist;\n};\n\nvar toM3u8 = function toM3u8(dashPlaylists) {\n  var _mediaGroups;\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: videoPlaylists,\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists);\n  }\n\n  return master;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n  // see https://tools.ietf.org/html/rfc1808\n\n  /* jshint ignore:start */\n  (function (root) {\n    /* jshint ignore:end */\n    var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n    var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n    var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n    var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n    var URLToolkit = {\n      // jshint ignore:line\n      // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n      // E.g\n      // With opts.alwaysNormalize = false (default, spec compliant)\n      // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n      // With opts.alwaysNormalize = true (not spec compliant)\n      // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n      buildAbsoluteURL: function buildAbsoluteURL(baseURL, relativeURL, opts) {\n        opts = opts || {}; // remove any remaining space and CRLF\n\n        baseURL = baseURL.trim();\n        relativeURL = relativeURL.trim();\n\n        if (!relativeURL) {\n          // 2a) If the embedded URL is entirely empty, it inherits the\n          // entire base URL (i.e., is set equal to the base URL)\n          // and we are done.\n          if (!opts.alwaysNormalize) {\n            return baseURL;\n          }\n\n          var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n\n          if (!basePartsForNormalise) {\n            throw new Error('Error trying to parse base URL.');\n          }\n\n          basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n          return URLToolkit.buildURLFromParts(basePartsForNormalise);\n        }\n\n        var relativeParts = URLToolkit.parseURL(relativeURL);\n\n        if (!relativeParts) {\n          throw new Error('Error trying to parse relative URL.');\n        }\n\n        if (relativeParts.scheme) {\n          // 2b) If the embedded URL starts with a scheme name, it is\n          // interpreted as an absolute URL and we are done.\n          if (!opts.alwaysNormalize) {\n            return relativeURL;\n          }\n\n          relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n          return URLToolkit.buildURLFromParts(relativeParts);\n        }\n\n        var baseParts = URLToolkit.parseURL(baseURL);\n\n        if (!baseParts) {\n          throw new Error('Error trying to parse base URL.');\n        }\n\n        if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n          // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n          // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n          var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n          baseParts.netLoc = pathParts[1];\n          baseParts.path = pathParts[2];\n        }\n\n        if (baseParts.netLoc && !baseParts.path) {\n          baseParts.path = '/';\n        }\n\n        var builtParts = {\n          // 2c) Otherwise, the embedded URL inherits the scheme of\n          // the base URL.\n          scheme: baseParts.scheme,\n          netLoc: relativeParts.netLoc,\n          path: null,\n          params: relativeParts.params,\n          query: relativeParts.query,\n          fragment: relativeParts.fragment\n        };\n\n        if (!relativeParts.netLoc) {\n          // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n          // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n          // (if any) of the base URL.\n          builtParts.netLoc = baseParts.netLoc; // 4) If the embedded URL path is preceded by a slash \"/\", the\n          // path is not relative and we skip to Step 7.\n\n          if (relativeParts.path[0] !== '/') {\n            if (!relativeParts.path) {\n              // 5) If the embedded URL path is empty (and not preceded by a\n              // slash), then the embedded URL inherits the base URL path\n              builtParts.path = baseParts.path; // 5a) if the embedded URL's <params> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <params> of the base\n              // URL (if any) and\n\n              if (!relativeParts.params) {\n                builtParts.params = baseParts.params; // 5b) if the embedded URL's <query> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <query> of the base\n                // URL (if any) and we skip to step 7.\n\n                if (!relativeParts.query) {\n                  builtParts.query = baseParts.query;\n                }\n              }\n            } else {\n              // 6) The last segment of the base URL's path (anything\n              // following the rightmost slash \"/\", or the entire path if no\n              // slash is present) is removed and the embedded URL's path is\n              // appended in its place.\n              var baseURLPath = baseParts.path;\n              var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n              builtParts.path = URLToolkit.normalizePath(newPath);\n            }\n          }\n        }\n\n        if (builtParts.path === null) {\n          builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n        }\n\n        return URLToolkit.buildURLFromParts(builtParts);\n      },\n      parseURL: function parseURL(url) {\n        var parts = URL_REGEX.exec(url);\n\n        if (!parts) {\n          return null;\n        }\n\n        return {\n          scheme: parts[1] || '',\n          netLoc: parts[2] || '',\n          path: parts[3] || '',\n          params: parts[4] || '',\n          query: parts[5] || '',\n          fragment: parts[6] || ''\n        };\n      },\n      normalizePath: function normalizePath(path) {\n        // The following operations are\n        // then applied, in order, to the new path:\n        // 6a) All occurrences of \"./\", where \".\" is a complete path\n        // segment, are removed.\n        // 6b) If the path ends with \".\" as a complete path segment,\n        // that \".\" is removed.\n        path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, ''); // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n        // complete path segment not equal to \"..\", are removed.\n        // Removal of these path segments is performed iteratively,\n        // removing the leftmost matching pattern on each iteration,\n        // until no matching pattern remains.\n        // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n        // complete path segment not equal to \"..\", that\n        // \"<segment>/..\" is removed.\n\n        while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n\n\n        return path.split('').reverse().join('');\n      },\n      buildURLFromParts: function buildURLFromParts(parts) {\n        return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n      }\n    };\n    /* jshint ignore:start */\n\n    module.exports = URLToolkit;\n  })(commonjsGlobal);\n  /* jshint ignore:end */\n\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls, follows\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range;\n  var init = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range) {\n    var ranges = range.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10);\n    init.byterange = {\n      length: endRange - startRange,\n      offset: startRange\n    };\n  }\n\n  return init;\n};\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\n\n\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    range: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  if (!segmentsFn) {\n    return {\n      attributes: attributes\n    };\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  return {\n    attributes: segmentAttributes,\n    segments: segments\n  };\n};\n\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\n\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\n\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\n\nvar parse = function parse(manifestString, options) {\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)));\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };","var classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i = void 0;\n    var length = void 0;\n    var args = void 0;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * @file m3u8/line-stream.js\n */\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\n\nvar LineStream = function (_Stream) {\n  inherits(LineStream, _Stream);\n\n  function LineStream() {\n    classCallCheck(this, LineStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {String} data the text to process\n   */\n\n\n  LineStream.prototype.push = function push(data) {\n    var nextNewline = void 0;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n/**\n * @file m3u8/parse-stream.js\n */\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the seperator\n *\n * @param {String} attributes the attibute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr = void 0;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream = function (_Stream) {\n  inherits(ParseStream, _Stream);\n\n  function ParseStream() {\n    classCallCheck(this, ParseStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.customParsers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {String} line a single line of an M3U8 file to parse\n   */\n\n\n  ParseStream.prototype.push = function push(line) {\n    var match = void 0;\n    var event = void 0; // strip whitespace\n\n    line = line.replace(/^[\\u0000\\s]+|[\\u0000\\s]+$/g, '');\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    }\n\n    for (var i = 0; i < this.customParsers.length; i++) {\n      if (this.customParsers[i].call(this, line)) {\n        return;\n      }\n    } // Comments\n\n\n    if (line.indexOf('#EXT') !== 0) {\n      this.trigger('data', {\n        type: 'comment',\n        text: line.slice(1)\n      });\n      return;\n    } // strip off any carriage returns here so the regex matching\n    // doesn't have to account for them.\n\n\n    line = line.replace('\\r', ''); // Tags\n\n    match = /^#EXTM3U/.exec(line);\n\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'm3u'\n      });\n      return;\n    }\n\n    match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'inf'\n      };\n\n      if (match[1]) {\n        event.duration = parseFloat(match[1]);\n      }\n\n      if (match[2]) {\n        event.title = match[2];\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'targetduration'\n      };\n\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'totalduration'\n      };\n\n      if (match[1]) {\n        event.duration = parseInt(match[1], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'version'\n      };\n\n      if (match[1]) {\n        event.version = parseInt(match[1], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media-sequence'\n      };\n\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'discontinuity-sequence'\n      };\n\n      if (match[1]) {\n        event.number = parseInt(match[1], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'playlist-type'\n      };\n\n      if (match[1]) {\n        event.playlistType = match[1];\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'byterange'\n      };\n\n      if (match[1]) {\n        event.length = parseInt(match[1], 10);\n      }\n\n      if (match[2]) {\n        event.offset = parseInt(match[2], 10);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'allow-cache'\n      };\n\n      if (match[1]) {\n        event.allowed = !/NO/.test(match[1]);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-MAP:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'map'\n      };\n\n      if (match[1]) {\n        var attributes = parseAttributes(match[1]);\n\n        if (attributes.URI) {\n          event.uri = attributes.URI;\n        }\n\n        if (attributes.BYTERANGE) {\n          var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n              length = _attributes$BYTERANGE[0],\n              offset = _attributes$BYTERANGE[1];\n\n          event.byterange = {};\n\n          if (length) {\n            event.byterange.length = parseInt(length, 10);\n          }\n\n          if (offset) {\n            event.byterange.offset = parseInt(offset, 10);\n          }\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'stream-inf'\n      };\n\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.RESOLUTION) {\n          var split = event.attributes.RESOLUTION.split('x');\n          var resolution = {};\n\n          if (split[0]) {\n            resolution.width = parseInt(split[0], 10);\n          }\n\n          if (split[1]) {\n            resolution.height = parseInt(split[1], 10);\n          }\n\n          event.attributes.RESOLUTION = resolution;\n        }\n\n        if (event.attributes.BANDWIDTH) {\n          event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n        }\n\n        if (event.attributes['PROGRAM-ID']) {\n          event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-MEDIA:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'media'\n      };\n\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-ENDLIST/.exec(line);\n\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'endlist'\n      });\n      return;\n    }\n\n    match = /^#EXT-X-DISCONTINUITY/.exec(line);\n\n    if (match) {\n      this.trigger('data', {\n        type: 'tag',\n        tagType: 'discontinuity'\n      });\n      return;\n    }\n\n    match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'program-date-time'\n      };\n\n      if (match[1]) {\n        event.dateTimeString = match[1];\n        event.dateTimeObject = new Date(match[1]);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-KEY:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'key'\n      };\n\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n        if (event.attributes.IV) {\n          if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n            event.attributes.IV = event.attributes.IV.substring(2);\n          }\n\n          event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n          event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n          event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n          event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n          event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n          event.attributes.IV = new Uint32Array(event.attributes.IV);\n        }\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-START:?(.*)$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'start'\n      };\n\n      if (match[1]) {\n        event.attributes = parseAttributes(match[1]);\n        event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n        event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out-cont'\n      };\n\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-out'\n      };\n\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n\n      this.trigger('data', event);\n      return;\n    }\n\n    match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(line);\n\n    if (match) {\n      event = {\n        type: 'tag',\n        tagType: 'cue-in'\n      };\n\n      if (match[1]) {\n        event.data = match[1];\n      } else {\n        event.data = '';\n      }\n\n      this.trigger('data', event);\n      return;\n    } // unknown tag type\n\n\n    this.trigger('data', {\n      type: 'tag',\n      data: line.slice(4)\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  ParseStream.prototype.addParser = function addParser(_ref) {\n    var _this2 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n\n  return ParseStream;\n}(Stream);\n/**\n * @file m3u8/parser.js\n */\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nvar Parser = function (_Stream) {\n  inherits(Parser, _Stream);\n\n  function Parser() {\n    classCallCheck(this, Parser);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this));\n\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _this;\n    /* eslint-enable consistent-this */\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap = void 0; // if specified, the active decryption key\n\n    var _key = void 0;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup = void 0;\n      var rendition = void 0;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                'default': /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition['default']) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {String} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  Parser.prototype.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  Parser.prototype.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  Parser.prototype.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n\n  return Parser;\n}(Stream);\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\n\nexport { LineStream, ParseStream, Parser };","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\nvar PADDING = void 0;\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\n\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n  return result;\n} // pre-define the padding values\n\n\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\n\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\nexport { pad, unpad, version as VERSION };","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\n\n\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0; // Compute double and third tables\n\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x; // Compute MixColumns\n\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  } // Compactify. Considerable speedup on Firefox.\n\n\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n\n  return tables;\n};\n\nvar aesTables = null;\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n\n    if (!aesTables) {\n      aesTables = precompute();\n    } // then make a copy of that object for use\n\n\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey]; // schedule encryption keys\n\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1]; // apply sbox\n\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    } // schedule decryption keys\n\n\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0; // key.length === 2 ?\n\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1]; // load up the tables\n\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;\n      b = b2;\n      c = c2;\n    } // Last round.\n\n\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;\n      a = b;\n      b = c;\n      c = d;\n      d = a2;\n    }\n  };\n\n  return AES;\n}();\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\n\n\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n/**\n * @file async-stream.js\n */\n\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\n\n\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\n\n\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n  var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0; // iteration variable\n\n  var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n    this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    } // invoke the done() callback when everything is finished\n\n\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n  /**\n   * @private\n   */\n\n\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\n\nexport { decrypt, Decrypter, AsyncStream };","/**\n * @license\n * Video.js 7.4.1 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport vtt from 'videojs-vtt.js';\nimport tsml from 'tsml';\nimport xhr from 'xhr';\nimport URLToolkit from 'url-toolkit';\nimport window$1 from 'global/window';\nimport { Parser } from 'm3u8-parser';\nimport document from 'global/document';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\nvar version = \"7.4.1\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n/**\n * @file log.js\n * @module log\n */\n\n\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\n\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n/**\n * @file computed-style.js\n * @module computed-style\n */\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\nvar Dom =\n/*#__PURE__*/\nObject.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\n\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + new Date().getTime();\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events =\n/*#__PURE__*/\nObject.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one\n});\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\n\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n/**\n * @file fn.js\n * @module fn\n */\n\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {Number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\n\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n/**\n * @file src/js/event-target.js\n */\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this; // only set up EVENT_MAP if it'll be used\n\n\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map.delete(type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP.delete(_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this; // Support providing the `stateUpdates` state as a function.\n\n\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\n\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n/**\n * @file merge-options.js\n * @module merge-options\n */\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Make a copy of prototype.options_ to protect against overriding defaults\n\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  };\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  _proto.player = function player() {\n    return this.player_;\n  };\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  _proto.options = function options(obj) {\n    log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  _proto.el = function el() {\n    return this.el_;\n  };\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  _proto.id = function id() {\n    return this.id_;\n  };\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  _proto.name = function name() {\n    return this.name_;\n  };\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  _proto.children = function children() {\n    return this.children_;\n  };\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  };\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  };\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  };\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  _proto.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  _proto.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  _proto.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  _proto.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  _proto.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  _proto.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  _proto.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  _proto.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  _proto.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n  /**\n   * Set the focus to this component\n   */\n\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  };\n  /**\n   * Remove the focus from this component\n   */\n\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  };\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = new Date().getTime(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this; // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n\n\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  };\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  };\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  };\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  };\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this; // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  };\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  };\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  };\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n/**\n * @file browser.js\n * @module browser\n */\n\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\nvar browser =\n/*#__PURE__*/\nObject.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\n\nvar FullscreenApi = {}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\n\n\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\n\n\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n\n\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      } // Hide controls and note if they were enabled.\n\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  };\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  };\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  };\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  };\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  };\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n\n\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n\n\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n\n\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    } // make sure only 1 track is enabled\n    // sorted from last index to first index\n\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n  _proto.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', bind(this, function () {\n      this.queueTrigger('change');\n    }));\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\n\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\n\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\n\n\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n\n\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @returns  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url =\n/*#__PURE__*/\nObject.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings.default;\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_assertThisInitialized(_this)));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n\n\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n\n\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n\n\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this.default = track.default;\n    Object.defineProperties(_assertThisInitialized(_assertThisInitialized(_this)), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_assertThisInitialized(_this))\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    } // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n\n\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  };\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  };\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  };\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  };\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  };\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  _proto.reset = function reset() {};\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  };\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  };\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  };\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  _proto.setPoster = function setPoster() {};\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  _proto.playsinline = function playsinline() {};\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  _proto.setPlaysinline = function setPlaysinline() {};\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {};\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {};\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  };\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  };\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n/**\n * @file middleware.js\n * @module middleware\n */\n\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\n\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n\n\n  function MediaLoader(player, options, ready) {\n    var _this; // MediaLoader has no element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl$$1(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  };\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  _proto.handleClick = function handleClick(event) {};\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  _proto.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  };\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  };\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n\n\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_assertThisInitialized(_this)), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  };\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    this.clearDisplay(); // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  _proto.updateForTrack = function updateForTrack(track) {\n    if (typeof window$1.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n\n  _proto.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  };\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  };\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  };\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n\n\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  };\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  };\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\n\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  };\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  _proto.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  _proto.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  };\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  };\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  };\n  /**\n   * Dispose of the element and stop tracking\n   */\n\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n\n\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  };\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  };\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  };\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    } // Add the slider element class to all sub classes\n\n\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  };\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {};\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  };\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  };\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  _proto.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack(); // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  };\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    textContent(this.el_, content);\n  };\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this; // If there is an existing rAF ID, cancel it so we don't over-queue.\n\n\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  };\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\nvar STEP_SECONDS = 5; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function (e) {\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive() && e.type !== 'ended') {\n        return;\n      }\n\n      _this2.clearInterval(_this2.updateInterval);\n    });\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    }\n\n    if (liveTracker && liveTracker.seekableEnd() === Infinity) {\n      this.disable();\n    } else {\n      this.enable();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  _proto.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  };\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\n\nSeekBar.prototype.playerEvent = 'timeupdate';\nComponent.registerComponent('SeekBar', SeekBar);\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  };\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  };\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  };\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\n\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_assertThisInitialized(_this)), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  };\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n\n\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n\n    return _this;\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('blur', bind(this, this.handleBlur));\n    component.on(['tap', 'click'], bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton(); // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  };\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward(); // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  };\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  };\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  _proto.createItems = function createItems() {};\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  };\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  };\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  };\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  _proto.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  _proto.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (event.which !== 9) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.el_.focus();\n      } // Enter (13) or Up (38) key or Down (40) key press the 'button'\n\n    } else if (event.which === 13 || event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (event.which !== 9) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  };\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n\n\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  };\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    } // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n\n\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n\n\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  };\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  };\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n\n\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_assertThisInitialized(_this)), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  };\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n\n\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    } // if there's only one audio track, there no point in showing it\n\n\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  };\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n\n\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  };\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  };\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n\n\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_assertThisInitialized(_this)), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config.default : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  };\n  /**\n   * Update display of text track settings\n   */\n\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n\n\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_assertThisInitialized(_this)));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this; // LiveTracker does not need an element\n\n\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange);\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  }; // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  };\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  };\n  /**\n   * start tracking live playback\n   */\n\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_);\n    this.one(this.player_, 'play', this.handlePlay); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  };\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  };\n  /**\n   * stop tracking live playback\n   */\n\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  };\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  };\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  };\n  /**\n   * Get the live time window\n   */\n\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  };\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  };\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  };\n  /**\n   * get what we expect the live current time to be\n   */\n\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  };\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  };\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  };\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n\n\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  };\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this; // If there is no behavioral change don't add/remove listeners\n\n\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  };\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  };\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  };\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  };\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  };\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  _proto.duration = function duration() {\n    var _this5 = this; // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n\n\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  };\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  };\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  };\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  };\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  };\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  };\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n} // on the player when they happen\n\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n\n\n  function Player(tag, options, ready) {\n    var _this; // Make sure tag ID exists\n\n\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // create logger\n\n    _this.log = createLogger$1(_this.id_); // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    } // Cache for video property values.\n\n\n    _this.cache_ = {}; // Set poster\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Set default values for lastVolume\n\n    _this.cache_.lastVolume = 1; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls'); // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Set default value for lastPlaybackRate\n\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_assertThisInitialized(_this)), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      var plugins = options.plugins;\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error(\"plugin \\\"\" + name$$1 + \"\\\" does not exist\");\n        }\n      }, _assertThisInitialized(_assertThisInitialized(_this)));\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n    // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_assertThisInitialized(_this)); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  };\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  _proto.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  };\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  };\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  };\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  };\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  };\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  };\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this; // Pause and remove current playback technology\n\n\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this2),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this2[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this3 = this; // Save the current text tracks so that we can reuse the same text tracks with the next tech\n\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  };\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  };\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  };\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  };\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise.catch) {\n        return;\n      }\n\n      return playPromise.catch(function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise.catch) {\n        promise.catch(function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise.catch) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(function (e) {\n      _this4.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  };\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  };\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this; // only update the source cache when the source\n    // was not updated using the player api\n\n\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this5.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this5.techGet('currentSrc');\n\n            _this5.lastSource_.tech = techSrc;\n\n            _this5.updateSourceCaches_(techSrc);\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  };\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  };\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this6.currentTime()) {\n        _this6.removeClass('vjs-waiting');\n\n        _this6.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  };\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  };\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  };\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  };\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  };\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  };\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  };\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  };\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  };\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      } else {\n        this.requestFullscreen();\n      }\n    }\n  };\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  _proto.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  };\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  };\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  };\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  };\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  };\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  };\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n\n\n  _proto.play = function play() {\n    var _this7 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this7.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  };\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n\n\n  _proto.play_ = function play_(callback) {\n    var _this8 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    } // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n\n\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    } // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n\n\n    if (!this.isReady_) {\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this8.playWaitingForReady_ = false;\n        callback(_this8.play());\n      }); // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      callback(this.techGet_('play'));\n      return; // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n      this.playOnLoadstart_ = function () {\n        _this8.playOnLoadstart_ = null;\n        callback(_this8.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  };\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  };\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }; //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n\n\n  _proto.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  };\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  };\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  };\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  };\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  _proto.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]); // If cancelling fullscreen, remove event listener.\n\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n\n\n        this.trigger('fullscreenchange');\n      }));\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  };\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  };\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey)); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  };\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  };\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this9 = this; // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n\n\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1]; // Check if the current tech is defined before continuing\n\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  _proto.src = function src(source) {\n    var _this10 = this; // getter usage\n\n\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this10.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this10.cache_.sources = sources;\n\n      _this10.updateSourceCaches_(middlewareSource);\n\n      var err = _this10.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this10.src(sources.slice(1));\n        }\n\n        _this10.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this10.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this10.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this10.tech_);\n    });\n  };\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  _proto.src_ = function src_(source) {\n    var _this11 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this11.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  };\n  /**\n   * Begin loading the src data.\n   */\n\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  };\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n\n\n  _proto.reset = function reset() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  };\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  };\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  };\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  };\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  };\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  };\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  };\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  };\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  };\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp); // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  };\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  };\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  _proto.createModal = function createModal(content, options) {\n    var _this12 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this12.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  };\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  };\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  };\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  };\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  };\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  };\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  };\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  };\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  _proto.trigger = function trigger$$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  _proto.handleStateChanged = function handleStateChanged(e) {};\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  };\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\n\n\nvar _inherits$1 = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits$1(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style$1 = $('.vjs-styles-defaults');\n\n  if (!style$1) {\n    style$1 = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style$1, head.firstChild);\n    }\n\n    setTextContent(style$1, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name$$1 + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name$$1, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = xhr;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n/**\n * @videojs/http-streaming\n * @version 1.5.1\n * @copyright 2018 Brightcove, Inc\n * @license Apache-2.0\n */\n\n/**\n * @file resolve-url.js\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal and the media\n  // sequence number is unchanged\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls, withCredentials) {\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr$$1, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr$$1.status,\n        message: 'HLS playlist request error at URL: ' + url,\n        responseText: xhr$$1.responseText,\n        code: xhr$$1.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr$$1, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser();\n      parser.push(xhr$$1.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been\n      // specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (resolveUrl(this.master.uri, playlist.uri) === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.master.uri, playlist.uri),\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser();\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n        _this5.master.playlists[0].resolvedUri = _this5.srcUrl; // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n\n        _this5.master.playlists[0].attributes = _this5.master.playlists[0].attributes || {};\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr$$1 = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr$$1;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n/**\n * @file time.js\n */\n\n/**\n * Checks whether a given time is within a segment based on its start time\n * and duration. For playerTime, the requested time is in seconds, for\n * streamTime, the time is a Date object.\n *\n * @param {Date|Number} requestedTime Time to check is within a segment\n * @param {\"stream\" | \"player\"} type Whether passing in a playerTime or streamTime\n * @param {Date|Number} segmentStart The start time of the segment\n * @param {Number} duration Segment duration in seconds\n */\n\nvar timeWithinSegment = function timeWithinSegment(requestedTime, type, segmentStart, duration) {\n  var endTime = void 0;\n\n  if (type === 'stream') {\n    endTime = new Date(duration * 1000 + segmentStart.getTime());\n    var requestedTimeString = requestedTime.toISOString();\n    var segmentTimeString = segmentStart.toISOString();\n    var endTimeString = endTime.toISOString();\n    return segmentTimeString <= requestedTimeString && requestedTimeString <= endTimeString;\n  } else if (type === 'player') {\n    endTime = duration + segmentStart;\n    return segmentStart <= requestedTime && requestedTime <= endTime;\n  }\n};\n/**\n * Finds a segment that contains the time requested. This might be an estimate or\n * an accurate match.\n *\n * @param {Date|Number} time The streamTime or playerTime to find a matching segment for\n * @param {\"stream\" | \"player\"} type Either the playerTime or streamTime\n * @param {Object} playlist A playlist object\n * @return {Object} match\n * @return {Object} match.segment The matched segment from the playlist\n * @return {Date|Number} match.estimatedStart The estimated start time of the segment\n * @return {\"accurate\" | \"estimate\"} match.type Whether the match is estimated or accurate\n */\n\n\nvar findSegmentForTime = function findSegmentForTime(time, type, playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  if (type !== 'player' && type !== 'stream') {\n    return null;\n  }\n\n  var manifestTime = 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n    var estimatedEnd = manifestTime + segment.duration;\n    var segmentStart = void 0;\n    var estimatedStart = void 0;\n\n    if (type === 'player') {\n      segmentStart = segment.start;\n      estimatedStart = manifestTime;\n    } else {\n      // we can rely on the program date time being accurate\n      segmentStart = segment.dateTimeObject;\n      estimatedStart = segment.dateTimeObject;\n    }\n\n    var timeWithinSegmentEnd = typeof segment.start !== 'undefined' && typeof segment.end !== 'undefined' && timeWithinSegment(time, type, segmentStart, segment.end - segment.start);\n    var timeWithinSegmentDuration = timeWithinSegment(time, type, estimatedStart, segment.duration);\n\n    if (timeWithinSegmentEnd) {\n      return {\n        segment: segment,\n        estimatedStart: estimatedStart,\n        type: 'accurate'\n      };\n    } else if (timeWithinSegmentDuration) {\n      return {\n        segment: segment,\n        estimatedStart: estimatedStart,\n        type: 'estimate'\n      };\n    }\n\n    manifestTime = estimatedEnd;\n  }\n\n  return null;\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  // - segment.start and segment.end only come\n  //    from syncController\n  return findSegmentForTime(time, 'player', playlist);\n};\n/**\n * Finds a segment that contains the stream time give as an ISO-8601 string.\n *\n * @param {String} streamTime The ISO-8601 streamTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForStreamTime = function findSegmentForStreamTime(streamTime, playlist) {\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(streamTime);\n  } catch (e) {\n    // TODO something here?\n    return null;\n  } // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n\n\n  return findSegmentForTime(dateTimeObject, 'stream', playlist);\n};\n/**\n * Gives the offset of the comparisonTimestamp from the streamTime timestamp in seconds.\n * If the offset returned is positive, the streamTime occurs before the comparisonTimestamp.\n * If the offset is negative, the streamTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} streamTime The streamTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, streamTime) {\n  var segmentDateTime = void 0;\n  var streamDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    streamDateTime = new Date(streamTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var streamTimeEpoch = streamDateTime.getTime();\n  return (streamTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the streamTime  of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, streamTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} streamTime\n * @returns {Number} streamTime.mediaSeconds The streamTime in seconds\n * @returns {String} streamTime.programDateTime The streamTime as an ISO-8601 String\n */\n\n\nvar getStreamTime = function getStreamTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getStreamTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getStreamTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid streamTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate streamTime could not be determined. Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var streamTime = {\n    mediaSeconds: time\n  };\n\n  if (matchedSegment.segment.dateTimeObject) {\n    // TODO this is currently the time of the beginning of the\n    // segment. This still needs to be modified to be offset\n    // by the time requested.\n    streamTime.programDateTime = matchedSegment.segment.dateTimeObject.toISOString();\n  }\n\n  return callback(null, streamTime);\n};\n/**\n * Seeks in the player to a time that matches the given streamTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.streamTime A streamTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToStreamTime = function seekToStreamTime(_ref2) {\n  var streamTime = _ref2.streamTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToStreamTime: callback must be provided');\n  }\n\n  if (typeof streamTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToStreamTime: streamTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForStreamTime(streamTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: streamTime + ' was not found in the stream'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: streamTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    return seekToStreamTime({\n      streamTime: streamTime,\n      playlist: playlist,\n      retryCount: retryCount - 1,\n      seekTo: seekTo,\n      pauseAfterSeek: pauseAfterSeek,\n      tech: tech,\n      callback: callback\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, streamTime);\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset;\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2014 Brightcove\n     * All rights reserved.\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream; // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2015 Brightcove\n     * All rights reserved.\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    };\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, discard the\n        // data; we don't want jumbled captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) 2016 Brightcove\n     * All rights reserved.\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames, gopForFusion, gops, moof, mdat, boxes; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        })); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n              return ' ' + ('00' + byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n// We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type if updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_); // TODO: are video tracks the only ones with text tracks?\n\n        addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n      }\n    }\n  });\n  return update;\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls, withCredentials, masterPlaylistLoader) {\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_();\n    }); // initialize the loader state\n\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist;\n      _this.state = 'HAVE_NOTHING';\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.masterPlaylistLoader_ = masterPlaylistLoader;\n    _this.state = 'HAVE_METADATA';\n    _this.started = true; // we only should have one playlist so select it\n\n    _this.media(srcUrlOrPlaylist); // trigger async to mimic behavior of HLS, where it must request a playlist\n\n\n    window$1.setTimeout(function () {\n      _this.trigger('loadedmetadata');\n    }, 0);\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri;\n      this.state = 'HAVE_METADATA'; // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.media_ = playlist;\n      this.refreshMedia_(); // trigger media change if the active media has been updated\n\n      if (startingState !== 'HAVE_MASTER') {\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this2 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this2.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this3 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this3.request = null;\n\n        if (error) {\n          _this3.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this3.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this3.state === 'HAVE_NOTHING') {\n            _this3.started = false;\n          }\n\n          return _this3.trigger('error');\n        }\n\n        _this3.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this3.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this3.masterLoaded_ = Date.now();\n        }\n\n        _this3.syncClientServerClock_(_this3.onClientServerClockSync_.bind(_this3));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this4 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this4.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this4.clientOffset_ = _this4.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this4.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this4.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this5 = this;\n\n      this.master = this.parseMasterXml();\n      this.state = 'HAVE_MASTER';\n      this.trigger('loadedplaylist');\n\n      if (!this.media_) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      } // trigger loadedmetadata to resolve setup of media groups\n      // trigger async to mimic behavior of HLS, where it must request a playlist\n\n\n      window$1.setTimeout(function () {\n        _this5.trigger('loadedmetadata');\n      }, 0); // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n      if (this.master.minimumUpdatePeriod) {\n        window$1.setTimeout(function () {\n          _this5.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this6 = this;\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this6.request = null;\n\n        if (error) {\n          _this6.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this6.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this6.state === 'HAVE_NOTHING') {\n            _this6.started = false;\n          }\n\n          return _this6.trigger('error');\n        }\n\n        _this6.masterXml_ = req.responseText;\n\n        var newMaster = _this6.parseMasterXml();\n\n        _this6.master = updateMaster$1(_this6.master, newMaster);\n        window$1.setTimeout(function () {\n          _this6.trigger('minimumUpdatePeriod');\n        }, _this6.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_() {\n      var _this7 = this;\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[this.media_.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this7.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(bytes, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        _this4.sourceBuffer_.appendBuffer(bytes);\n      }, done);\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {\n        this.sourceBuffer_.abort();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr$$1) {\n    xhr$$1.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (!captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler); // this is an encrypted segment\n  // incrementally decrypt the segment\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: segment.key.bytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, segment.key.bytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr$$1, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr$$1(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr$$1(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr$$1(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // Fmp4 CaptionParser\n\n    _this.captionParser_ = new CaptionParser();\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n      this.captionParser_.reset();\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = oldPlaylist ? oldPlaylist.id : null;\n      this.logger_('playlist update [' + oldId + ' => ' + newPlaylist.id + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      this.captionParser_.clearAllCaptions();\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      var isEndOfStream = detectEndOfStream(this.playlist_, this.mediaSource_, segmentInfo.mediaIndex);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if either of\n      // the following conditions are true:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_ || segmentInfo.startOfSegment !== null && segmentInfo.startOfSegment < this.sourceUpdater_.timestampOffset()) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = {\n          resolvedUri: segment.key.resolvedUri,\n          iv: iv\n        };\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        this.captionParser_.clearParsedCaptions();\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer(initSegment.bytes, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer(segmentInfo.bytes, this.handleUpdateEnd_.bind(this));\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      var isEndOfStream = detectEndOfStream(segmentInfo.playlist, this.mediaSource_, segmentInfo.mediaIndex + 1);\n\n      if (isEndOfStream) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (char) {\n  return char.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = function loadHandler() {\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', function () {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        });\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      return {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties.default ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group.default;\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\n\nvar byGroupId = function byGroupId(type, groupId) {\n  return function (playlist) {\n    return playlist.attributes[type] === groupId;\n  };\n};\n\nvar byResolvedUri = function byResolvedUri(resolvedUri) {\n  return function (playlist) {\n    return playlist.resolvedUri === resolvedUri;\n  };\n};\n\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        _settings$master = settings.master,\n        mediaGroups = _settings$master.mediaGroups,\n        playlists = _settings$master.playlists,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      var groupPlaylists = playlists.filter(byGroupId(type, groupId));\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // List of playlists for the current group ID that have a matching uri with\n        // this alternate audio variant\n\n        var matchingPlaylists = groupPlaylists.filter(byResolvedUri(properties.resolvedUri));\n\n        if (matchingPlaylists.length) {\n          // If there is a playlist that has the same uri as this audio variant, assume\n          // that the playlist is audio only. We delete the resolvedUri property here\n          // to prevent a playlist loader from being created so that we don't have\n          // both the main and audio segment loaders loading the same audio segments\n          // from the same playlist.\n          delete properties.resolvedUri;\n        }\n\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        withCredentials = settings.requestOptions.withCredentials,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, withCredentials);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, withCredentials, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group.default;\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: _this.withCredentials,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.withCredentials) : new PlaylistLoader(url, _this.hls_, _this.withCredentials);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        _this2.trigger('selectedinitialmedia');\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = _this2.masterPlaylistLoader_.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (isEndOfStream) {\n        this.mediaSource.endOfStream();\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n\n      if (isFinalRendition) {\n        // Never blacklisting this playlist because it's final rendition\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        _this6.mediaSource.duration = newDuration;\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var seekTo = void 0;\n\n      if (seeking && this.afterSeekableWindow_(seekable, currentTime)) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (seeking && this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      if (currentTime > seekable.end(seekable.length - 1) + SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.5.1\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.seeking() && this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToStreamTime',\n    value: function convertToStreamTime(time, callback) {\n      return getStreamTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToStreamTime',\n    value: function seekToStreamTime$$1(streamTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToStreamTime({\n        streamTime: streamTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","'use strict';\n\nvar keys = require('object-keys');\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function isFunction(fn) {\n  return typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function arePropertyDescriptorsSupported() {\n  var obj = {};\n\n  try {\n    origDefineProperty(obj, 'x', {\n      enumerable: false,\n      value: obj\n    }); // eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\n    for (var _ in obj) {\n      // jscs:ignore disallowUnusedVariables\n      return false;\n    }\n\n    return obj.x === obj;\n  } catch (e) {\n    /* this is IE 8. */\n    return false;\n  }\n};\n\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function defineProperty(object, name, value, predicate) {\n  if (name in object && (!isFunction(predicate) || !predicate())) {\n    return;\n  }\n\n  if (supportsDescriptors) {\n    origDefineProperty(object, name, {\n      configurable: true,\n      enumerable: false,\n      value: value,\n      writable: true\n    });\n  } else {\n    object[name] = value;\n  }\n};\n\nvar defineProperties = function defineProperties(object, map) {\n  var predicates = arguments.length > 2 ? arguments[2] : {};\n  var props = keys(map);\n\n  if (hasSymbols) {\n    props = concat.call(props, Object.getOwnPropertySymbols(map));\n  }\n\n  for (var i = 0; i < props.length; i += 1) {\n    defineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n  }\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\nmodule.exports = defineProperties;","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n  var str = toStr.call(value);\n  var isArgs = str === '[object Arguments]';\n\n  if (!isArgs) {\n    isArgs = str !== '[object Array]' && value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';\n  }\n\n  return isArgs;\n};","'use strict';\n\nvar bind = require('function-bind');\n\nvar ES = require('es-abstract/es5');\n\nvar replace = bind.call(Function.call, String.prototype.replace);\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n\nmodule.exports = function trim() {\n  var S = ES.ToString(ES.CheckObjectCoercible(this));\n  return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};","'use strict';\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor ? function () {\n  return Object.getOwnPropertyDescriptor(arguments, 'callee').get;\n}() : function () {\n  throw new TypeError();\n};\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) {\n  return x.__proto__;\n}; // eslint-disable-line no-proto\n\n\nvar generator; // = function * () {};\n\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\n\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\n\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\nvar INTRINSICS = {\n  '$ %Array%': Array,\n  '$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n  '$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n  '$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n  '$ %ArrayPrototype%': Array.prototype,\n  '$ %ArrayProto_entries%': Array.prototype.entries,\n  '$ %ArrayProto_forEach%': Array.prototype.forEach,\n  '$ %ArrayProto_keys%': Array.prototype.keys,\n  '$ %ArrayProto_values%': Array.prototype.values,\n  '$ %AsyncFromSyncIteratorPrototype%': undefined,\n  '$ %AsyncFunction%': asyncFunction,\n  '$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n  '$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n  '$ %AsyncGeneratorFunction%': asyncGenFunction,\n  '$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n  '$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n  '$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n  '$ %Boolean%': Boolean,\n  '$ %BooleanPrototype%': Boolean.prototype,\n  '$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n  '$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n  '$ %Date%': Date,\n  '$ %DatePrototype%': Date.prototype,\n  '$ %decodeURI%': decodeURI,\n  '$ %decodeURIComponent%': decodeURIComponent,\n  '$ %encodeURI%': encodeURI,\n  '$ %encodeURIComponent%': encodeURIComponent,\n  '$ %Error%': Error,\n  '$ %ErrorPrototype%': Error.prototype,\n  '$ %eval%': eval,\n  // eslint-disable-line no-eval\n  '$ %EvalError%': EvalError,\n  '$ %EvalErrorPrototype%': EvalError.prototype,\n  '$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n  '$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n  '$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n  '$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n  '$ %Function%': Function,\n  '$ %FunctionPrototype%': Function.prototype,\n  '$ %Generator%': generator ? getProto(generator()) : undefined,\n  '$ %GeneratorFunction%': generatorFunction,\n  '$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n  '$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n  '$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n  '$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n  '$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n  '$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n  '$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n  '$ %isFinite%': isFinite,\n  '$ %isNaN%': isNaN,\n  '$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n  '$ %JSON%': JSON,\n  '$ %JSONParse%': JSON.parse,\n  '$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n  '$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n  '$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n  '$ %Math%': Math,\n  '$ %Number%': Number,\n  '$ %NumberPrototype%': Number.prototype,\n  '$ %Object%': Object,\n  '$ %ObjectPrototype%': Object.prototype,\n  '$ %ObjProto_toString%': Object.prototype.toString,\n  '$ %ObjProto_valueOf%': Object.prototype.valueOf,\n  '$ %parseFloat%': parseFloat,\n  '$ %parseInt%': parseInt,\n  '$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n  '$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n  '$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n  '$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n  '$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n  '$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n  '$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n  '$ %RangeError%': RangeError,\n  '$ %RangeErrorPrototype%': RangeError.prototype,\n  '$ %ReferenceError%': ReferenceError,\n  '$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n  '$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n  '$ %RegExp%': RegExp,\n  '$ %RegExpPrototype%': RegExp.prototype,\n  '$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n  '$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n  '$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n  '$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n  '$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n  '$ %String%': String,\n  '$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n  '$ %StringPrototype%': String.prototype,\n  '$ %Symbol%': hasSymbols ? Symbol : undefined,\n  '$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n  '$ %SyntaxError%': SyntaxError,\n  '$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n  '$ %ThrowTypeError%': ThrowTypeError,\n  '$ %TypedArray%': TypedArray,\n  '$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n  '$ %TypeError%': TypeError,\n  '$ %TypeErrorPrototype%': TypeError.prototype,\n  '$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n  '$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n  '$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n  '$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n  '$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n  '$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n  '$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n  '$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n  '$ %URIError%': URIError,\n  '$ %URIErrorPrototype%': URIError.prototype,\n  '$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n  '$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n  '$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n  '$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n  if (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n    throw new TypeError('\"allowMissing\" argument must be a boolean');\n  }\n\n  var key = '$ ' + name;\n\n  if (!(key in INTRINSICS)) {\n    throw new SyntaxError('intrinsic ' + name + ' does not exist!');\n  } // istanbul ignore if // hopefully this is impossible to test :-)\n\n\n  if (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n    throw new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n  }\n\n  return INTRINSICS[key];\n};","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = \"\\u200B\";\n\nmodule.exports = function getPolyfill() {\n  if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n    return String.prototype.trim;\n  }\n\n  return implementation;\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n(function () {\n  var i;\n  types = {\n    avc1: [],\n    // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [],\n    // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n  AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // pre_defined\n  0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // pre_defined\n  0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x01, // entry_count\n  0x00, 0x00, 0x00, 0x0c, // entry_size\n  0x75, 0x72, 0x6c, 0x20, // 'url' type\n  0x00, // version 0\n  0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, // balance, 0 means centered\n  0x00, 0x00 // reserved\n  ]);\n  STCO = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x00, // sample_size\n  0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([0x00, // version\n  0x00, 0x00, 0x01, // flags\n  0x00, 0x00, // graphicsmode\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n  ]);\n})();\n\nbox = function box(type) {\n  var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length; // calculate the total size we need to allocate\n\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4); // copy the payload into the result\n\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n\n  return result;\n};\n\ndinf = function dinf() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function esds(track) {\n  return box(types.esds, new Uint8Array([0x00, // version\n  0x00, 0x00, 0x00, // flags\n  // ES_Descriptor\n  0x03, // tag, ES_DescrTag\n  0x19, // length\n  0x00, 0x00, // ES_ID\n  0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n  // DecoderConfigDescriptor\n  0x04, // tag, DecoderConfigDescrTag\n  0x11, // length\n  0x40, // object type\n  0x15, // streamType\n  0x00, 0x06, 0x00, // bufferSizeDB\n  0x00, 0x00, 0xda, 0xc0, // maxBitrate\n  0x00, 0x00, 0xda, 0xc0, // avgBitrate\n  // DecoderSpecificInfo\n  0x05, // tag, DecoderSpecificInfoTag\n  0x02, // length\n  // ISO/IEC 14496-3, AudioSpecificConfig\n  // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n  track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function ftyp() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function hdlr(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\n\nmdat = function mdat(data) {\n  return box(types.mdat, data);\n};\n\nmdhd = function mdhd(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x02, // creation_time\n  0x00, 0x00, 0x00, 0x03, // modification_time\n  0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n  track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n  0x55, 0xc4, // 'und' language (undetermined)\n  0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n\n  if (track.samplerate) {\n    result[12] = track.samplerate >>> 24 & 0xFF;\n    result[13] = track.samplerate >>> 16 & 0xFF;\n    result[14] = track.samplerate >>> 8 & 0xFF;\n    result[15] = track.samplerate & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\n\nmdia = function mdia(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\n\nmfhd = function mfhd(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n  (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n  ]));\n};\n\nminf = function minf(track) {\n  return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n};\n\nmoof = function moof(sequenceNumber, tracks) {\n  var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n\n  return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\n\n\nmoov = function moov(tracks) {\n  var i = tracks.length,\n      boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\n\nmvex = function mvex(tracks) {\n  var i = tracks.length,\n      boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n\n  return box.apply(null, [types.mvex].concat(boxes));\n};\n\nmvhd = function mvhd(duration) {\n  var bytes = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  0x00, 0x00, 0x00, 0x01, // creation_time\n  0x00, 0x00, 0x00, 0x02, // modification_time\n  0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n  (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n  0x00, 0x01, 0x00, 0x00, // 1.0 rate\n  0x01, 0x00, // 1.0 volume\n  0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n  0xff, 0xff, 0xff, 0xff // next_track_ID\n  ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function sdtp(track) {\n  var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n  // write the sample table\n\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n    bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n  }\n\n  return box(types.sdtp, bytes);\n};\n\nstbl = function stbl(track) {\n  return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n};\n\n(function () {\n  var videoSample, audioSample;\n\n  stsd = function stsd(track) {\n    return box(types.stsd, new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function videoSample(track) {\n    var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i; // assemble the SPSs\n\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    } // assemble the PPSs\n\n\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push(pps[i].byteLength & 0xFF);\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // data_reference_index\n    0x00, 0x00, // pre_defined\n    0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n    (track.width & 0xff00) >> 8, track.width & 0xff, // width\n    (track.height & 0xff00) >> 8, track.height & 0xff, // height\n    0x00, 0x48, 0x00, 0x00, // horizresolution\n    0x00, 0x48, 0x00, 0x00, // vertresolution\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // frame_count\n    0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n    0x00, 0x18, // depth = 24\n    0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n    track.profileIdc, // AVCProfileIndication\n    track.profileCompatibility, // profile_compatibility\n    track.levelIdc, // AVCLevelIndication\n    0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n    box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n    0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n    0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n    );\n  };\n\n  audioSample = function audioSample(track) {\n    return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, // data_reference_index\n    // AudioSampleEntry, ISO/IEC 14496-12\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n    (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n    0x00, 0x00, // pre_defined\n    0x00, 0x00, // reserved\n    (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n    // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n})();\n\ntkhd = function tkhd(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x07, // flags\n  0x00, 0x00, 0x00, 0x00, // creation_time\n  0x00, 0x00, 0x00, 0x00, // modification_time\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x00, // reserved\n  (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n  0x00, 0x00, // layer\n  0x00, 0x00, // alternate_group\n  0x01, 0x00, // non-audio track volume\n  0x00, 0x00, // reserved\n  0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n  (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n  (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n  ]);\n  return box(types.tkhd, result);\n};\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\n\n\ntraf = function traf(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x3a, // flags\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x01, // sample_description_index\n  0x00, 0x00, 0x00, 0x00, // default_sample_duration\n  0x00, 0x00, 0x00, 0x00, // default_sample_size\n  0x00, 0x00, 0x00, 0x00 // default_sample_flags\n  ]));\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n  0x00, 0x00, 0x00, // flags\n  // baseMediaDecodeTime\n  upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n\n  dataOffset = 32 + // tfhd\n  20 + // tfdt\n  8 + // traf header\n  16 + // mfhd\n  8 + // moof header\n  8; // mdat header\n  // audio tracks require less metadata\n\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n  } // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n\n\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n  return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n};\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\n\n\ntrak = function trak(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak, tkhd(track), mdia(track));\n};\n\ntrex = function trex(track) {\n  var result = new Uint8Array([0x00, // version 0\n  0x00, 0x00, 0x00, // flags\n  (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n  0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n  0x00, 0x00, 0x00, 0x00, // default_sample_duration\n  0x00, 0x00, 0x00, 0x00, // default_sample_size\n  0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]); // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function () {\n  var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n  trunHeader = function trunHeader(samples, offset) {\n    var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [0x00, // version 0\n    0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n    (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n    (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function videoTrun(track, offset) {\n    var bytes, samples, sample, i;\n    samples = track.samples || [];\n    offset += 8 + 12 + 16 * samples.length;\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n      (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n      sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n      (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function audioTrun(track, offset) {\n    var bytes, samples, sample, i;\n    samples = track.samples || [];\n    offset += 8 + 12 + 8 * samples.length;\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n      (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function trun(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n})();\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function initSegment(tracks) {\n    var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n'use strict'; // -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\n\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function CaptionStream() {\n  CaptionStream.prototype.init.call(this);\n  this.captionPackets_ = [];\n  this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n  new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n  new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n  new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n  this.reset(); // forward data and done events from CCs to this CaptionStream\n\n  this.ccStreams_.forEach(function (cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n};\n\nCaptionStream.prototype = new Stream();\n\nCaptionStream.prototype.push = function (event) {\n  var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  } // parse the sei\n\n\n  sei = cea708Parser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  } // parse out the user data payload\n\n\n  userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n  if (!userData) {\n    return;\n  } // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n\n\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n    this.numSameDts_--;\n\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n\n    return;\n  } // parse out CC data packets and save them for later\n\n\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function () {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function (cc) {\n      cc.flush();\n    }, this);\n    return;\n  } // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n\n\n  this.captionPackets_.forEach(function (elem, idx) {\n    elem.presortIndex = idx;\n  }); // sort caption byte-pairs based on their PTS values\n\n  this.captionPackets_.sort(function (a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n\n    return a.pts - b.pts;\n  });\n  this.captionPackets_.forEach(function (packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    } // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n\n  }, this);\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function (cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function () {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function (ccStream) {\n    ccStream.reset();\n  });\n};\n\nCaptionStream.prototype.dispatchCea608Packet = function (packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, discard the\n    // data; we don't want jumbled captions\n    return;\n  }\n\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function (packet) {\n  return (packet.ccData & 0x7800) === 0x1000;\n};\n\nCaptionStream.prototype.setsChannel2Active = function (packet) {\n  return (packet.ccData & 0x7800) === 0x1800;\n}; // ----------------------\n// Session to Application\n// ----------------------\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\n\n\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,\n  // á\n  0x5c: 0xe9,\n  // é\n  0x5e: 0xed,\n  // í\n  0x5f: 0xf3,\n  // ó\n  0x60: 0xfa,\n  // ú\n  0x7b: 0xe7,\n  // ç\n  0x7c: 0xf7,\n  // ÷\n  0x7d: 0xd1,\n  // Ñ\n  0x7e: 0xf1,\n  // ñ\n  0x7f: 0x2588,\n  // █\n  0x0130: 0xae,\n  // ®\n  0x0131: 0xb0,\n  // °\n  0x0132: 0xbd,\n  // ½\n  0x0133: 0xbf,\n  // ¿\n  0x0134: 0x2122,\n  // ™\n  0x0135: 0xa2,\n  // ¢\n  0x0136: 0xa3,\n  // £\n  0x0137: 0x266a,\n  // ♪\n  0x0138: 0xe0,\n  // à\n  0x0139: 0xa0,\n  //\n  0x013a: 0xe8,\n  // è\n  0x013b: 0xe2,\n  // â\n  0x013c: 0xea,\n  // ê\n  0x013d: 0xee,\n  // î\n  0x013e: 0xf4,\n  // ô\n  0x013f: 0xfb,\n  // û\n  0x0220: 0xc1,\n  // Á\n  0x0221: 0xc9,\n  // É\n  0x0222: 0xd3,\n  // Ó\n  0x0223: 0xda,\n  // Ú\n  0x0224: 0xdc,\n  // Ü\n  0x0225: 0xfc,\n  // ü\n  0x0226: 0x2018,\n  // ‘\n  0x0227: 0xa1,\n  // ¡\n  0x0228: 0x2a,\n  // *\n  0x0229: 0x27,\n  // '\n  0x022a: 0x2014,\n  // —\n  0x022b: 0xa9,\n  // ©\n  0x022c: 0x2120,\n  // ℠\n  0x022d: 0x2022,\n  // •\n  0x022e: 0x201c,\n  // “\n  0x022f: 0x201d,\n  // ”\n  0x0230: 0xc0,\n  // À\n  0x0231: 0xc2,\n  // Â\n  0x0232: 0xc7,\n  // Ç\n  0x0233: 0xc8,\n  // È\n  0x0234: 0xca,\n  // Ê\n  0x0235: 0xcb,\n  // Ë\n  0x0236: 0xeb,\n  // ë\n  0x0237: 0xce,\n  // Î\n  0x0238: 0xcf,\n  // Ï\n  0x0239: 0xef,\n  // ï\n  0x023a: 0xd4,\n  // Ô\n  0x023b: 0xd9,\n  // Ù\n  0x023c: 0xf9,\n  // ù\n  0x023d: 0xdb,\n  // Û\n  0x023e: 0xab,\n  // «\n  0x023f: 0xbb,\n  // »\n  0x0320: 0xc3,\n  // Ã\n  0x0321: 0xe3,\n  // ã\n  0x0322: 0xcd,\n  // Í\n  0x0323: 0xcc,\n  // Ì\n  0x0324: 0xec,\n  // ì\n  0x0325: 0xd2,\n  // Ò\n  0x0326: 0xf2,\n  // ò\n  0x0327: 0xd5,\n  // Õ\n  0x0328: 0xf5,\n  // õ\n  0x0329: 0x7b,\n  // {\n  0x032a: 0x7d,\n  // }\n  0x032b: 0x5c,\n  // \\\n  0x032c: 0x5e,\n  // ^\n  0x032d: 0x5f,\n  // _\n  0x032e: 0x7c,\n  // |\n  0x032f: 0x7e,\n  // ~\n  0x0330: 0xc4,\n  // Ä\n  0x0331: 0xe4,\n  // ä\n  0x0332: 0xd6,\n  // Ö\n  0x0333: 0xf6,\n  // ö\n  0x0334: 0xdf,\n  // ß\n  0x0335: 0xa5,\n  // ¥\n  0x0336: 0xa4,\n  // ¤\n  0x0337: 0x2502,\n  // │\n  0x0338: 0xc5,\n  // Å\n  0x0339: 0xe5,\n  // å\n  0x033a: 0xd8,\n  // Ø\n  0x033b: 0xf8,\n  // ø\n  0x033c: 0x250c,\n  // ┌\n  0x033d: 0x2510,\n  // ┐\n  0x033e: 0x2514,\n  // └\n  0x033f: 0x2518 // ┘\n\n};\n\nvar getCharFromCode = function getCharFromCode(code) {\n  if (code === null) {\n    return '';\n  }\n\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n}; // the index of the last row in a CEA-608 display buffer\n\n\nvar BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\n\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\n\nvar createDisplayBuffer = function createDisplayBuffer() {\n  var result = [],\n      i = BOTTOM_ROW + 1;\n\n  while (i--) {\n    result.push('');\n  }\n\n  return result;\n};\n\nvar Cea608Stream = function Cea608Stream(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n  this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n  this.setConstants();\n  this.reset();\n\n  this.push = function (packet) {\n    var data, swap, char0, char1, text; // remove the parity bits\n\n    data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    } // Store control codes\n\n\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n      this.flushDisplayed(packet.pts); // flip memory\n\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n      this.startPts_ = packet.pts;\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts; // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++; // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      } // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n\n\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++; // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      } // Detect offset control codes and adjust cursor\n\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      } // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n\n\n      if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      } // We have a normal character in char0, and possibly one in char1\n\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n    } // finish data processing\n\n  };\n};\n\nCea608Stream.prototype = new Stream(); // Trigger a cue point that captures the current state of the\n// display buffer\n\nCea608Stream.prototype.flushDisplayed = function (pts) {\n  var content = this.displayed_ // remove spaces from the start and end of the string\n  .map(function (row) {\n    try {\n      return row.trim();\n    } catch (e) {\n      // Ordinarily, this shouldn't happen. However, caption\n      // parsing errors should not throw exceptions and\n      // break playback.\n      // eslint-disable-next-line no-console\n      console.error('Skipping malformed caption.');\n      return '';\n    }\n  }) // combine all text rows to display in one cue\n  .join('\\n') // and remove blank rows from the start and end, but not the middle\n  .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n/**\n * Zero out the data, used for startup and on seek\n */\n\n\nCea608Stream.prototype.reset = function () {\n  this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n  this.formatting_ = [];\n};\n/**\n * Sets up control code and related constants for this instance\n */\n\n\nCea608Stream.prototype.setConstants = function () {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_ = 0x10;\n    this.EXT_ = 0x11;\n    this.CONTROL_ = (0x14 | this.field_) << 8;\n    this.OFFSET_ = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_ = 0x18;\n    this.EXT_ = 0x19;\n    this.CONTROL_ = (0x1c | this.field_) << 8;\n    this.OFFSET_ = 0x1f;\n  } // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n\n\n  this.PADDING_ = 0x0000; // Pop-on Mode\n\n  this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n  this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n  this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n  this.BACKSPACE_ = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\n\n\nCea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n  return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n};\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\n\n\nCea608Stream.prototype.isExtCharacter = function (char0, char1) {\n  return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n};\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\n\n\nCea608Stream.prototype.isMidRowCode = function (char0, char1) {\n  return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n};\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\n\n\nCea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n  return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n};\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\n\n\nCea608Stream.prototype.isPAC = function (char0, char1) {\n  return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n};\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\n\n\nCea608Stream.prototype.isColorPAC = function (char1) {\n  return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n};\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\n\n\nCea608Stream.prototype.isNormalChar = function (char) {\n  return char >= 0x20 && char <= 0x7f;\n};\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\n\n\nCea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n}; // Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\n\n\nCea608Stream.prototype.addFormatting = function (pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function (text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n}; // Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\n\n\nCea608Stream.prototype.clearFormatting = function (pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n\n  var text = this.formatting_.reverse().reduce(function (text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n}; // Mode Implementations\n\n\nCea608Stream.prototype.popOn = function (pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function (pts, text) {\n  var baseRow = this.displayed_[this.row_];\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function () {\n  var i; // clear out inactive rows\n\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  } // shift displayed rows up\n\n\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  } // clear out the bottom row\n\n\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function (pts, text) {\n  var baseRow = this.displayed_[this.row_];\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n}; // exports\n\n\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n'use strict'; // Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\n\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\n\nvar parseSei = function parseSei(bytes) {\n  var i = 0,\n      result = {\n    payloadType: -1,\n    payloadSize: 0\n  },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    } // Parse payload type\n\n\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n\n    payloadType += bytes[i++]; // Parse payload size\n\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n\n    payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    } // skip the payload and parse the next message\n\n\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n}; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\nvar parseUserData = function parseUserData(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n  if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n    return null;\n  } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n  if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n    return null;\n  } // finally, user_data_type_code should be 0x03 for caption data\n\n\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  } // return the user_data_type_structure and strip the trailing\n  // marker bits\n\n\n  return sei.payload.subarray(8, sei.payload.length - 1);\n}; // see CEA-708-D, section 4.4\n\n\nvar parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n  var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n  if (!(userData[0] & 0x40)) {\n    return results;\n  } // parse out the cc_data_1 and cc_data_2 fields\n\n\n  count = userData[0] & 0x1f;\n\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    }; // capture cc data when cc_valid is 1\n\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n      results.push(data);\n    }\n  }\n\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n  var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n  while (i < length - 2) {\n    if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n      emulationPreventionBytesPositions.push(i + 2);\n      i += 2;\n    } else {\n      i++;\n    }\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (emulationPreventionBytesPositions.length === 0) {\n    return data;\n  } // Create a new array to hold the NAL unit data\n\n\n  newLength = length - emulationPreventionBytesPositions.length;\n  newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === emulationPreventionBytesPositions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      emulationPreventionBytesPositions.shift();\n    }\n\n    newData[i] = data[sourceIndex];\n  }\n\n  return newData;\n}; // exports\n\n\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function handleRollover(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n\n\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += direction * MAX_TS;\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function TimestampRolloverStream(type) {\n  var lastDTS, referenceDTS;\n  TimestampRolloverStream.prototype.init.call(this);\n  this.type_ = type;\n\n  this.push = function (data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n    lastDTS = data.dts;\n    this.trigger('data', data);\n  };\n\n  this.flush = function () {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function () {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n};\n\nTimestampRolloverStream.prototype = new Stream();\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","module.exports = SafeParseTuple;\n\nfunction SafeParseTuple(obj, reviver) {\n  var json;\n  var error = null;\n\n  try {\n    json = JSON.parse(obj, reviver);\n  } catch (err) {\n    error = err;\n  }\n\n  return [error, json];\n}","module.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\n\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\n\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\nvar PES_TIMESCALE = 90000,\n    MP2T_PACKET_LENGTH = 188,\n    // bytes\nSYNC_BYTE = 0x47;\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\n\nvar parsePsi_ = function parsePsi_(bytes, pmt) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n\n          break;\n\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n\n          break;\n\n        default:\n          break;\n      } // Found the pat and pmt, we can stop walking the segment\n\n\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  }\n};\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\n\n\nvar parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n  var endLoop = false; // Start walking from start of segment to get first audio packet\n\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  } // Start walking from end of segment to get last audio packet\n\n\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex--;\n    endIndex--;\n  }\n};\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\n\n\nvar parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n  var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n  var endLoop = false;\n  var currentFrame = {\n    data: [],\n    size: 0\n  }; // Start walking from start of segment to get first video packet\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    result.firstKeyFrame = probe.ts.parsePesTime(frame);\n                    result.firstKeyFrame.type = 'video';\n                  }\n\n                  currentFrame.size = 0;\n                }\n              }\n\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex++;\n    endIndex++;\n  } // Start walking from end of segment to get last video packet\n\n\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n          if (pesType === 'video' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n\n            if (parsed) {\n              parsed.type = 'video';\n              result.video.push(parsed);\n              endLoop = true;\n            }\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    } // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n\n\n    startIndex--;\n    endIndex--;\n  }\n};\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\n\n\nvar adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n\n    segmentInfo.audio.forEach(function (info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n\n    segmentInfo.video.forEach(function (info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n/**\n * inspects the aac data stream for start and end time information\n */\n\n\nvar inspectAac_ = function inspectAac_(bytes) {\n  var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n\n        byteIndex += frameSize;\n        break;\n\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n\n      default:\n        byteIndex++;\n        break;\n    }\n\n    if (endLoop) {\n      return null;\n    }\n  }\n\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n  var result = {\n    audio: [{\n      type: 'audio',\n      dts: timestamp,\n      pts: timestamp\n    }, {\n      type: 'audio',\n      dts: timestamp + audioCount * 1024 * audioTimescale,\n      pts: timestamp + audioCount * 1024 * audioTimescale\n    }]\n  };\n  return result;\n};\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\n\n\nvar inspectTs_ = function inspectTs_(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n  var result = {};\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n\n          break;\n\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  return result;\n};\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\n\n\nvar inspect = function inspect(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || !result.audio && !result.video) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};","/** @license React v16.8.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    aa = n ? Symbol.for(\"react.memo\") : 60115,\n    ba = n ? Symbol.for(\"react.lazy\") : 60116,\n    A = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction ca(a, b, d, c, e, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [d, c, e, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction B(a) {\n  for (var b = arguments.length - 1, d = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    d += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", d);\n}\n\nvar C = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    D = {};\n\nfunction E(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nE.prototype.isReactComponent = {};\n\nE.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? B(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction F() {}\n\nF.prototype = E.prototype;\n\nfunction G(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nvar H = G.prototype = new F();\nH.constructor = G;\nk(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = {\n  current: null\n},\n    J = {\n  current: null\n},\n    K = Object.prototype.hasOwnProperty,\n    L = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction M(a, b, d) {\n  var c = void 0,\n      e = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) e.children = d;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    e.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === e[c] && (e[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: e,\n    _owner: J.current\n  };\n}\n\nfunction da(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction N(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar O = /\\/+/g,\n    P = [];\n\nfunction Q(a, b, d, c) {\n  if (P.length) {\n    var e = P.pop();\n    e.result = a;\n    e.keyPrefix = b;\n    e.func = d;\n    e.context = c;\n    e.count = 0;\n    return e;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: d,\n    context: c,\n    count: 0\n  };\n}\n\nfunction R(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > P.length && P.push(a);\n}\n\nfunction S(a, b, d, c) {\n  var e = typeof a;\n  if (\"undefined\" === e || \"boolean\" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return d(c, a, \"\" === b ? \".\" + T(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var f = b + T(e, h);\n    g += S(e, f, d, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = A && a[A] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {\n    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);\n  } else \"object\" === e && (d = \"\" + a, B(\"31\", \"[object Object]\" === d ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : d, \"\"));\n  return g;\n}\n\nfunction U(a, b, d) {\n  return null == a ? 0 : S(a, \"\", b, d);\n}\n\nfunction T(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ea(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction fa(a, b, d) {\n  var c = a.result,\n      e = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? V(a, c, d, function (a) {\n    return a;\n  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(O, \"$&/\") + \"/\") + d)), c.push(a));\n}\n\nfunction V(a, b, d, c, e) {\n  var g = \"\";\n  null != d && (g = (\"\" + d).replace(O, \"$&/\") + \"/\");\n  b = Q(b, g, c, e);\n  U(a, fa, b);\n  R(b);\n}\n\nfunction W() {\n  var a = I.current;\n  null === a ? B(\"307\") : void 0;\n  return a;\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, d) {\n      if (null == a) return a;\n      var c = [];\n      V(a, c, null, b, d);\n      return c;\n    },\n    forEach: function forEach(a, b, d) {\n      if (null == a) return a;\n      b = Q(null, null, b, d);\n      U(a, ea, b);\n      R(b);\n    },\n    count: function count(a) {\n      return U(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      V(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      N(a) ? void 0 : B(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: E,\n  PureComponent: G,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: ba,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: aa,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  useCallback: function useCallback(a, b) {\n    return W().useCallback(a, b);\n  },\n  useContext: function useContext(a, b) {\n    return W().useContext(a, b);\n  },\n  useEffect: function useEffect(a, b) {\n    return W().useEffect(a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, d) {\n    return W().useImperativeHandle(a, b, d);\n  },\n  useDebugValue: function useDebugValue() {},\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return W().useLayoutEffect(a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    return W().useMemo(a, b);\n  },\n  useReducer: function useReducer(a, b, d) {\n    return W().useReducer(a, b, d);\n  },\n  useRef: function useRef(a) {\n    return W().useRef(a);\n  },\n  useState: function useState(a) {\n    return W().useState(a);\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: M,\n  cloneElement: function cloneElement(a, b, d) {\n    null === a || void 0 === a ? B(\"267\", a) : void 0;\n    var c = void 0,\n        e = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = J.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) e.children = d;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      e.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: e,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = M.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: N,\n  version: \"16.8.2\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentDispatcher: I,\n    ReactCurrentOwner: J,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.8.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    n = require(\"object-assign\"),\n    r = require(\"scheduler\");\n\nfunction ba(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [c, d, e, f, g, h],\n          k = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[k++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction x(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ba(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : x(\"227\");\n\nfunction ca(a, b, c, d, e, f, g, h, l) {\n  var k = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, k);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar da = !1,\n    ea = null,\n    fa = !1,\n    ha = null,\n    ia = {\n  onError: function onError(a) {\n    da = !0;\n    ea = a;\n  }\n};\n\nfunction ja(a, b, c, d, e, f, g, h, l) {\n  da = !1;\n  ea = null;\n  ca.apply(ia, arguments);\n}\n\nfunction ka(a, b, c, d, e, f, g, h, l) {\n  ja.apply(this, arguments);\n\n  if (da) {\n    if (da) {\n      var k = ea;\n      da = !1;\n      ea = null;\n    } else x(\"198\"), k = void 0;\n\n    fa || (fa = !0, ha = k);\n  }\n}\n\nvar la = null,\n    ma = {};\n\nfunction na() {\n  if (la) for (var a in ma) {\n    var b = ma[a],\n        c = la.indexOf(a);\n    -1 < c ? void 0 : x(\"96\", a);\n\n    if (!oa[c]) {\n      b.extractEvents ? void 0 : x(\"97\", a);\n      oa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        pa.hasOwnProperty(h) ? x(\"99\", h) : void 0;\n        pa[h] = f;\n        var l = f.phasedRegistrationNames;\n\n        if (l) {\n          for (e in l) {\n            l.hasOwnProperty(e) && qa(l[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (qa(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : x(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction qa(a, b, c) {\n  ra[a] ? x(\"100\", a) : void 0;\n  ra[a] = b;\n  sa[a] = b.eventTypes[c].dependencies;\n}\n\nvar oa = [],\n    pa = {},\n    ra = {},\n    sa = {},\n    ta = null,\n    ua = null,\n    va = null;\n\nfunction wa(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = va(c);\n  ka(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction xa(a, b) {\n  null == b ? x(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction ya(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar za = null;\n\nfunction Aa(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      wa(a, b[d], c[d]);\n    } else b && wa(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Ba = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    la ? x(\"101\") : void 0;\n    la = Array.prototype.slice.call(a);\n    na();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        ma.hasOwnProperty(c) && ma[c] === d || (ma[c] ? x(\"102\", c) : void 0, ma[c] = d, b = !0);\n      }\n    }\n\n    b && na();\n  }\n};\n\nfunction Ca(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = ta(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? x(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Da(a) {\n  null !== a && (za = xa(za, a));\n  a = za;\n  za = null;\n  if (a && (ya(a, Aa), za ? x(\"95\") : void 0, fa)) throw a = ha, fa = !1, ha = null, a;\n}\n\nvar Ea = Math.random().toString(36).slice(2),\n    Fa = \"__reactInternalInstance$\" + Ea,\n    Ga = \"__reactEventHandlers$\" + Ea;\n\nfunction Ha(a) {\n  if (a[Fa]) return a[Fa];\n\n  for (; !a[Fa];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Fa];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ia(a) {\n  a = a[Fa];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction Ja(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  x(\"33\");\n}\n\nfunction Ka(a) {\n  return a[Ga] || null;\n}\n\nfunction La(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Ma(a, b, c) {\n  if (b = Ca(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a);\n}\n\nfunction Na(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = La(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Ma(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Ma(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Oa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Ca(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a));\n}\n\nfunction Pa(a) {\n  a && a.dispatchConfig.registrationName && Oa(a._targetInst, null, a);\n}\n\nfunction Qa(a) {\n  ya(a, Na);\n}\n\nvar Ra = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Sa(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Ta = {\n  animationend: Sa(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Sa(\"Animation\", \"AnimationIteration\"),\n  animationstart: Sa(\"Animation\", \"AnimationStart\"),\n  transitionend: Sa(\"Transition\", \"TransitionEnd\")\n},\n    Ua = {},\n    Va = {};\nRa && (Va = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Ta.animationend.animation, delete Ta.animationiteration.animation, delete Ta.animationstart.animation), \"TransitionEvent\" in window || delete Ta.transitionend.transition);\n\nfunction Wa(a) {\n  if (Ua[a]) return Ua[a];\n  if (!Ta[a]) return a;\n  var b = Ta[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Va) return Ua[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Xa = Wa(\"animationend\"),\n    Ya = Wa(\"animationiteration\"),\n    Za = Wa(\"animationstart\"),\n    $a = Wa(\"transitionend\"),\n    ab = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    bb = null,\n    cb = null,\n    db = null;\n\nfunction eb() {\n  if (db) return db;\n  var a,\n      b = cb,\n      c = b.length,\n      d,\n      e = \"value\" in bb ? bb.value : bb.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return db = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction fb() {\n  return !0;\n}\n\nfunction gb() {\n  return !1;\n}\n\nfunction y(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? fb : gb;\n  this.isPropagationStopped = gb;\n  return this;\n}\n\nn(y.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = fb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = fb);\n  },\n  persist: function persist() {\n    this.isPersistent = fb;\n  },\n  isPersistent: gb,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = gb;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\ny.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\ny.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  n(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = n({}, d.Interface, a);\n  c.extend = d.extend;\n  hb(c);\n  return c;\n};\n\nhb(y);\n\nfunction ib(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction jb(a) {\n  a instanceof this ? void 0 : x(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction hb(a) {\n  a.eventPool = [];\n  a.getPooled = ib;\n  a.release = jb;\n}\n\nvar kb = y.extend({\n  data: null\n}),\n    lb = y.extend({\n  data: null\n}),\n    mb = [9, 13, 27, 32],\n    nb = Ra && \"CompositionEvent\" in window,\n    ob = null;\nRa && \"documentMode\" in document && (ob = document.documentMode);\nvar pb = Ra && \"TextEvent\" in window && !ob,\n    qb = Ra && (!nb || ob && 8 < ob && 11 >= ob),\n    rb = String.fromCharCode(32),\n    sb = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    tb = !1;\n\nfunction ub(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== mb.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction vb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar wb = !1;\n\nfunction xb(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return vb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      tb = !0;\n      return rb;\n\n    case \"textInput\":\n      return a = b.data, a === rb && tb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction yb(a, b) {\n  if (wb) return \"compositionend\" === a || !nb && ub(a, b) ? (a = eb(), db = cb = bb = null, wb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return qb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar zb = {\n  eventTypes: sb,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (nb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = sb.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = sb.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = sb.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else wb ? ub(a, c) && (e = sb.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = sb.compositionStart);\n    e ? (qb && \"ko\" !== c.locale && (wb || e !== sb.compositionStart ? e === sb.compositionEnd && wb && (f = eb()) : (bb = d, cb = \"value\" in bb ? bb.value : bb.textContent, wb = !0)), e = kb.getPooled(e, b, c, d), f ? e.data = f : (f = vb(c), null !== f && (e.data = f)), Qa(e), f = e) : f = null;\n    (a = pb ? xb(a, c) : yb(a, c)) ? (b = lb.getPooled(sb.beforeInput, b, c, d), b.data = a, Qa(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Ab = null,\n    Bb = null,\n    Cb = null;\n\nfunction Db(a) {\n  if (a = ua(a)) {\n    \"function\" !== typeof Ab ? x(\"280\") : void 0;\n    var b = ta(a.stateNode);\n    Ab(a.stateNode, a.type, b);\n  }\n}\n\nfunction Eb(a) {\n  Bb ? Cb ? Cb.push(a) : Cb = [a] : Bb = a;\n}\n\nfunction Fb() {\n  if (Bb) {\n    var a = Bb,\n        b = Cb;\n    Cb = Bb = null;\n    Db(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Db(b[a]);\n    }\n  }\n}\n\nfunction Gb(a, b) {\n  return a(b);\n}\n\nfunction Hb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Ib() {}\n\nvar Jb = !1;\n\nfunction Kb(a, b) {\n  if (Jb) return a(b);\n  Jb = !0;\n\n  try {\n    return Gb(a, b);\n  } finally {\n    if (Jb = !1, null !== Bb || null !== Cb) Ib(), Fb();\n  }\n}\n\nvar Lb = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Mb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Lb[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Nb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Ob(a) {\n  if (!Ra) return !1;\n  a = \"on\" + a;\n  var b = a in document;\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Pb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Qb(a) {\n  var b = Pb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Rb(a) {\n  a._valueTracker || (a._valueTracker = Qb(a));\n}\n\nfunction Sb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Pb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Tb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nTb.hasOwnProperty(\"ReactCurrentDispatcher\") || (Tb.ReactCurrentDispatcher = {\n  current: null\n});\nvar Ub = /^(.*)[\\\\\\/]/,\n    z = \"function\" === typeof Symbol && Symbol.for,\n    Vb = z ? Symbol.for(\"react.element\") : 60103,\n    Wb = z ? Symbol.for(\"react.portal\") : 60106,\n    Xb = z ? Symbol.for(\"react.fragment\") : 60107,\n    Yb = z ? Symbol.for(\"react.strict_mode\") : 60108,\n    Zb = z ? Symbol.for(\"react.profiler\") : 60114,\n    $b = z ? Symbol.for(\"react.provider\") : 60109,\n    ac = z ? Symbol.for(\"react.context\") : 60110,\n    bc = z ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    cc = z ? Symbol.for(\"react.forward_ref\") : 60112,\n    dc = z ? Symbol.for(\"react.suspense\") : 60113,\n    ec = z ? Symbol.for(\"react.memo\") : 60115,\n    fc = z ? Symbol.for(\"react.lazy\") : 60116,\n    gc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction hc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = gc && a[gc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction ic(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case bc:\n      return \"ConcurrentMode\";\n\n    case Xb:\n      return \"Fragment\";\n\n    case Wb:\n      return \"Portal\";\n\n    case Zb:\n      return \"Profiler\";\n\n    case Yb:\n      return \"StrictMode\";\n\n    case dc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ac:\n      return \"Context.Consumer\";\n\n    case $b:\n      return \"Context.Provider\";\n\n    case cc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ec:\n      return ic(a.type);\n\n    case fc:\n      if (a = 1 === a._status ? a._result : null) return ic(a);\n  }\n  return null;\n}\n\nfunction jc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = ic(a.type);\n        c = null;\n        d && (c = ic(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Ub, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar kc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    lc = Object.prototype.hasOwnProperty,\n    mc = {},\n    nc = {};\n\nfunction oc(a) {\n  if (lc.call(nc, a)) return !0;\n  if (lc.call(mc, a)) return !1;\n  if (kc.test(a)) return nc[a] = !0;\n  mc[a] = !0;\n  return !1;\n}\n\nfunction pc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction qc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || pc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction C(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar D = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  D[b] = new C(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  D[a] = new C(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  D[a] = new C(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  D[a] = new C(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  D[a] = new C(a, 5, !1, a.toLowerCase(), null);\n});\nvar rc = /[\\-:]([a-z])/g;\n\nfunction sc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\n[\"tabIndex\", \"crossOrigin\"].forEach(function (a) {\n  D[a] = new C(a, 1, !1, a.toLowerCase(), null);\n});\n\nfunction tc(a, b, c, d) {\n  var e = D.hasOwnProperty(b) ? D[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (qc(b, c, e, d) && (c = null), d || null === e ? oc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction uc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction vc(a, b) {\n  var c = b.checked;\n  return n({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction wc(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = uc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction xc(a, b) {\n  b = b.checked;\n  null != b && tc(a, \"checked\", b, !1);\n}\n\nfunction yc(a, b) {\n  xc(a, b);\n  var c = uc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? zc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && zc(a, b.type, uc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ac(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction zc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Bc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Cc(a, b, c) {\n  a = y.getPooled(Bc.change, a, b, c);\n  a.type = \"change\";\n  Eb(c);\n  Qa(a);\n  return a;\n}\n\nvar Dc = null,\n    Ec = null;\n\nfunction Fc(a) {\n  Da(a);\n}\n\nfunction Gc(a) {\n  var b = Ja(a);\n  if (Sb(b)) return a;\n}\n\nfunction Hc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Ic = !1;\nRa && (Ic = Ob(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Jc() {\n  Dc && (Dc.detachEvent(\"onpropertychange\", Kc), Ec = Dc = null);\n}\n\nfunction Kc(a) {\n  \"value\" === a.propertyName && Gc(Ec) && (a = Cc(Ec, a, Nb(a)), Kb(Fc, a));\n}\n\nfunction Lc(a, b, c) {\n  \"focus\" === a ? (Jc(), Dc = b, Ec = c, Dc.attachEvent(\"onpropertychange\", Kc)) : \"blur\" === a && Jc();\n}\n\nfunction Mc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Gc(Ec);\n}\n\nfunction Nc(a, b) {\n  if (\"click\" === a) return Gc(b);\n}\n\nfunction Oc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Gc(b);\n}\n\nvar Pc = {\n  eventTypes: Bc,\n  _isInputEventSupported: Ic,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? Ja(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Hc : Mb(e) ? Ic ? f = Oc : (f = Mc, g = Lc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Nc);\n    if (f && (f = f(a, b))) return Cc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && zc(e, \"number\", e.value);\n  }\n},\n    Qc = y.extend({\n  view: null,\n  detail: null\n}),\n    Rc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Sc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Rc[a]) ? !!b[a] : !1;\n}\n\nfunction Tc() {\n  return Sc;\n}\n\nvar Uc = 0,\n    Vc = 0,\n    Wc = !1,\n    Xc = !1,\n    Yc = Qc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Tc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = Uc;\n    Uc = a.screenX;\n    return Wc ? \"mousemove\" === a.type ? a.screenX - b : 0 : (Wc = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = Vc;\n    Vc = a.screenY;\n    return Xc ? \"mousemove\" === a.type ? a.screenY - b : 0 : (Xc = !0, 0);\n  }\n}),\n    Zc = Yc.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    $c = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    ad = {\n  eventTypes: $c,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ha(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        l = void 0,\n        k = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = Yc, h = $c.mouseLeave, l = $c.mouseEnter, k = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = Zc, h = $c.pointerLeave, l = $c.pointerEnter, k = \"pointer\";\n    var m = null == f ? e : Ja(f);\n    e = null == b ? e : Ja(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = k + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(l, b, c, d);\n    c.type = k + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      k = 0;\n\n      for (g = b; g; g = La(g)) {\n        k++;\n      }\n\n      g = 0;\n\n      for (l = e; l; l = La(l)) {\n        g++;\n      }\n\n      for (; 0 < k - g;) {\n        b = La(b), k--;\n      }\n\n      for (; 0 < g - k;) {\n        e = La(e), g--;\n      }\n\n      for (; k--;) {\n        if (b === e || b === e.alternate) break a;\n        b = La(b);\n        e = La(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      k = f.alternate;\n      if (null !== k && k === e) break;\n      b.push(f);\n      f = La(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      k = d.alternate;\n      if (null !== k && k === e) break;\n      f.push(d);\n      d = La(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Oa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Oa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n};\n\nfunction bd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\n\nvar cd = Object.prototype.hasOwnProperty;\n\nfunction dd(a, b) {\n  if (bd(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!cd.call(b, c[d]) || !bd(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction ed(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction fd(a) {\n  2 !== ed(a) ? x(\"188\") : void 0;\n}\n\nfunction gd(a) {\n  var b = a.alternate;\n  if (!b) return b = ed(a), 3 === b ? x(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return fd(e), a;\n        if (g === d) return fd(e), b;\n        g = g.sibling;\n      }\n\n      x(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : x(\"189\");\n      }\n    }\n    c.alternate !== d ? x(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? x(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction hd(a) {\n  a = gd(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar id = y.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    jd = y.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    kd = Qc.extend({\n  relatedTarget: null\n});\n\nfunction ld(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar md = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    nd = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    od = Qc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = md[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = ld(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? nd[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Tc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? ld(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? ld(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    pd = Yc.extend({\n  dataTransfer: null\n}),\n    qd = Qc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Tc\n}),\n    rd = y.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    sd = Yc.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    td = [[\"abort\", \"abort\"], [Xa, \"animationEnd\"], [Ya, \"animationIteration\"], [Za, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [$a, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    ud = {},\n    vd = {};\n\nfunction wd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  ud[a] = b;\n  vd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  wd(a, !0);\n});\ntd.forEach(function (a) {\n  wd(a, !1);\n});\nvar xd = {\n  eventTypes: ud,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = vd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = vd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === ld(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = od;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = kd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = Yc;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = pd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = qd;\n        break;\n\n      case Xa:\n      case Ya:\n      case Za:\n        a = id;\n        break;\n\n      case $a:\n        a = rd;\n        break;\n\n      case \"scroll\":\n        a = Qc;\n        break;\n\n      case \"wheel\":\n        a = sd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = jd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = Zc;\n        break;\n\n      default:\n        a = y;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Qa(b);\n    return b;\n  }\n},\n    yd = xd.isInteractiveTopLevelEventType,\n    zd = [];\n\nfunction Ad(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ha(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Nb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < oa.length; h++) {\n      var l = oa[h];\n      l && (l = l.extractEvents(d, b, f, e)) && (g = xa(g, l));\n    }\n\n    Da(g);\n  }\n}\n\nvar Bd = !0;\n\nfunction E(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Ed(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Cd(a, b) {\n  Hb(Dd, a, b);\n}\n\nfunction Dd(a, b) {\n  if (Bd) {\n    var c = Nb(b);\n    c = Ha(c);\n    null === c || \"number\" !== typeof c.tag || 2 === ed(c) || (c = null);\n\n    if (zd.length) {\n      var d = zd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Kb(Ad, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > zd.length && zd.push(a);\n    }\n  }\n}\n\nvar Fd = {},\n    Gd = 0,\n    Hd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Id(a) {\n  Object.prototype.hasOwnProperty.call(a, Hd) || (a[Hd] = Gd++, Fd[a[Hd]] = {});\n  return Fd[a[Hd]];\n}\n\nfunction Jd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Kd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Ld(a, b) {\n  var c = Kd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Kd(c);\n  }\n}\n\nfunction Md(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Md(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Nd() {\n  for (var a = window, b = Jd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      a = b.contentDocument.defaultView;\n    } catch (c) {\n      break;\n    }\n\n    b = Jd(a.document);\n  }\n\n  return b;\n}\n\nfunction Od(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nfunction Pd() {\n  var a = Nd();\n\n  if (Od(a)) {\n    if (\"selectionStart\" in a) var b = {\n      start: a.selectionStart,\n      end: a.selectionEnd\n    };else a: {\n      b = (b = a.ownerDocument) && b.defaultView || window;\n      var c = b.getSelection && b.getSelection();\n\n      if (c && 0 !== c.rangeCount) {\n        b = c.anchorNode;\n        var d = c.anchorOffset,\n            e = c.focusNode;\n        c = c.focusOffset;\n\n        try {\n          b.nodeType, e.nodeType;\n        } catch (A) {\n          b = null;\n          break a;\n        }\n\n        var f = 0,\n            g = -1,\n            h = -1,\n            l = 0,\n            k = 0,\n            m = a,\n            p = null;\n\n        b: for (;;) {\n          for (var t;;) {\n            m !== b || 0 !== d && 3 !== m.nodeType || (g = f + d);\n            m !== e || 0 !== c && 3 !== m.nodeType || (h = f + c);\n            3 === m.nodeType && (f += m.nodeValue.length);\n            if (null === (t = m.firstChild)) break;\n            p = m;\n            m = t;\n          }\n\n          for (;;) {\n            if (m === a) break b;\n            p === b && ++l === d && (g = f);\n            p === e && ++k === c && (h = f);\n            if (null !== (t = m.nextSibling)) break;\n            m = p;\n            p = m.parentNode;\n          }\n\n          m = t;\n        }\n\n        b = -1 === g || -1 === h ? null : {\n          start: g,\n          end: h\n        };\n      } else b = null;\n    }\n    b = b || {\n      start: 0,\n      end: 0\n    };\n  } else b = null;\n\n  return {\n    focusedElem: a,\n    selectionRange: b\n  };\n}\n\nfunction Qd(a) {\n  var b = Nd(),\n      c = a.focusedElem,\n      d = a.selectionRange;\n\n  if (b !== c && c && c.ownerDocument && Md(c.ownerDocument.documentElement, c)) {\n    if (null !== d && Od(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), \"selectionStart\" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {\n      a = a.getSelection();\n      var e = c.textContent.length,\n          f = Math.min(d.start, e);\n      d = void 0 === d.end ? f : Math.min(d.end, e);\n      !a.extend && f > d && (e = d, d = f, f = e);\n      e = Ld(c, f);\n      var g = Ld(c, d);\n      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));\n    }\n    b = [];\n\n    for (a = c; a = a.parentNode;) {\n      1 === a.nodeType && b.push({\n        element: a,\n        left: a.scrollLeft,\n        top: a.scrollTop\n      });\n    }\n\n    \"function\" === typeof c.focus && c.focus();\n\n    for (c = 0; c < b.length; c++) {\n      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n    }\n  }\n}\n\nvar Rd = Ra && \"documentMode\" in document && 11 >= document.documentMode,\n    Sd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Td = null,\n    Ud = null,\n    Vd = null,\n    Wd = !1;\n\nfunction Xd(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if (Wd || null == Td || Td !== Jd(c)) return null;\n  c = Td;\n  \"selectionStart\" in c && Od(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Vd && dd(Vd, c) ? null : (Vd = c, a = y.getPooled(Sd.select, Ud, a, b), a.type = \"select\", a.target = Td, Qa(a), a);\n}\n\nvar Yd = {\n  eventTypes: Sd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Id(e);\n        f = sa.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? Ja(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Mb(e) || \"true\" === e.contentEditable) Td = e, Ud = b, Vd = null;\n        break;\n\n      case \"blur\":\n        Vd = Ud = Td = null;\n        break;\n\n      case \"mousedown\":\n        Wd = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return Wd = !1, Xd(c, d);\n\n      case \"selectionchange\":\n        if (Rd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return Xd(c, d);\n    }\n\n    return null;\n  }\n};\nBa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nta = Ka;\nua = Ia;\nva = Ja;\nBa.injectEventPluginsByName({\n  SimpleEventPlugin: xd,\n  EnterLeaveEventPlugin: ad,\n  ChangeEventPlugin: Pc,\n  SelectEventPlugin: Yd,\n  BeforeInputEventPlugin: zb\n});\n\nfunction Zd(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction $d(a, b) {\n  a = n({\n    children: void 0\n  }, b);\n  if (b = Zd(b.children)) a.children = b;\n  return a;\n}\n\nfunction ae(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + uc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction be(a, b) {\n  null != b.dangerouslySetInnerHTML ? x(\"91\") : void 0;\n  return n({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction ce(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? x(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : x(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: uc(c)\n  };\n}\n\nfunction de(a, b) {\n  var c = uc(b.value),\n      d = uc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction ee(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar fe = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction ge(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction he(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ge(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar ie = void 0,\n    je = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== fe.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    ie = ie || document.createElement(\"div\");\n    ie.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = ie.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction ke(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar le = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    me = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(le).forEach(function (a) {\n  me.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    le[b] = le[a];\n  });\n});\n\nfunction ne(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || le.hasOwnProperty(a) && le[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction oe(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = ne(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar pe = n({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction qe(a, b) {\n  b && (pe[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? x(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? x(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : x(\"61\")), null != b.style && \"object\" !== typeof b.style ? x(\"62\", \"\") : void 0);\n}\n\nfunction re(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction se(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Id(a);\n  b = sa[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Ed(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Ed(\"focus\", a);\n          Ed(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Ob(e) && Ed(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === ab.indexOf(e) && E(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction te() {}\n\nvar ue = null,\n    ve = null;\n\nfunction we(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction xe(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar ye = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    ze = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    Ae = r.unstable_scheduleCallback,\n    Be = r.unstable_cancelCallback;\n\nfunction Ce(a, b, c, d, e) {\n  a[Ga] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && xc(a, e);\n  re(c, d);\n  d = re(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? oe(a, h) : \"dangerouslySetInnerHTML\" === g ? je(a, h) : \"children\" === g ? ke(a, h) : tc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      yc(a, e);\n      break;\n\n    case \"textarea\":\n      de(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ae(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ae(a, !!e.multiple, e.defaultValue, !0) : ae(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction De(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction Ee(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Fe = [],\n    Ge = -1;\n\nfunction F(a) {\n  0 > Ge || (a.current = Fe[Ge], Fe[Ge] = null, Ge--);\n}\n\nfunction G(a, b) {\n  Ge++;\n  Fe[Ge] = a.current;\n  a.current = b;\n}\n\nvar He = {},\n    H = {\n  current: He\n},\n    I = {\n  current: !1\n},\n    Ie = He;\n\nfunction Je(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return He;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction J(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Ke(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Le(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Me(a, b, c) {\n  H.current !== He ? x(\"168\") : void 0;\n  G(H, b, a);\n  G(I, c, a);\n}\n\nfunction Ne(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : x(\"108\", ic(b) || \"Unknown\", e);\n  }\n\n  return n({}, c, d);\n}\n\nfunction Oe(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || He;\n  Ie = H.current;\n  G(H, b, a);\n  G(I, I.current, a);\n  return !0;\n}\n\nfunction Pe(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : x(\"169\");\n  c ? (b = Ne(a, b, Ie), d.__reactInternalMemoizedMergedChildContext = b, F(I, a), F(H, a), G(H, b, a)) : F(I, a);\n  G(I, c, a);\n}\n\nvar Qe = null,\n    Re = null;\n\nfunction Se(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction Te(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Qe = Se(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    Re = Se(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Ue(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction K(a, b, c, d) {\n  return new Ue(a, b, c, d);\n}\n\nfunction Ve(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction We(a) {\n  if (\"function\" === typeof a) return Ve(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === cc) return 11;\n    if (a === ec) return 14;\n  }\n\n  return 2;\n}\n\nfunction Xe(a, b) {\n  var c = a.alternate;\n  null === c ? (c = K(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.contextDependencies = a.contextDependencies;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction Ye(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) Ve(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case Xb:\n      return Ze(c.children, e, f, b);\n\n    case bc:\n      return $e(c, e | 3, f, b);\n\n    case Yb:\n      return $e(c, e | 2, f, b);\n\n    case Zb:\n      return a = K(12, c, b, e | 4), a.elementType = Zb, a.type = Zb, a.expirationTime = f, a;\n\n    case dc:\n      return a = K(13, c, b, e), a.elementType = dc, a.type = dc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case $b:\n          g = 10;\n          break a;\n\n        case ac:\n          g = 9;\n          break a;\n\n        case cc:\n          g = 11;\n          break a;\n\n        case ec:\n          g = 14;\n          break a;\n\n        case fc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      x(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = K(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction Ze(a, b, c, d) {\n  a = K(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction $e(a, b, c, d) {\n  a = K(8, a, d, b);\n  b = 0 === (b & 1) ? Yb : bc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction af(a, b, c) {\n  a = K(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction bf(a, b, c) {\n  b = K(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction cf(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  df(b, a);\n}\n\nfunction ef(a, b) {\n  a.didError = !1;\n  if (0 === b) a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0;else {\n    b < a.latestPingedTime && (a.latestPingedTime = 0);\n    var c = a.latestPendingTime;\n    0 !== c && (c > b ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > b && (a.earliestPendingTime = a.latestPendingTime));\n    c = a.earliestSuspendedTime;\n    0 === c ? cf(a, b) : b < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, cf(a, b)) : b > c && cf(a, b);\n  }\n  df(0, a);\n}\n\nfunction ff(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  df(b, a);\n}\n\nfunction gf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction df(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nfunction L(a, b) {\n  if (a && a.defaultProps) {\n    b = n({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction hf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      a._status = 0;\n      b = a._ctor;\n      b = b();\n      b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      });\n\n      switch (a._status) {\n        case 1:\n          return a._result;\n\n        case 2:\n          throw a._result;\n      }\n\n      a._result = b;\n      throw b;\n  }\n}\n\nvar jf = new aa.Component().refs;\n\nfunction kf(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : n({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar tf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === ed(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.tag = rf;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = lf();\n    c = mf(c, a);\n    var d = nf(c);\n    d.tag = sf;\n    void 0 !== b && null !== b && (d.callback = b);\n    of();\n    pf(a, d);\n    qf(a, c);\n  }\n};\n\nfunction uf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !dd(c, d) || !dd(e, f) : !0;\n}\n\nfunction vf(a, b, c) {\n  var d = !1,\n      e = He;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = M(f) : (e = J(b) ? Ie : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Je(a, e) : He);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = tf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction wf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && tf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction xf(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = jf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = M(f) : (f = J(b) ? Ie : H.current, e.context = Je(a, f));\n  f = a.updateQueue;\n  null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (kf(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && tf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar zf = Array.isArray;\n\nfunction Af(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? x(\"309\") : void 0, d = c.stateNode);\n      d ? void 0 : x(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === jf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? x(\"284\") : void 0;\n    c._owner ? void 0 : x(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction Bf(a, b) {\n  \"textarea\" !== a.type && x(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction Cf(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = Xe(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = af(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function l(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Af(a, b, c), d.return = a, d;\n    d = Ye(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = Af(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function k(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = bf(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = Ze(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function p(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = af(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Vb:\n          return c = Ye(b.type, b.key, b.props, null, a.mode, c), c.ref = Af(a, null, b), c.return = a, c;\n\n        case Wb:\n          return b = bf(b, a.mode, c), b.return = a, b;\n      }\n\n      if (zf(b) || hc(b)) return b = Ze(b, a.mode, c, null), b.return = a, b;\n      Bf(a, b);\n    }\n\n    return null;\n  }\n\n  function t(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Vb:\n          return c.key === e ? c.type === Xb ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;\n\n        case Wb:\n          return c.key === e ? k(a, b, c, d) : null;\n      }\n\n      if (zf(c) || hc(c)) return null !== e ? null : m(a, b, c, d, null);\n      Bf(a, c);\n    }\n\n    return null;\n  }\n\n  function A(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Vb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === Xb ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);\n\n        case Wb:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n      }\n\n      if (zf(d) || hc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      Bf(b, d);\n    }\n\n    return null;\n  }\n\n  function v(e, g, h, k) {\n    for (var l = null, m = null, q = g, u = g = 0, B = null; null !== q && u < h.length; u++) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var w = t(e, q, h[u], k);\n\n      if (null === w) {\n        null === q && (q = B);\n        break;\n      }\n\n      a && q && null === w.alternate && b(e, q);\n      g = f(w, g, u);\n      null === m ? l = w : m.sibling = w;\n      m = w;\n      q = B;\n    }\n\n    if (u === h.length) return c(e, q), l;\n\n    if (null === q) {\n      for (; u < h.length; u++) {\n        if (q = p(e, h[u], k)) g = f(q, g, u), null === m ? l = q : m.sibling = q, m = q;\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); u < h.length; u++) {\n      if (B = A(q, e, u, h[u], k)) a && null !== B.alternate && q.delete(null === B.key ? u : B.key), g = f(B, g, u), null === m ? l = B : m.sibling = B, m = B;\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function R(e, g, h, k) {\n    var l = hc(h);\n    \"function\" !== typeof l ? x(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? x(\"151\") : void 0;\n\n    for (var m = l = null, q = g, u = g = 0, B = null, w = h.next(); null !== q && !w.done; u++, w = h.next()) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var v = t(e, q, w.value, k);\n\n      if (null === v) {\n        q || (q = B);\n        break;\n      }\n\n      a && q && null === v.alternate && b(e, q);\n      g = f(v, g, u);\n      null === m ? l = v : m.sibling = v;\n      m = v;\n      q = B;\n    }\n\n    if (w.done) return c(e, q), l;\n\n    if (null === q) {\n      for (; !w.done; u++, w = h.next()) {\n        w = p(e, w.value, k), null !== w && (g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); !w.done; u++, w = h.next()) {\n      w = A(q, e, u, w.value, k), null !== w && (a && null !== w.alternate && q.delete(null === w.key ? u : w.key), g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === Xb && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Vb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === Xb : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === Xb ? f.props.children : f.props, h);\n                d.ref = Af(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === Xb ? (d = Ze(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Ye(f.type, f.key, f.props, null, a.mode, h), h.ref = Af(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case Wb:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = bf(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = af(f, a.mode, h), d.return = a, a = d), g(a);\n    if (zf(f)) return v(a, d, f, h);\n    if (hc(f)) return R(a, d, f, h);\n    l && Bf(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, x(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar Df = Cf(!0),\n    Ef = Cf(!1),\n    Ff = {},\n    N = {\n  current: Ff\n},\n    Gf = {\n  current: Ff\n},\n    Hf = {\n  current: Ff\n};\n\nfunction If(a) {\n  a === Ff ? x(\"174\") : void 0;\n  return a;\n}\n\nfunction Jf(a, b) {\n  G(Hf, b, a);\n  G(Gf, a, a);\n  G(N, Ff, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : he(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = he(b, c);\n  }\n\n  F(N, a);\n  G(N, b, a);\n}\n\nfunction Kf(a) {\n  F(N, a);\n  F(Gf, a);\n  F(Hf, a);\n}\n\nfunction Lf(a) {\n  If(Hf.current);\n  var b = If(N.current);\n  var c = he(b, a.type);\n  b !== c && (G(Gf, a, a), G(N, c, a));\n}\n\nfunction Mf(a) {\n  Gf.current === a && (F(N, a), F(Gf, a));\n}\n\nvar Nf = 0,\n    Of = 2,\n    Pf = 4,\n    Qf = 8,\n    Rf = 16,\n    Sf = 32,\n    Tf = 64,\n    Uf = 128,\n    Vf = Tb.ReactCurrentDispatcher,\n    Wf = 0,\n    Xf = null,\n    O = null,\n    P = null,\n    Yf = null,\n    Q = null,\n    Zf = null,\n    $f = 0,\n    ag = null,\n    bg = 0,\n    cg = !1,\n    dg = null,\n    eg = 0;\n\nfunction fg() {\n  x(\"307\");\n}\n\nfunction gg(a, b) {\n  if (null === b) return !1;\n\n  for (var c = 0; c < b.length && c < a.length; c++) {\n    if (!bd(a[c], b[c])) return !1;\n  }\n\n  return !0;\n}\n\nfunction hg(a, b, c, d, e, f) {\n  Wf = f;\n  Xf = b;\n  P = null !== a ? a.memoizedState : null;\n  Vf.current = null === P ? ig : jg;\n  b = c(d, e);\n\n  if (cg) {\n    do {\n      cg = !1, eg += 1, P = null !== a ? a.memoizedState : null, Zf = Yf, ag = Q = O = null, Vf.current = jg, b = c(d, e);\n    } while (cg);\n\n    dg = null;\n    eg = 0;\n  }\n\n  Vf.current = kg;\n  a = Xf;\n  a.memoizedState = Yf;\n  a.expirationTime = $f;\n  a.updateQueue = ag;\n  a.effectTag |= bg;\n  a = null !== O && null !== O.next;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  a ? x(\"300\") : void 0;\n  return b;\n}\n\nfunction lg() {\n  Vf.current = kg;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  cg = !1;\n  dg = null;\n  eg = 0;\n}\n\nfunction mg() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n    next: null\n  };\n  null === Q ? Yf = Q = a : Q = Q.next = a;\n  return Q;\n}\n\nfunction ng() {\n  if (null !== Zf) Q = Zf, Zf = Q.next, O = P, P = null !== O ? O.next : null;else {\n    null === P ? x(\"310\") : void 0;\n    O = P;\n    var a = {\n      memoizedState: O.memoizedState,\n      baseState: O.baseState,\n      queue: O.queue,\n      baseUpdate: O.baseUpdate,\n      next: null\n    };\n    Q = null === Q ? Yf = a : Q.next = a;\n    P = O.next;\n  }\n  return Q;\n}\n\nfunction og(a, b) {\n  return \"function\" === typeof b ? b(a) : b;\n}\n\nfunction pg(a) {\n  var b = ng(),\n      c = b.queue;\n  null === c ? x(\"311\") : void 0;\n\n  if (0 < eg) {\n    var d = c.dispatch;\n\n    if (null !== dg) {\n      var e = dg.get(c);\n\n      if (void 0 !== e) {\n        dg.delete(c);\n        var f = b.memoizedState;\n\n        do {\n          f = a(f, e.action), e = e.next;\n        } while (null !== e);\n\n        bd(f, b.memoizedState) || (qg = !0);\n        b.memoizedState = f;\n        b.baseUpdate === c.last && (b.baseState = f);\n        return [f, d];\n      }\n    }\n\n    return [b.memoizedState, d];\n  }\n\n  d = c.last;\n  var g = b.baseUpdate;\n  f = b.baseState;\n  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n\n  if (null !== d) {\n    var h = e = null,\n        l = d,\n        k = !1;\n\n    do {\n      var m = l.expirationTime;\n      m < Wf ? (k || (k = !0, h = g, e = f), m > $f && ($f = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);\n      g = l;\n      l = l.next;\n    } while (null !== l && l !== d);\n\n    k || (h = g, e = f);\n    bd(f, b.memoizedState) || (qg = !0);\n    b.memoizedState = f;\n    b.baseUpdate = h;\n    b.baseState = e;\n    c.eagerReducer = a;\n    c.eagerState = f;\n  }\n\n  return [b.memoizedState, c.dispatch];\n}\n\nfunction rg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  null === ag ? (ag = {\n    lastEffect: null\n  }, ag.lastEffect = a.next = a) : (b = ag.lastEffect, null === b ? ag.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, ag.lastEffect = a));\n  return a;\n}\n\nfunction sg(a, b, c, d) {\n  var e = mg();\n  bg |= a;\n  e.memoizedState = rg(b, c, void 0, void 0 === d ? null : d);\n}\n\nfunction tg(a, b, c, d) {\n  var e = ng();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n\n  if (null !== O) {\n    var g = O.memoizedState;\n    f = g.destroy;\n\n    if (null !== d && gg(d, g.deps)) {\n      rg(Nf, c, f, d);\n      return;\n    }\n  }\n\n  bg |= a;\n  e.memoizedState = rg(b, c, f, d);\n}\n\nfunction ug(a, b) {\n  if (\"function\" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\n\nfunction vg() {}\n\nfunction wg(a, b, c) {\n  25 > eg ? void 0 : x(\"301\");\n  var d = a.alternate;\n  if (a === Xf || null !== d && d === Xf) {\n    if (cg = !0, a = {\n      expirationTime: Wf,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    }, null === dg && (dg = new Map()), c = dg.get(b), void 0 === c) dg.set(b, a);else {\n      for (b = c; null !== b.next;) {\n        b = b.next;\n      }\n\n      b.next = a;\n    }\n  } else {\n    of();\n    var e = lf();\n    e = mf(e, a);\n    var f = {\n      expirationTime: e,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    },\n        g = b.last;\n    if (null === g) f.next = f;else {\n      var h = g.next;\n      null !== h && (f.next = h);\n      g.next = f;\n    }\n    b.last = f;\n    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.eagerReducer, null !== d)) try {\n      var l = b.eagerState,\n          k = d(l, c);\n      f.eagerReducer = d;\n      f.eagerState = k;\n      if (bd(k, l)) return;\n    } catch (m) {} finally {}\n    qf(a, e);\n  }\n}\n\nvar kg = {\n  readContext: M,\n  useCallback: fg,\n  useContext: fg,\n  useEffect: fg,\n  useImperativeHandle: fg,\n  useLayoutEffect: fg,\n  useMemo: fg,\n  useReducer: fg,\n  useRef: fg,\n  useState: fg,\n  useDebugValue: fg\n},\n    ig = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    mg().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return sg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return sg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return sg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = mg();\n    b = void 0 === b ? null : b;\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function useReducer(a, b, c) {\n    var d = mg();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = d.queue = {\n      last: null,\n      dispatch: null,\n      eagerReducer: a,\n      eagerState: b\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function useRef(a) {\n    var b = mg();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function useState(a) {\n    var b = mg();\n    \"function\" === typeof a && (a = a());\n    b.memoizedState = b.baseState = a;\n    a = b.queue = {\n      last: null,\n      dispatch: null,\n      eagerReducer: og,\n      eagerState: a\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [b.memoizedState, a];\n  },\n  useDebugValue: vg\n},\n    jg = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return tg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return tg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return tg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: pg,\n  useRef: function useRef() {\n    return ng().memoizedState;\n  },\n  useState: function useState(a) {\n    return pg(og, a);\n  },\n  useDebugValue: vg\n},\n    xg = null,\n    yg = null,\n    zg = !1;\n\nfunction Ag(a, b) {\n  var c = K(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction Bg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 13:\n      return !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction Cg(a) {\n  if (zg) {\n    var b = yg;\n\n    if (b) {\n      var c = b;\n\n      if (!Bg(a, b)) {\n        b = De(c);\n\n        if (!b || !Bg(a, b)) {\n          a.effectTag |= 2;\n          zg = !1;\n          xg = a;\n          return;\n        }\n\n        Ag(xg, c);\n      }\n\n      xg = a;\n      yg = Ee(b);\n    } else a.effectTag |= 2, zg = !1, xg = a;\n  }\n}\n\nfunction Dg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 18 !== a.tag;) {\n    a = a.return;\n  }\n\n  xg = a;\n}\n\nfunction Eg(a) {\n  if (a !== xg) return !1;\n  if (!zg) return Dg(a), zg = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !xe(b, a.memoizedProps)) for (b = yg; b;) {\n    Ag(a, b), b = De(b);\n  }\n  Dg(a);\n  yg = xg ? De(a.stateNode) : null;\n  return !0;\n}\n\nfunction Fg() {\n  yg = xg = null;\n  zg = !1;\n}\n\nvar Gg = Tb.ReactCurrentOwner,\n    qg = !1;\n\nfunction S(a, b, c, d) {\n  b.child = null === a ? Ef(b, null, c, d) : Df(b, a.child, c, d);\n}\n\nfunction Hg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Ig(b, e);\n  d = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, d, e);\n  return b.child;\n}\n\nfunction Kg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !Ve(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Lg(a, b, g, d, e, f);\n    a = Ye(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : dd, c(e, d) && a.ref === b.ref)) return Jg(a, b, f);\n  b.effectTag |= 1;\n  a = Xe(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction Lg(a, b, c, d, e, f) {\n  return null !== a && dd(a.memoizedProps, d) && a.ref === b.ref && (qg = !1, e < f) ? Jg(a, b, f) : Mg(a, b, c, d, f);\n}\n\nfunction Ng(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction Mg(a, b, c, d, e) {\n  var f = J(c) ? Ie : H.current;\n  f = Je(b, f);\n  Ig(b, e);\n  c = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, c, e);\n  return b.child;\n}\n\nfunction Og(a, b, c, d, e) {\n  if (J(c)) {\n    var f = !0;\n    Oe(b);\n  } else f = !1;\n\n  Ig(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), vf(b, c, d, e), xf(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n        k = c.contextType;\n    \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k));\n    var m = c.getDerivedStateFromProps,\n        p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    p || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k);\n    Pg = !1;\n    var t = b.memoizedState;\n    l = g.state = t;\n    var A = b.updateQueue;\n    null !== A && (yf(b, A, d, g, e), l = b.memoizedState);\n    h !== d || t !== l || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), l = b.memoizedState), (h = Pg || uf(b, c, h, d, t, l, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : L(b.type, h), l = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k)), m = c.getDerivedStateFromProps, (p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k), Pg = !1, l = b.memoizedState, t = g.state = l, A = b.updateQueue, null !== A && (yf(b, A, d, g, e), t = b.memoizedState), h !== d || l !== t || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), t = b.memoizedState), (m = Pg || uf(b, c, h, d, l, t, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, t, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, t, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = t), g.props = d, g.state = t, g.context = k, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return Qg(a, b, c, d, f, e);\n}\n\nfunction Qg(a, b, c, d, e, f) {\n  Ng(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Pe(b, c, !1), Jg(a, b, f);\n  d = b.stateNode;\n  Gg.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = Df(b, a.child, null, f), b.child = Df(b, null, h, f)) : S(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Pe(b, c, !0);\n  return b.child;\n}\n\nfunction Rg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Me(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Me(a, b.context, !1);\n  Jf(a, b.containerInfo);\n}\n\nfunction Sg(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = Ze(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = Ze(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = Ef(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = Xe(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = Xe(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = Df(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = Ze(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = Ze(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = Df(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction Jg(a, b, c) {\n  null !== a && (b.contextDependencies = a.contextDependencies);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? x(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = Xe(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = Xe(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction Tg(a, b, c) {\n  var d = b.expirationTime;\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || I.current) qg = !0;else {\n      if (d < c) {\n        qg = !1;\n\n        switch (b.tag) {\n          case 3:\n            Rg(b);\n            Fg();\n            break;\n\n          case 5:\n            Lf(b);\n            break;\n\n          case 1:\n            J(b.type) && Oe(b);\n            break;\n\n          case 4:\n            Jf(b, b.stateNode.containerInfo);\n            break;\n\n          case 10:\n            Ug(b, b.memoizedProps.value);\n            break;\n\n          case 13:\n            if (null !== b.memoizedState) {\n              d = b.child.childExpirationTime;\n              if (0 !== d && d >= c) return Sg(a, b, c);\n              b = Jg(a, b, c);\n              return null !== b ? b.sibling : null;\n            }\n\n        }\n\n        return Jg(a, b, c);\n      }\n    }\n  } else qg = !1;\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Je(b, H.current);\n      Ig(b, c);\n      e = hg(null, b, d, a, e, c);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n        lg();\n\n        if (J(d)) {\n          var f = !0;\n          Oe(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && kf(b, d, g, a);\n        e.updater = tf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        xf(b, d, a, c);\n        b = Qg(null, b, d, !0, f, c);\n      } else b.tag = 0, S(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = hf(e);\n      b.type = a;\n      e = b.tag = We(a);\n      f = L(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = Mg(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = Og(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = Hg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = Kg(null, b, a, L(a.type, f), d, c);\n          break;\n\n        default:\n          x(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Mg(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Og(a, b, d, e, c);\n\n    case 3:\n      Rg(b);\n      d = b.updateQueue;\n      null === d ? x(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      yf(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) Fg(), b = Jg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) yg = Ee(b.stateNode.containerInfo), xg = b, e = zg = !0;\n        e ? (b.effectTag |= 2, b.child = Ef(b, null, d, c)) : (S(a, b, d, c), Fg());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Lf(b), null === a && Cg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, xe(d, e) ? g = null : null !== f && xe(d, f) && (b.effectTag |= 16), Ng(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && Cg(b), null;\n\n    case 13:\n      return Sg(a, b, c);\n\n    case 4:\n      return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Df(b, null, d, c) : S(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Hg(a, b, d, e, c);\n\n    case 7:\n      return S(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        Ug(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = bd(h, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !I.current) {\n              b = Jg(a, b, c);\n              break a;\n            }\n          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {\n            var l = h.contextDependencies;\n\n            if (null !== l) {\n              g = h.child;\n\n              for (var k = l.first; null !== k;) {\n                if (k.context === d && 0 !== (k.observedBits & f)) {\n                  1 === h.tag && (k = nf(c), k.tag = sf, pf(h, k));\n                  h.expirationTime < c && (h.expirationTime = c);\n                  k = h.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n                  k = c;\n\n                  for (var m = h.return; null !== m;) {\n                    var p = m.alternate;\n                    if (m.childExpirationTime < k) m.childExpirationTime = k, null !== p && p.childExpirationTime < k && (p.childExpirationTime = k);else if (null !== p && p.childExpirationTime < k) p.childExpirationTime = k;else break;\n                    m = m.return;\n                  }\n\n                  l.expirationTime < c && (l.expirationTime = c);\n                  break;\n                }\n\n                k = k.next;\n              }\n            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n\n            if (null !== g) g.return = h;else for (g = h; null !== g;) {\n              if (g === b) {\n                g = null;\n                break;\n              }\n\n              h = g.sibling;\n\n              if (null !== h) {\n                h.return = g.return;\n                g = h;\n                break;\n              }\n\n              g = g.return;\n            }\n            h = g;\n          }\n        }\n\n        S(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Ig(b, c), e = M(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = L(e, b.pendingProps), f = L(e.type, f), Kg(a, b, e, f, d, c);\n\n    case 15:\n      return Lg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, J(d) ? (a = !0, Oe(b)) : a = !1, Ig(b, c), vf(b, d, e, c), xf(b, d, e, c), Qg(null, b, d, !0, a, c);\n  }\n\n  x(\"156\");\n}\n\nvar Vg = {\n  current: null\n},\n    Wg = null,\n    Xg = null,\n    Yg = null;\n\nfunction Ug(a, b) {\n  var c = a.type._context;\n  G(Vg, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction Zg(a) {\n  var b = Vg.current;\n  F(Vg, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Ig(a, b) {\n  Wg = a;\n  Yg = Xg = null;\n  var c = a.contextDependencies;\n  null !== c && c.expirationTime >= b && (qg = !0);\n  a.contextDependencies = null;\n}\n\nfunction M(a, b) {\n  if (Yg !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) Yg = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === Xg ? (null === Wg ? x(\"308\") : void 0, Xg = b, Wg.contextDependencies = {\n      first: b,\n      expirationTime: 0\n    }) : Xg = Xg.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar $g = 0,\n    rf = 1,\n    sf = 2,\n    ah = 3,\n    Pg = !1;\n\nfunction bh(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction ch(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction nf(a) {\n  return {\n    expirationTime: a,\n    tag: $g,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction dh(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction pf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = bh(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = bh(a.memoizedState), e = c.updateQueue = bh(c.memoizedState)) : d = a.updateQueue = ch(e) : null === e && (e = c.updateQueue = ch(d));\n\n  null === e || d === e ? dh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (dh(d, b), dh(e, b)) : (dh(d, b), e.lastUpdate = b);\n}\n\nfunction eh(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = bh(a.memoizedState) : fh(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction fh(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = ch(b));\n  return b;\n}\n\nfunction gh(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case rf:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case ah:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case $g:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return n({}, d, e);\n\n    case sf:\n      Pg = !0;\n  }\n\n  return d;\n}\n\nfunction yf(a, b, c, d, e) {\n  Pg = !1;\n  b = fh(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {\n    var m = l.expirationTime;\n    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));\n    l = l.next;\n  }\n\n  m = null;\n\n  for (l = b.firstCapturedUpdate; null !== l;) {\n    var p = l.expirationTime;\n    p < e ? (null === m && (m = l, null === g && (f = k)), h < p && (h = p)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));\n    l = l.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = k);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = k;\n}\n\nfunction hh(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  ih(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  ih(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction ih(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction jh(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: jc(b)\n  };\n}\n\nfunction kh(a) {\n  a.effectTag |= 4;\n}\n\nvar lh = void 0,\n    mh = void 0,\n    nh = void 0,\n    oh = void 0;\n\nlh = function lh(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nmh = function mh() {};\n\nnh = function nh(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    If(N.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = vc(g, f);\n        d = vc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = $d(g, f);\n        d = $d(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = n({}, f, {\n          value: void 0\n        });\n        d = n({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = be(g, f);\n        d = be(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = te);\n    }\n\n    qe(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var l = f[c];\n\n        for (g in l) {\n          l.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (ra.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var k = d[c];\n      l = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if (\"style\" === c) {\n        if (l) {\n          for (g in l) {\n            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in k) {\n            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = k;\n      } else \"dangerouslySetInnerHTML\" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, \"\" + k)) : \"children\" === c ? l === k || \"string\" !== typeof k && \"number\" !== typeof k || (a = a || []).push(c, \"\" + k) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (ra.hasOwnProperty(c) ? (null != k && se(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && kh(b);\n  }\n};\n\noh = function oh(a, b, c, d) {\n  c !== d && kh(b);\n};\n\nvar ph = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction qh(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = jc(c));\n  null !== c && ic(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && ic(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction rh(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    sh(a, c);\n  } else b.current = null;\n}\n\nfunction th(a, b, c) {\n  c = c.updateQueue;\n  c = null !== c ? c.lastEffect : null;\n\n  if (null !== c) {\n    var d = c = c.next;\n\n    do {\n      if ((d.tag & a) !== Nf) {\n        var e = d.destroy;\n        d.destroy = void 0;\n        void 0 !== e && e();\n      }\n\n      (d.tag & b) !== Nf && (e = d.create, d.destroy = e());\n      d = d.next;\n    } while (d !== c);\n  }\n}\n\nfunction uh(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = ne(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction vh(a) {\n  \"function\" === typeof Re && Re(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (void 0 !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              sh(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      rh(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        sh(a, f);\n      }\n      break;\n\n    case 5:\n      rh(a);\n      break;\n\n    case 4:\n      wh(a);\n  }\n}\n\nfunction xh(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction yh(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (xh(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    x(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      x(\"161\");\n  }\n\n  c.effectTag & 16 && (ke(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || xh(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = te)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction wh(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? x(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (vh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag) {\n      if (null !== b.child) {\n        d = b.stateNode.containerInfo;\n        e = !0;\n        b.child.return = b;\n        b = b.child;\n        continue;\n      }\n    } else if (vh(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction zh(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      th(Pf, Qf, b);\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Ce(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? x(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = lf()));\n      null !== a && uh(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new ph());\n        c.forEach(function (a) {\n          var c = Ah.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      x(\"163\");\n  }\n}\n\nvar Bh = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Ch(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Dh(d);\n    qh(a, b);\n  };\n\n  return c;\n}\n\nfunction Eh(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Fh ? Fh = new Set([this]) : Fh.add(this));\n    var c = b.value,\n        e = b.stack;\n    qh(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Gh(a) {\n  switch (a.tag) {\n    case 1:\n      J(a.type) && Ke(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Kf(a), Le(a), b = a.effectTag, 0 !== (b & 64) ? x(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Mf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 18:\n      return null;\n\n    case 4:\n      return Kf(a), null;\n\n    case 10:\n      return Zg(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar Hh = Tb.ReactCurrentDispatcher,\n    Ih = Tb.ReactCurrentOwner,\n    Jh = 1073741822,\n    Kh = !1,\n    T = null,\n    Lh = null,\n    U = 0,\n    Mh = -1,\n    Nh = !1,\n    V = null,\n    Oh = !1,\n    Ph = null,\n    Qh = null,\n    Rh = null,\n    Fh = null;\n\nfunction Sh() {\n  if (null !== T) for (var a = T.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Ke(b);\n        break;\n\n      case 3:\n        Kf(b);\n        Le(b);\n        break;\n\n      case 5:\n        Mf(b);\n        break;\n\n      case 4:\n        Kf(b);\n        break;\n\n      case 10:\n        Zg(b);\n    }\n\n    a = a.return;\n  }\n  Lh = null;\n  U = 0;\n  Mh = -1;\n  Nh = !1;\n  T = null;\n}\n\nfunction Th() {\n  for (; null !== V;) {\n    var a = V.effectTag;\n    a & 16 && ke(V.stateNode, \"\");\n\n    if (a & 128) {\n      var b = V.alternate;\n      null !== b && (b = b.ref, null !== b && (\"function\" === typeof b ? b(null) : b.current = null));\n    }\n\n    switch (a & 14) {\n      case 2:\n        yh(V);\n        V.effectTag &= -3;\n        break;\n\n      case 6:\n        yh(V);\n        V.effectTag &= -3;\n        zh(V.alternate, V);\n        break;\n\n      case 4:\n        zh(V.alternate, V);\n        break;\n\n      case 8:\n        a = V, wh(a), a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null, a = a.alternate, null !== a && (a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null);\n    }\n\n    V = V.nextEffect;\n  }\n}\n\nfunction Uh() {\n  for (; null !== V;) {\n    if (V.effectTag & 256) a: {\n      var a = V.alternate,\n          b = V;\n\n      switch (b.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Of, Nf, b);\n          break a;\n\n        case 1:\n          if (b.effectTag & 256 && null !== a) {\n            var c = a.memoizedProps,\n                d = a.memoizedState;\n            a = b.stateNode;\n            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : L(b.type, c), d);\n            a.__reactInternalSnapshotBeforeUpdate = b;\n          }\n\n          break a;\n\n        case 3:\n        case 5:\n        case 6:\n        case 4:\n        case 17:\n          break a;\n\n        default:\n          x(\"163\");\n      }\n    }\n    V = V.nextEffect;\n  }\n}\n\nfunction Vh(a, b) {\n  for (; null !== V;) {\n    var c = V.effectTag;\n\n    if (c & 36) {\n      var d = V.alternate,\n          e = V,\n          f = b;\n\n      switch (e.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Rf, Sf, e);\n          break;\n\n        case 1:\n          var g = e.stateNode;\n          if (e.effectTag & 4) if (null === d) g.componentDidMount();else {\n            var h = e.elementType === e.type ? d.memoizedProps : L(e.type, d.memoizedProps);\n            g.componentDidUpdate(h, d.memoizedState, g.__reactInternalSnapshotBeforeUpdate);\n          }\n          d = e.updateQueue;\n          null !== d && hh(e, d, g, f);\n          break;\n\n        case 3:\n          d = e.updateQueue;\n\n          if (null !== d) {\n            g = null;\n            if (null !== e.child) switch (e.child.tag) {\n              case 5:\n                g = e.child.stateNode;\n                break;\n\n              case 1:\n                g = e.child.stateNode;\n            }\n            hh(e, d, g, f);\n          }\n\n          break;\n\n        case 5:\n          f = e.stateNode;\n          null === d && e.effectTag & 4 && we(e.type, e.memoizedProps) && f.focus();\n          break;\n\n        case 6:\n          break;\n\n        case 4:\n          break;\n\n        case 12:\n          break;\n\n        case 13:\n          break;\n\n        case 17:\n          break;\n\n        default:\n          x(\"163\");\n      }\n    }\n\n    c & 128 && (e = V.ref, null !== e && (f = V.stateNode, \"function\" === typeof e ? e(f) : e.current = f));\n    c & 512 && (Ph = a);\n    V = V.nextEffect;\n  }\n}\n\nfunction Wh(a, b) {\n  Rh = Qh = Ph = null;\n  var c = W;\n  W = !0;\n\n  do {\n    if (b.effectTag & 512) {\n      var d = !1,\n          e = void 0;\n\n      try {\n        var f = b;\n        th(Uf, Nf, f);\n        th(Nf, Tf, f);\n      } catch (g) {\n        d = !0, e = g;\n      }\n\n      d && sh(b, e);\n    }\n\n    b = b.nextEffect;\n  } while (null !== b);\n\n  W = c;\n  c = a.expirationTime;\n  0 !== c && Xh(a, c);\n  X || W || Yh(1073741823, !1);\n}\n\nfunction of() {\n  null !== Qh && Be(Qh);\n  null !== Rh && Rh();\n}\n\nfunction Zh(a, b) {\n  Oh = Kh = !0;\n  a.current === b ? x(\"177\") : void 0;\n  var c = a.pendingCommitExpirationTime;\n  0 === c ? x(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  var d = b.expirationTime,\n      e = b.childExpirationTime;\n  ef(a, e > d ? e : d);\n  Ih.current = null;\n  d = void 0;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ue = Bd;\n  ve = Pd();\n  Bd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    var f = void 0;\n\n    try {\n      Uh();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Th();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  Qd(ve);\n  ve = null;\n  Bd = !!ue;\n  ue = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Vh(a, c);\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  if (null !== d && null !== Ph) {\n    var g = Wh.bind(null, a, d);\n    Qh = r.unstable_runWithPriority(r.unstable_NormalPriority, function () {\n      return Ae(g);\n    });\n    Rh = g;\n  }\n\n  Kh = Oh = !1;\n  \"function\" === typeof Qe && Qe(b.stateNode);\n  c = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > c ? b : c;\n  0 === b && (Fh = null);\n  $h(a, b);\n}\n\nfunction ai(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      T = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            J(b.type) && Ke(b);\n            break;\n\n          case 3:\n            Kf(b);\n            Le(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) Eg(b), b.effectTag &= -3;\n            mh(b);\n            break;\n\n          case 5:\n            Mf(b);\n            var h = If(Hf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) nh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var l = If(N.current);\n\n              if (Eg(b)) {\n                g = b;\n                e = g.stateNode;\n                var k = g.type,\n                    m = g.memoizedProps,\n                    p = h;\n                e[Fa] = g;\n                e[Ga] = m;\n                f = void 0;\n                h = k;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (k = 0; k < ab.length; k++) {\n                      E(ab[k], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    E(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", e);\n                    E(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", e);\n                    E(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    wc(e, m);\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(e, m), E(\"invalid\", e), se(p, \"onChange\");\n                }\n\n                qe(h, m);\n                k = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (l = m[f], \"children\" === f ? \"string\" === typeof l ? e.textContent !== l && (k = [\"children\", l]) : \"number\" === typeof l && e.textContent !== \"\" + l && (k = [\"children\", \"\" + l]) : ra.hasOwnProperty(f) && null != l && se(p, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Rb(e);\n                    Ac(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Rb(e);\n                    ee(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = te);\n                }\n\n                f = k;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && kh(b);\n              } else {\n                m = b;\n                e = f;\n                p = g;\n                k = 9 === h.nodeType ? h : h.ownerDocument;\n                l === fe.html && (l = ge(e));\n                l === fe.html ? \"script\" === e ? (e = k.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", k = e.removeChild(e.firstChild)) : \"string\" === typeof p.is ? k = k.createElement(e, {\n                  is: p.is\n                }) : (k = k.createElement(e), \"select\" === e && p.multiple && (k.multiple = !0)) : k = k.createElementNS(l, e);\n                e = k;\n                e[Fa] = m;\n                e[Ga] = g;\n                lh(e, b, !1, !1);\n                p = e;\n                k = f;\n                m = g;\n                var t = h,\n                    A = re(k, m);\n\n                switch (k) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < ab.length; h++) {\n                      E(ab[h], p);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    E(\"error\", p);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", p);\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", p);\n                    E(\"submit\", p);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", p);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    wc(p, m);\n                    h = vc(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = $d(p, m);\n                    break;\n\n                  case \"select\":\n                    p._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = n({}, m, {\n                      value: void 0\n                    });\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(p, m);\n                    h = be(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                qe(k, h);\n                l = void 0;\n                var v = k,\n                    R = p,\n                    u = h;\n\n                for (l in u) {\n                  if (u.hasOwnProperty(l)) {\n                    var q = u[l];\n                    \"style\" === l ? oe(R, q) : \"dangerouslySetInnerHTML\" === l ? (q = q ? q.__html : void 0, null != q && je(R, q)) : \"children\" === l ? \"string\" === typeof q ? (\"textarea\" !== v || \"\" !== q) && ke(R, q) : \"number\" === typeof q && ke(R, \"\" + q) : \"suppressContentEditableWarning\" !== l && \"suppressHydrationWarning\" !== l && \"autoFocus\" !== l && (ra.hasOwnProperty(l) ? null != q && se(t, l) : null != q && tc(R, l, q, A));\n                  }\n                }\n\n                switch (k) {\n                  case \"input\":\n                    Rb(p);\n                    Ac(p, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Rb(p);\n                    ee(p, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && p.setAttribute(\"value\", \"\" + uc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = p;\n                    h.multiple = !!m.multiple;\n                    p = m.value;\n                    null != p ? ae(h, !!m.multiple, p, !1) : null != m.defaultValue && ae(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (p.onclick = te);\n                }\n\n                (g = we(f, g)) && kh(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? x(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? oh(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? x(\"166\") : void 0), e = If(Hf.current), If(N.current), Eg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Fa] = g, (g = f.nodeValue !== e) && kh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Fa] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              T = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g || f) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Kf(b);\n            mh(b);\n            break;\n\n          case 10:\n            Zg(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            J(b.type) && Ke(b);\n            break;\n\n          case 18:\n            break;\n\n          default:\n            x(\"156\");\n        }\n\n        T = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== T) return T;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Gh(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction bi(a) {\n  var b = Tg(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = ai(a));\n  Ih.current = null;\n  return b;\n}\n\nfunction ci(a, b) {\n  Kh ? x(\"243\") : void 0;\n  of();\n  Kh = !0;\n  var c = Hh.current;\n  Hh.current = kg;\n  var d = a.nextExpirationTimeToWorkOn;\n  if (d !== U || a !== Lh || null === T) Sh(), Lh = a, U = d, T = Xe(Lh.current, null, U), a.pendingCommitExpirationTime = 0;\n  var e = !1;\n\n  do {\n    try {\n      if (b) for (; null !== T && !di();) {\n        T = bi(T);\n      } else for (; null !== T;) {\n        T = bi(T);\n      }\n    } catch (u) {\n      if (Yg = Xg = Wg = null, lg(), null === T) e = !0, Dh(u);else {\n        null === T ? x(\"271\") : void 0;\n        var f = T,\n            g = f.return;\n        if (null === g) e = !0, Dh(u);else {\n          a: {\n            var h = a,\n                l = g,\n                k = f,\n                m = u;\n            g = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== m && \"object\" === typeof m && \"function\" === typeof m.then) {\n              var p = m;\n              m = l;\n              var t = -1,\n                  A = -1;\n\n              do {\n                if (13 === m.tag) {\n                  var v = m.alternate;\n\n                  if (null !== v && (v = v.memoizedState, null !== v)) {\n                    A = 10 * (1073741822 - v.timedOutAt);\n                    break;\n                  }\n\n                  v = m.pendingProps.maxDuration;\n                  if (\"number\" === typeof v) if (0 >= v) t = 0;else if (-1 === t || v < t) t = v;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = l;\n\n              do {\n                if (v = 13 === m.tag) v = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;\n\n                if (v) {\n                  l = m.updateQueue;\n                  null === l ? (l = new Set(), l.add(p), m.updateQueue = l) : l.add(p);\n\n                  if (0 === (m.mode & 1)) {\n                    m.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = nf(1073741823), g.tag = sf, pf(k, g)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = h;\n                  l = g;\n                  var R = k.pingCache;\n                  null === R ? (R = k.pingCache = new Bh(), v = new Set(), R.set(p, v)) : (v = R.get(p), void 0 === v && (v = new Set(), R.set(p, v)));\n                  v.has(l) || (v.add(l), k = ei.bind(null, k, p, l), p.then(k, k));\n                  -1 === t ? h = 1073741823 : (-1 === A && (A = 10 * (1073741822 - gf(h, g)) - 5E3), h = A + t);\n                  0 <= h && Mh < h && (Mh = h);\n                  m.effectTag |= 2048;\n                  m.expirationTime = g;\n                  break a;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = Error((ic(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + jc(k));\n            }\n\n            Nh = !0;\n            m = jh(m, k);\n            h = l;\n\n            do {\n              switch (h.tag) {\n                case 3:\n                  h.effectTag |= 2048;\n                  h.expirationTime = g;\n                  g = Ch(h, m, g);\n                  eh(h, g);\n                  break a;\n\n                case 1:\n                  if (t = m, A = h.type, k = h.stateNode, 0 === (h.effectTag & 64) && (\"function\" === typeof A.getDerivedStateFromError || null !== k && \"function\" === typeof k.componentDidCatch && (null === Fh || !Fh.has(k)))) {\n                    h.effectTag |= 2048;\n                    h.expirationTime = g;\n                    g = Eh(h, t, g);\n                    eh(h, g);\n                    break a;\n                  }\n\n              }\n\n              h = h.return;\n            } while (null !== h);\n          }\n\n          T = ai(f);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  Kh = !1;\n  Hh.current = c;\n  Yg = Xg = Wg = null;\n  lg();\n  if (e) Lh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {\n    c = a.current.alternate;\n    null === c ? x(\"281\") : void 0;\n    Lh = null;\n\n    if (Nh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {\n        ff(a, d);\n        fi(a, c, d, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        d = a.nextExpirationTimeToWorkOn = d;\n        b = a.expirationTime = 1073741823;\n        fi(a, c, d, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== Mh ? (ff(a, d), b = 10 * (1073741822 - gf(a, d)), b < Mh && (Mh = b), b = 10 * (1073741822 - lf()), b = Mh - b, fi(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);\n  }\n}\n\nfunction sh(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Fh || !Fh.has(d))) {\n          a = jh(b, a);\n          a = Eh(c, a, 1073741823);\n          pf(c, a);\n          qf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = jh(b, a);\n        a = Ch(c, a, 1073741823);\n        pf(c, a);\n        qf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = jh(b, a), c = Ch(a, c, 1073741823), pf(a, c), qf(a, 1073741823));\n}\n\nfunction mf(a, b) {\n  var c = r.unstable_getCurrentPriorityLevel(),\n      d = void 0;\n  if (0 === (b.mode & 1)) d = 1073741823;else if (Kh && !Oh) d = U;else {\n    switch (c) {\n      case r.unstable_ImmediatePriority:\n        d = 1073741823;\n        break;\n\n      case r.unstable_UserBlockingPriority:\n        d = 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1);\n        break;\n\n      case r.unstable_NormalPriority:\n        d = 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1);\n        break;\n\n      case r.unstable_LowPriority:\n      case r.unstable_IdlePriority:\n        d = 1;\n        break;\n\n      default:\n        x(\"313\");\n    }\n\n    null !== Lh && d === U && --d;\n  }\n  c === r.unstable_UserBlockingPriority && (0 === gi || d < gi) && (gi = d);\n  return d;\n}\n\nfunction ei(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== Lh && U === c) Lh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    df(c, a);\n    c = a.expirationTime;\n    0 !== c && Xh(a, c);\n  }\n}\n\nfunction Ah(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = lf();\n  b = mf(b, a);\n  a = hi(a, b);\n  null !== a && (cf(a, b), b = a.expirationTime, 0 !== b && Xh(a, b));\n}\n\nfunction hi(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction qf(a, b) {\n  a = hi(a, b);\n  null !== a && (!Kh && 0 !== U && b > U && Sh(), cf(a, b), Kh && !Oh && Lh === a || Xh(a, a.expirationTime), ii > ji && (ii = 0, x(\"185\")));\n}\n\nfunction ki(a, b, c, d, e) {\n  return r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    return a(b, c, d, e);\n  });\n}\n\nvar li = null,\n    Y = null,\n    mi = 0,\n    ni = void 0,\n    W = !1,\n    oi = null,\n    Z = 0,\n    gi = 0,\n    pi = !1,\n    qi = null,\n    X = !1,\n    ri = !1,\n    si = null,\n    ti = r.unstable_now(),\n    ui = 1073741822 - (ti / 10 | 0),\n    vi = ui,\n    ji = 50,\n    ii = 0,\n    wi = null;\n\nfunction xi() {\n  ui = 1073741822 - ((r.unstable_now() - ti) / 10 | 0);\n}\n\nfunction yi(a, b) {\n  if (0 !== mi) {\n    if (b < mi) return;\n    null !== ni && r.unstable_cancelCallback(ni);\n  }\n\n  mi = b;\n  a = r.unstable_now() - ti;\n  ni = r.unstable_scheduleCallback(zi, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction fi(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || di() ? 0 < e && (a.timeoutHandle = ye(Ai.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Ai(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  xi();\n  vi = ui;\n  Bi(a, c);\n}\n\nfunction $h(a, b) {\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction lf() {\n  if (W) return vi;\n  Ci();\n  if (0 === Z || 1 === Z) xi(), vi = ui;\n  return vi;\n}\n\nfunction Xh(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === Y ? (li = Y = a, a.nextScheduledRoot = a) : (Y = Y.nextScheduledRoot = a, Y.nextScheduledRoot = li)) : b > a.expirationTime && (a.expirationTime = b);\n  W || (X ? ri && (oi = a, Z = 1073741823, Di(a, 1073741823, !1)) : 1073741823 === b ? Yh(1073741823, !1) : yi(a, b));\n}\n\nfunction Ci() {\n  var a = 0,\n      b = null;\n  if (null !== Y) for (var c = Y, d = li; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === Y ? x(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        li = Y = d.nextScheduledRoot = null;\n        break;\n      } else if (d === li) li = e = d.nextScheduledRoot, Y.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === Y) {\n        Y = c;\n        Y.nextScheduledRoot = li;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === Y) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  oi = b;\n  Z = a;\n}\n\nvar Ei = !1;\n\nfunction di() {\n  return Ei ? !0 : r.unstable_shouldYield() ? Ei = !0 : !1;\n}\n\nfunction zi() {\n  try {\n    if (!di() && null !== li) {\n      xi();\n      var a = li;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && ui <= b && (a.nextExpirationTimeToWorkOn = ui);\n        a = a.nextScheduledRoot;\n      } while (a !== li);\n    }\n\n    Yh(0, !0);\n  } finally {\n    Ei = !1;\n  }\n}\n\nfunction Yh(a, b) {\n  Ci();\n  if (b) for (xi(), vi = ui; null !== oi && 0 !== Z && a <= Z && !(Ei && ui > Z);) {\n    Di(oi, Z, ui > Z), Ci(), xi(), vi = ui;\n  } else for (; null !== oi && 0 !== Z && a <= Z;) {\n    Di(oi, Z, !1), Ci();\n  }\n  b && (mi = 0, ni = null);\n  0 !== Z && yi(oi, Z);\n  ii = 0;\n  wi = null;\n  if (null !== si) for (a = si, si = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      pi || (pi = !0, qi = d);\n    }\n  }\n  if (pi) throw a = qi, qi = null, pi = !1, a;\n}\n\nfunction Bi(a, b) {\n  W ? x(\"253\") : void 0;\n  oi = a;\n  Z = b;\n  Di(a, b, !1);\n  Yh(1073741823, !1);\n}\n\nfunction Di(a, b, c) {\n  W ? x(\"245\") : void 0;\n  W = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && (di() ? a.finishedWork = d : Fi(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && Fi(a, d, b));\n\n  W = !1;\n}\n\nfunction Fi(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === si ? si = [d] : si.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === wi ? ii++ : (wi = a, ii = 0);\n  r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    Zh(a, b);\n  });\n}\n\nfunction Dh(a) {\n  null === oi ? x(\"246\") : void 0;\n  oi.expirationTime = 0;\n  pi || (pi = !0, qi = a);\n}\n\nfunction Gi(a, b) {\n  var c = X;\n  X = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (X = c) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Hi(a, b) {\n  if (X && !ri) {\n    ri = !0;\n\n    try {\n      return a(b);\n    } finally {\n      ri = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Ii(a, b, c) {\n  X || W || 0 === gi || (Yh(gi, !1), gi = 0);\n  var d = X;\n  X = !0;\n\n  try {\n    return r.unstable_runWithPriority(r.unstable_UserBlockingPriority, function () {\n      return a(b, c);\n    });\n  } finally {\n    (X = d) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Ji(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === ed(c) && 1 === c.tag ? void 0 : x(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (J(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      x(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (J(h)) {\n        c = Ne(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = He;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = nf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  of();\n  pf(f, e);\n  qf(f, d);\n  return d;\n}\n\nfunction Ki(a, b, c, d) {\n  var e = b.current,\n      f = lf();\n  e = mf(f, e);\n  return Ji(a, b, c, e, d);\n}\n\nfunction Li(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction Mi(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: Wb,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nAb = function Ab(a, b, c) {\n  switch (b) {\n    case \"input\":\n      yc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = Ka(d);\n            e ? void 0 : x(\"90\");\n            Sb(d);\n            yc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      de(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && ae(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction Ni(a) {\n  var b = 1073741822 - 25 * (((1073741822 - lf() + 500) / 25 | 0) + 1);\n  b >= Jh && (b = Jh - 1);\n  this._expirationTime = Jh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nNi.prototype.render = function (a) {\n  this._defer ? void 0 : x(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new Oi();\n  Ji(a, b, null, c, d._onCommit);\n  return d;\n};\n\nNi.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nNi.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : x(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? x(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Bi(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nNi.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction Oi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nOi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nOi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction Pi(a, b, c) {\n  b = K(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nPi.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new Oi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Ki(a, c, null, d._onCommit);\n  return d;\n};\n\nPi.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new Oi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Ki(null, b, null, c._onCommit);\n  return c;\n};\n\nPi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new Oi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Ki(b, d, a, e._onCommit);\n  return e;\n};\n\nPi.prototype.createBatch = function () {\n  var a = new Ni(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction Qi(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nGb = Gi;\nHb = Ii;\n\nIb = function Ib() {\n  W || 0 === gi || (Yh(gi, !1), gi = 0);\n};\n\nfunction Ri(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new Pi(a, !1, b);\n}\n\nfunction Si(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = Ri(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Hi(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Li(f._internalRoot);\n}\n\nfunction Ti(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  Qi(b) ? void 0 : x(\"200\");\n  return Mi(a, b, null, c);\n}\n\nvar Vi = {\n  createPortal: Ti,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? x(\"188\") : x(\"268\", Object.keys(a)));\n    a = hd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    Qi(c) ? void 0 : x(\"200\");\n    null == a || void 0 === a._reactInternalFiber ? x(\"38\") : void 0;\n    return Si(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    Qi(a) ? void 0 : x(\"40\");\n    return a._reactRootContainer ? (Hi(function () {\n      Si(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return Ti.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Gi,\n  unstable_interactiveUpdates: Ii,\n  flushSync: function flushSync(a, b) {\n    W ? x(\"187\") : void 0;\n    var c = X;\n    X = !0;\n\n    try {\n      return ki(a, b);\n    } finally {\n      X = c, Yh(1073741823, !1);\n    }\n  },\n  unstable_createRoot: Ui,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = X;\n    X = !0;\n\n    try {\n      ki(a);\n    } finally {\n      (X = b) || W || Yh(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ia, Ja, Ka, Ba.injectEventPluginsByName, pa, Qa, function (a) {\n      ya(a, Pa);\n    }, Eb, Fb, Dd, Da]\n  }\n};\n\nfunction Ui(a, b) {\n  Qi(a) ? void 0 : x(\"299\", \"unstable_createRoot\");\n  return new Pi(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return Te(n({}, a, {\n    overrideProps: null,\n    currentDispatcherRef: Tb.ReactCurrentDispatcher,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = hd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ha,\n  bundleType: 0,\n  version: \"16.8.2\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar Wi = {\n  default: Vi\n},\n    Xi = Wi && Vi || Wi;\nmodule.exports = Xi.default || Xi;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.13.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar d = null,\n    e = !1,\n    g = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = d.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = d,\n      b = d.next;\n  if (d === b) d = null;else {\n    var c = d.previous;\n    d = c.next = b;\n    b.previous = c;\n  }\n  a.next = a.previous = null;\n  c = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var f = g,\n      Q = l;\n  g = a;\n  l = b;\n\n  try {\n    var h = c();\n  } finally {\n    g = f, l = Q;\n  }\n\n  if (\"function\" === typeof h) if (h = {\n    callback: h,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === d) d = h.next = h.previous = h;else {\n    c = null;\n    a = d;\n\n    do {\n      if (a.expirationTime >= b) {\n        c = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== d);\n\n    null === c ? c = d : c === d && (d = h, p());\n    b = c.previous;\n    b.next = c.previous = h;\n    h.next = c;\n    h.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== d && 1 === d.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== d && 1 === d.priorityLevel);\n    } finally {\n      m = !1, null !== d ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = e;\n  e = a;\n\n  try {\n    if (a) for (; null !== d;) {\n      var c = exports.unstable_now();\n\n      if (d.expirationTime <= c) {\n        do {\n          u();\n        } while (null !== d && d.expirationTime <= c);\n      } else break;\n    } else if (null !== d) {\n      do {\n        u();\n      } while (null !== d && !w());\n    }\n  } finally {\n    m = !1, e = b, null !== d ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var c = exports.unstable_now(),\n        f = !1;\n    if (0 >= P - c) if (-1 !== b && b <= c) f = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(f);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var c = g,\n      f = k;\n  g = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_next = function (a) {\n  switch (g) {\n    case 1:\n    case 2:\n    case 3:\n      var b = 3;\n      break;\n\n    default:\n      b = g;\n  }\n\n  var c = g,\n      f = k;\n  g = b;\n  k = exports.unstable_now();\n\n  try {\n    return a();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var c = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = c + b.timeout;else switch (g) {\n    case 1:\n      b = c + -1;\n      break;\n\n    case 2:\n      b = c + 250;\n      break;\n\n    case 5:\n      b = c + 1073741823;\n      break;\n\n    case 4:\n      b = c + 1E4;\n      break;\n\n    default:\n      b = c + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: g,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === d) d = a.next = a.previous = a, p();else {\n    c = null;\n    var f = d;\n\n    do {\n      if (f.expirationTime > b) {\n        c = f;\n        break;\n      }\n\n      f = f.next;\n    } while (f !== d);\n\n    null === c ? c = d : c === d && (d = a, p());\n    b = c.previous;\n    b.next = c.previous = a;\n    a.next = c;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) d = null;else {\n      a === d && (d = b);\n      var c = a.previous;\n      c.next = b;\n      b.previous = c;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = g;\n  return function () {\n    var c = g,\n        f = k;\n    g = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      g = c, k = f, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return g;\n};\n\nexports.unstable_shouldYield = function () {\n  return !e && (null !== d && d.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== d && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return d;\n};","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || function () {\n  function F() {}\n\n  return function (o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n\n    F.prototype = o;\n    return new F();\n  };\n}(); // Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\n\n\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\n\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError; // ParsingError metadata for acceptable ParsingErrors.\n\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n}; // Try to parse input as a time stamp.\n\nfunction parseTimeStamp(input) {\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0, m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n} // A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\n\n\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function set(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function get(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function has(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function alt(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function integer(k, v) {\n    if (/^-?\\d+$/.test(v)) {\n      // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function percent(k, v) {\n    var m;\n\n    if (m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n      v = parseFloat(v);\n\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n\n    return false;\n  }\n}; // Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\n\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n\n    var kv = groups[i].split(keyValueDelim);\n\n    if (kv.length !== 2) {\n      continue;\n    }\n\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input; // 4.1 WebVTT timestamp\n\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n    } // Remove time stamp from input.\n\n\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  } // 4.4.2 WebVTT cue settings\n\n\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n    parseOptions(input, function (k, v) {\n      switch (k) {\n        case \"region\":\n          // Find the last region we parsed with the same region id.\n          for (var i = regionList.length - 1; i >= 0; i--) {\n            if (regionList[i].id === v) {\n              settings.set(k, regionList[i].region);\n              break;\n            }\n          }\n\n          break;\n\n        case \"vertical\":\n          settings.alt(k, v, [\"rl\", \"lr\"]);\n          break;\n\n        case \"line\":\n          var vals = v.split(\",\"),\n              vals0 = vals[0];\n          settings.integer(k, vals0);\n          settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n          settings.alt(k, vals0, [\"auto\"]);\n\n          if (vals.length === 2) {\n            settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n\n          break;\n\n        case \"position\":\n          vals = v.split(\",\");\n          settings.percent(k, vals[0]);\n\n          if (vals.length === 2) {\n            settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n          }\n\n          break;\n\n        case \"size\":\n          settings.percent(k, v);\n          break;\n\n        case \"align\":\n          settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n          break;\n      }\n    }, /:/, /\\s/); // Apply default values for any missing fields.\n\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  } // 4.1 WebVTT cue timings.\n\n\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n\n  skipWhitespace();\n\n  if (input.substr(0, 3) !== \"-->\") {\n    // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n  }\n\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n  // 4.1 WebVTT cue settings list.\n\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200E\",\n  \"&rlm;\": \"\\u200F\",\n  \"&nbsp;\": \"\\xA0\"\n};\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n}; // Parse content into a document fragment.\n\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    } // Consume 'n' characters from the input.\n\n\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/); // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n\n    return consume(m[1] ? m[1] : m[2]);\n  } // Unescape a string 's'.\n\n\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n\n  function unescape(s) {\n    while (m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/)) {\n      s = s.replace(m[0], unescape1);\n    }\n\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n  } // Create an element for this tag.\n\n\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n\n    if (!tagName) {\n      return null;\n    }\n\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        } // Otherwise just ignore the end tag.\n\n\n        continue;\n      }\n\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/); // If we can't parse the tag, skip to the next tag.\n\n      if (!m) {\n        continue;\n      } // Try to construct an element, and ignore the tag if we couldn't.\n\n\n      node = createElement(m[1], m[3]);\n\n      if (!node) {\n        continue;\n      } // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n\n\n      if (!shouldAdd(current, node)) {\n        continue;\n      } // Set the class list (as a list of classes, separated by space).\n\n\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      } // Append the node to the current node, and enter the scope of the new\n      // node.\n\n\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    } // Text nodes are leaf nodes.\n\n\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n} // This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n\n\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n\n      return text;\n    }\n\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n\n  while (text = nextTextNode(nodeStack)) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n    return cue.line;\n  }\n\n  if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n\n  return ++count * -1;\n}\n\nfunction StyleBox() {} // Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\n\n\nStyleBox.prototype.applyStyles = function (styles, div) {\n  div = div || this.div;\n\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function (val, unit) {\n  return val === 0 ? 0 : val + unit;\n}; // Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\n\n\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue; // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n  this.applyStyles(styles, this.cueDiv); // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv); // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n\n  var textPos = 0;\n\n  switch (cue.positionAlign) {\n    case \"start\":\n      textPos = cue.position;\n      break;\n\n    case \"middle\":\n      textPos = cue.position - cue.size / 2;\n      break;\n\n    case \"end\":\n      textPos = cue.position - cue.size;\n      break;\n  } // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n\n\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left: this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    }); // Vertical box orientation; textPos is the distance from the top edge of the\n    // area to the top edge of the box and cue.size is the height extending\n    // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function (box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\n\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox; // Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\n\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect(); // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n\n    lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n  }\n\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || top + (obj.height || height);\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n} // Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\n\n\nBoxPosition.prototype.move = function (axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n\n  switch (axis) {\n    case \"+x\":\n      this.left += toMove;\n      this.right += toMove;\n      break;\n\n    case \"-x\":\n      this.left -= toMove;\n      this.right -= toMove;\n      break;\n\n    case \"+y\":\n      this.top += toMove;\n      this.bottom += toMove;\n      break;\n\n    case \"-y\":\n      this.top -= toMove;\n      this.bottom -= toMove;\n      break;\n  }\n}; // Check if this box overlaps another box, b2.\n\n\nBoxPosition.prototype.overlaps = function (b2) {\n  return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n}; // Check if this box overlaps any other boxes in boxes.\n\n\nBoxPosition.prototype.overlapsAny = function (boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // Check if this box is within another box.\n\n\nBoxPosition.prototype.within = function (container) {\n  return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n}; // Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\n\n\nBoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n  switch (axis) {\n    case \"+x\":\n      return this.left < container.left;\n\n    case \"-x\":\n      return this.right > container.right;\n\n    case \"+y\":\n      return this.top < container.top;\n\n    case \"-y\":\n      return this.bottom > container.bottom;\n  }\n}; // Find the percentage of the area that this box is overlapping with another\n// box.\n\n\nBoxPosition.prototype.intersectPercentage = function (b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n}; // Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\n\n\nBoxPosition.prototype.toCSSCompatValues = function (reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n}; // Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\n\n\nBoxPosition.getSimpleBoxPosition = function (obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n  obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || top + (obj.height || height),\n    width: obj.width || width\n  };\n  return ret;\n}; // Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\n\n\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n        b.move(axis[i]);\n      } // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n\n\n      if (b.within(containerBox)) {\n        return b;\n      }\n\n      var p = b.intersectPercentage(containerBox); // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      } // Reset the box position to the specified position.\n\n\n      b = new BoxPosition(specifiedPosition);\n    }\n\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = []; // If we have a line number to align the cue to.\n\n  if (cue.snapToLines) {\n    var size;\n\n    switch (cue.vertical) {\n      case \"\":\n        axis = [\"+y\", \"-y\"];\n        size = \"height\";\n        break;\n\n      case \"rl\":\n        axis = [\"+x\", \"-x\"];\n        size = \"width\";\n        break;\n\n      case \"lr\":\n        axis = [\"-x\", \"+x\"];\n        size = \"width\";\n        break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0]; // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    } // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n\n\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    } // Move the box to the specified position. This may not be its best\n    // position.\n\n\n    boxPosition.move(initialAxis, position);\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n\n    switch (cue.lineAlign) {\n      case \"middle\":\n        linePos -= calculatedPercentage / 2;\n        break;\n\n      case \"end\":\n        linePos -= calculatedPercentage;\n        break;\n    } // Apply initial line position to the cue box.\n\n\n    switch (cue.vertical) {\n      case \"\":\n        styleBox.applyStyles({\n          top: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n\n      case \"rl\":\n        styleBox.applyStyles({\n          left: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n\n      case \"lr\":\n        styleBox.applyStyles({\n          right: styleBox.formatStyle(linePos, \"%\")\n        });\n        break;\n    }\n\n    axis = [\"+y\", \"-x\", \"+x\", \"-y\"]; // Get the box position again after we've applied the specified positioning\n    // to it.\n\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {} // Nothing\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\n\n\nWebVTT.StringDecoder = function () {\n  return {\n    decode: function decode(data) {\n      if (!data) {\n        return \"\";\n      }\n\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function (window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\"; // Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\n\nWebVTT.processCues = function (window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  } // Remove all previous children.\n\n\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay); // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n\n    return false;\n  } // We don't need to recompute the cues' display states. Just reuse them.\n\n\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function () {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i]; // Compute the intial position and styles of the cue div.\n\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div); // Move the cue div to it's correct line position.\n\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions); // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n\n      cue.displayState = styleBox.div;\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function (window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function reportOrThrowError(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function parse(data) {\n    var self = this; // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {\n        stream: true\n      });\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n\n      var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.\n\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n\n      self.buffer = buffer.substr(pos);\n      return line;\n    } // 3.4 WebVTT region and WebVTT region settings syntax\n\n\n    function parseRegion(input) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"id\":\n            settings.set(k, v);\n            break;\n\n          case \"width\":\n            settings.percent(k, v);\n            break;\n\n          case \"lines\":\n            settings.integer(k, v);\n            break;\n\n          case \"regionanchor\":\n          case \"viewportanchor\":\n            var xy = v.split(',');\n\n            if (xy.length !== 2) {\n              break;\n            } // We have to make sure both x and y parse, so use a temporary\n            // settings object here.\n\n\n            var anchor = new Settings();\n            anchor.percent(\"x\", xy[0]);\n            anchor.percent(\"y\", xy[1]);\n\n            if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n              break;\n            }\n\n            settings.set(k + \"X\", anchor.get(\"x\"));\n            settings.set(k + \"Y\", anchor.get(\"y\"));\n            break;\n\n          case \"scroll\":\n            settings.alt(k, v, [\"up\"]);\n            break;\n        }\n      }, /=/, /\\s/); // Create the region, using default values for any values that were not\n      // specified.\n\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\"); // Register the region.\n\n        self.onregion && self.onregion(region); // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    } // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n\n\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"MPEGT\":\n            settings.integer(k + 'S', v);\n            break;\n\n          case \"LOCA\":\n            settings.set(k + 'L', parseTimeStamp(v));\n            break;\n        }\n      }, /[^\\d]:/, /,/);\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    } // 3.2 WebVTT metadata header syntax\n\n\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"X-TIMESTAMP-MAP\":\n              parseTimestampMap(v);\n              break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"Region\":\n              // 3.3 WebVTT region metadata header syntax\n              parseRegion(v);\n              break;\n          }\n        }, /:/);\n      }\n    } // 5.1 WebVTT file parsing.\n\n\n    try {\n      var line;\n\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n          case \"HEADER\":\n            // 13-18 - Allow a header (metadata) under the WEBVTT line.\n            if (/:/.test(line)) {\n              parseHeader(line);\n            } else if (!line) {\n              // An empty line terminates the header and starts the body (cues).\n              self.state = \"ID\";\n            }\n\n            continue;\n\n          case \"NOTE\":\n            // Ignore NOTE blocks.\n            if (!line) {\n              self.state = \"ID\";\n            }\n\n            continue;\n\n          case \"ID\":\n            // Check for the start of NOTE blocks.\n            if (/^NOTE($|[ \\t])/.test(line)) {\n              self.state = \"NOTE\";\n              break;\n            } // 19-29 - Allow any number of line terminators, then initialize new cue values.\n\n\n            if (!line) {\n              continue;\n            }\n\n            self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n            self.state = \"CUE\"; // 30-39 - Check if self line contains an optional identifier or timing data.\n\n            if (line.indexOf(\"-->\") === -1) {\n              self.cue.id = line;\n              continue;\n            }\n\n          // Process line as start of a cue.\n\n          /*falls through*/\n\n          case \"CUE\":\n            // 40 - Collect cue timings and settings.\n            try {\n              parseCue(line, self.cue, self.regionList);\n            } catch (e) {\n              self.reportOrThrowError(e); // In case of an error ignore rest of the cue.\n\n              self.cue = null;\n              self.state = \"BADCUE\";\n              continue;\n            }\n\n            self.state = \"CUETEXT\";\n            continue;\n\n          case \"CUETEXT\":\n            var hasSubstring = line.indexOf(\"-->\") !== -1; // 34 - If we have an empty line then report the cue.\n            // 35 - If we have the special substring '-->' then report the cue,\n            // but do not collect the line as we need to process the current\n            // one as a new cue.\n\n            if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n              // We are done parsing self cue.\n              self.oncue && self.oncue(self.cue);\n              self.cue = null;\n              self.state = \"ID\";\n              continue;\n            }\n\n            if (self.cue.text) {\n              self.cue.text += \"\\n\";\n            }\n\n            self.cue.text += line;\n            continue;\n\n          case \"BADCUE\":\n            // BADCUE\n            // 54-62 - Collect and discard the remaining cue.\n            if (!line) {\n              self.state = \"ID\";\n            }\n\n            continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e); // If we are currently parsing a cue, report what we have.\n\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n\n      self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n\n    return this;\n  },\n  flush: function flush() {\n    var self = this;\n\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.\n\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      } // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n\n\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n    }\n\n    self.onflush && self.onflush();\n    return this;\n  }\n};\nmodule.exports = WebVTT;","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function get() {\n        return _id;\n      },\n      set: function set(value) {\n        _id = \"\" + value;\n      }\n    },\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function get() {\n        return _pauseOnExit;\n      },\n      set: function set(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n    \"startTime\": {\n      enumerable: true,\n      get: function get() {\n        return _startTime;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"endTime\": {\n      enumerable: true,\n      get: function get() {\n        return _endTime;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"text\": {\n      enumerable: true,\n      get: function get() {\n        return _text;\n      },\n      set: function set(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"region\": {\n      enumerable: true,\n      get: function get() {\n        return _region;\n      },\n      set: function set(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"vertical\": {\n      enumerable: true,\n      get: function get() {\n        return _vertical;\n      },\n      set: function set(value) {\n        var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.\n\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"snapToLines\": {\n      enumerable: true,\n      get: function get() {\n        return _snapToLines;\n      },\n      set: function set(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"line\": {\n      enumerable: true,\n      get: function get() {\n        return _line;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"lineAlign\": {\n      enumerable: true,\n      get: function get() {\n        return _lineAlign;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"position\": {\n      enumerable: true,\n      get: function get() {\n        return _position;\n      },\n      set: function set(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"positionAlign\": {\n      enumerable: true,\n      get: function get() {\n        return _positionAlign;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n    \"size\": {\n      enumerable: true,\n      get: function get() {\n        return _size;\n      },\n      set: function set(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n    \"align\": {\n      enumerable: true,\n      get: function get() {\n        return _align;\n      },\n      set: function set(value) {\n        var setting = findAlignSetting(value);\n\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n  /**\n   * Other <track> spec defined properties\n   */\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n\n  this.displayState = undefined;\n}\n/**\n * VTTCue methods\n */\n\n\nVTTCue.prototype.getCueAsHTML = function () {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && value >= 0 && value <= 100;\n} // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n\n\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function get() {\n        return _width;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function get() {\n        return _lines;\n      },\n      set: function set(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function get() {\n        return _regionAnchorY;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function get() {\n        return _regionAnchorX;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function get() {\n        return _viewportAnchorY;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function get() {\n        return _viewportAnchorX;\n      },\n      set: function set(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function get() {\n        return _scroll;\n      },\n      set: function set(value) {\n        var setting = findScrollSetting(value); // Have to check for false as an empty string is a legal value.\n\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;","module.exports = isFunction;\nvar toString = Object.prototype.toString;\n\nfunction isFunction(fn) {\n  var string = toString.call(fn);\n  return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && ( // IE8 and below\n  fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n}\n\n;","var trim = require('string.prototype.trim'),\n    forEach = require('for-each'),\n    isArray = function isArray(arg) {\n  return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\nmodule.exports = function (headers) {\n  if (!headers) return {};\n  var result = {};\n  forEach(trim(headers).split('\\n'), function (row) {\n    var index = row.indexOf(':'),\n        key = trim(row.slice(0, index)).toLowerCase(),\n        value = trim(row.slice(index + 1));\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};","'use strict';\n\nvar bind = require('function-bind');\n\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\n\nvar getPolyfill = require('./polyfill');\n\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\ndefine(boundTrim, {\n  getPolyfill: getPolyfill,\n  implementation: implementation,\n  shim: shim\n});\nmodule.exports = boundTrim;","'use strict';\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n  var target = this;\n\n  if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n    throw new TypeError(ERROR_MESSAGE + target);\n  }\n\n  var args = slice.call(arguments, 1);\n  var bound;\n\n  var binder = function binder() {\n    if (this instanceof bound) {\n      var result = target.apply(this, args.concat(slice.call(arguments)));\n\n      if (Object(result) === result) {\n        return result;\n      }\n\n      return this;\n    } else {\n      return target.apply(that, args.concat(slice.call(arguments)));\n    }\n  };\n\n  var boundLength = Math.max(0, target.length - args.length);\n  var boundArgs = [];\n\n  for (var i = 0; i < boundLength; i++) {\n    boundArgs.push('$' + i);\n  }\n\n  bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n  if (target.prototype) {\n    var Empty = function Empty() {};\n\n    Empty.prototype = target.prototype;\n    bound.prototype = new Empty();\n    Empty.prototype = null;\n  }\n\n  return bound;\n};","'use strict';\n\nvar slice = Array.prototype.slice;\n\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) {\n  return origKeys(o);\n} : require('./implementation');\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n  if (Object.keys) {\n    var keysWorksWithArguments = function () {\n      // Safari 5.0 bug\n      var args = Object.keys(arguments);\n      return args && args.length === arguments.length;\n    }(1, 2);\n\n    if (!keysWorksWithArguments) {\n      Object.keys = function keys(object) {\n        // eslint-disable-line func-name-matching\n        if (isArgs(object)) {\n          return originalKeys(slice.call(object));\n        }\n\n        return originalKeys(object);\n      };\n    }\n  } else {\n    Object.keys = keysShim;\n  }\n\n  return Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;","'use strict';\n\nvar keysShim;\n\nif (!Object.keys) {\n  // modified from https://github.com/es-shims/es5-shim\n  var has = Object.prototype.hasOwnProperty;\n  var toStr = Object.prototype.toString;\n\n  var isArgs = require('./isArguments'); // eslint-disable-line global-require\n\n\n  var isEnumerable = Object.prototype.propertyIsEnumerable;\n  var hasDontEnumBug = !isEnumerable.call({\n    toString: null\n  }, 'toString');\n  var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n  var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n\n  var equalsConstructorPrototype = function equalsConstructorPrototype(o) {\n    var ctor = o.constructor;\n    return ctor && ctor.prototype === o;\n  };\n\n  var excludedKeys = {\n    $applicationCache: true,\n    $console: true,\n    $external: true,\n    $frame: true,\n    $frameElement: true,\n    $frames: true,\n    $innerHeight: true,\n    $innerWidth: true,\n    $outerHeight: true,\n    $outerWidth: true,\n    $pageXOffset: true,\n    $pageYOffset: true,\n    $parent: true,\n    $scrollLeft: true,\n    $scrollTop: true,\n    $scrollX: true,\n    $scrollY: true,\n    $self: true,\n    $webkitIndexedDB: true,\n    $webkitStorageInfo: true,\n    $window: true\n  };\n\n  var hasAutomationEqualityBug = function () {\n    /* global window */\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    for (var k in window) {\n      try {\n        if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n          try {\n            equalsConstructorPrototype(window[k]);\n          } catch (e) {\n            return true;\n          }\n        }\n      } catch (e) {\n        return true;\n      }\n    }\n\n    return false;\n  }();\n\n  var equalsConstructorPrototypeIfNotBuggy = function equalsConstructorPrototypeIfNotBuggy(o) {\n    /* global window */\n    if (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n      return equalsConstructorPrototype(o);\n    }\n\n    try {\n      return equalsConstructorPrototype(o);\n    } catch (e) {\n      return false;\n    }\n  };\n\n  keysShim = function keys(object) {\n    var isObject = object !== null && typeof object === 'object';\n    var isFunction = toStr.call(object) === '[object Function]';\n    var isArguments = isArgs(object);\n    var isString = isObject && toStr.call(object) === '[object String]';\n    var theKeys = [];\n\n    if (!isObject && !isFunction && !isArguments) {\n      throw new TypeError('Object.keys called on a non-object');\n    }\n\n    var skipProto = hasProtoEnumBug && isFunction;\n\n    if (isString && object.length > 0 && !has.call(object, 0)) {\n      for (var i = 0; i < object.length; ++i) {\n        theKeys.push(String(i));\n      }\n    }\n\n    if (isArguments && object.length > 0) {\n      for (var j = 0; j < object.length; ++j) {\n        theKeys.push(String(j));\n      }\n    } else {\n      for (var name in object) {\n        if (!(skipProto && name === 'prototype') && has.call(object, name)) {\n          theKeys.push(String(name));\n        }\n      }\n    }\n\n    if (hasDontEnumBug) {\n      var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n      for (var k = 0; k < dontEnums.length; ++k) {\n        if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n          theKeys.push(dontEnums[k]);\n        }\n      }\n    }\n\n    return theKeys;\n  };\n}\n\nmodule.exports = keysShim;","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\n\nvar $isNaN = require('./helpers/isNaN');\n\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\n\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\n\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has'); // https://es5.github.io/#x9\n\n\nvar ES5 = {\n  ToPrimitive: toPrimitive,\n  ToBoolean: function ToBoolean(value) {\n    return !!value;\n  },\n  ToNumber: function ToNumber(value) {\n    return +value; // eslint-disable-line no-implicit-coercion\n  },\n  ToInteger: function ToInteger(value) {\n    var number = this.ToNumber(value);\n\n    if ($isNaN(number)) {\n      return 0;\n    }\n\n    if (number === 0 || !$isFinite(number)) {\n      return number;\n    }\n\n    return sign(number) * Math.floor(Math.abs(number));\n  },\n  ToInt32: function ToInt32(x) {\n    return this.ToNumber(x) >> 0;\n  },\n  ToUint32: function ToUint32(x) {\n    return this.ToNumber(x) >>> 0;\n  },\n  ToUint16: function ToUint16(value) {\n    var number = this.ToNumber(value);\n\n    if ($isNaN(number) || number === 0 || !$isFinite(number)) {\n      return 0;\n    }\n\n    var posInt = sign(number) * Math.floor(Math.abs(number));\n    return mod(posInt, 0x10000);\n  },\n  ToString: function ToString(value) {\n    return $String(value);\n  },\n  ToObject: function ToObject(value) {\n    this.CheckObjectCoercible(value);\n    return $Object(value);\n  },\n  CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n    /* jshint eqnull:true */\n    if (value == null) {\n      throw new $TypeError(optMessage || 'Cannot call method on ' + value);\n    }\n\n    return value;\n  },\n  IsCallable: IsCallable,\n  SameValue: function SameValue(x, y) {\n    if (x === y) {\n      // 0 === -0, but they are not identical.\n      if (x === 0) {\n        return 1 / x === 1 / y;\n      }\n\n      return true;\n    }\n\n    return $isNaN(x) && $isNaN(y);\n  },\n  // https://www.ecma-international.org/ecma-262/5.1/#sec-8\n  Type: function Type(x) {\n    if (x === null) {\n      return 'Null';\n    }\n\n    if (typeof x === 'undefined') {\n      return 'Undefined';\n    }\n\n    if (typeof x === 'function' || typeof x === 'object') {\n      return 'Object';\n    }\n\n    if (typeof x === 'number') {\n      return 'Number';\n    }\n\n    if (typeof x === 'boolean') {\n      return 'Boolean';\n    }\n\n    if (typeof x === 'string') {\n      return 'String';\n    }\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  IsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n    if (this.Type(Desc) !== 'Object') {\n      return false;\n    }\n\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) {\n      // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n  IsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n  IsDataDescriptor: function IsDataDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n      return false;\n    }\n\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n  IsGenericDescriptor: function IsGenericDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return false;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n      return true;\n    }\n\n    return false;\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n  FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n    if (typeof Desc === 'undefined') {\n      return Desc;\n    }\n\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (this.IsDataDescriptor(Desc)) {\n      return {\n        value: Desc['[[Value]]'],\n        writable: !!Desc['[[Writable]]'],\n        enumerable: !!Desc['[[Enumerable]]'],\n        configurable: !!Desc['[[Configurable]]']\n      };\n    } else if (this.IsAccessorDescriptor(Desc)) {\n      return {\n        get: Desc['[[Get]]'],\n        set: Desc['[[Set]]'],\n        enumerable: !!Desc['[[Enumerable]]'],\n        configurable: !!Desc['[[Configurable]]']\n      };\n    } else {\n      throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n    }\n  },\n  // https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n  ToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n    if (this.Type(Obj) !== 'Object') {\n      throw new $TypeError('ToPropertyDescriptor requires an object');\n    }\n\n    var desc = {};\n\n    if (has(Obj, 'enumerable')) {\n      desc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n    }\n\n    if (has(Obj, 'configurable')) {\n      desc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n    }\n\n    if (has(Obj, 'value')) {\n      desc['[[Value]]'] = Obj.value;\n    }\n\n    if (has(Obj, 'writable')) {\n      desc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n    }\n\n    if (has(Obj, 'get')) {\n      var getter = Obj.get;\n\n      if (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n        throw new TypeError('getter must be a function');\n      }\n\n      desc['[[Get]]'] = getter;\n    }\n\n    if (has(Obj, 'set')) {\n      var setter = Obj.set;\n\n      if (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n        throw new $TypeError('setter must be a function');\n      }\n\n      desc['[[Set]]'] = setter;\n    }\n\n    if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n      throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n    }\n\n    return desc;\n  }\n};\nmodule.exports = ES5;","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) {\n      // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n\n  console.log(predicate(ES, value), value);\n};","module.exports = Number.isNaN || function isNaN(a) {\n  return a !== a;\n};","var $isNaN = Number.isNaN || function (a) {\n  return a !== a;\n};\n\nmodule.exports = Number.isFinite || function (x) {\n  return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity;\n};","module.exports = function sign(number) {\n  return number >= 0 ? 1 : -1;\n};","module.exports = function mod(number, modulo) {\n  var remain = number % modulo;\n  return Math.floor(remain >= 0 ? remain : remain + modulo);\n};","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable'); // http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\n\n\nvar ES5internalSlots = {\n  '[[DefaultValue]]': function DefaultValue(O) {\n    var actualHint;\n\n    if (arguments.length > 1) {\n      actualHint = arguments[1];\n    } else {\n      actualHint = toStr.call(O) === '[object Date]' ? String : Number;\n    }\n\n    if (actualHint === String || actualHint === Number) {\n      var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n      var value, i;\n\n      for (i = 0; i < methods.length; ++i) {\n        if (isCallable(O[methods[i]])) {\n          value = O[methods[i]]();\n\n          if (isPrimitive(value)) {\n            return value;\n          }\n        }\n      }\n\n      throw new TypeError('No default value');\n    }\n\n    throw new TypeError('invalid [[DefaultValue]] hint supplied');\n  }\n}; // http://ecma-international.org/ecma-262/5.1/#sec-9.1\n\nmodule.exports = function ToPrimitive(input) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  if (arguments.length > 1) {\n    return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n  }\n\n  return ES5internalSlots['[[DefaultValue]]'](input);\n};","module.exports = function isPrimitive(value) {\n  return value === null || typeof value !== 'function' && typeof value !== 'object';\n};","'use strict';\n\nvar define = require('define-properties');\n\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n  var polyfill = getPolyfill();\n  define(String.prototype, {\n    trim: polyfill\n  }, {\n    trim: function trim() {\n      return String.prototype.trim !== polyfill;\n    }\n  });\n  return polyfill;\n};","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (hasOwnProperty.call(array, i)) {\n      if (receiver == null) {\n        iterator(array[i], i, array);\n      } else {\n        iterator.call(receiver, array[i], i, array);\n      }\n    }\n  }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n  for (var i = 0, len = string.length; i < len; i++) {\n    // no such thing as a sparse string.\n    if (receiver == null) {\n      iterator(string.charAt(i), i, string);\n    } else {\n      iterator.call(receiver, string.charAt(i), i, string);\n    }\n  }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n  for (var k in object) {\n    if (hasOwnProperty.call(object, k)) {\n      if (receiver == null) {\n        iterator(object[k], k, object);\n      } else {\n        iterator.call(receiver, object[k], k, object);\n      }\n    }\n  }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n  if (!isCallable(iterator)) {\n    throw new TypeError('iterator must be a function');\n  }\n\n  var receiver;\n\n  if (arguments.length >= 3) {\n    receiver = thisArg;\n  }\n\n  if (toStr.call(list) === '[object Array]') {\n    forEachArray(list, iterator, receiver);\n  } else if (typeof list === 'string') {\n    forEachString(list, iterator, receiver);\n  } else {\n    forEachObject(list, iterator, receiver);\n  }\n};\n\nmodule.exports = forEach;","module.exports = extend;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n  var target = {};\n\n  for (var i = 0; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}","var toUnsigned = function toUnsigned(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};","// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n  var i,\n      currentNal,\n      currentFrame = [],\n      frames = [];\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  } // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n\n\n  if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  } // Push the final frame\n\n\n  frames.push(currentFrame);\n  return frames;\n}; // Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\n\n\nvar groupFramesIntoGops = function groupFramesIntoGops(frames) {\n  var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration; // push the final Gop\n\n  gops.push(currentGop);\n  return gops;\n};\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\n\n\nvar extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\n\n\nvar createDefaultSample = function createDefaultSample() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\n\n\nvar sampleForFrame = function sampleForFrame(frame, dataOffset) {\n  var sample = createDefaultSample();\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n}; // generate the track's sample table from an array of gops\n\n\nvar generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n  var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n      sample = sampleForFrame(currentFrame, dataOffset);\n      dataOffset += sample.size;\n      samples.push(sample);\n    }\n  }\n\n  return samples;\n}; // generate the track's raw mdat data from an array of gops\n\n\nvar concatenateNalData = function concatenateNalData(gops) {\n  var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h]; // For each Frame..\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i]; // For each NAL..\n\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};","var coneOfSilence = require('../data/silence');\n\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\n\nvar sumFrameByteLengths = function sumFrameByteLengths(array) {\n  var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n}; // Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\n\n\nvar prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n  var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  } // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n\n\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n}; // If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\n\n\nvar trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  } // We will need to recalculate the earliest segment Dts\n\n\n  track.minSegmentDts = Infinity;\n  return adtsFrames.filter(function (currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    } // Otherwise, discard it\n\n\n    return false;\n  });\n}; // generate the track's raw mdat data from an array of frames\n\n\nvar generateSampleTable = function generateSampleTable(frames) {\n  var i,\n      currentFrame,\n      samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n    });\n  }\n\n  return samples;\n}; // generate the track's sample table from an array of frames\n\n\nvar concatenateFrameData = function concatenateFrameData(frames) {\n  var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};","var highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\nvar zeroFill = function zeroFill(count) {\n  var a = [];\n\n  while (count--) {\n    a.push(0);\n  }\n\n  return a;\n};\n\nvar makeTable = function makeTable(metaTable) {\n  return Object.keys(metaTable).reduce(function (obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n}; // Frames-of-silence to use for filling in missing AAC frames\n\n\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\nmodule.exports = makeTable(coneOfSilence);","var ONE_SECOND_IN_TS = 90000,\n    // 90kHz clock\nsecondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs;\n\nsecondsToVideoTs = function secondsToVideoTs(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function videoTsToSeconds(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};","var ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\n\nvar collectDtsInfo = function collectDtsInfo(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\n\n\nvar clearDtsInfo = function clearDtsInfo(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\n\n\nvar calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n  var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n\n\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n  baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js'),\n    CaptionStream = require('./caption-stream'),\n    StreamTypes = require('./stream-types'),\n    TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js'); // object types\n\n\nvar _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\nvar MP2T_PACKET_LENGTH = 188,\n    // bytes\nSYNC_BYTE = 0x47;\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\n\n_TransportPacketStream = function TransportPacketStream() {\n  var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n      bytesInBuffer = 0;\n\n  _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n\n\n  this.push = function (bytes) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    } // While we have enough data for a packet\n\n\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n\n\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n\n\n  this.flush = function () {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n\n    this.trigger('done');\n  };\n};\n\n_TransportPacketStream.prototype = new Stream();\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\n\n_TransportParseStream = function TransportParseStream() {\n  var parsePsi, parsePat, parsePmt, self;\n\n  _TransportParseStream.prototype.init.call(this);\n\n  self = this;\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function parsePsi(payload, psi) {\n    var offset = 0; // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function parsePat(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n    // skip the PSI header and parse the first PMT entry\n\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n\n\n  parsePmt = function parsePmt(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(payload[5] & 0x01)) {\n      return;\n    } // overwrite any existing program map table\n\n\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    }; // the mapping table ends at the end of the current section\n\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n    offset = 12 + programInfoLength;\n\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n\n      if (streamType === StreamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      } // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    } // record the map on the packet as well\n\n\n    pmt.programMapTable = self.programMapTable;\n  };\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n\n\n  this.push = function (packet) {\n    var result = {},\n        offset = 4;\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[offset] + 1;\n    } // parse the rest of the packet based on the type\n\n\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function (packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n    this.trigger('data', result);\n  };\n};\n\n_TransportParseStream.prototype = new Stream();\n_TransportParseStream.STREAM_TYPES = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\n\n_ElementaryStream = function ElementaryStream() {\n  var self = this,\n      // PES packet fragments\n  video = {\n    data: [],\n    size: 0\n  },\n      audio = {\n    data: [],\n    size: 0\n  },\n      timedMetadata = {\n    data: [],\n    size: 0\n  },\n      parsePes = function parsePes(payload, pes) {\n    var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n    pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n    pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n      pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    } // the data section starts immediately after the PES header.\n    // pes_header_data_length specifies the number of header bytes\n    // that follow the last byte of the field.\n\n\n    pes.data = payload.subarray(9 + payload[8]);\n  },\n\n  /**\n    * Pass completely parsed PES packets to the next stream in the pipeline\n   **/\n  flushStream = function flushStream(stream, type, forceFlush) {\n    var packetData = new Uint8Array(stream.size),\n        event = {\n      type: type\n    },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment; // do nothing if there is not enough buffered data for a complete\n    // PES header\n\n    if (!stream.data.length || stream.size < 9) {\n      return;\n    }\n\n    event.trackId = stream.data[0].pid; // reassemble the packet\n\n    for (i = 0; i < stream.data.length; i++) {\n      fragment = stream.data[i];\n      packetData.set(fragment.data, offset);\n      offset += fragment.data.byteLength;\n    } // parse assembled packet's PES header\n\n\n    parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n    // check that there is enough stream data to fill the packet\n\n    packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n    if (forceFlush || packetFlushable) {\n      stream.size = 0;\n      stream.data.length = 0;\n    } // only emit packets that are complete. this is to avoid assembling\n    // incomplete PES packets due to poor segmentation\n\n\n    if (packetFlushable) {\n      self.trigger('data', event);\n    }\n  };\n\n  _ElementaryStream.prototype.init.call(this);\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n\n\n  this.push = function (data) {\n    ({\n      pat: function pat() {// we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function pes() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n          case StreamTypes.H264_STREAM_TYPE:\n          case m2tsStreamTypes.H264_STREAM_TYPE:\n            stream = video;\n            streamType = 'video';\n            break;\n\n          case StreamTypes.ADTS_STREAM_TYPE:\n            stream = audio;\n            streamType = 'audio';\n            break;\n\n          case StreamTypes.METADATA_STREAM_TYPE:\n            stream = timedMetadata;\n            streamType = 'timed-metadata';\n            break;\n\n          default:\n            // ignore unknown stream types\n            return;\n        } // if a new packet is starting, we can flush the completed\n        // packet\n\n\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        } // buffer this fragment until we are sure we've received the\n        // complete payload\n\n\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function pmt() {\n        var event = {\n          type: 'metadata',\n          tracks: []\n        },\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n\n\n  this.flush = function () {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\n\n_ElementaryStream.prototype = new Stream();\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: _TransportPacketStream,\n  TransportParseStream: _TransportParseStream,\n  ElementaryStream: _ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;","/**\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\n\nvar Stream = require('../utils/stream'),\n    StreamTypes = require('./stream-types'),\n    // return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\npercentEncode = function percentEncode(bytes, start, end) {\n  var i,\n      result = '';\n\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n\n  return result;\n},\n    // return the string representation of the specified byte range,\n// interpreted as UTf-8.\nparseUtf8 = function parseUtf8(bytes, start, end) {\n  return decodeURIComponent(percentEncode(bytes, start, end));\n},\n    // return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nparseIso88591 = function parseIso88591(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n},\n    parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n  return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n},\n    tagParsers = {\n  TXXX: function TXXX(tag) {\n    var i;\n\n    if (tag.data[0] !== 3) {\n      // ignore frames with unrecognized character encodings\n      return;\n    }\n\n    for (i = 1; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the text fields\n        tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n        tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n        break;\n      }\n    }\n\n    tag.data = tag.value;\n  },\n  WXXX: function WXXX(tag) {\n    var i;\n\n    if (tag.data[0] !== 3) {\n      // ignore frames with unrecognized character encodings\n      return;\n    }\n\n    for (i = 1; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the description and URL fields\n        tag.description = parseUtf8(tag.data, 1, i);\n        tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n        break;\n      }\n    }\n  },\n  PRIV: function PRIV(tag) {\n    var i;\n\n    for (i = 0; i < tag.data.length; i++) {\n      if (tag.data[i] === 0) {\n        // parse the description and URL fields\n        tag.owner = parseIso88591(tag.data, 0, i);\n        break;\n      }\n    }\n\n    tag.privateData = tag.data.subarray(i + 1);\n    tag.data = tag.privateData;\n  }\n},\n    _MetadataStream;\n\n_MetadataStream = function MetadataStream(options) {\n  var settings = {\n    debug: !!(options && options.debug),\n    // the bytes of the program-level descriptor field in MP2T\n    // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n    // program element descriptors\"\n    descriptor: options && options.descriptor\n  },\n      // the total size in bytes of the ID3 tag being parsed\n  tagSize = 0,\n      // tag data that is not complete enough to be parsed\n  buffer = [],\n      // the total number of bytes currently in the buffer\n  bufferSize = 0,\n      i;\n\n  _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function (chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    } // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n\n\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    } // ignore events that don't look like ID3 data\n\n\n    if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n\n      return;\n    } // add this chunk to the data we've collected so far\n\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n\n      tagSize += 10;\n    } // if the entire frame has not arrived, wait for more data\n\n\n    if (bufferSize < tagSize) {\n      return;\n    } // collect the entire frame so it can be parsed\n\n\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    } // find the start of the first frame and the end of the tag\n\n\n    frameStart = 10;\n\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n      if (frameSize < 1) {\n        // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n\n      frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n              size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n\n          this.trigger('timestamp', frame);\n        }\n      }\n\n      tag.frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n\n    this.trigger('data', tag);\n  };\n};\n\n_MetadataStream.prototype = new Stream();\nmodule.exports = _MetadataStream;","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar _AdtsStream;\n\nvar ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\n\n_AdtsStream = function AdtsStream() {\n  var buffer;\n\n  _AdtsStream.prototype.init.call(this);\n\n  this.push = function (packet) {\n    var i = 0,\n        frameNum = 0,\n        frameLength,\n        protectionSkipBytes,\n        frameEnd,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    } // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n\n\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    } // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n    while (i + 5 < buffer.length) {\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n\n\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n\n      frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n      frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n\n      if (buffer.byteLength < frameEnd) {\n        return;\n      } // Otherwise, deliver the complete AAC frame\n\n\n      this.trigger('data', {\n        pts: packet.pts + frameNum * adtsFrameDuration,\n        dts: packet.dts + frameNum * adtsFrameDuration,\n        sampleCount: sampleCount,\n        audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n        channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      }); // If the buffer is empty, clear it and return\n\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++; // Remove the finished frame from the buffer and start the process again\n\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n\n  this.flush = function () {\n    this.trigger('done');\n  };\n};\n\n_AdtsStream.prototype = new Stream();\nmodule.exports = _AdtsStream;","'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar _H264Stream, _NalByteStream;\n\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\n\n_NalByteStream = function NalByteStream() {\n  var syncPoint = 0,\n      i,\n      buffer;\n\n  _NalByteStream.prototype.init.call(this);\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n\n\n  this.push = function (data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    } // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n    // advance the sync point to a NAL start, if necessary\n\n\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n        case 0:\n          // skip past non-sync sequences\n          if (buffer[i - 1] !== 0) {\n            i += 2;\n            break;\n          } else if (buffer[i - 2] !== 0) {\n            i++;\n            break;\n          } // deliver the NAL unit if it isn't empty\n\n\n          if (syncPoint + 3 !== i - 2) {\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n          } // drop trailing zeroes\n\n\n          do {\n            i++;\n          } while (buffer[i] !== 1 && i < buffer.length);\n\n          syncPoint = i - 2;\n          i += 3;\n          break;\n\n        case 1:\n          // skip past non-sync sequences\n          if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n            i += 3;\n            break;\n          } // deliver the NAL unit\n\n\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n          syncPoint = i - 2;\n          i += 3;\n          break;\n\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          i += 3;\n          break;\n      }\n    } // filter out the NAL units that were delivered\n\n\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function () {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    } // reset the stream state\n\n\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\n\n_NalByteStream.prototype = new Stream(); // values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\n\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\n\n_H264Stream = function H264Stream() {\n  var nalByteStream = new _NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n\n  _H264Stream.prototype.init.call(this);\n\n  self = this;\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n\n  this.push = function (packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n    nalByteStream.push(packet);\n  };\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n\n\n  nalByteStream.on('data', function (data) {\n    var event = {\n      trackId: trackId,\n      pts: currentPts,\n      dts: currentDts,\n      data: data\n    };\n\n    switch (data[0] & 0x1f) {\n      case 0x05:\n        event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n        break;\n\n      case 0x06:\n        event.nalUnitType = 'sei_rbsp';\n        event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n        break;\n\n      case 0x07:\n        event.nalUnitType = 'seq_parameter_set_rbsp';\n        event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n        event.config = readSequenceParameterSet(event.escapedRBSP);\n        break;\n\n      case 0x08:\n        event.nalUnitType = 'pic_parameter_set_rbsp';\n        break;\n\n      case 0x09:\n        event.nalUnitType = 'access_unit_delimiter_rbsp';\n        break;\n\n      default:\n        break;\n    } // This triggers data on the H264Stream\n\n\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function () {\n    self.trigger('done');\n  });\n\n  this.flush = function () {\n    nalByteStream.flush();\n  };\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n\n\n  skipScalingList = function skipScalingList(count, expGolombDecoder) {\n    var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = nextScale === 0 ? lastScale : nextScale;\n    }\n  };\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n\n  discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n    var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n\n\n  readSequenceParameterSet = function readSequenceParameterSet(data) {\n    var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        sarScale = 1,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio,\n        aspectRatioIdc,\n        i;\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n    // some profiles have more optional data we don't need\n\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // seq_scaling_matrix_present_flag\n        scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n    if (expGolombDecoder.readBoolean()) {\n      // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n        switch (aspectRatioIdc) {\n          case 1:\n            sarRatio = [1, 1];\n            break;\n\n          case 2:\n            sarRatio = [12, 11];\n            break;\n\n          case 3:\n            sarRatio = [10, 11];\n            break;\n\n          case 4:\n            sarRatio = [16, 11];\n            break;\n\n          case 5:\n            sarRatio = [40, 33];\n            break;\n\n          case 6:\n            sarRatio = [24, 11];\n            break;\n\n          case 7:\n            sarRatio = [20, 11];\n            break;\n\n          case 8:\n            sarRatio = [32, 11];\n            break;\n\n          case 9:\n            sarRatio = [80, 33];\n            break;\n\n          case 10:\n            sarRatio = [18, 11];\n            break;\n\n          case 11:\n            sarRatio = [15, 11];\n            break;\n\n          case 12:\n            sarRatio = [64, 33];\n            break;\n\n          case 13:\n            sarRatio = [160, 99];\n            break;\n\n          case 14:\n            sarRatio = [4, 3];\n            break;\n\n          case 15:\n            sarRatio = [3, 2];\n            break;\n\n          case 16:\n            sarRatio = [2, 1];\n            break;\n\n          case 255:\n            {\n              sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n              break;\n            }\n        }\n\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n    };\n  };\n};\n\n_H264Stream.prototype = new Stream();\nmodule.exports = {\n  H264Stream: _H264Stream,\n  NalByteStream: _NalByteStream\n};","'use strict';\n\nvar ExpGolomb;\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\n\nExpGolomb = function ExpGolomb(workingData) {\n  var // the number of bytes left to examine in workingData\n  workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n  workingWord = 0,\n      // :uint\n  // the number of bits left to examine in the current word\n  workingBitsAvailable = 0; // :uint;\n  // ():uint\n\n  this.length = function () {\n    return 8 * workingBytesAvailable;\n  }; // ():uint\n\n\n  this.bitsAvailable = function () {\n    return 8 * workingBytesAvailable + workingBitsAvailable;\n  }; // ():void\n\n\n  this.loadWord = function () {\n    var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position, position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  }; // (count:int):void\n\n\n  this.skipBits = function (count) {\n    var skipBytes; // :int\n\n    if (workingBitsAvailable > count) {\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n      count -= skipBytes * 8;\n      workingBytesAvailable -= skipBytes;\n      this.loadWord();\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  }; // (size:int):uint\n\n\n  this.readBits = function (size) {\n    var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n    valu = workingWord >>> 32 - bits; // :uint\n    // if size > 31, handle error\n\n    workingBitsAvailable -= bits;\n\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n\n    return valu;\n  }; // ():uint\n\n\n  this.skipLeadingZeros = function () {\n    var leadingZeroCount; // :uint\n\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    } // we exhausted workingWord and still have not found a 1\n\n\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  }; // ():void\n\n\n  this.skipUnsignedExpGolomb = function () {\n    this.skipBits(1 + this.skipLeadingZeros());\n  }; // ():void\n\n\n  this.skipExpGolomb = function () {\n    this.skipBits(1 + this.skipLeadingZeros());\n  }; // ():uint\n\n\n  this.readUnsignedExpGolomb = function () {\n    var clz = this.skipLeadingZeros(); // :uint\n\n    return this.readBits(clz + 1) - 1;\n  }; // ():int\n\n\n  this.readExpGolomb = function () {\n    var valu = this.readUnsignedExpGolomb(); // :int\n\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n    }\n\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  }; // Some convenience functions\n  // :Boolean\n\n\n  this.readBoolean = function () {\n    return this.readBits(1) === 1;\n  }; // ():int\n\n\n  this.readUnsignedByte = function () {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar aacUtils = require('./utils'); // Constants\n\n\nvar _AacStream;\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\n\n_AacStream = function AacStream() {\n  var everything = new Uint8Array(),\n      timeStamp = 0;\n\n  _AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function (timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function (bytes) {\n    var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        } // check framesize\n\n\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n\n      byteIndex++;\n    }\n\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\n_AacStream.prototype = new Stream();\nmodule.exports = _AacStream;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\n\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\n\nvar probe = require('./probe');\n\nvar inspect = require('../tools/mp4-inspector');\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\n\n\nvar mapToSample = function mapToSample(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\n\n\nvar findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n  var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4; // Bail if this doesn't appear to be an H264 stream\n\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n      case 0x06:\n        var data = avcStream.subarray(i + 1, i + 1 + length);\n        var matchingSample = mapToSample(i, samples);\n        seiNal = {\n          nalUnitType: 'sei_rbsp',\n          size: length,\n          data: data,\n          escapedRBSP: discardEmulationPreventionBytes(data),\n          trackId: trackId\n        };\n\n        if (matchingSample) {\n          seiNal.pts = matchingSample.pts;\n          seiNal.dts = matchingSample.dts;\n          lastMatchedSample = matchingSample;\n        } else {\n          // If a matching sample cannot be found, use the last\n          // sample's values as they should be as close as possible\n          seiNal.pts = lastMatchedSample.pts;\n          seiNal.dts = lastMatchedSample.dts;\n        }\n\n        result.push(seiNal);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return result;\n};\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\n\n\nvar parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n  truns.forEach(function (trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n    samples.forEach(function (sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n\n      sample.pts = currentDts + sample.compositionTimeOffset;\n      currentDts += sample.duration;\n    });\n    allSamples = allSamples.concat(samples);\n  });\n  return allSamples;\n};\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\n\n\nvar parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n  mdats.forEach(function (mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n  mdatTrafPairs.forEach(function (pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n    var baseMediaDecodeTime = tfdt.length > 0 ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals; // Only parse video data for the chosen video track\n\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n  return captionNals;\n};\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\n\n\nvar parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\n\n\nvar CaptionParser = function CaptionParser() {\n  var isInitialized = false;\n  var captionStream; // Stores segments seen before trackId and timescale are set\n\n  var segmentCache; // Stores video track ID of the track being parsed\n\n  var trackId; // Stores the timescale of the track being parsed\n\n  var timescale; // Stores captions parsed so far\n\n  var parsedCaptions;\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n\n  this.isInitialized = function () {\n    return isInitialized;\n  };\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n\n\n  this.init = function () {\n    captionStream = new CaptionStream();\n    isInitialized = true; // Collect dispatched captions\n\n    captionStream.on('data', function (event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n\n\n  this.isNewInit = function (videoTrackIds, timescales) {\n    if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n  };\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.parse = function (segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null; // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n      // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    } // Now that a timescale and trackId is set, parse cached segments\n\n\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n    this.flushStream();\n    return parsedCaptions;\n  };\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n\n\n  this.pushNals = function (nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function (nal) {\n      captionStream.push(nal);\n    });\n  };\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.flushStream = function () {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n  /**\n    * Reset caption buckets for new data\n   **/\n\n\n  this.clearParsedCaptions = function () {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.resetCaptionStream = function () {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n\n\n  this.clearAllCaptions = function () {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n  /**\n    * Reset caption parser\n   **/\n\n\n  this.reset = function () {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;","/**\n * mux.js\n *\n * Copyright (c) 2015 Brightcove\n * All rights reserved.\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar inspectMp4,\n    _textifyMp,\n    parseType = require('../mp4/probe').parseType,\n    parseMp4Date = function parseMp4Date(seconds) {\n  return new Date(seconds * 1000 - 2082844800000);\n},\n    parseSampleFlags = function parseSampleFlags(flags) {\n  return {\n    isLeading: (flags[0] & 0x0c) >>> 2,\n    dependsOn: flags[0] & 0x03,\n    isDependedOn: (flags[1] & 0xc0) >>> 6,\n    hasRedundancy: (flags[1] & 0x30) >>> 4,\n    paddingValue: (flags[1] & 0x0e) >>> 1,\n    isNonSyncSample: flags[1] & 0x01,\n    degradationPriority: flags[2] << 8 | flags[3]\n  };\n},\n    nalParse = function nalParse(avcStream) {\n  var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4; // bail if this doesn't appear to be an H264 stream\n\n    if (length <= 0) {\n      result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n    }\n  }\n\n  return result;\n},\n    // registry of handlers for individual mp4 box types\nparse = {\n  // codingname, not a first-class box type. stsd entries share the\n  // same format as real boxes so the parsing infrastructure can be\n  // shared\n  avc1: function avc1(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      dataReferenceIndex: view.getUint16(6),\n      width: view.getUint16(24),\n      height: view.getUint16(26),\n      horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n      vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n      frameCount: view.getUint16(40),\n      depth: view.getUint16(74),\n      config: inspectMp4(data.subarray(78, data.byteLength))\n    };\n  },\n  avcC: function avcC(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      configurationVersion: data[0],\n      avcProfileIndication: data[1],\n      profileCompatibility: data[2],\n      avcLevelIndication: data[3],\n      lengthSizeMinusOne: data[4] & 0x03,\n      sps: [],\n      pps: []\n    },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i; // iterate past any SPSs\n\n    offset = 6;\n\n    for (i = 0; i < numOfSequenceParameterSets; i++) {\n      nalSize = view.getUint16(offset);\n      offset += 2;\n      result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n      offset += nalSize;\n    } // iterate past any PPSs\n\n\n    numOfPictureParameterSets = data[offset];\n    offset++;\n\n    for (i = 0; i < numOfPictureParameterSets; i++) {\n      nalSize = view.getUint16(offset);\n      offset += 2;\n      result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n      offset += nalSize;\n    }\n\n    return result;\n  },\n  btrt: function btrt(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      bufferSizeDB: view.getUint32(0),\n      maxBitrate: view.getUint32(4),\n      avgBitrate: view.getUint32(8)\n    };\n  },\n  esds: function esds(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      esId: data[6] << 8 | data[7],\n      streamPriority: data[8] & 0x1f,\n      decoderConfig: {\n        objectProfileIndication: data[11],\n        streamType: data[12] >>> 2 & 0x3f,\n        bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n        maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n        avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n        decoderConfigDescriptor: {\n          tag: data[24],\n          length: data[25],\n          audioObjectType: data[26] >>> 3 & 0x1f,\n          samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n          channelConfiguration: data[27] >>> 3 & 0x0f\n        }\n      }\n    };\n  },\n  ftyp: function ftyp(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      majorBrand: parseType(data.subarray(0, 4)),\n      minorVersion: view.getUint32(4),\n      compatibleBrands: []\n    },\n        i = 8;\n\n    while (i < data.byteLength) {\n      result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n      i += 4;\n    }\n\n    return result;\n  },\n  dinf: function dinf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  dref: function dref(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      dataReferences: inspectMp4(data.subarray(8))\n    };\n  },\n  hdlr: function hdlr(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      handlerType: parseType(data.subarray(8, 12)),\n      name: ''\n    },\n        i = 8; // parse out the name field\n\n    for (i = 24; i < data.byteLength; i++) {\n      if (data[i] === 0x00) {\n        // the name field is null-terminated\n        i++;\n        break;\n      }\n\n      result.name += String.fromCharCode(data[i]);\n    } // decode UTF-8 to javascript's internal representation\n    // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n    result.name = decodeURIComponent(escape(result.name));\n    return result;\n  },\n  mdat: function mdat(data) {\n    return {\n      byteLength: data.byteLength,\n      nals: nalParse(data)\n    };\n  },\n  mdhd: function mdhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      language: ''\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n    // each field is the packed difference between its ASCII value and 0x60\n\n    language = view.getUint16(i);\n    result.language += String.fromCharCode((language >> 10) + 0x60);\n    result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n    result.language += String.fromCharCode((language & 0x1f) + 0x60);\n    return result;\n  },\n  mdia: function mdia(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mfhd: function mfhd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n    };\n  },\n  minf: function minf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  // codingname, not a first-class box type. stsd entries share the\n  // same format as real boxes so the parsing infrastructure can be\n  // shared\n  mp4a: function mp4a(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      // 6 bytes reserved\n      dataReferenceIndex: view.getUint16(6),\n      // 4 + 4 bytes reserved\n      channelcount: view.getUint16(16),\n      samplesize: view.getUint16(18),\n      // 2 bytes pre_defined\n      // 2 bytes reserved\n      samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n    }; // if there are more bytes to process, assume this is an ISO/IEC\n    // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n    if (data.byteLength > 28) {\n      result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n    }\n\n    return result;\n  },\n  moof: function moof(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  moov: function moov(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mvex: function mvex(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  mvhd: function mvhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.timescale = view.getUint32(i);\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4; // convert fixed-point, base 16 back to a number\n\n    result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    i += 4;\n    result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n    i += 2;\n    i += 2;\n    i += 2 * 4;\n    result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n    i += 9 * 4;\n    i += 6 * 4;\n    result.nextTrackId = view.getUint32(i);\n    return result;\n  },\n  pdin: function pdin(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4)),\n      rate: view.getUint32(4),\n      initialDelay: view.getUint32(8)\n    };\n  },\n  sdtp: function sdtp(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        i;\n\n    for (i = 4; i < data.byteLength; i++) {\n      result.samples.push({\n        dependsOn: (data[i] & 0x30) >> 4,\n        isDependedOn: (data[i] & 0x0c) >> 2,\n        hasRedundancy: data[i] & 0x03\n      });\n    }\n\n    return result;\n  },\n  sidx: function sidx(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      references: [],\n      referenceId: view.getUint32(4),\n      timescale: view.getUint32(8),\n      earliestPresentationTime: view.getUint32(12),\n      firstOffset: view.getUint32(16)\n    },\n        referenceCount = view.getUint16(22),\n        i;\n\n    for (i = 24; referenceCount; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n\n    return result;\n  },\n  smhd: function smhd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      balance: data[4] + data[5] / 256\n    };\n  },\n  stbl: function stbl(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  stco: function stco(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      chunkOffsets: []\n    },\n        entryCount = view.getUint32(4),\n        i;\n\n    for (i = 8; entryCount; i += 4, entryCount--) {\n      result.chunkOffsets.push(view.getUint32(i));\n    }\n\n    return result;\n  },\n  stsc: function stsc(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleToChunks: []\n    },\n        i;\n\n    for (i = 8; entryCount; i += 12, entryCount--) {\n      result.sampleToChunks.push({\n        firstChunk: view.getUint32(i),\n        samplesPerChunk: view.getUint32(i + 4),\n        sampleDescriptionIndex: view.getUint32(i + 8)\n      });\n    }\n\n    return result;\n  },\n  stsd: function stsd(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleDescriptions: inspectMp4(data.subarray(8))\n    };\n  },\n  stsz: function stsz(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      sampleSize: view.getUint32(4),\n      entries: []\n    },\n        i;\n\n    for (i = 12; i < data.byteLength; i += 4) {\n      result.entries.push(view.getUint32(i));\n    }\n\n    return result;\n  },\n  stts: function stts(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      timeToSamples: []\n    },\n        entryCount = view.getUint32(4),\n        i;\n\n    for (i = 8; entryCount; i += 8, entryCount--) {\n      result.timeToSamples.push({\n        sampleCount: view.getUint32(i),\n        sampleDelta: view.getUint32(i + 4)\n      });\n    }\n\n    return result;\n  },\n  styp: function styp(data) {\n    return parse.ftyp(data);\n  },\n  tfdt: function tfdt(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n    };\n\n    if (result.version === 1) {\n      result.baseMediaDecodeTime *= Math.pow(2, 32);\n      result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n    }\n\n    return result;\n  },\n  tfhd: function tfhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4)\n    },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n    i = 8;\n\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n\n    return result;\n  },\n  tkhd: function tkhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n      version: view.getUint8(0),\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      i += 4;\n      result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 8;\n      result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n      i += 4;\n      result.trackId = view.getUint32(i);\n      i += 4;\n      i += 8;\n      result.duration = view.getUint32(i); // truncating top 4 bytes\n    } else {\n      result.creationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.modificationTime = parseMp4Date(view.getUint32(i));\n      i += 4;\n      result.trackId = view.getUint32(i);\n      i += 4;\n      i += 4;\n      result.duration = view.getUint32(i);\n    }\n\n    i += 4;\n    i += 2 * 4;\n    result.layer = view.getUint16(i);\n    i += 2;\n    result.alternateGroup = view.getUint16(i);\n    i += 2; // convert fixed-point, base 16 back to a number\n\n    result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n    i += 2;\n    i += 2;\n    result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n    i += 9 * 4;\n    result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    i += 4;\n    result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n    return result;\n  },\n  traf: function traf(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  trak: function trak(data) {\n    return {\n      boxes: inspectMp4(data)\n    };\n  },\n  trex: function trex(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4),\n      defaultSampleDescriptionIndex: view.getUint32(8),\n      defaultSampleDuration: view.getUint32(12),\n      defaultSampleSize: view.getUint32(16),\n      sampleDependsOn: data[20] & 0x03,\n      sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n      sampleHasRedundancy: (data[21] & 0x30) >> 4,\n      samplePaddingValue: (data[21] & 0x0e) >> 1,\n      sampleIsDifferenceSample: !!(data[21] & 0x01),\n      sampleDegradationPriority: view.getUint16(22)\n    };\n  },\n  trun: function trun(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n    dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n    firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n    sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n    sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n    sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n    sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n    sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        // Note: this should be a signed int if version is 1\n        sample.compositionTimeOffset = view.getUint32(offset);\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n      sampleCount--;\n    }\n\n    while (sampleCount--) {\n      sample = {};\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        // Note: this should be a signed int if version is 1\n        sample.compositionTimeOffset = view.getUint32(offset);\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n    }\n\n    return result;\n  },\n  'url ': function url(data) {\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n  },\n  vmhd: function vmhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    return {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      graphicsmode: view.getUint16(4),\n      opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n    };\n  }\n};\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\n\n\ninspectMp4 = function inspectMp4(data) {\n  var i = 0,\n      result = [],\n      view,\n      size,\n      type,\n      end,\n      box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n\n  for (var z = 0; z < data.length; ++z) {\n    v[z] = data[z];\n  }\n\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type = parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n    box = (parse[type] || function (data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n\n    box.size = size;\n    box.type = type; // store this box and move to the next\n\n    result.push(box);\n    i = end;\n  }\n\n  return result;\n};\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\n\n\n_textifyMp = function textifyMp4(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n  return inspectedMp4.map(function (box, index) {\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n    Object.keys(box).filter(function (key) {\n      return key !== 'type' && key !== 'boxes'; // output all the box properties\n    }).map(function (key) {\n      var prefix = indent + '  ' + key + ': ',\n          value = box[key]; // print out raw bytes as hexademical\n\n      if (value instanceof Uint8Array || value instanceof Uint32Array) {\n        var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (byte) {\n          return ' ' + ('00' + byte.toString(16)).slice(-2);\n        }).join('').match(/.{1,24}/g);\n\n        if (!bytes) {\n          return prefix + '<>';\n        }\n\n        if (bytes.length === 1) {\n          return prefix + '<' + bytes.join('').slice(1) + '>';\n        }\n\n        return prefix + '<\\n' + bytes.map(function (line) {\n          return indent + '  ' + line;\n        }).join('\\n') + '\\n' + indent + '  >';\n      } // stringify generic objects\n\n\n      return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n        if (index === 0) {\n          return line;\n        }\n\n        return indent + '  ' + line;\n      }).join('\\n');\n    }).join('\\n') + ( // recursively textify the child boxes\n    box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: _textifyMp,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun\n};","/**\n * mux.js\n *\n * Copyright (c) 2016 Brightcove\n * All rights reserved.\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function parsePid(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function parseAdaptionField(packet) {\n  var offset = 0; // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n\n  if ((packet[3] & 0x30) >>> 4 > 0x01) {\n    offset += packet[4] + 1;\n  }\n\n  return offset;\n};\n\nvar parseType = function parseType(packet, pmtPid) {\n  var pid = parsePid(packet);\n\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n\n  return null;\n};\n\nvar parsePat = function parsePat(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function parsePmt(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  } // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n\n\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n  var offset = 12 + programInfoLength;\n\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n\n  return programMapTable;\n};\n\nvar parsePesType = function parsePesType(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function parsePesTime(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n\n  ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n\n  if (ptsDtsFlags & 0xC0) {\n    pes = {}; // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n    pes.pts *= 4; // Left shift by 2\n\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n    pes.dts = pes.pts;\n\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n\n  return pes;\n};\n\nvar parseNalUnitType = function parseNalUnitType(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n\n    case 0x06:\n      return 'sei_rbsp';\n\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType; // advance the sync point to a NAL start, if necessary\n\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n      case 0:\n        // skip past non-sync sequences\n        if (frameBuffer[frameI - 1] !== 0) {\n          frameI += 2;\n          break;\n        } else if (frameBuffer[frameI - 2] !== 0) {\n          frameI++;\n          break;\n        }\n\n        if (frameSyncPoint + 3 !== frameI - 2) {\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n        } // drop trailing zeroes\n\n\n        do {\n          frameI++;\n        } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n        frameSyncPoint = frameI - 2;\n        frameI += 3;\n        break;\n\n      case 1:\n        // skip past non-sync sequences\n        if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n          frameI += 3;\n          break;\n        }\n\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n\n        frameSyncPoint = frameI - 2;\n        frameI += 3;\n        break;\n\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        frameI += 3;\n        break;\n    }\n  }\n\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0; // parse the final nal\n\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};"],"sourceRoot":""}